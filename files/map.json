{
	"forward": {
		"SPBitmap.h": [
			"STAPPLER_BITMAP_SPBITMAP_H_",
			"::stappler::bitmap::ResampleFilter",
			"::stappler::bitmap::BitmapTemplate<typename>",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate()",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(stappler::BytesView,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(uint8_t const*,size_t,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(uint8_t const*,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(stappler::BytesView,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(typename Interface::BytesType&&,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(const BitmapTemplate<Interface>&)",
			"::stappler::bitmap::BitmapTemplate<typename>::operator=(const BitmapTemplate<Interface>&)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(BitmapTemplate<Interface>&&)",
			"::stappler::bitmap::BitmapTemplate<typename>::operator=(BitmapTemplate<Interface>&&)",
			"::stappler::bitmap::BitmapTemplate<typename>::width() const",
			"::stappler::bitmap::BitmapTemplate<typename>::height() const",
			"::stappler::bitmap::BitmapTemplate<typename>::stride() const",
			"::stappler::bitmap::BitmapTemplate<typename>::hasStrideOffset() const",
			"::stappler::bitmap::BitmapTemplate<typename>::alpha() const",
			"::stappler::bitmap::BitmapTemplate<typename>::format() const",
			"::stappler::bitmap::BitmapTemplate<typename>::data() const",
			"::stappler::bitmap::BitmapTemplate<typename>::dataPtr()",
			"::stappler::bitmap::BitmapTemplate<typename>::dataPtr() const",
			"::stappler::bitmap::BitmapTemplate<typename>::updateStride(stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::convert(stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::truncate(stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::convertWithTarget(uint8_t*,stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&) const",
			"::stappler::bitmap::BitmapTemplate<typename>::loadData(uint8_t const*,size_t,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::loadData(stappler::BytesView,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(uint8_t const*,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(stappler::BytesView,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(typename Interface::BytesType&&,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::alloc(uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::operator bool() const",
			"::stappler::bitmap::BitmapTemplate<typename>::clear()",
			"::stappler::bitmap::BitmapTemplate<typename>::empty() const",
			"::stappler::bitmap::BitmapTemplate<typename>::size() const",
			"::stappler::bitmap::BitmapTemplate<typename>::getOriginalFormat() const",
			"::stappler::bitmap::BitmapTemplate<typename>::getOriginalFormatName() const",
			"::stappler::bitmap::BitmapTemplate<typename>::save(stappler::StringView,bool)",
			"::stappler::bitmap::BitmapTemplate<typename>::save(stappler::bitmap::FileFormat,stappler::StringView,bool)",
			"::stappler::bitmap::BitmapTemplate<typename>::save(stappler::StringView,stappler::StringView,bool)",
			"::stappler::bitmap::BitmapTemplate<typename>::write(stappler::bitmap::FileFormat,bool)",
			"::stappler::bitmap::BitmapTemplate<typename>::write(stappler::StringView,bool)",
			"::stappler::bitmap::BitmapTemplate<typename>::resample(uint32_t,uint32_t,uint32_t) const",
			"::stappler::bitmap::BitmapTemplate<typename>::resample(stappler::bitmap::ResampleFilter,uint32_t,uint32_t,uint32_t) const",
			"::stappler::bitmap::BitmapTemplate<typename>::setInfo(uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::_color",
			"::stappler::bitmap::BitmapTemplate<typename>::_alpha",
			"::stappler::bitmap::BitmapTemplate<typename>::_width",
			"::stappler::bitmap::BitmapTemplate<typename>::_height",
			"::stappler::bitmap::BitmapTemplate<typename>::_stride",
			"::stappler::bitmap::BitmapTemplate<typename>::_data",
			"::stappler::bitmap::BitmapTemplate<typename>::_originalFormat",
			"::stappler::bitmap::BitmapTemplate<typename>::_originalFormatName",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate()",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(stappler::BytesView,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(uint8_t const*,size_t,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(uint8_t const*,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(stappler::BytesView,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(typename Interface::BytesType&&,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(BitmapTemplate<Interface>&&)",
			"::stappler::bitmap::BitmapTemplate<typename>::operator=(BitmapTemplate<Interface>&&)",
			"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(uint8_t const*,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(stappler::BytesView,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(typename Interface::BytesType&&,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::alloc(uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::setInfo(uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)",
			"::stappler::bitmap::BitmapTemplate<typename>::updateStride(stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::convert(stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::truncate(stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&)",
			"::stappler::bitmap::BitmapTemplate<typename>::convertWithTarget(uint8_t*,stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&) const",
			"::stappler::bitmap::BitmapTemplate<typename>::save(stappler::StringView,bool)",
			"::stappler::bitmap::BitmapTemplate<typename>::loadData(stappler::BytesView,stappler::bitmap::StrideFn const&)",
			"::stappler::mem_std::Bitmap",
			"::stappler::mem_pool::Bitmap"
		],
		"SPBitmapFormat.h":  [
			"STAPPLER_BITMAP_SPBITMAPFORMAT_H_",
			"::stappler::bitmap::FileFormat",
			"::stappler::bitmap::AlphaFormat",
			"::stappler::bitmap::PixelFormat",
			"::stappler::bitmap::ImageInfo",
			"::stappler::bitmap::ImageInfo::color",
			"::stappler::bitmap::ImageInfo::alpha",
			"::stappler::bitmap::ImageInfo::width",
			"::stappler::bitmap::ImageInfo::height",
			"::stappler::bitmap::ImageInfo::stride",
			"::stappler::bitmap::ImageInfo::format",
			"::stappler::bitmap::StrideFn",
			"::stappler::bitmap::getImageSize(stappler::StringView,uint32_t&,uint32_t&)",
			"::stappler::bitmap::getImageSize(io::Producer const&,uint32_t&,uint32_t&)",
			"::stappler::bitmap::getImageInfo(stappler::BytesView,stappler::bitmap::ImageInfo&)",
			"::stappler::bitmap::isImage(stappler::StringView,bool)",
			"::stappler::bitmap::isImage(io::Producer const&,bool)",
			"::stappler::bitmap::isImage(uint8_t const*,size_t,bool)",
			"::stappler::bitmap::detectFormat(stappler::StringView)",
			"::stappler::bitmap::detectFormat(io::Producer const&)",
			"::stappler::bitmap::detectFormat(uint8_t const*,size_t)",
			"::stappler::bitmap::getMimeType(stappler::bitmap::FileFormat)",
			"::stappler::bitmap::getMimeType(stappler::StringView)",
			"::stappler::bitmap::check(stappler::bitmap::FileFormat,uint8_t const*,size_t)",
			"::stappler::bitmap::check(stappler::StringView,uint8_t const*,size_t)",
			"::stappler::bitmap::getBytesPerPixel(stappler::bitmap::PixelFormat)",
			"::stappler::bitmap::convertLine<stappler::bitmap::PixelFormat,stappler::bitmap::PixelFormat>(uint8_t const*,uint8_t*,uint32_t,uint32_t)",
			"::stappler::bitmap::convertData<stappler::bitmap::PixelFormat,stappler::bitmap::PixelFormat>(stappler::BytesView,stappler::BytesView,uint32_t,uint32_t)",
			"::stappler::bitmap::BitmapWriter",
			"::stappler::bitmap::BitmapWriter::target",
			"::stappler::bitmap::BitmapWriter::getStride",
			"::stappler::bitmap::BitmapWriter::push",
			"::stappler::bitmap::BitmapWriter::resize",
			"::stappler::bitmap::BitmapWriter::getData",
			"::stappler::bitmap::BitmapWriter::assign",
			"::stappler::bitmap::BitmapWriter::clear",
			"::stappler::bitmap::BitmapFormat",
			"::stappler::bitmap::BitmapFormat::Flags",
			"::stappler::bitmap::BitmapFormat::check_fn",
			"::stappler::bitmap::BitmapFormat::size_fn",
			"::stappler::bitmap::BitmapFormat::info_fn",
			"::stappler::bitmap::BitmapFormat::load_fn",
			"::stappler::bitmap::BitmapFormat::write_fn",
			"::stappler::bitmap::BitmapFormat::save_fn",
			"::stappler::bitmap::BitmapFormat::add(stappler::bitmap::BitmapFormat&&)",
			"::stappler::bitmap::BitmapFormat::BitmapFormat(stappler::bitmap::FileFormat,stappler::bitmap::BitmapFormat::check_fn const&,stappler::bitmap::BitmapFormat::size_fn const&,stappler::bitmap::BitmapFormat::info_fn const&,stappler::bitmap::BitmapFormat::load_fn const&,stappler::bitmap::BitmapFormat::write_fn const&,stappler::bitmap::BitmapFormat::save_fn const&)",
			"::stappler::bitmap::BitmapFormat::BitmapFormat(stappler::StringView,stappler::StringView,stappler::bitmap::BitmapFormat::check_fn const&,stappler::bitmap::BitmapFormat::size_fn const&,stappler::bitmap::BitmapFormat::info_fn const&,stappler::bitmap::BitmapFormat::load_fn const&,stappler::bitmap::BitmapFormat::write_fn const&,stappler::bitmap::BitmapFormat::save_fn const&)",
			"::stappler::bitmap::BitmapFormat::getName() const",
			"::stappler::bitmap::BitmapFormat::getMime() const",
			"::stappler::bitmap::BitmapFormat::isRecognizable() const",
			"::stappler::bitmap::BitmapFormat::isReadable() const",
			"::stappler::bitmap::BitmapFormat::isWritable() const",
			"::stappler::bitmap::BitmapFormat::getFlags() const",
			"::stappler::bitmap::BitmapFormat::getFormat() const",
			"::stappler::bitmap::BitmapFormat::is(uint8_t const*,size_t) const",
			"::stappler::bitmap::BitmapFormat::getSize(io::Producer const&,StackBuffer<512>&,uint32_t&,uint32_t&) const",
			"::stappler::bitmap::BitmapFormat::getInfo(uint8_t const*,size_t,stappler::bitmap::ImageInfo&) const",
			"::stappler::bitmap::BitmapFormat::load(uint8_t const*,size_t,stappler::bitmap::BitmapWriter&) const",
			"::stappler::bitmap::BitmapFormat::write(uint8_t const*,stappler::bitmap::BitmapWriter&,bool) const",
			"::stappler::bitmap::BitmapFormat::save(stappler::StringView,uint8_t const*,stappler::bitmap::BitmapWriter&,bool) const",
			"::stappler::bitmap::BitmapFormat::getCheckFn() const",
			"::stappler::bitmap::BitmapFormat::getSizeFn() const",
			"::stappler::bitmap::BitmapFormat::getInfoFn() const",
			"::stappler::bitmap::BitmapFormat::getLoadFn() const",
			"::stappler::bitmap::BitmapFormat::getWriteFn() const",
			"::stappler::bitmap::BitmapFormat::getSaveFn() const",
			"::stappler::bitmap::BitmapFormat::check_ptr",
			"::stappler::bitmap::BitmapFormat::size_ptr",
			"::stappler::bitmap::BitmapFormat::info_ptr",
			"::stappler::bitmap::BitmapFormat::load_ptr",
			"::stappler::bitmap::BitmapFormat::write_ptr",
			"::stappler::bitmap::BitmapFormat::save_ptr",
			"::stappler::bitmap::BitmapFormat::_flags",
			"::stappler::bitmap::BitmapFormat::_format",
			"::stappler::bitmap::BitmapFormat::_name",
			"::stappler::bitmap::BitmapFormat::_mime",
			"::stappler::bitmap::operator|(BitmapFormat::Flags const&,BitmapFormat::Flags const&)",
			"::stappler::bitmap::operator&(BitmapFormat::Flags const&,BitmapFormat::Flags const&)",
			"::stappler::bitmap::operator^(BitmapFormat::Flags const&,BitmapFormat::Flags const&)",
			"::stappler::bitmap::operator|=(BitmapFormat::Flags&,BitmapFormat::Flags const&)",
			"::stappler::bitmap::operator&=(BitmapFormat::Flags&,BitmapFormat::Flags const&)",
			"::stappler::bitmap::operator^=(BitmapFormat::Flags&,BitmapFormat::Flags const&)",
			"::stappler::bitmap::operator==(BitmapFormat::Flags const&,std::underlying_type<BitmapFormat::Flags>::type const&)",
			"::stappler::bitmap::operator==(std::underlying_type<BitmapFormat::Flags>::type const&,BitmapFormat::Flags const&)",
			"::stappler::bitmap::operator!=(BitmapFormat::Flags const&,std::underlying_type<BitmapFormat::Flags>::type const&)",
			"::stappler::bitmap::operator!=(std::underlying_type<BitmapFormat::Flags>::type const&,BitmapFormat::Flags const&)",
			"::stappler::bitmap::operator~(BitmapFormat::Flags const&)"
		],
		"SPBuffer.h":  [
			"STAPPLER_CORE_UTILS_SPBUFFER_H_",
			"::stappler::BufferTemplate<typename>",
			"::stappler::BufferTemplate<typename>::byte_type",
			"::stappler::BufferTemplate<typename>::defsize",
			"::stappler::BufferTemplate<typename>::BufferTemplate(size_t)",
			"::stappler::BufferTemplate<typename>::BufferTemplate(const BufferTemplate<Interface>&)",
			"::stappler::BufferTemplate<typename>::BufferTemplate(BufferTemplate<Interface>&&)",
			"::stappler::BufferTemplate<typename>::operator=(const BufferTemplate<Interface>&)",
			"::stappler::BufferTemplate<typename>::operator=(BufferTemplate<Interface>&&)",
			"::stappler::BufferTemplate<typename>::put<typename,typename std::enable_if<sizeof(CharType) == 1>::type*>(CharType const*,size_t)",
			"::stappler::BufferTemplate<typename>::putc(char16_t)",
			"::stappler::BufferTemplate<typename>::putc(char)",
			"::stappler::BufferTemplate<typename>::get<typename>() const",
			"::stappler::BufferTemplate<typename>::pop<typename>(size_t)",
			"::stappler::BufferTemplate<typename>::read<typename>(size_t)",
			"::stappler::BufferTemplate<typename>::clear()",
			"::stappler::BufferTemplate<typename>::seek(size_t)",
			"::stappler::BufferTemplate<typename>::capacity() const",
			"::stappler::BufferTemplate<typename>::size() const",
			"::stappler::BufferTemplate<typename>::input() const",
			"::stappler::BufferTemplate<typename>::empty() const",
			"::stappler::BufferTemplate<typename>::str() const",
			"::stappler::BufferTemplate<typename>::data()",
			"::stappler::BufferTemplate<typename>::prepare(size_t&)",
			"::stappler::BufferTemplate<typename>::save(uint8_t*,size_t)",
			"::stappler::BufferTemplate<typename>::overflow()",
			"::stappler::BufferTemplate<typename>::overflow(size_t)",
			"::stappler::BufferTemplate<typename>::_buffer",
			"::stappler::BufferTemplate<typename>::_ptr",
			"::stappler::BufferTemplate<typename>::_end",
			"::stappler::BufferTemplate<typename>::_input",
			"::stappler::StackBuffer<size_t>",
			"::stappler::StackBuffer<size_t>::StackBuffer()",
			"::stappler::StackBuffer<size_t>::StackBuffer(const StackBuffer<Size>&)",
			"::stappler::StackBuffer<size_t>::StackBuffer(StackBuffer<Size>&&)",
			"::stappler::StackBuffer<size_t>::operator=(const StackBuffer<Size>&)",
			"::stappler::StackBuffer<size_t>::operator=(StackBuffer<Size>&&)",
			"::stappler::StackBuffer<size_t>::operator[](size_t)",
			"::stappler::StackBuffer<size_t>::operator[](size_t) const",
			"::stappler::StackBuffer<size_t>::at(size_t)",
			"::stappler::StackBuffer<size_t>::at(size_t) const",
			"::stappler::StackBuffer<size_t>::size() const",
			"::stappler::StackBuffer<size_t>::capacity() const",
			"::stappler::StackBuffer<size_t>::remains() const",
			"::stappler::StackBuffer<size_t>::empty() const",
			"::stappler::StackBuffer<size_t>::full() const",
			"::stappler::StackBuffer<size_t>::soft_clear()",
			"::stappler::StackBuffer<size_t>::clear()",
			"::stappler::StackBuffer<size_t>::data()",
			"::stappler::StackBuffer<size_t>::data() const",
			"::stappler::StackBuffer<size_t>::put(uint8_t const*,size_t)",
			"::stappler::StackBuffer<size_t>::putc(uint8_t)",
			"::stappler::StackBuffer<size_t>::get<typename>() const",
			"::stappler::StackBuffer<size_t>::prepare(size_t&)",
			"::stappler::StackBuffer<size_t>::prepare_preserve(size_t&)",
			"::stappler::StackBuffer<size_t>::save(uint8_t*,size_t)",
			"::stappler::StackBuffer<size_t>::_size",
			"::stappler::StackBuffer<size_t>::_buf",
			"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::BufferTraits<stappler::BufferTemplate<Interface>>",
			"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::type",
			"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::PrepareFn(void*,size_t&)",
			"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::SaveFn(void*,uint8_t*,size_t,size_t)",
			"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::SizeFn(void*)",
			"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::CapacityFn(void*)",
			"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::DataFn(void*)",
			"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::ClearFn(void*)",
			"::stappler::io::BufferTraits<StackBuffer<Size>>::BufferTraits<StackBuffer<Size>>",
			"::stappler::io::BufferTraits<StackBuffer<Size>>::type",
			"::stappler::io::BufferTraits<StackBuffer<Size>>::PrepareFn(void*,size_t&)",
			"::stappler::io::BufferTraits<StackBuffer<Size>>::SaveFn(void*,uint8_t*,size_t,size_t)",
			"::stappler::io::BufferTraits<StackBuffer<Size>>::SizeFn(void*)",
			"::stappler::io::BufferTraits<StackBuffer<Size>>::CapacityFn(void*)",
			"::stappler::io::BufferTraits<StackBuffer<Size>>::DataFn(void*)",
			"::stappler::io::BufferTraits<StackBuffer<Size>>::ClearFn(void*)"
		],
		"SPByteOrder.h":  [
			"STAPPLER_CORE_STRING_SPBYTEORDER_H_",
			"SPINLINE",
			"::stappler::byteorder::bswap16(uint16_t)",
			"::stappler::byteorder::bswap32(uint32_t)",
			"::stappler::byteorder::bswap64(uint64_t)",
			"::stappler::Endian",
			"::stappler::byteorder::ShouldSwap",
			"::stappler::byteorder::Bit8Size",
			"::stappler::byteorder::Bit16Size",
			"::stappler::byteorder::Bit32Size",
			"::stappler::byteorder::Bit64Size",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit8Size>::Converter<T,ShouldSwap::DoSwap,Bit8Size>",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit8Size>::Swap(T)",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit16Size>::Converter<T,ShouldSwap::DoSwap,Bit16Size>",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit16Size>::Swap(T)",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit32Size>::Converter<T,ShouldSwap::DoSwap,Bit32Size>",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit32Size>::Swap(T)",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit64Size>::Converter<T,ShouldSwap::DoSwap,Bit64Size>",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit64Size>::Swap(T)",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Size>::Converter<T,ShouldSwap::DoSwap,Size>",
			"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Size>::Swap(T)",
			"::stappler::byteorder::Converter<T,ShouldSwap::NoSwap,Size>::Converter<T,ShouldSwap::NoSwap,Size>",
			"::stappler::byteorder::Converter<T,ShouldSwap::NoSwap,Size>::Swap(T)",
			"::stappler::byteorder::hostToNetwork()",
			"::stappler::byteorder::hostToLittle()",
			"::stappler::byteorder::hostToBig()",
			"::stappler::byteorder::isLittleEndian()",
			"::stappler::byteorder::NetworkConverter<class>",
			"::stappler::byteorder::LittleConverter<class>",
			"::stappler::byteorder::BigConverter<class>",
			"::stappler::byteorder::HostConverter<class>",
			"::stappler::byteorder::HostToNetwork<class>(T)",
			"::stappler::byteorder::NetworkToHost<class>(T)",
			"::stappler::byteorder::HostToLittle<class>(T)",
			"::stappler::byteorder::LittleToHost<class>(T)",
			"::stappler::byteorder::HostToBig<class>(T)",
			"::stappler::byteorder::BigToHost<class>(T)",
			"::stappler::byteorder::ConverterTraits<Endian::Big,T>::ConverterTraits<Endian::Big,T>",
			"::stappler::byteorder::ConverterTraits<Endian::Little,T>::ConverterTraits<Endian::Little,T>"
		],
		"SPBytesReader.h":  [
			"STAPPLER_CORE_STRING_SPBYTESREADER_H_",
			"::stappler::BytesReader<typename>",
			"::stappler::BytesReader<typename>::CharType",
			"::stappler::BytesReader<typename>::Chars<CharType...>",
			"::stappler::BytesReader<typename>::Range<char,char>",
			"::stappler::BytesReader<typename>::CharGroup<stappler::CharGroupId>",
			"::stappler::BytesReader<typename>::Compose<typename>",
			"::stappler::BytesReader<typename>::BytesReader()",
			"::stappler::BytesReader<typename>::BytesReader(stappler::BytesReader::CharType const*,size_t)",
			"::stappler::BytesReader<typename>::set(uint8_t const*,size_t)",
			"::stappler::BytesReader<typename>::offset(size_t)",
			"::stappler::BytesReader<typename>::compare(stappler::BytesReader::CharType const*,size_t) const",
			"::stappler::BytesReader<typename>::compare(stappler::BytesReader::CharType const*) const",
			"::stappler::BytesReader<typename>::prefix(stappler::BytesReader::CharType const*,size_t) const",
			"::stappler::BytesReader<typename>::starts_with(BytesReader<stappler::BytesReader::CharType> const&) const",
			"::stappler::BytesReader<typename>::starts_with(stappler::BytesReader::CharType const*,size_t) const",
			"::stappler::BytesReader<typename>::starts_with(stappler::BytesReader::CharType const*) const",
			"::stappler::BytesReader<typename>::ends_with(BytesReader<stappler::BytesReader::CharType> const&) const",
			"::stappler::BytesReader<typename>::ends_with(stappler::BytesReader::CharType const*,size_t) const",
			"::stappler::BytesReader<typename>::ends_with(stappler::BytesReader::CharType const*) const",
			"::stappler::BytesReader<typename>::data() const",
			"::stappler::BytesReader<typename>::size() const",
			"::stappler::BytesReader<typename>::find(stappler::BytesReader::CharType const*,size_t,size_t) const",
			"::stappler::BytesReader<typename>::find(stappler::BytesReader::CharType,size_t) const",
			"::stappler::BytesReader<typename>::rfind(stappler::BytesReader::CharType const*,size_t,size_t) const",
			"::stappler::BytesReader<typename>::rfind(stappler::BytesReader::CharType,size_t) const",
			"::stappler::BytesReader<typename>::find(BytesReader<stappler::BytesReader::CharType> const&,size_t) const",
			"::stappler::BytesReader<typename>::find(stappler::BytesReader::CharType const*,size_t) const",
			"::stappler::BytesReader<typename>::rfind(BytesReader<stappler::BytesReader::CharType> const&,size_t) const",
			"::stappler::BytesReader<typename>::rfind(stappler::BytesReader::CharType const*,size_t) const",
			"::stappler::BytesReader<typename>::is(stappler::BytesReader::CharType const&) const",
			"::stappler::BytesReader<typename>::operator>(size_t const&) const",
			"::stappler::BytesReader<typename>::operator>=(size_t const&) const",
			"::stappler::BytesReader<typename>::operator<(size_t const&) const",
			"::stappler::BytesReader<typename>::operator<=(size_t const&) const",
			"::stappler::BytesReader<typename>::front() const",
			"::stappler::BytesReader<typename>::back() const",
			"::stappler::BytesReader<typename>::at(size_t const&) const",
			"::stappler::BytesReader<typename>::operator[](size_t const&) const",
			"::stappler::BytesReader<typename>::operator*() const",
			"::stappler::BytesReader<typename>::clear()",
			"::stappler::BytesReader<typename>::empty() const",
			"::stappler::BytesReader<typename>::terminated() const",
			"::stappler::BytesReader<typename>::ptr",
			"::stappler::BytesReader<typename>::len",
			"::stappler::BytesReader<typename>::find(stappler::BytesReader::CharType const*,size_t,size_t) const",
			"::stappler::BytesReader<typename>::find(stappler::BytesReader::CharType,size_t) const",
			"::stappler::BytesReader<typename>::rfind(stappler::BytesReader::CharType const*,size_t,size_t) const",
			"::stappler::BytesReader<typename>::rfind(stappler::BytesReader::CharType,size_t) const"
		],
		"SPBytesView.h":  [
			"STAPPLER_CORE_STRING_SPDATAREADER_H_",
			"::stappler::BytesViewTemplate<stappler::Endian>",
			"::stappler::BytesViewTemplate<stappler::Endian>::Converter<class>",
			"::stappler::BytesViewTemplate<stappler::Endian>::Self",
			"::stappler::BytesViewTemplate<stappler::Endian>::PoolBytes",
			"::stappler::BytesViewTemplate<stappler::Endian>::StdBytes",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate()",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(uint8_t const*,size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::StringView)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::BytesViewTemplate::PoolBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::BytesViewTemplate::StdBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<size_t>(std::array<uint8_t, Size> const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const,size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const,size_t,size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::PoolBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::StdBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::Self const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::PoolBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::StdBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::Self const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::set(uint8_t const*,size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator++()",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator++(int)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator+=(size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator==(stappler::BytesViewTemplate::Self const&) const",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator!=(stappler::BytesViewTemplate::Self const&) const",
			"::stappler::BytesViewTemplate<stappler::Endian>::pdup(memory::pool_t*) const",
			"::stappler::BytesViewTemplate<stappler::Endian>::bytes<typename>() const",
			"::stappler::BytesViewTemplate<stappler::Endian>::sub(size_t,size_t) const",
			"::stappler::BytesViewTemplate<stappler::Endian>::convert<typename>(uint8_t const*)",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned64()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned32()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned24()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned16()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readFloat64()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readFloat32()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readFloat16()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readString()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readString(size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::readBytes<stappler::Endian>(size_t)",
			"::stappler::BytesView",
			"::stappler::BytesViewNetwork",
			"::stappler::BytesViewHost",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate()",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(uint8_t const*,size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::BytesViewTemplate::PoolBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::BytesViewTemplate::StdBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::StringView)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<size_t>(std::array<uint8_t, Size> const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const,size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const,size_t,size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::PoolBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::StdBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::Self const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::PoolBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::StdBytes const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::Self const&)",
			"::stappler::BytesViewTemplate<stappler::Endian>::set(uint8_t const*,size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator++()",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator++(int)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator+=(size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator==(stappler::BytesViewTemplate::Self const&) const",
			"::stappler::BytesViewTemplate<stappler::Endian>::operator!=(stappler::BytesViewTemplate::Self const&) const",
			"::stappler::BytesViewTemplate<stappler::Endian>::pdup(memory::pool_t*) const",
			"::stappler::BytesViewTemplate<stappler::Endian>::bytes<typename>() const",
			"::stappler::BytesViewTemplate<stappler::Endian>::convert<typename>(uint8_t const*)",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned64()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned32()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned24()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned16()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readFloat64()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readFloat32()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readFloat16()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readString()",
			"::stappler::BytesViewTemplate<stappler::Endian>::readString(size_t)",
			"::stappler::BytesViewTemplate<stappler::Endian>::readBytes<stappler::Endian>(size_t)",
			"::stappler::compareDataRanges<typename>(uint8_t const*,size_t,uint8_t const*,size_t,Compare const&)",
			"::stappler::operator==<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator==<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator==<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)",
			"::stappler::operator==<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)",
			"::stappler::operator!=<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator!=<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator!=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)",
			"::stappler::operator!=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)",
			"::stappler::operator<<stappler::Endian>(BytesViewTemplate<Endianess> const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator<<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator<<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator<<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)",
			"::stappler::operator<<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)",
			"::stappler::operator<=<stappler::Endian>(BytesViewTemplate<Endianess> const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator<=<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator<=<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator<=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)",
			"::stappler::operator<=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)",
			"::stappler::operator><stappler::Endian>(BytesViewTemplate<Endianess> const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator><stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator><stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator><stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)",
			"::stappler::operator><stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)",
			"::stappler::operator>=<stappler::Endian>(BytesViewTemplate<Endianess> const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator>=<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator>=<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)",
			"::stappler::operator>=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)",
			"::stappler::operator>=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)"
		],
		"SPCharGroup.h":  [
			"STAPPLER_CORE_STRING_SPCHARMATCHING_H_",
			"SPCHARMATCHING_LOG",
			"::stappler::CharGroupId",
			"::stappler::operator|(stappler::CharGroupId const&,stappler::CharGroupId const&)",
			"::stappler::operator&(stappler::CharGroupId const&,stappler::CharGroupId const&)",
			"::stappler::operator^(stappler::CharGroupId const&,stappler::CharGroupId const&)",
			"::stappler::operator|=(stappler::CharGroupId&,stappler::CharGroupId const&)",
			"::stappler::operator&=(stappler::CharGroupId&,stappler::CharGroupId const&)",
			"::stappler::operator^=(stappler::CharGroupId&,stappler::CharGroupId const&)",
			"::stappler::operator==(stappler::CharGroupId const&,std::underlying_type<CharGroupId>::type const&)",
			"::stappler::operator==(std::underlying_type<CharGroupId>::type const&,stappler::CharGroupId const&)",
			"::stappler::operator!=(stappler::CharGroupId const&,std::underlying_type<CharGroupId>::type const&)",
			"::stappler::operator!=(std::underlying_type<CharGroupId>::type const&,stappler::CharGroupId const&)",
			"::stappler::operator~(stappler::CharGroupId const&)",
			"::stappler::inCharGroup(stappler::CharGroupId,char16_t)",
			"::stappler::inCharGroupMask(stappler::CharGroupId,char16_t)",
			"::stappler::chars::isupper<typename>(CharType)",
			"::stappler::chars::islower<typename>(CharType)",
			"::stappler::chars::isdigit<typename>(CharType)",
			"::stappler::chars::isxdigit<typename>(CharType)",
			"::stappler::chars::isspace<typename>(CharType)",
			"::stappler::chars::GroupId",
			"::stappler::chars::UniChar",
			"::stappler::chars::UniChar::match(char)",
			"::stappler::chars::Chars<typename,CharType...>",
			"::stappler::chars::Chars<typename,CharType...>::match(CharType)",
			"::stappler::chars::Chars<typename,CharType...>::foreach<typename>(Func const&)",
			"::stappler::chars::Range<typename,CharType,CharType>",
			"::stappler::chars::Range<typename,CharType,CharType>::match(CharType)",
			"::stappler::chars::Range<typename,CharType,CharType>::foreach<typename>(Func const&)",
			"::stappler::chars::Compose<typename,typename>",
			"::stappler::chars::Compose<typename,typename>::match(CharType)",
			"::stappler::chars::Compose<typename,typename>::foreach<typename>(Func const&)",
			"::stappler::chars::CharGroup<char,GroupId::PunctuationBasic>::CharGroup<char,GroupId::PunctuationBasic>",
			"::stappler::chars::CharGroup<char,GroupId::PunctuationBasic>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::Numbers>::CharGroup<char,GroupId::Numbers>",
			"::stappler::chars::CharGroup<char,GroupId::Numbers>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::Latin>::CharGroup<char,GroupId::Latin>",
			"::stappler::chars::CharGroup<char,GroupId::Latin>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::WhiteSpace>::CharGroup<char,GroupId::WhiteSpace>",
			"::stappler::chars::CharGroup<char,GroupId::WhiteSpace>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::Controls>::CharGroup<char,GroupId::Controls>",
			"::stappler::chars::CharGroup<char,GroupId::NonPrintable>::CharGroup<char,GroupId::NonPrintable>",
			"::stappler::chars::CharGroup<char,GroupId::LatinLowercase>::CharGroup<char,GroupId::LatinLowercase>",
			"::stappler::chars::CharGroup<char,GroupId::LatinLowercase>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::LatinUppercase>::CharGroup<char,GroupId::LatinUppercase>",
			"::stappler::chars::CharGroup<char,GroupId::LatinUppercase>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::Alphanumeric>::CharGroup<char,GroupId::Alphanumeric>",
			"::stappler::chars::CharGroup<char,GroupId::Alphanumeric>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::Hexadecimial>::CharGroup<char,GroupId::Hexadecimial>",
			"::stappler::chars::CharGroup<char,GroupId::Hexadecimial>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::Base64>::CharGroup<char,GroupId::Base64>",
			"::stappler::chars::CharGroup<char,GroupId::Base64>::match(char)",
			"::stappler::chars::CharGroup<char,GroupId::TextPunctuation>::CharGroup<char,GroupId::TextPunctuation>",
			"::stappler::chars::CharGroup<char,GroupId::TextPunctuation>::match(char)",
			"::stappler::chars::CharGroup<char16_t,GroupId::PunctuationBasic>::CharGroup<char16_t,GroupId::PunctuationBasic>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Numbers>::CharGroup<char16_t,GroupId::Numbers>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Latin>::CharGroup<char16_t,GroupId::Latin>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Cyrillic>::CharGroup<char16_t,GroupId::Cyrillic>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Currency>::CharGroup<char16_t,GroupId::Currency>",
			"::stappler::chars::CharGroup<char16_t,GroupId::GreekBasic>::CharGroup<char16_t,GroupId::GreekBasic>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Math>::CharGroup<char16_t,GroupId::Math>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Arrows>::CharGroup<char16_t,GroupId::Arrows>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Fractionals>::CharGroup<char16_t,GroupId::Fractionals>",
			"::stappler::chars::CharGroup<char16_t,GroupId::LatinSuppl1>::CharGroup<char16_t,GroupId::LatinSuppl1>",
			"::stappler::chars::CharGroup<char16_t,GroupId::PunctuationAdvanced>::CharGroup<char16_t,GroupId::PunctuationAdvanced>",
			"::stappler::chars::CharGroup<char16_t,GroupId::GreekAdvanced>::CharGroup<char16_t,GroupId::GreekAdvanced>",
			"::stappler::chars::CharGroup<char16_t,GroupId::WhiteSpace>::CharGroup<char16_t,GroupId::WhiteSpace>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Controls>::CharGroup<char16_t,GroupId::Controls>",
			"::stappler::chars::CharGroup<char16_t,GroupId::NonPrintable>::CharGroup<char16_t,GroupId::NonPrintable>",
			"::stappler::chars::CharGroup<char16_t,GroupId::LatinLowercase>::CharGroup<char16_t,GroupId::LatinLowercase>",
			"::stappler::chars::CharGroup<char16_t,GroupId::LatinUppercase>::CharGroup<char16_t,GroupId::LatinUppercase>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Alphanumeric>::CharGroup<char16_t,GroupId::Alphanumeric>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Hexadecimial>::CharGroup<char16_t,GroupId::Hexadecimial>",
			"::stappler::chars::CharGroup<char16_t,GroupId::Base64>::CharGroup<char16_t,GroupId::Base64>",
			"::stappler::chars::CharGroup<char16_t,GroupId::BreakableWhiteSpace>::CharGroup<char16_t,GroupId::BreakableWhiteSpace>",
			"::stappler::chars::CharGroup<char16_t,GroupId::OpticalAlignmentSpecial>::CharGroup<char16_t,GroupId::OpticalAlignmentSpecial>",
			"::stappler::chars::CharGroup<char16_t,GroupId::OpticalAlignmentBullet>::CharGroup<char16_t,GroupId::OpticalAlignmentBullet>",
			"::stappler::chars::CharGroup<char16_t,GroupId::TextPunctuation>::CharGroup<char16_t,GroupId::TextPunctuation>",
			"::stappler::chars::MatchTraits",
			"::stappler::chars::MatchTraits::matchChar<typename,CharType...>(CharType)",
			"::stappler::chars::MatchTraits::matchPair<typename,CharType,CharType>(CharType)",
			"::stappler::chars::MatchTraits::matchCompose<typename,typename>(CharType)",
			"::stappler::chars::MatchTraits::foreachChar<typename,typename,CharType...>(Func const&)",
			"::stappler::chars::MatchTraits::foreachPair<typename,typename,CharType,CharType>(Func const&)",
			"::stappler::chars::MatchTraits::foreachCompose<typename,typename,typename>(Func const&)",
			"::stappler::chars::MatchTraits::_matchChar<typename,CharType>(CharType)",
			"::stappler::chars::MatchTraits::_matchChar<typename,CharType,CharType,CharType...>(CharType)",
			"::stappler::chars::MatchTraits::_matchCompose<typename,typename>(CharType)",
			"::stappler::chars::MatchTraits::_matchCompose<typename,typename,typename,typename>(CharType)",
			"::stappler::chars::MatchTraits::_foreachChar<typename,typename,CharType>(Func const&)",
			"::stappler::chars::MatchTraits::_foreachChar<typename,typename,CharType,CharType,CharType...>(Func const&)",
			"::stappler::chars::MatchTraits::_foreachCompose<typename,typename,typename>(Func const&)",
			"::stappler::chars::MatchTraits::_foreachCompose<typename,typename,typename,typename,typename>(Func const&)",
			"::stappler::chars::Chars<typename,CharType...>::match(CharType)",
			"::stappler::chars::Chars<typename,CharType...>::foreach<typename>(Func const&)",
			"::stappler::chars::Range<typename,CharType,CharType>::match(CharType)",
			"::stappler::chars::Range<typename,CharType,CharType>::foreach<typename>(Func const&)",
			"::stappler::chars::Compose<typename,typename>::match(CharType)",
			"::stappler::chars::Compose<typename,typename>::foreach<typename>(Func const&)",
			"::stappler::chars::MatchTraits::matchChar<typename,CharType...>(CharType)",
			"::stappler::chars::MatchTraits::matchPair<typename,CharType,CharType>(CharType)",
			"::stappler::chars::MatchTraits::matchCompose<typename,typename>(CharType)",
			"::stappler::chars::MatchTraits::foreachChar<typename,typename,CharType...>(Func const&)",
			"::stappler::chars::MatchTraits::foreachPair<typename,typename,CharType,CharType>(Func const&)",
			"::stappler::chars::MatchTraits::foreachCompose<typename,typename,typename>(Func const&)",
			"::stappler::chars::MatchTraits::_matchChar<typename,CharType>(CharType)",
			"::stappler::chars::MatchTraits::_matchChar<typename,CharType,CharType,CharType...>(CharType)",
			"::stappler::chars::MatchTraits::_matchCompose<typename,typename>(CharType)",
			"::stappler::chars::MatchTraits::_matchCompose<typename,typename,typename,typename>(CharType)",
			"::stappler::chars::MatchTraits::_foreachChar<typename,typename,CharType>(Func const&)",
			"::stappler::chars::MatchTraits::_foreachChar<typename,typename,CharType,CharType,CharType...>(Func const&)",
			"::stappler::chars::MatchTraits::_foreachCompose<typename,typename,typename>(Func const&)",
			"::stappler::chars::MatchTraits::_foreachCompose<typename,typename,typename,typename,typename>(Func const&)",
			"::stappler::chars::isupper<typename>(CharType)",
			"::stappler::chars::islower<typename>(CharType)",
			"::stappler::chars::isdigit<typename>(CharType)",
			"::stappler::chars::isxdigit<typename>(CharType)",
			"::stappler::chars::isspace<typename>(CharType)"
		],
		"SPColor.h":  [
			"STAPPLER_GEOM_SPCOLOR_H_",
			"::stappler::geom::ColorMask",
			"::stappler::geom::operator|(stappler::geom::ColorMask const&,stappler::geom::ColorMask const&)",
			"::stappler::geom::operator&(stappler::geom::ColorMask const&,stappler::geom::ColorMask const&)",
			"::stappler::geom::operator^(stappler::geom::ColorMask const&,stappler::geom::ColorMask const&)",
			"::stappler::geom::operator|=(stappler::geom::ColorMask&,stappler::geom::ColorMask const&)",
			"::stappler::geom::operator&=(stappler::geom::ColorMask&,stappler::geom::ColorMask const&)",
			"::stappler::geom::operator^=(stappler::geom::ColorMask&,stappler::geom::ColorMask const&)",
			"::stappler::geom::operator==(stappler::geom::ColorMask const&,std::underlying_type<ColorMask>::type const&)",
			"::stappler::geom::operator==(std::underlying_type<ColorMask>::type const&,stappler::geom::ColorMask const&)",
			"::stappler::geom::operator!=(stappler::geom::ColorMask const&,std::underlying_type<ColorMask>::type const&)",
			"::stappler::geom::operator!=(std::underlying_type<ColorMask>::type const&,stappler::geom::ColorMask const&)",
			"::stappler::geom::operator~(stappler::geom::ColorMask const&)",
			"::stappler::geom::readColor(stappler::StringView const&,stappler::geom::Color4B&)",
			"::stappler::geom::readColor(stappler::StringView const&,stappler::geom::Color3B&)",
			"::stappler::geom::Color3B",
			"::stappler::geom::Color3B::getColorByName(stappler::StringView,stappler::geom::Color3B const&)",
			"::stappler::geom::Color3B::Color3B()",
			"::stappler::geom::Color3B::Color3B(uint8_t,uint8_t,uint8_t)",
			"::stappler::geom::Color3B::Color3B(uint32_t)",
			"::stappler::geom::Color3B::Color3B(stappler::geom::Color4B const&)",
			"::stappler::geom::Color3B::Color3B(stappler::geom::Color4F const&)",
			"::stappler::geom::Color3B::operator==(stappler::geom::Color3B const&) const",
			"::stappler::geom::Color3B::operator==(stappler::geom::Color4B const&) const",
			"::stappler::geom::Color3B::operator==(stappler::geom::Color4F const&) const",
			"::stappler::geom::Color3B::operator!=(stappler::geom::Color3B const&) const",
			"::stappler::geom::Color3B::operator!=(stappler::geom::Color4B const&) const",
			"::stappler::geom::Color3B::operator!=(stappler::geom::Color4F const&) const",
			"::stappler::geom::Color3B::equals(stappler::geom::Color3B const&)",
			"::stappler::geom::Color3B::r",
			"::stappler::geom::Color3B::g",
			"::stappler::geom::Color3B::b",
			"::stappler::geom::Color3B::WHITE",
			"::stappler::geom::Color3B::BLACK",
			"::stappler::geom::Color3B::progress(stappler::geom::Color3B const&,stappler::geom::Color3B const&,float)",
			"::stappler::geom::Color4B",
			"::stappler::geom::Color4B::WHITE",
			"::stappler::geom::Color4B::BLACK",
			"::stappler::geom::Color4B::progress(stappler::geom::Color4B const&,stappler::geom::Color4B const&,float)",
			"::stappler::geom::Color4B::getColorByName(stappler::StringView,stappler::geom::Color4B const&)",
			"::stappler::geom::Color4B::Color4B()",
			"::stappler::geom::Color4B::Color4B(uint8_t,uint8_t,uint8_t,uint8_t)",
			"::stappler::geom::Color4B::Color4B(stappler::geom::Color3B const&,uint8_t)",
			"::stappler::geom::Color4B::Color4B(stappler::geom::Color3B const&)",
			"::stappler::geom::Color4B::Color4B(stappler::geom::Color4F const&)",
			"::stappler::geom::Color4B::operator==(stappler::geom::Color4B const&) const",
			"::stappler::geom::Color4B::operator==(stappler::geom::Color3B const&) const",
			"::stappler::geom::Color4B::operator==(stappler::geom::Color4F const&) const",
			"::stappler::geom::Color4B::operator!=(stappler::geom::Color4B const&) const",
			"::stappler::geom::Color4B::operator!=(stappler::geom::Color3B const&) const",
			"::stappler::geom::Color4B::operator!=(stappler::geom::Color4F const&) const",
			"::stappler::geom::Color4B::r",
			"::stappler::geom::Color4B::g",
			"::stappler::geom::Color4B::b",
			"::stappler::geom::Color4B::a",
			"::stappler::geom::Color4B::white(uint8_t)",
			"::stappler::geom::Color4B::black(uint8_t)",
			"::stappler::geom::Color4F",
			"::stappler::geom::Color4F::WHITE",
			"::stappler::geom::Color4F::BLACK",
			"::stappler::geom::Color4F::ZERO",
			"::stappler::geom::Color4F::ONE",
			"::stappler::geom::Color4F::progress(stappler::geom::Color4F const&,stappler::geom::Color4F const&,float)",
			"::stappler::geom::Color4F::Color4F()",
			"::stappler::geom::Color4F::Color4F(float,float,float,float)",
			"::stappler::geom::Color4F::Color4F(stappler::geom::Color3B const&,uint8_t)",
			"::stappler::geom::Color4F::Color4F(stappler::geom::Color3B const&)",
			"::stappler::geom::Color4F::Color4F(stappler::geom::Color4B const&)",
			"::stappler::geom::Color4F::operator==(stappler::geom::Color4F const&) const",
			"::stappler::geom::Color4F::operator==(stappler::geom::Color3B const&) const",
			"::stappler::geom::Color4F::operator==(stappler::geom::Color4B const&) const",
			"::stappler::geom::Color4F::operator!=(stappler::geom::Color4F const&) const",
			"::stappler::geom::Color4F::operator!=(stappler::geom::Color3B const&) const",
			"::stappler::geom::Color4F::operator!=(stappler::geom::Color4B const&) const",
			"::stappler::geom::Color4F::equals(stappler::geom::Color4F const&)",
			"::stappler::geom::Color4F::operator Vec4() const",
			"::stappler::geom::Color4F::getColor() const",
			"::stappler::geom::Color4F::getOpacity() const",
			"::stappler::geom::Color4F::setMasked(stappler::geom::Color4F const&,stappler::geom::ColorMask)",
			"::stappler::geom::Color4F::setUnmasked(stappler::geom::Color4F const&,stappler::geom::ColorMask)",
			"::stappler::geom::Color4F::r",
			"::stappler::geom::Color4F::g",
			"::stappler::geom::Color4F::b",
			"::stappler::geom::Color4F::a",
			"::stappler::geom::Color",
			"::stappler::geom::Color::Red_50",
			"::stappler::geom::Color::Red_100",
			"::stappler::geom::Color::Red_200",
			"::stappler::geom::Color::Red_300",
			"::stappler::geom::Color::Red_400",
			"::stappler::geom::Color::Red_500",
			"::stappler::geom::Color::Red_600",
			"::stappler::geom::Color::Red_700",
			"::stappler::geom::Color::Red_800",
			"::stappler::geom::Color::Red_900",
			"::stappler::geom::Color::Red_A100",
			"::stappler::geom::Color::Red_A200",
			"::stappler::geom::Color::Red_A400",
			"::stappler::geom::Color::Red_A700",
			"::stappler::geom::Color::Pink_50",
			"::stappler::geom::Color::Pink_100",
			"::stappler::geom::Color::Pink_200",
			"::stappler::geom::Color::Pink_300",
			"::stappler::geom::Color::Pink_400",
			"::stappler::geom::Color::Pink_500",
			"::stappler::geom::Color::Pink_600",
			"::stappler::geom::Color::Pink_700",
			"::stappler::geom::Color::Pink_800",
			"::stappler::geom::Color::Pink_900",
			"::stappler::geom::Color::Pink_A100",
			"::stappler::geom::Color::Pink_A200",
			"::stappler::geom::Color::Pink_A400",
			"::stappler::geom::Color::Pink_A700",
			"::stappler::geom::Color::Purple_50",
			"::stappler::geom::Color::Purple_100",
			"::stappler::geom::Color::Purple_200",
			"::stappler::geom::Color::Purple_300",
			"::stappler::geom::Color::Purple_400",
			"::stappler::geom::Color::Purple_500",
			"::stappler::geom::Color::Purple_600",
			"::stappler::geom::Color::Purple_700",
			"::stappler::geom::Color::Purple_800",
			"::stappler::geom::Color::Purple_900",
			"::stappler::geom::Color::Purple_A100",
			"::stappler::geom::Color::Purple_A200",
			"::stappler::geom::Color::Purple_A400",
			"::stappler::geom::Color::Purple_A700",
			"::stappler::geom::Color::DeepPurple_50",
			"::stappler::geom::Color::DeepPurple_100",
			"::stappler::geom::Color::DeepPurple_200",
			"::stappler::geom::Color::DeepPurple_300",
			"::stappler::geom::Color::DeepPurple_400",
			"::stappler::geom::Color::DeepPurple_500",
			"::stappler::geom::Color::DeepPurple_600",
			"::stappler::geom::Color::DeepPurple_700",
			"::stappler::geom::Color::DeepPurple_800",
			"::stappler::geom::Color::DeepPurple_900",
			"::stappler::geom::Color::DeepPurple_A100",
			"::stappler::geom::Color::DeepPurple_A200",
			"::stappler::geom::Color::DeepPurple_A400",
			"::stappler::geom::Color::DeepPurple_A700",
			"::stappler::geom::Color::Indigo_50",
			"::stappler::geom::Color::Indigo_100",
			"::stappler::geom::Color::Indigo_200",
			"::stappler::geom::Color::Indigo_300",
			"::stappler::geom::Color::Indigo_400",
			"::stappler::geom::Color::Indigo_500",
			"::stappler::geom::Color::Indigo_600",
			"::stappler::geom::Color::Indigo_700",
			"::stappler::geom::Color::Indigo_800",
			"::stappler::geom::Color::Indigo_900",
			"::stappler::geom::Color::Indigo_A100",
			"::stappler::geom::Color::Indigo_A200",
			"::stappler::geom::Color::Indigo_A400",
			"::stappler::geom::Color::Indigo_A700",
			"::stappler::geom::Color::Blue_50",
			"::stappler::geom::Color::Blue_100",
			"::stappler::geom::Color::Blue_200",
			"::stappler::geom::Color::Blue_300",
			"::stappler::geom::Color::Blue_400",
			"::stappler::geom::Color::Blue_500",
			"::stappler::geom::Color::Blue_600",
			"::stappler::geom::Color::Blue_700",
			"::stappler::geom::Color::Blue_800",
			"::stappler::geom::Color::Blue_900",
			"::stappler::geom::Color::Blue_A100",
			"::stappler::geom::Color::Blue_A200",
			"::stappler::geom::Color::Blue_A400",
			"::stappler::geom::Color::Blue_A700",
			"::stappler::geom::Color::LightBlue_50",
			"::stappler::geom::Color::LightBlue_100",
			"::stappler::geom::Color::LightBlue_200",
			"::stappler::geom::Color::LightBlue_300",
			"::stappler::geom::Color::LightBlue_400",
			"::stappler::geom::Color::LightBlue_500",
			"::stappler::geom::Color::LightBlue_600",
			"::stappler::geom::Color::LightBlue_700",
			"::stappler::geom::Color::LightBlue_800",
			"::stappler::geom::Color::LightBlue_900",
			"::stappler::geom::Color::LightBlue_A100",
			"::stappler::geom::Color::LightBlue_A200",
			"::stappler::geom::Color::LightBlue_A400",
			"::stappler::geom::Color::LightBlue_A700",
			"::stappler::geom::Color::Cyan_50",
			"::stappler::geom::Color::Cyan_100",
			"::stappler::geom::Color::Cyan_200",
			"::stappler::geom::Color::Cyan_300",
			"::stappler::geom::Color::Cyan_400",
			"::stappler::geom::Color::Cyan_500",
			"::stappler::geom::Color::Cyan_600",
			"::stappler::geom::Color::Cyan_700",
			"::stappler::geom::Color::Cyan_800",
			"::stappler::geom::Color::Cyan_900",
			"::stappler::geom::Color::Cyan_A100",
			"::stappler::geom::Color::Cyan_A200",
			"::stappler::geom::Color::Cyan_A400",
			"::stappler::geom::Color::Cyan_A700",
			"::stappler::geom::Color::Teal_50",
			"::stappler::geom::Color::Teal_100",
			"::stappler::geom::Color::Teal_200",
			"::stappler::geom::Color::Teal_300",
			"::stappler::geom::Color::Teal_400",
			"::stappler::geom::Color::Teal_500",
			"::stappler::geom::Color::Teal_600",
			"::stappler::geom::Color::Teal_700",
			"::stappler::geom::Color::Teal_800",
			"::stappler::geom::Color::Teal_900",
			"::stappler::geom::Color::Teal_A100",
			"::stappler::geom::Color::Teal_A200",
			"::stappler::geom::Color::Teal_A400",
			"::stappler::geom::Color::Teal_A700",
			"::stappler::geom::Color::Green_50",
			"::stappler::geom::Color::Green_100",
			"::stappler::geom::Color::Green_200",
			"::stappler::geom::Color::Green_300",
			"::stappler::geom::Color::Green_400",
			"::stappler::geom::Color::Green_500",
			"::stappler::geom::Color::Green_600",
			"::stappler::geom::Color::Green_700",
			"::stappler::geom::Color::Green_800",
			"::stappler::geom::Color::Green_900",
			"::stappler::geom::Color::Green_A100",
			"::stappler::geom::Color::Green_A200",
			"::stappler::geom::Color::Green_A400",
			"::stappler::geom::Color::Green_A700",
			"::stappler::geom::Color::LightGreen_50",
			"::stappler::geom::Color::LightGreen_100",
			"::stappler::geom::Color::LightGreen_200",
			"::stappler::geom::Color::LightGreen_300",
			"::stappler::geom::Color::LightGreen_400",
			"::stappler::geom::Color::LightGreen_500",
			"::stappler::geom::Color::LightGreen_600",
			"::stappler::geom::Color::LightGreen_700",
			"::stappler::geom::Color::LightGreen_800",
			"::stappler::geom::Color::LightGreen_900",
			"::stappler::geom::Color::LightGreen_A100",
			"::stappler::geom::Color::LightGreen_A200",
			"::stappler::geom::Color::LightGreen_A400",
			"::stappler::geom::Color::LightGreen_A700",
			"::stappler::geom::Color::Lime_50",
			"::stappler::geom::Color::Lime_100",
			"::stappler::geom::Color::Lime_200",
			"::stappler::geom::Color::Lime_300",
			"::stappler::geom::Color::Lime_400",
			"::stappler::geom::Color::Lime_500",
			"::stappler::geom::Color::Lime_600",
			"::stappler::geom::Color::Lime_700",
			"::stappler::geom::Color::Lime_800",
			"::stappler::geom::Color::Lime_900",
			"::stappler::geom::Color::Lime_A100",
			"::stappler::geom::Color::Lime_A200",
			"::stappler::geom::Color::Lime_A400",
			"::stappler::geom::Color::Lime_A700",
			"::stappler::geom::Color::Yellow_50",
			"::stappler::geom::Color::Yellow_100",
			"::stappler::geom::Color::Yellow_200",
			"::stappler::geom::Color::Yellow_300",
			"::stappler::geom::Color::Yellow_400",
			"::stappler::geom::Color::Yellow_500",
			"::stappler::geom::Color::Yellow_600",
			"::stappler::geom::Color::Yellow_700",
			"::stappler::geom::Color::Yellow_800",
			"::stappler::geom::Color::Yellow_900",
			"::stappler::geom::Color::Yellow_A100",
			"::stappler::geom::Color::Yellow_A200",
			"::stappler::geom::Color::Yellow_A400",
			"::stappler::geom::Color::Yellow_A700",
			"::stappler::geom::Color::Amber_50",
			"::stappler::geom::Color::Amber_100",
			"::stappler::geom::Color::Amber_200",
			"::stappler::geom::Color::Amber_300",
			"::stappler::geom::Color::Amber_400",
			"::stappler::geom::Color::Amber_500",
			"::stappler::geom::Color::Amber_600",
			"::stappler::geom::Color::Amber_700",
			"::stappler::geom::Color::Amber_800",
			"::stappler::geom::Color::Amber_900",
			"::stappler::geom::Color::Amber_A100",
			"::stappler::geom::Color::Amber_A200",
			"::stappler::geom::Color::Amber_A400",
			"::stappler::geom::Color::Amber_A700",
			"::stappler::geom::Color::Orange_50",
			"::stappler::geom::Color::Orange_100",
			"::stappler::geom::Color::Orange_200",
			"::stappler::geom::Color::Orange_300",
			"::stappler::geom::Color::Orange_400",
			"::stappler::geom::Color::Orange_500",
			"::stappler::geom::Color::Orange_600",
			"::stappler::geom::Color::Orange_700",
			"::stappler::geom::Color::Orange_800",
			"::stappler::geom::Color::Orange_900",
			"::stappler::geom::Color::Orange_A100",
			"::stappler::geom::Color::Orange_A200",
			"::stappler::geom::Color::Orange_A400",
			"::stappler::geom::Color::Orange_A700",
			"::stappler::geom::Color::DeepOrange_50",
			"::stappler::geom::Color::DeepOrange_100",
			"::stappler::geom::Color::DeepOrange_200",
			"::stappler::geom::Color::DeepOrange_300",
			"::stappler::geom::Color::DeepOrange_400",
			"::stappler::geom::Color::DeepOrange_500",
			"::stappler::geom::Color::DeepOrange_600",
			"::stappler::geom::Color::DeepOrange_700",
			"::stappler::geom::Color::DeepOrange_800",
			"::stappler::geom::Color::DeepOrange_900",
			"::stappler::geom::Color::DeepOrange_A100",
			"::stappler::geom::Color::DeepOrange_A200",
			"::stappler::geom::Color::DeepOrange_A400",
			"::stappler::geom::Color::DeepOrange_A700",
			"::stappler::geom::Color::Brown_50",
			"::stappler::geom::Color::Brown_100",
			"::stappler::geom::Color::Brown_200",
			"::stappler::geom::Color::Brown_300",
			"::stappler::geom::Color::Brown_400",
			"::stappler::geom::Color::Brown_500",
			"::stappler::geom::Color::Brown_600",
			"::stappler::geom::Color::Brown_700",
			"::stappler::geom::Color::Brown_800",
			"::stappler::geom::Color::Brown_900",
			"::stappler::geom::Color::Grey_50",
			"::stappler::geom::Color::Grey_100",
			"::stappler::geom::Color::Grey_200",
			"::stappler::geom::Color::Grey_300",
			"::stappler::geom::Color::Grey_400",
			"::stappler::geom::Color::Grey_500",
			"::stappler::geom::Color::Grey_600",
			"::stappler::geom::Color::Grey_700",
			"::stappler::geom::Color::Grey_800",
			"::stappler::geom::Color::Grey_900",
			"::stappler::geom::Color::BlueGrey_50",
			"::stappler::geom::Color::BlueGrey_100",
			"::stappler::geom::Color::BlueGrey_200",
			"::stappler::geom::Color::BlueGrey_300",
			"::stappler::geom::Color::BlueGrey_400",
			"::stappler::geom::Color::BlueGrey_500",
			"::stappler::geom::Color::BlueGrey_600",
			"::stappler::geom::Color::BlueGrey_700",
			"::stappler::geom::Color::BlueGrey_800",
			"::stappler::geom::Color::BlueGrey_900",
			"::stappler::geom::Color::White",
			"::stappler::geom::Color::Black",
			"::stappler::geom::Color::Level",
			"::stappler::geom::Color::Tone",
			"::stappler::geom::Color::asColor3B() const",
			"::stappler::geom::Color::asColor4B() const",
			"::stappler::geom::Color::asColor4F() const",
			"::stappler::geom::Color::operator Color3B() const",
			"::stappler::geom::Color::operator Color4B() const",
			"::stappler::geom::Color::operator Color4F() const",
			"::stappler::geom::Color::operator==(stappler::geom::Color const&) const",
			"::stappler::geom::Color::operator!=(stappler::geom::Color const&) const",
			"::stappler::geom::Color::r() const",
			"::stappler::geom::Color::g() const",
			"::stappler::geom::Color::b() const",
			"::stappler::geom::Color::value() const",
			"::stappler::geom::Color::index() const",
			"::stappler::geom::Color::text() const",
			"::stappler::geom::Color::level() const",
			"::stappler::geom::Color::tone() const",
			"::stappler::geom::Color::previous() const",
			"::stappler::geom::Color::next() const",
			"::stappler::geom::Color::lighter(uint8_t) const",
			"::stappler::geom::Color::darker(uint8_t) const",
			"::stappler::geom::Color::medium() const",
			"::stappler::geom::Color::specific(uint8_t) const",
			"::stappler::geom::Color::specific(stappler::geom::Color::Level) const",
			"::stappler::geom::Color::Color(stappler::geom::Color::Tone,stappler::geom::Color::Level)",
			"::stappler::geom::Color::Color(uint32_t)",
			"::stappler::geom::Color::Color(uint32_t,int16_t)",
			"::stappler::geom::Color::Color(stappler::geom::Color3B const&)",
			"::stappler::geom::Color::Color(stappler::geom::Color4B const&)",
			"::stappler::geom::Color::Color()",
			"::stappler::geom::Color::Color(stappler::geom::Color const&)",
			"::stappler::geom::Color::Color(stappler::geom::Color&&)",
			"::stappler::geom::Color::operator=(stappler::geom::Color const&)",
			"::stappler::geom::Color::operator=(stappler::geom::Color&&)",
			"::stappler::geom::Color::name<typename>() const",
			"::stappler::geom::Color::getColorByName(stappler::StringView const&,stappler::geom::Color const&)",
			"::stappler::geom::Color::progress(stappler::geom::Color const&,stappler::geom::Color const&,float)",
			"::stappler::geom::Color::getById(uint16_t)",
			"::stappler::geom::Color::getColorIndex(uint32_t)",
			"::stappler::geom::Color::_value",
			"::stappler::geom::Color::_index",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Color const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Color3B const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Color4B const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Color4F const&)",
			"::stappler::geom::Color4F::progress(stappler::geom::Color4F const&,stappler::geom::Color4F const&,float)",
			"::stappler::geom::operator*(stappler::geom::Color4F const&,stappler::geom::Color4F const&)",
			"::stappler::geom::operator/(stappler::geom::Color4F const&,stappler::geom::Color4F const&)",
			"::stappler::geom::operator*(stappler::geom::Color4F const&,float)",
			"::stappler::geom::operator*(float,stappler::geom::Color4F const&)",
			"::stappler::geom::operator+(stappler::geom::Color4F const&,stappler::geom::Color4F const&)",
			"::stappler::geom::operator-(stappler::geom::Color4F const&,stappler::geom::Color4F const&)",
			"::stappler::geom::operator*(stappler::geom::Color4F const&,stappler::geom::Color4B const&)",
			"::stappler::geom::operator*(stappler::geom::Color4B const&,stappler::geom::Color4F const&)",
			"::stappler::geom::operator/(stappler::geom::Color4F const&,stappler::geom::Color4B const&)",
			"::stappler::geom::operator/(stappler::geom::Color4B const&,stappler::geom::Color4F const&)",
			"::stappler::geom::Color3B::WHITE",
			"::stappler::geom::Color3B::BLACK",
			"::stappler::geom::Color4B::WHITE",
			"::stappler::geom::Color4B::BLACK",
			"::stappler::geom::Color4F::WHITE",
			"::stappler::geom::Color4F::BLACK",
			"::stappler::geom::Color4F::ZERO",
			"::stappler::geom::Color4F::ONE",
			"LAYOUT_COLOR_SPEC_BASE",
			"LAYOUT_COLOR_SPEC_ACCENT",
			"LAYOUT_COLOR_SPEC",
			"::stappler::progress(geom::Color const&,geom::Color const&,float)",
			"::stappler::progress(geom::Color3B const&,geom::Color3B const&,float)",
			"::stappler::progress(geom::Color4B const&,geom::Color4B const&,float)",
			"::stappler::progress(geom::Color4F const&,geom::Color4F const&,float)"
		],
		"SPCommon.h":  [
			"STAPPLER_CORE_SPCOMMON_H_",
			"::stappler::getBacktrace(size_t,Callback<void (stappler::StringView)> const&)"
		],
		"SPCore.h":  [
			"STAPPLER_CORE_SPCORE_H_",
			"SPDEFAULT",
			"SP_THREE_WAY_COMPARISON_TYPE",
			"SP_THREE_WAY_COMPARISON_FRIEND",
			"SP_THREE_WAY_COMPARISON_TYPE_CONSTEXPR",
			"SP_THREE_WAY_COMPARISON_FRIEND_CONSTEXPR",
			"__STDC_WANT_IEC_60559_TYPES_EXT__",
			"SPUNUSED",
			"SPINLINE",
			"SPPRINTF",
			"SP_EXTERN_C",
			"_spMain",
			"::_spChar",
			"::numbers::pi",
			"::operator\"\"_hash(char const*,size_t)",
			"::operator\"\"_tag(char const*,size_t)",
			"::operator\"\"_hash64(char const*,size_t)",
			"::operator\"\"_tag64(char const*,size_t)",
			"::operator\"\"_to_rad(long double)",
			"::operator\"\"_to_rad(unsigned long long)",
			"::operator\"\"_length(char const*,size_t)",
			"::operator\"\"_length(char16_t const*,size_t)",
			"::operator\"\"_len(char const*,size_t)",
			"::operator\"\"_len(char16_t const*,size_t)",
			"::operator\"\"_GiB(unsigned long long)",
			"::operator\"\"_MiB(unsigned long long)",
			"::operator\"\"_KiB(unsigned long long)",
			"::operator\"\"_c16(unsigned long long)",
			"::operator\"\"_c8(unsigned long long)",
			"::operator\"\"_usec(unsigned long long)",
			"::operator\"\"_msec(unsigned long long)",
			"::operator\"\"_mksec(unsigned long long)",
			"::stappler::nullptr_t",
			"::stappler::pair<typename>(Args &&...)",
			"::stappler::Pair<typename,typename>",
			"::stappler::NumericLimits<typename>",
			"::stappler::InitializerList<typename>",
			"::stappler::nan<typename>()",
			"::stappler::epsilon<typename>()",
			"::stappler::isnan<typename>(T&&)",
			"::stappler::maxOf<class>()",
			"::stappler::minOf<class>()",
			"::stappler::HasMultiplication<typename,typename>",
			"::stappler::HasMultiplication<typename,typename>::test<class,class>(A*,B*)",
			"::stappler::HasMultiplication<typename,typename>::test<typename,typename>()",
			"::stappler::HasMultiplication<typename,typename>::type",
			"::stappler::progress<class>(T const&,T const&,float)",
			"::stappler::_ValueReinterpretator<class,class>",
			"::stappler::_ValueReinterpretator<class,class>::reinterpret(V)",
			"::stappler::_ValueReinterpretator<T,T>::_ValueReinterpretator<T,T>",
			"::stappler::_ValueReinterpretator<T,T>::reinterpret(T)",
			"::stappler::reinterpretValue<class,class,typename std::enable_if<sizeof(T) == sizeof(V)>::type*>(V)",
			"::stappler::toInt<typename>(E const&)",
			"::stappler::StringToNumber<typename>(char const*,char**,int)",
			"::stappler::StringToNumber(char const*,char**,int)",
			"::stappler::StringToNumber(char const*,char**,int)",
			"::stappler::StringToNumber(char const*,char**,int)",
			"::stappler::StringToNumber(char const*,char**,int)",
			"::stappler::StringToNumber(char const*,char**,int)",
			"::stappler::StringToNumber(char const*,char**,int)",
			"::stappler::StringToNumber(char const*,char**,int)",
			"::stappler::StringToNumber(char const*,char**,int)",
			"::stappler::ValueWrapper<class,class>",
			"::stappler::ValueWrapper<class,class>::Type",
			"::stappler::ValueWrapper<class,class>::max()",
			"::stappler::ValueWrapper<class,class>::min()",
			"::stappler::ValueWrapper<class,class>::epsilon()",
			"::stappler::ValueWrapper<class,class>::zero()",
			"::stappler::ValueWrapper<class,class>::ValueWrapper()",
			"::stappler::ValueWrapper<class,class>::ValueWrapper(T const&)",
			"::stappler::ValueWrapper<class,class>::ValueWrapper(T&&)",
			"::stappler::ValueWrapper<class,class>::ValueWrapper(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::operator=(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::ValueWrapper(ValueWrapper<T, Flag>&&)",
			"::stappler::ValueWrapper<class,class>::operator=(ValueWrapper<T, Flag>&&)",
			"::stappler::ValueWrapper<class,class>::set(T const&)",
			"::stappler::ValueWrapper<class,class>::set(T&&)",
			"::stappler::ValueWrapper<class,class>::get()",
			"::stappler::ValueWrapper<class,class>::get() const",
			"::stappler::ValueWrapper<class,class>::empty() const",
			"::stappler::ValueWrapper<class,class>::operator==(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator!=(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator>(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator<(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator>=(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator<=(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator|=(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::operator&=(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::operator^=(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::operator+=(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::operator-=(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::operator*=(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::operator/=(ValueWrapper<T, Flag> const&)",
			"::stappler::ValueWrapper<class,class>::operator|(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator&(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator^(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator+(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator-(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator*(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator/(ValueWrapper<T, Flag> const&) const",
			"::stappler::ValueWrapper<class,class>::operator-() const",
			"::stappler::ValueWrapper<class,class>::operator++()",
			"::stappler::ValueWrapper<class,class>::operator--()",
			"::stappler::ValueWrapper<class,class>::operator++(int)",
			"::stappler::ValueWrapper<class,class>::operator--(int)",
			"::stappler::ValueWrapper<class,class>::operator*<typename>(M const&) const",
			"::stappler::ValueWrapper<class,class>::value",
			"::stappler::Result<typename>",
			"::stappler::Result<typename>::Status",
			"::stappler::Result<typename>::status",
			"::stappler::Result<typename>::result",
			"::stappler::Result<typename>::error()",
			"::stappler::Result<typename>::Result(T&&)",
			"::stappler::Result<typename>::Result(T const&)",
			"::stappler::Result<typename>::Result()",
			"::stappler::Result<typename>::Result(const Result<T>&)",
			"::stappler::Result<typename>::Result(Result<T>&&)",
			"::stappler::Result<typename>::operator=(const Result<T>&)",
			"::stappler::Result<typename>::operator=(Result<T>&&)",
			"::stappler::Result<typename>::valid() const",
			"::stappler::Result<typename>::unwrap<typename>(Callback const&) const",
			"::stappler::Result<typename>::grab(T&)",
			"::stappler::Result<typename>::get() const",
			"::stappler::Result<typename>::get(T const&) const",
			"SP_DEFINE_ENUM_AS_MASK",
			"InvokerCallTest_MakeCallTest",
			"::stappler::math::MATH_FLOAT_SMALL",
			"::stappler::math::MATH_TOLERANCE",
			"::stappler::math::smooth<typename>(T const&,T const&,float,float)",
			"::stappler::math::lerp<typename>(T const&,T const&,float)",
			"::stappler::math::clamp<class,class>(T const&,T const&,T const&,Compare)",
			"::stappler::math::clamp<class>(T const&,T const&,T const&)",
			"::stappler::math::clamp_distance<class,class>(T const&,T const&,T const&,Compare,T const&)",
			"::stappler::math::clamp_distance<class,class>(T const&,T const&,T const&,Compare)",
			"::stappler::math::clamp_distance<class>(T const&,T const&,T const&,T const&)",
			"::stappler::math::clamp_distance<class>(T const&,T const&,T const&)",
			"::stappler::math::npot(uint32_t)",
			"::stappler::math::npot(uint64_t)",
			"::stappler::math::align<typename>(T,T)",
			"::stappler::math::to_rad<typename>(T)",
			"::stappler::math::to_deg<typename>(T)",
			"::std::hash<stappler::ValueWrapper<Value,Flag>>::hash<stappler::ValueWrapper<Value,Flag>>",
			"::std::hash<stappler::ValueWrapper<Value,Flag>>::hash()",
			"::std::hash<stappler::ValueWrapper<Value,Flag>>::operator()(stappler::ValueWrapper<Value, Flag> const&) const"
		],
		"SPCrypto.h":  [
			"STAPPLER_CRYPTO_SPCRYPTO_H_",
			"::stappler::crypto::SafeBlockEncoding",
			"::stappler::crypto::BlockKeySize256",
			"::stappler::crypto::Backend",
			"::stappler::crypto::BackendFlags",
			"::stappler::crypto::operator|(stappler::crypto::BackendFlags const&,stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::operator&(stappler::crypto::BackendFlags const&,stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::operator^(stappler::crypto::BackendFlags const&,stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::operator|=(stappler::crypto::BackendFlags&,stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::operator&=(stappler::crypto::BackendFlags&,stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::operator^=(stappler::crypto::BackendFlags&,stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::operator==(stappler::crypto::BackendFlags const&,std::underlying_type<BackendFlags>::type const&)",
			"::stappler::crypto::operator==(std::underlying_type<BackendFlags>::type const&,stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::operator!=(stappler::crypto::BackendFlags const&,std::underlying_type<BackendFlags>::type const&)",
			"::stappler::crypto::operator!=(std::underlying_type<BackendFlags>::type const&,stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::operator~(stappler::crypto::BackendFlags const&)",
			"::stappler::crypto::BlockCipher",
			"::stappler::crypto::KeyType",
			"::stappler::crypto::HashFunction",
			"::stappler::crypto::SignAlgorithm",
			"::stappler::crypto::KeyBits",
			"::stappler::crypto::KeyFormat",
			"::stappler::crypto::KeyContext",
			"::stappler::crypto::KeyContext::cryptoCtx",
			"::stappler::crypto::KeyContext::keyCtx",
			"::stappler::crypto::KeyContext::backendCtx",
			"::stappler::crypto::KeyContext::type",
			"::stappler::crypto::BlockKey256",
			"::stappler::crypto::BlockKey256::data",
			"::stappler::crypto::BlockKey256::version",
			"::stappler::crypto::BlockKey256::cipher",
			"::stappler::crypto::BlockKey256::operator==(stappler::crypto::BlockKey256 const&) const",
			"::stappler::crypto::BlockKey256::operator!=(stappler::crypto::BlockKey256 const&) const",
			"::stappler::crypto::BlockCryptoHeader",
			"::stappler::crypto::BlockCryptoHeader::size",
			"::stappler::crypto::BlockCryptoHeader::version",
			"::stappler::crypto::BlockCryptoHeader::cipher",
			"::stappler::crypto::BlockCryptoHeader::padding",
			"::stappler::crypto::BlockInfo",
			"::stappler::crypto::BlockInfo::dataSize",
			"::stappler::crypto::BlockInfo::version",
			"::stappler::crypto::BlockInfo::cipher",
			"::stappler::crypto::PrivateKey",
			"::stappler::crypto::PrivateKey::PrivateKey(stappler::crypto::Backend)",
			"::stappler::crypto::PrivateKey::PrivateKey(stappler::crypto::Backend,stappler::BytesView,stappler::CoderSource const&)",
			"::stappler::crypto::PrivateKey::PrivateKey(stappler::BytesView,stappler::CoderSource const&)",
			"::stappler::crypto::PrivateKey::~PrivateKey()",
			"::stappler::crypto::PrivateKey::PrivateKey(stappler::crypto::PrivateKey const&)",
			"::stappler::crypto::PrivateKey::operator=(stappler::crypto::PrivateKey const&)",
			"::stappler::crypto::PrivateKey::generate(stappler::crypto::KeyBits)",
			"::stappler::crypto::PrivateKey::import(stappler::BytesView,stappler::CoderSource const&)",
			"::stappler::crypto::PrivateKey::exportPublic() const",
			"::stappler::crypto::PrivateKey::getBackend() const",
			"::stappler::crypto::PrivateKey::getKey() const",
			"::stappler::crypto::PrivateKey::getType() const",
			"::stappler::crypto::PrivateKey::operator bool() const",
			"::stappler::crypto::PrivateKey::exportPem(Callback<void (const uint8_t *, size_t)> const&,stappler::crypto::KeyFormat,stappler::CoderSource const&) const",
			"::stappler::crypto::PrivateKey::exportPem(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&) const",
			"::stappler::crypto::PrivateKey::exportDer(Callback<void (const uint8_t *, size_t)> const&,stappler::crypto::KeyFormat,stappler::CoderSource const&) const",
			"::stappler::crypto::PrivateKey::exportDer(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&) const",
			"::stappler::crypto::PrivateKey::sign(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&,stappler::crypto::SignAlgorithm) const",
			"::stappler::crypto::PrivateKey::verify(stappler::CoderSource const&,stappler::BytesView,stappler::crypto::SignAlgorithm) const",
			"::stappler::crypto::PrivateKey::fingerprint(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&) const",
			"::stappler::crypto::PrivateKey::isSupported(stappler::crypto::KeyFormat) const",
			"::stappler::crypto::PrivateKey::encrypt(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&)",
			"::stappler::crypto::PrivateKey::decrypt(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&)",
			"::stappler::crypto::PrivateKey::_loaded",
			"::stappler::crypto::PrivateKey::_valid",
			"::stappler::crypto::PrivateKey::_key",
			"::stappler::crypto::PublicKey",
			"::stappler::crypto::PublicKey::PublicKey(stappler::crypto::Backend)",
			"::stappler::crypto::PublicKey::PublicKey(stappler::crypto::Backend,stappler::BytesView)",
			"::stappler::crypto::PublicKey::PublicKey(stappler::BytesView)",
			"::stappler::crypto::PublicKey::PublicKey(stappler::crypto::PrivateKey const&)",
			"::stappler::crypto::PublicKey::~PublicKey()",
			"::stappler::crypto::PublicKey::PublicKey(stappler::crypto::PublicKey const&)",
			"::stappler::crypto::PublicKey::operator=(stappler::crypto::PublicKey const&)",
			"::stappler::crypto::PublicKey::import(stappler::BytesView)",
			"::stappler::crypto::PublicKey::importOpenSSH(stappler::StringView)",
			"::stappler::crypto::PublicKey::getBackend() const",
			"::stappler::crypto::PublicKey::getKey() const",
			"::stappler::crypto::PublicKey::getType() const",
			"::stappler::crypto::PublicKey::operator bool() const",
			"::stappler::crypto::PublicKey::exportPem(Callback<void (const uint8_t *, size_t)> const&) const",
			"::stappler::crypto::PublicKey::exportDer(Callback<void (const uint8_t *, size_t)> const&) const",
			"::stappler::crypto::PublicKey::verify(stappler::CoderSource const&,stappler::BytesView,stappler::crypto::SignAlgorithm) const",
			"::stappler::crypto::PublicKey::encrypt(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&)",
			"::stappler::crypto::PublicKey::_loaded",
			"::stappler::crypto::PublicKey::_valid",
			"::stappler::crypto::PublicKey::_key",
			"::stappler::crypto::getBlockSize(stappler::crypto::BlockCipher)",
			"::stappler::crypto::listBackends(Callback<void (stappler::crypto::Backend, stappler::StringView, stappler::crypto::BackendFlags)> const&)",
			"::stappler::crypto::isPemKey(stappler::BytesView)",
			"::stappler::crypto::encryptBlock(stappler::crypto::BlockKey256 const&,stappler::BytesView,Callback<void (const uint8_t *, size_t)> const&)",
			"::stappler::crypto::encryptBlock(stappler::crypto::Backend,stappler::crypto::BlockKey256 const&,stappler::BytesView,Callback<void (const uint8_t *, size_t)> const&)",
			"::stappler::crypto::decryptBlock(stappler::crypto::BlockKey256 const&,stappler::BytesView,Callback<void (const uint8_t *, size_t)> const&)",
			"::stappler::crypto::decryptBlock(stappler::crypto::Backend,stappler::crypto::BlockKey256 const&,stappler::BytesView,Callback<void (const uint8_t *, size_t)> const&)",
			"::stappler::crypto::makeBlockKey(stappler::crypto::Backend,stappler::BytesView,stappler::BytesView,stappler::crypto::BlockCipher,uint32_t)",
			"::stappler::crypto::makeBlockKey(stappler::BytesView,stappler::BytesView,stappler::crypto::BlockCipher,uint32_t)",
			"::stappler::crypto::makeBlockKey(stappler::crypto::PrivateKey const&,stappler::BytesView,stappler::crypto::BlockCipher,uint32_t)",
			"::stappler::crypto::getBlockInfo(stappler::BytesView)",
			"::stappler::crypto::HashCoderCallback",
			"::stappler::crypto::hash256(stappler::crypto::Backend,Callback<void (const stappler::crypto::HashCoderCallback &)> const&,stappler::crypto::HashFunction)",
			"::stappler::crypto::hash256(Callback<void (const stappler::crypto::HashCoderCallback &)> const&,stappler::crypto::HashFunction)",
			"::stappler::crypto::hash256(stappler::crypto::Backend,stappler::CoderSource const&,stappler::crypto::HashFunction)",
			"::stappler::crypto::hash256(stappler::CoderSource const&,stappler::crypto::HashFunction)",
			"::stappler::crypto::hash512(stappler::crypto::Backend,Callback<void (const stappler::crypto::HashCoderCallback &)> const&,stappler::crypto::HashFunction)",
			"::stappler::crypto::hash512(Callback<void (const stappler::crypto::HashCoderCallback &)> const&,stappler::crypto::HashFunction)",
			"::stappler::crypto::hash512(stappler::crypto::Backend,stappler::CoderSource const&,stappler::crypto::HashFunction)",
			"::stappler::crypto::hash512(stappler::CoderSource const&,stappler::crypto::HashFunction)"
		],
		"SPData.h":  [
			"STAPPLER_DATA_SPDATA_H_",
			"::stappler::data::parseCommandLineOptions<typename,typename>(Output&,int,char const*[],Callback<void (Output &, stappler::StringView)> const&,Callback<int (Output &, char, const char *)> const&,Callback<int (Output &, const stappler::StringView &, int, const char **)> const&)",
			"::stappler::data::parseCommandLineOptions<typename,typename>(Output&,int,char16_t const*[],Callback<void (Output &, stappler::StringView)> const&,Callback<int (Output &, char, const char *)> const&,Callback<int (Output &, const stappler::StringView &, int, const char **)> const&)",
			"::stappler::data::parseCommandLineOptions<typename,typename>(int,char const*[],Callback<int (Output &, char, const char *)> const&,Callback<int (Output &, const stappler::StringView &, int, const char **)> const&)",
			"::stappler::data::parseCommandLineOptions<typename,typename>(int,char16_t const*[],Callback<int (Output &, char, const char *)> const&,Callback<int (Output &, const stappler::StringView &, int, const char **)> const&)",
			"::stappler::data::readUrlencoded<typename>(stappler::StringView,size_t,size_t)"
		],
		"SPDataCbor.h":  [
			"STAPPLER_DATA_SPDATACBOR_H_",
			"::stappler::data::cbor::MajorType",
			"::stappler::data::cbor::SimpleValue",
			"::stappler::data::cbor::Flags",
			"::stappler::data::cbor::MajorTypeEncoded",
			"::stappler::data::cbor::Tag",
			"::stappler::data::cbor::operator<<(stappler::data::cbor::MajorType,stappler::data::cbor::Flags)",
			"::stappler::data::cbor::operator==(uint8_t,stappler::data::cbor::MajorTypeEncoded)",
			"::stappler::data::cbor::operator==(uint8_t,stappler::data::cbor::MajorType)",
			"::stappler::data::cbor::operator==(uint8_t,stappler::data::cbor::Flags)",
			"::stappler::data::cbor::type(uint8_t)",
			"::stappler::data::cbor::data(uint8_t)",
			"::stappler::data::cbor::flags(uint8_t)",
			"::stappler::data::cbor::_writeId<class>(Writer&)",
			"::stappler::data::cbor::_writeNumeric<class,class>(Writer&,T,stappler::data::cbor::MajorTypeEncoded,stappler::data::cbor::Flags)",
			"::stappler::data::cbor::_writeInt<class>(Writer&,uint64_t,stappler::data::cbor::MajorTypeEncoded)",
			"::stappler::data::cbor::_writeFloatNaN<class>(Writer&)",
			"::stappler::data::cbor::_writeFloatPositiveInf<class>(Writer&)",
			"::stappler::data::cbor::_writeFloatNegativeInf<class>(Writer&)",
			"::stappler::data::cbor::_writeFloat16<class>(Writer&,uint16_t)",
			"::stappler::data::cbor::_writeFloat32<class>(Writer&,float)",
			"::stappler::data::cbor::_writeFloat64<class>(Writer&,double)",
			"::stappler::data::cbor::_writeArrayStart<class>(Writer&,size_t)",
			"::stappler::data::cbor::_writeMapStart<class>(Writer&,size_t)",
			"::stappler::data::cbor::_writeNull<class>(Writer&,stappler::nullptr_t)",
			"::stappler::data::cbor::_writeBool<class>(Writer&,bool)",
			"::stappler::data::cbor::_writeInt<class>(Writer&,int64_t)",
			"::stappler::data::cbor::_writeFloat<class>(Writer&,double)",
			"::stappler::data::cbor::_writeString<class>(Writer&,stappler::StringView const&)",
			"::stappler::data::cbor::_writeBytes<class>(Writer&,BytesViewTemplate<Endian::Network> const&)",
			"::stappler::data::cbor::_writeNumber<class>(Writer&,float)",
			"::stappler::data::cbor::_readIntValue(BytesViewTemplate<Endian::Network>&,uint8_t)",
			"::stappler::data::cbor::_readInt(BytesViewTemplate<Endian::Network>&)",
			"::stappler::data::cbor::_readNumber(BytesViewTemplate<Endian::Network>&)"
		],
		"SPDataDecode.h":  [
			"STAPPLER_DATA_SPDATADECODE_H_",
			"::stappler::data::DataFormat",
			"::stappler::data::detectDataFormat(uint8_t const*,size_t,uint8_t&)",
			"::stappler::data::decompress(uint8_t const*,size_t,uint8_t*,size_t)",
			"::stappler::data::getDecompressedSize(uint8_t const*,size_t)",
			"::stappler::data::decompressLZ4<typename>(uint8_t const*,size_t,bool)",
			"::stappler::data::decompressBrotli<typename>(uint8_t const*,size_t,bool)",
			"::stappler::data::decompress<typename>(uint8_t const*,size_t)",
			"::stappler::data::read<typename,typename>(StringType const&,stappler::StringView const&)",
			"::stappler::data::readFile<typename>(stappler::StringView,stappler::StringView const&)"
		],
		"SPDataDecodeCbor.h":  [
			"STAPPLER_DATA_SPDATADECODECBOR_H_",
			"::stappler::data::cbor::Decoder<typename>",
			"::stappler::data::cbor::Decoder<typename>::InterfaceType",
			"::stappler::data::cbor::Decoder<typename>::ValueType",
			"::stappler::data::cbor::Decoder<typename>::StringType",
			"::stappler::data::cbor::Decoder<typename>::BytesType",
			"::stappler::data::cbor::Decoder<typename>::ArrayType",
			"::stappler::data::cbor::Decoder<typename>::DictionaryType",
			"::stappler::data::cbor::Decoder<typename>::Decoder(BytesViewTemplate<Endian::Network>&)",
			"::stappler::data::cbor::Decoder<typename>::decodePositiveInt(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeNegativeInt(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeByteString(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeCharString(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeArray(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeMap(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeTaggedValue(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeSimpleValue(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decode(stappler::data::cbor::MajorTypeEncoded,uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decode(stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeUndefinedLength<typename>(Container&,stappler::data::cbor::MajorTypeEncoded)",
			"::stappler::data::cbor::Decoder<typename>::parseNumber(stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::parseValue(stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::parse(stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::r",
			"::stappler::data::cbor::Decoder<typename>::buf",
			"::stappler::data::cbor::Decoder<typename>::back",
			"::stappler::data::cbor::Decoder<typename>::stack",
			"::stappler::data::cbor::Decoder<typename>::decodeUndefinedLength<typename>(Container&,stappler::data::cbor::MajorTypeEncoded)",
			"::stappler::data::cbor::Decoder<typename>::decodeByteString(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeCharString(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeArray(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeMap(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeTaggedValue(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decodeSimpleValue(uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decode(stappler::data::cbor::MajorTypeEncoded,uint8_t,stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::Decoder<typename>::decode(stappler::data::cbor::Decoder::ValueType&)",
			"::stappler::data::cbor::read<typename>(BytesViewTemplate<Endian::Network>&)",
			"::stappler::data::cbor::read<typename>(BytesViewTemplate<Endian::Little>&)",
			"::stappler::data::cbor::read<typename,typename>(Container const&)"
		],
		"SPDataDecodeJson.h":  [
			"STAPPLER_DATA_SPDATADECODEJSON_H_",
			"::stappler::data::json::decodeNumber(stappler::StringView&,bool&)",
			"::stappler::data::json::Decoder<typename>",
			"::stappler::data::json::Decoder<typename>::InterfaceType",
			"::stappler::data::json::Decoder<typename>::ValueType",
			"::stappler::data::json::Decoder<typename>::StringType",
			"::stappler::data::json::Decoder<typename>::BackType",
			"::stappler::data::json::Decoder<typename>::Decoder(stappler::StringView&,bool)",
			"::stappler::data::json::Decoder<typename>::parseBufferString(stappler::data::json::Decoder::StringType&)",
			"::stappler::data::json::Decoder<typename>::parseJsonNumber(stappler::data::json::Decoder::ValueType&)",
			"::stappler::data::json::Decoder<typename>::parseValue(stappler::data::json::Decoder::ValueType&)",
			"::stappler::data::json::Decoder<typename>::parseJson(stappler::data::json::Decoder::ValueType&)",
			"::stappler::data::json::Decoder<typename>::push(stappler::data::json::Decoder::BackType,stappler::data::json::Decoder::ValueType*)",
			"::stappler::data::json::Decoder<typename>::pop()",
			"::stappler::data::json::Decoder<typename>::validate",
			"::stappler::data::json::Decoder<typename>::stop",
			"::stappler::data::json::Decoder<typename>::backType",
			"::stappler::data::json::Decoder<typename>::r",
			"::stappler::data::json::Decoder<typename>::back",
			"::stappler::data::json::Decoder<typename>::buf",
			"::stappler::data::json::Decoder<typename>::stack",
			"::stappler::data::json::Decoder<typename>::parseBufferString(stappler::data::json::Decoder::StringType&)",
			"::stappler::data::json::Decoder<typename>::parseJsonNumber(stappler::data::json::Decoder::ValueType&)",
			"::stappler::data::json::Decoder<typename>::parseValue(stappler::data::json::Decoder::ValueType&)",
			"::stappler::data::json::Decoder<typename>::parseJson(stappler::data::json::Decoder::ValueType&)",
			"::stappler::data::json::read<typename>(stappler::StringView&,bool)",
			"::stappler::data::json::read<typename>(stappler::StringView const&)"
		],
		"SPDataDecodeSerenity.h":  [
			"STAPPLER_DATA_SPDATADECODESERENITY_H_",
			"::stappler::data::serenity::Decoder<typename>",
			"::stappler::data::serenity::Decoder<typename>::InterfaceType",
			"::stappler::data::serenity::Decoder<typename>::ValueType",
			"::stappler::data::serenity::Decoder<typename>::StringType",
			"::stappler::data::serenity::Decoder<typename>::BytesType",
			"::stappler::data::serenity::Decoder<typename>::BackType",
			"::stappler::data::serenity::Decoder<typename>::TokenType",
			"::stappler::data::serenity::Decoder<typename>::Decoder(stappler::StringView&)",
			"::stappler::data::serenity::Decoder<typename>::parseBufferString(stappler::data::serenity::Decoder::StringType&)",
			"::stappler::data::serenity::Decoder<typename>::parseNumber(stappler::StringView&,stappler::data::serenity::Decoder::ValueType&)",
			"::stappler::data::serenity::Decoder<typename>::parsePlainToken(stappler::data::serenity::Decoder::ValueType&,stappler::StringView)",
			"::stappler::data::serenity::Decoder<typename>::transformToDict(stappler::data::serenity::Decoder::ValueType&)",
			"::stappler::data::serenity::Decoder<typename>::parse(stappler::data::serenity::Decoder::ValueType&)",
			"::stappler::data::serenity::Decoder<typename>::push(stappler::data::serenity::Decoder::BackType,stappler::data::serenity::Decoder::ValueType*)",
			"::stappler::data::serenity::Decoder<typename>::pop()",
			"::stappler::data::serenity::Decoder<typename>::stop",
			"::stappler::data::serenity::Decoder<typename>::backType",
			"::stappler::data::serenity::Decoder<typename>::r",
			"::stappler::data::serenity::Decoder<typename>::back",
			"::stappler::data::serenity::Decoder<typename>::stack",
			"::stappler::data::serenity::Decoder<typename>::parseNumber(stappler::StringView&,stappler::data::serenity::Decoder::ValueType&)",
			"::stappler::data::serenity::Decoder<typename>::parsePlainToken(stappler::data::serenity::Decoder::ValueType&,stappler::StringView)",
			"::stappler::data::serenity::Decoder<typename>::transformToDict(stappler::data::serenity::Decoder::ValueType&)",
			"::stappler::data::serenity::TokenSpecials",
			"::stappler::data::serenity::Decoder<typename>::parse(stappler::data::serenity::Decoder::ValueType&)",
			"::stappler::data::serenity::read<typename>(stappler::StringView&)",
			"::stappler::data::serenity::read<typename>(stappler::StringView const&)"
		],
		"SPDataEncode.h":  [
			"STAPPLER_DATA_SPDATAENCODE_H_",
			"::stappler::data::EncodeFormat",
			"::stappler::data::EncodeFormat::EncodeStreamIndex",
			"::stappler::data::EncodeFormat::Format",
			"::stappler::data::EncodeFormat::Compression",
			"::stappler::data::EncodeFormat::Encryption",
			"::stappler::data::EncodeFormat::CborCompressed",
			"::stappler::data::EncodeFormat::JsonCompressed",
			"::stappler::data::EncodeFormat::EncodeFormat(stappler::data::EncodeFormat::Format,stappler::data::EncodeFormat::Compression,stappler::data::EncodeFormat::Encryption,stappler::StringView)",
			"::stappler::data::EncodeFormat::EncodeFormat(long)",
			"::stappler::data::EncodeFormat::EncodeFormat(stappler::data::EncodeFormat const&)",
			"::stappler::data::EncodeFormat::operator=(stappler::data::EncodeFormat const&)",
			"::stappler::data::EncodeFormat::isRaw() const",
			"::stappler::data::EncodeFormat::isTextual() const",
			"::stappler::data::EncodeFormat::flag() const",
			"::stappler::data::EncodeFormat::format",
			"::stappler::data::EncodeFormat::compression",
			"::stappler::data::EncodeFormat::encryption",
			"::stappler::data::getLZ4EncodeState()",
			"::stappler::data::compressData(uint8_t const*,size_t,uint8_t*,size_t,EncodeFormat::Compression)",
			"::stappler::data::writeCompressionMark(uint8_t*,size_t,EncodeFormat::Compression)",
			"::stappler::data::compress<typename>(uint8_t const*,size_t,EncodeFormat::Compression,bool)",
			"::stappler::data::getCompressBounds(size_t,EncodeFormat::Compression)",
			"::stappler::data::EncodeTraits<typename>",
			"::stappler::data::EncodeTraits<typename>::InterfaceType",
			"::stappler::data::EncodeTraits<typename>::ValueType",
			"::stappler::data::EncodeTraits<typename>::BytesType",
			"::stappler::data::EncodeTraits<typename>::StringType",
			"::stappler::data::EncodeTraits<typename>::write(stappler::data::EncodeTraits::ValueType const&,stappler::data::EncodeFormat,size_t)",
			"::stappler::data::EncodeTraits<typename>::write(std::ostream&,stappler::data::EncodeTraits::ValueType const&,stappler::data::EncodeFormat)",
			"::stappler::data::EncodeTraits<typename>::save(stappler::data::EncodeTraits::ValueType const&,stappler::StringView const&,stappler::data::EncodeFormat)",
			"::stappler::data::write<typename>(ValueTemplate<Interface> const&,stappler::data::EncodeFormat,size_t)",
			"::stappler::data::write<typename>(std::ostream&,ValueTemplate<Interface> const&,stappler::data::EncodeFormat)",
			"::stappler::data::save<typename>(ValueTemplate<Interface> const&,stappler::StringView const&,stappler::data::EncodeFormat)",
			"::stappler::data::toString<typename>(ValueTemplate<Interface> const&,bool)",
			"::stappler::data::toString<typename>(ValueTemplate<Interface> const&,EncodeFormat::Format)",
			"::stappler::data::operator<<<typename,typename>(std::basic_ostream<CharT, Traits>&,stappler::data::EncodeFormat)",
			"::stappler::data::operator<<<typename,typename>(std::basic_ostream<CharT, Traits>&,EncodeFormat::Format)",
			"::stappler::data::operator<<<typename,typename,typename>(std::basic_ostream<CharT, Traits>&,ValueTemplate<Interface> const&)"
		],
		"SPDataEncodeCbor.h":  [
			"STAPPLER_DATA_SPDATAENCODECBOR_H_",
			"::stappler::data::cbor::Encoder<typename>",
			"::stappler::data::cbor::Encoder<typename>::InterfaceType",
			"::stappler::data::cbor::Encoder<typename>::ValueType",
			"::stappler::data::cbor::Encoder<typename>::Type",
			"::stappler::data::cbor::Encoder<typename>::encode(const typename ValueType::ArrayType&)",
			"::stappler::data::cbor::Encoder<typename>::encode(const typename ValueType::DictionaryType&)",
			"::stappler::data::cbor::Encoder<typename>::Encoder(stappler::StringView)",
			"::stappler::data::cbor::Encoder<typename>::Encoder(std::ostream*)",
			"::stappler::data::cbor::Encoder<typename>::Encoder(bool,size_t)",
			"::stappler::data::cbor::Encoder<typename>::~Encoder()",
			"::stappler::data::cbor::Encoder<typename>::emplace(uint8_t)",
			"::stappler::data::cbor::Encoder<typename>::emplace(uint8_t const*,size_t)",
			"::stappler::data::cbor::Encoder<typename>::switchBuffer(size_t)",
			"::stappler::data::cbor::Encoder<typename>::isOpen() const",
			"::stappler::data::cbor::Encoder<typename>::data()",
			"::stappler::data::cbor::Encoder<typename>::write(stappler::nullptr_t)",
			"::stappler::data::cbor::Encoder<typename>::write(bool)",
			"::stappler::data::cbor::Encoder<typename>::write(int64_t)",
			"::stappler::data::cbor::Encoder<typename>::write(double)",
			"::stappler::data::cbor::Encoder<typename>::write(const typename ValueType::StringType&)",
			"::stappler::data::cbor::Encoder<typename>::write(const typename ValueType::BytesType&)",
			"::stappler::data::cbor::Encoder<typename>::onBeginArray(const typename ValueType::ArrayType&)",
			"::stappler::data::cbor::Encoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::cbor::Encoder<typename>::",
			"::stappler::data::cbor::Encoder<typename>::buffer",
			"::stappler::data::cbor::Encoder<typename>::file",
			"::stappler::data::cbor::Encoder<typename>::stream",
			"::stappler::data::cbor::Encoder<typename>::type",
			"::stappler::data::cbor::writeArray<typename>(const typename ValueTemplate<Interface>::ArrayType&)",
			"::stappler::data::cbor::writeObject<typename>(const typename ValueTemplate<Interface>::DictionaryType&)",
			"::stappler::data::cbor::write<typename>(ValueTemplate<Interface> const&,size_t)",
			"::stappler::data::cbor::write<typename>(std::ostream&,ValueTemplate<Interface> const&)",
			"::stappler::data::cbor::save<typename>(ValueTemplate<Interface> const&,stappler::StringView)"
		],
		"SPDataEncodeJson.h":  [
			"STAPPLER_DATA_SPDATAENCODEJSON_H_",
			"::stappler::data::json::encodeString<typename>(std::ostream&,StringType const&)",
			"::stappler::data::json::RawEncoder<typename>",
			"::stappler::data::json::RawEncoder<typename>::InterfaceType",
			"::stappler::data::json::RawEncoder<typename>::ValueType",
			"::stappler::data::json::RawEncoder<typename>::Type",
			"::stappler::data::json::RawEncoder<typename>::RawEncoder(std::ostream*)",
			"::stappler::data::json::RawEncoder<typename>::writeData(char const*,size_t)",
			"::stappler::data::json::RawEncoder<typename>::writeData(char const*)",
			"::stappler::data::json::RawEncoder<typename>::writeChar(char)",
			"::stappler::data::json::RawEncoder<typename>::write(stappler::nullptr_t)",
			"::stappler::data::json::RawEncoder<typename>::write(bool)",
			"::stappler::data::json::RawEncoder<typename>::write(int64_t)",
			"::stappler::data::json::RawEncoder<typename>::write(double)",
			"::stappler::data::json::RawEncoder<typename>::write(const typename ValueType::StringType&)",
			"::stappler::data::json::RawEncoder<typename>::write(const typename ValueType::BytesType&)",
			"::stappler::data::json::RawEncoder<typename>::onBeginArray(const typename ValueType::ArrayType&)",
			"::stappler::data::json::RawEncoder<typename>::onEndArray(const typename ValueType::ArrayType&)",
			"::stappler::data::json::RawEncoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::json::RawEncoder<typename>::onEndDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::json::RawEncoder<typename>::onKey(const typename ValueType::StringType&)",
			"::stappler::data::json::RawEncoder<typename>::onNextValue()",
			"::stappler::data::json::RawEncoder<typename>::type",
			"::stappler::data::json::RawEncoder<typename>::stream",
			"::stappler::data::json::RawEncoder<typename>::bytes",
			"::stappler::data::json::PrettyEncoder<typename>",
			"::stappler::data::json::PrettyEncoder<typename>::InterfaceType",
			"::stappler::data::json::PrettyEncoder<typename>::ValueType",
			"::stappler::data::json::PrettyEncoder<typename>::PrettyEncoder(std::ostream*,bool)",
			"::stappler::data::json::PrettyEncoder<typename>::write(stappler::nullptr_t)",
			"::stappler::data::json::PrettyEncoder<typename>::write(bool)",
			"::stappler::data::json::PrettyEncoder<typename>::write(int64_t)",
			"::stappler::data::json::PrettyEncoder<typename>::write(double)",
			"::stappler::data::json::PrettyEncoder<typename>::write(const typename ValueType::StringType&)",
			"::stappler::data::json::PrettyEncoder<typename>::write(const typename ValueType::BytesType&)",
			"::stappler::data::json::PrettyEncoder<typename>::isObjectArray(const typename ValueType::ArrayType&)",
			"::stappler::data::json::PrettyEncoder<typename>::onBeginArray(const typename ValueType::ArrayType&)",
			"::stappler::data::json::PrettyEncoder<typename>::onEndArray(const typename ValueType::ArrayType&)",
			"::stappler::data::json::PrettyEncoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::json::PrettyEncoder<typename>::onEndDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::json::PrettyEncoder<typename>::onKey(const typename ValueType::StringType&)",
			"::stappler::data::json::PrettyEncoder<typename>::onNextValue()",
			"::stappler::data::json::PrettyEncoder<typename>::onValue(stappler::data::json::PrettyEncoder::ValueType const&)",
			"::stappler::data::json::PrettyEncoder<typename>::depth",
			"::stappler::data::json::PrettyEncoder<typename>::popComplex",
			"::stappler::data::json::PrettyEncoder<typename>::offsetted",
			"::stappler::data::json::PrettyEncoder<typename>::timeMarkers",
			"::stappler::data::json::PrettyEncoder<typename>::stream",
			"::stappler::data::json::PrettyEncoder<typename>::lastKey",
			"::stappler::data::json::PrettyEncoder<typename>::bstack",
			"::stappler::data::json::write<typename>(std::ostream&,ValueTemplate<Interface> const&,bool,bool)",
			"::stappler::data::json::write<typename>(ValueTemplate<Interface> const&,bool,bool)",
			"::stappler::data::json::save<typename>(ValueTemplate<Interface> const&,stappler::StringView,bool,bool)",
			"::stappler::data::json::toString<typename>(ValueTemplate<Interface> const&,bool)"
		],
		"SPDataEncodeSerenity.h":  [
			"STAPPLER_DATA_SPDATAENCODESERENITY_H_",
			"::stappler::data::serenity::shouldEncodePercent(char)",
			"::stappler::data::serenity::encodeString<typename>(std::ostream&,StringType const&)",
			"::stappler::data::serenity::RawEncoder<typename>",
			"::stappler::data::serenity::RawEncoder<typename>::InterfaceType",
			"::stappler::data::serenity::RawEncoder<typename>::ValueType",
			"::stappler::data::serenity::RawEncoder<typename>::Type",
			"::stappler::data::serenity::RawEncoder<typename>::RawEncoder(std::ostream*)",
			"::stappler::data::serenity::RawEncoder<typename>::write(stappler::nullptr_t)",
			"::stappler::data::serenity::RawEncoder<typename>::write(bool)",
			"::stappler::data::serenity::RawEncoder<typename>::write(int64_t)",
			"::stappler::data::serenity::RawEncoder<typename>::write(double)",
			"::stappler::data::serenity::RawEncoder<typename>::write(const typename ValueType::StringType&)",
			"::stappler::data::serenity::RawEncoder<typename>::write(const typename ValueType::BytesType&)",
			"::stappler::data::serenity::RawEncoder<typename>::onBeginArray(const typename ValueType::ArrayType&)",
			"::stappler::data::serenity::RawEncoder<typename>::onEndArray(const typename ValueType::ArrayType&)",
			"::stappler::data::serenity::RawEncoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::serenity::RawEncoder<typename>::onEndDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::serenity::RawEncoder<typename>::onKey(const typename ValueType::StringType&)",
			"::stappler::data::serenity::RawEncoder<typename>::onNextValue()",
			"::stappler::data::serenity::RawEncoder<typename>::onArrayValue(stappler::data::serenity::RawEncoder::ValueType const&)",
			"::stappler::data::serenity::RawEncoder<typename>::onKeyValuePair(const typename ValueType::StringType&,stappler::data::serenity::RawEncoder::ValueType const&)",
			"::stappler::data::serenity::RawEncoder<typename>::preventKey",
			"::stappler::data::serenity::RawEncoder<typename>::stream",
			"::stappler::data::serenity::RawEncoder<typename>::type",
			"::stappler::data::serenity::PrettyEncoder<typename>",
			"::stappler::data::serenity::PrettyEncoder<typename>::InterfaceType",
			"::stappler::data::serenity::PrettyEncoder<typename>::ValueType",
			"::stappler::data::serenity::PrettyEncoder<typename>::Type",
			"::stappler::data::serenity::PrettyEncoder<typename>::PrettyEncoder(std::ostream*)",
			"::stappler::data::serenity::PrettyEncoder<typename>::write(stappler::nullptr_t)",
			"::stappler::data::serenity::PrettyEncoder<typename>::write(bool)",
			"::stappler::data::serenity::PrettyEncoder<typename>::write(int64_t)",
			"::stappler::data::serenity::PrettyEncoder<typename>::write(double)",
			"::stappler::data::serenity::PrettyEncoder<typename>::write(const typename ValueType::StringType&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::write(const typename ValueType::BytesType&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::isObjectArray(const typename ValueType::ArrayType&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::onBeginArray(const typename ValueType::ArrayType&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::onEndArray(const typename ValueType::ArrayType&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::onEndDict(const typename ValueType::DictionaryType&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::onKey(const typename ValueType::StringType&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::onNextValue()",
			"::stappler::data::serenity::PrettyEncoder<typename>::onValue(stappler::data::serenity::PrettyEncoder::ValueType const&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::onArrayValue(stappler::data::serenity::PrettyEncoder::ValueType const&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::onKeyValuePair(const typename ValueType::StringType&,stappler::data::serenity::PrettyEncoder::ValueType const&)",
			"::stappler::data::serenity::PrettyEncoder<typename>::depth",
			"::stappler::data::serenity::PrettyEncoder<typename>::popComplex",
			"::stappler::data::serenity::PrettyEncoder<typename>::offsetted",
			"::stappler::data::serenity::PrettyEncoder<typename>::stream",
			"::stappler::data::serenity::PrettyEncoder<typename>::bstack",
			"::stappler::data::serenity::PrettyEncoder<typename>::type",
			"::stappler::data::serenity::write<typename>(std::ostream&,ValueTemplate<Interface> const&,bool)",
			"::stappler::data::serenity::write<typename>(ValueTemplate<Interface> const&,bool)",
			"::stappler::data::serenity::save<typename>(ValueTemplate<Interface> const&,stappler::StringView,bool)",
			"::stappler::data::serenity::toString<typename>(ValueTemplate<Interface> const&,bool)"
		],
		"SPDataTraits.h":  [
			"STAPPLER_DATA_SPDATATRAITS_H_",
			"::stappler::data::StreamTraits<typename>",
			"::stappler::data::StreamTraits<typename>::success",
			"::stappler::data::StreamTraits<typename>::failure",
			"::stappler::data::StreamTraits<typename>::CallTest_onNextValue<typename>(typeof (& C::onNextValue))",
			"::stappler::data::StreamTraits<typename>::CallTest_onNextValue<typename>()",
			"::stappler::data::StreamTraits<typename>::onNextValue",
			"::stappler::data::StreamTraits<typename>::CallTest_onKey<typename>(typeof (& C::onKey))",
			"::stappler::data::StreamTraits<typename>::CallTest_onKey<typename>()",
			"::stappler::data::StreamTraits<typename>::onKey",
			"::stappler::data::StreamTraits<typename>::CallTest_onBeginArray<typename>(typeof (& C::onBeginArray))",
			"::stappler::data::StreamTraits<typename>::CallTest_onBeginArray<typename>()",
			"::stappler::data::StreamTraits<typename>::onBeginArray",
			"::stappler::data::StreamTraits<typename>::CallTest_onEndArray<typename>(typeof (& C::onEndArray))",
			"::stappler::data::StreamTraits<typename>::CallTest_onEndArray<typename>()",
			"::stappler::data::StreamTraits<typename>::onEndArray",
			"::stappler::data::StreamTraits<typename>::CallTest_onBeginDict<typename>(typeof (& C::onBeginDict))",
			"::stappler::data::StreamTraits<typename>::CallTest_onBeginDict<typename>()",
			"::stappler::data::StreamTraits<typename>::onBeginDict",
			"::stappler::data::StreamTraits<typename>::CallTest_onEndDict<typename>(typeof (& C::onEndDict))",
			"::stappler::data::StreamTraits<typename>::CallTest_onEndDict<typename>()",
			"::stappler::data::StreamTraits<typename>::onEndDict",
			"::stappler::data::StreamTraits<typename>::CallTest_onKeyValuePair<typename>(typeof (& C::onKeyValuePair))",
			"::stappler::data::StreamTraits<typename>::CallTest_onKeyValuePair<typename>()",
			"::stappler::data::StreamTraits<typename>::onKeyValuePair",
			"::stappler::data::StreamTraits<typename>::CallTest_onValue<typename>(typeof (& C::onValue))",
			"::stappler::data::StreamTraits<typename>::CallTest_onValue<typename>()",
			"::stappler::data::StreamTraits<typename>::onValue",
			"::stappler::data::StreamTraits<typename>::CallTest_onArrayValue<typename>(typeof (& C::onArrayValue))",
			"::stappler::data::StreamTraits<typename>::CallTest_onArrayValue<typename>()",
			"::stappler::data::StreamTraits<typename>::onArrayValue"
		],
		"SPDataValue.h":  [
			"STAPPLER_DATA_SPDATAVALUE_H_",
			"::stappler::memory::mem_sso_test<data::ValueTemplate<Interface>>::mem_sso_test<data::ValueTemplate<Interface>>",
			"::stappler::memory::mem_sso_test<data::ValueTemplate<Interface>>::value",
			"::stappler::data::ValueTemplate<typename>",
			"::stappler::data::ValueTemplate<typename>::Self",
			"::stappler::data::ValueTemplate<typename>::InterfaceType",
			"::stappler::data::ValueTemplate<typename>::StringType",
			"::stappler::data::ValueTemplate<typename>::BytesType",
			"::stappler::data::ValueTemplate<typename>::ArrayType",
			"::stappler::data::ValueTemplate<typename>::DictionaryType",
			"::stappler::data::ValueTemplate<typename>::Null",
			"::stappler::data::ValueTemplate<typename>::StringNull",
			"::stappler::data::ValueTemplate<typename>::BytesNull",
			"::stappler::data::ValueTemplate<typename>::ArrayNull",
			"::stappler::data::ValueTemplate<typename>::DictionaryNull",
			"::stappler::data::ValueTemplate<typename>::Type",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate()",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Type)",
			"::stappler::data::ValueTemplate<typename>::~ValueTemplate()",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Self const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Self&&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate<typename>(ValueTemplate<OtherInterface> const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(InitializerList<stappler::data::ValueTemplate::Self>)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(InitializerList<Pair<stappler::data::ValueTemplate::StringType, stappler::data::ValueTemplate::Self>>)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::nullptr_t)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(bool)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(int32_t)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(int64_t)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(uint32_t)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(uint64_t)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::Time)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::TimeInterval)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(float)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(double)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(char const*)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::StringView const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::StringType const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::StringType&&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::BytesType const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::BytesType&&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(BytesViewTemplate<Endian::Big> const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(BytesViewTemplate<Endian::Little> const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::ArrayType const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::ArrayType&&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::DictionaryType const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::DictionaryType&&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::Self const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::Self&&)",
			"::stappler::data::ValueTemplate<typename>::operator=<typename>(ValueTemplate<OtherInterface> const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::nullptr_t)",
			"::stappler::data::ValueTemplate<typename>::operator=(bool)",
			"::stappler::data::ValueTemplate<typename>::operator=(int32_t)",
			"::stappler::data::ValueTemplate<typename>::operator=(int64_t)",
			"::stappler::data::ValueTemplate<typename>::operator=(size_t)",
			"::stappler::data::ValueTemplate<typename>::operator=(float)",
			"::stappler::data::ValueTemplate<typename>::operator=(double)",
			"::stappler::data::ValueTemplate<typename>::operator=(char const*)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::StringView const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::StringType const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::StringType&&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::BytesView const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::BytesType const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::BytesType&&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::ArrayType const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::ArrayType&&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::DictionaryType const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::DictionaryType&&)",
			"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::Self const&) const",
			"::stappler::data::ValueTemplate<typename>::operator==(bool) const",
			"::stappler::data::ValueTemplate<typename>::operator==(int32_t) const",
			"::stappler::data::ValueTemplate<typename>::operator==(int64_t) const",
			"::stappler::data::ValueTemplate<typename>::operator==(size_t) const",
			"::stappler::data::ValueTemplate<typename>::operator==(float) const",
			"::stappler::data::ValueTemplate<typename>::operator==(double) const",
			"::stappler::data::ValueTemplate<typename>::operator==(char const*) const",
			"::stappler::data::ValueTemplate<typename>::operator==(stappler::StringView const&) const",
			"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::BytesType const&) const",
			"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::ArrayType const&) const",
			"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::DictionaryType const&) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(stappler::data::ValueTemplate::Self const&) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(bool) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(int32_t) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(int64_t) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(size_t) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(float) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(double) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(char const*) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(stappler::StringView const&) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(stappler::data::ValueTemplate::BytesType const&) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(stappler::data::ValueTemplate::ArrayType const&) const",
			"::stappler::data::ValueTemplate<typename>::operator!=(stappler::data::ValueTemplate::DictionaryType const&) const",
			"::stappler::data::ValueTemplate<typename>::setValue<class,class>(Val&&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setValue<class>(Val&&)",
			"::stappler::data::ValueTemplate<typename>::addValue<class>(Val&&)",
			"::stappler::data::ValueTemplate<typename>::getValue<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getValue<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::emplace()",
			"::stappler::data::ValueTemplate<typename>::emplace<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::hasValue<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::setNull<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::setBool<class>(bool,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setInteger<class>(int64_t,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setDouble<class>(double,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setString<class>(stappler::data::ValueTemplate::StringType const&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setString<class>(stappler::data::ValueTemplate::StringType&&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setString<class>(char const*,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setString<class>(stappler::StringView const&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setBytes<class>(stappler::data::ValueTemplate::BytesType const&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setBytes<class>(stappler::data::ValueTemplate::BytesType&&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setBytes<class>(BytesViewTemplate<Endian::Big> const&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setBytes<class>(BytesViewTemplate<Endian::Little> const&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setArray<class>(stappler::data::ValueTemplate::ArrayType const&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setArray<class>(stappler::data::ValueTemplate::ArrayType&&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setDict<class>(stappler::data::ValueTemplate::DictionaryType const&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setDict<class>(stappler::data::ValueTemplate::DictionaryType&&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setNull()",
			"::stappler::data::ValueTemplate<typename>::setBool(bool)",
			"::stappler::data::ValueTemplate<typename>::setInteger(int32_t)",
			"::stappler::data::ValueTemplate<typename>::setInteger(int64_t)",
			"::stappler::data::ValueTemplate<typename>::setInteger(size_t)",
			"::stappler::data::ValueTemplate<typename>::setDouble(float)",
			"::stappler::data::ValueTemplate<typename>::setDouble(double)",
			"::stappler::data::ValueTemplate<typename>::setString(char const*)",
			"::stappler::data::ValueTemplate<typename>::setString(stappler::StringView const&)",
			"::stappler::data::ValueTemplate<typename>::setString(stappler::data::ValueTemplate::StringType const&)",
			"::stappler::data::ValueTemplate<typename>::setString(stappler::data::ValueTemplate::StringType&&)",
			"::stappler::data::ValueTemplate<typename>::setBytes(stappler::data::ValueTemplate::BytesType const&)",
			"::stappler::data::ValueTemplate<typename>::setBytes(stappler::data::ValueTemplate::BytesType&&)",
			"::stappler::data::ValueTemplate<typename>::setBytes(stappler::BytesView const&)",
			"::stappler::data::ValueTemplate<typename>::setArray(stappler::data::ValueTemplate::ArrayType const&)",
			"::stappler::data::ValueTemplate<typename>::setArray(stappler::data::ValueTemplate::ArrayType&&)",
			"::stappler::data::ValueTemplate<typename>::setDict(stappler::data::ValueTemplate::DictionaryType const&)",
			"::stappler::data::ValueTemplate<typename>::setDict(stappler::data::ValueTemplate::DictionaryType&&)",
			"::stappler::data::ValueTemplate<typename>::addBool(bool)",
			"::stappler::data::ValueTemplate<typename>::addInteger(int64_t)",
			"::stappler::data::ValueTemplate<typename>::addDouble(double)",
			"::stappler::data::ValueTemplate<typename>::addString(char const*)",
			"::stappler::data::ValueTemplate<typename>::addString(stappler::StringView const&)",
			"::stappler::data::ValueTemplate<typename>::addString(stappler::data::ValueTemplate::StringType const&)",
			"::stappler::data::ValueTemplate<typename>::addString(stappler::data::ValueTemplate::StringType&&)",
			"::stappler::data::ValueTemplate<typename>::addBytes(stappler::data::ValueTemplate::BytesType const&)",
			"::stappler::data::ValueTemplate<typename>::addBytes(stappler::data::ValueTemplate::BytesType&&)",
			"::stappler::data::ValueTemplate<typename>::addArray(stappler::data::ValueTemplate::ArrayType const&)",
			"::stappler::data::ValueTemplate<typename>::addArray(stappler::data::ValueTemplate::ArrayType&&)",
			"::stappler::data::ValueTemplate<typename>::addDict(stappler::data::ValueTemplate::DictionaryType const&)",
			"::stappler::data::ValueTemplate<typename>::addDict(stappler::data::ValueTemplate::DictionaryType&&)",
			"::stappler::data::ValueTemplate<typename>::getBool() const",
			"::stappler::data::ValueTemplate<typename>::getInteger(int64_t) const",
			"::stappler::data::ValueTemplate<typename>::getDouble(double) const",
			"::stappler::data::ValueTemplate<typename>::getString()",
			"::stappler::data::ValueTemplate<typename>::getBytes()",
			"::stappler::data::ValueTemplate<typename>::getArray()",
			"::stappler::data::ValueTemplate<typename>::getDict()",
			"::stappler::data::ValueTemplate<typename>::getString() const",
			"::stappler::data::ValueTemplate<typename>::getBytes() const",
			"::stappler::data::ValueTemplate<typename>::getArray() const",
			"::stappler::data::ValueTemplate<typename>::getDict() const",
			"::stappler::data::ValueTemplate<typename>::getBool<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getInteger<class>(Key&&,int64_t) const",
			"::stappler::data::ValueTemplate<typename>::getDouble<class>(Key&&,double) const",
			"::stappler::data::ValueTemplate<typename>::getString<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getString<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getBytes<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getBytes<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getArray<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getArray<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getDict<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getDict<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::erase<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::newDict<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::newArray<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::addDict()",
			"::stappler::data::ValueTemplate<typename>::addArray()",
			"::stappler::data::ValueTemplate<typename>::slice(int,int)",
			"::stappler::data::ValueTemplate<typename>::operator bool() const",
			"::stappler::data::ValueTemplate<typename>::operator int32_t() const",
			"::stappler::data::ValueTemplate<typename>::operator int64_t() const",
			"::stappler::data::ValueTemplate<typename>::operator size_t() const",
			"::stappler::data::ValueTemplate<typename>::asInteger() const",
			"::stappler::data::ValueTemplate<typename>::asDouble() const",
			"::stappler::data::ValueTemplate<typename>::asBool() const",
			"::stappler::data::ValueTemplate<typename>::asString() const",
			"::stappler::data::ValueTemplate<typename>::asBytes() const",
			"::stappler::data::ValueTemplate<typename>::asArray()",
			"::stappler::data::ValueTemplate<typename>::asArray() const",
			"::stappler::data::ValueTemplate<typename>::asDict()",
			"::stappler::data::ValueTemplate<typename>::asDict() const",
			"::stappler::data::ValueTemplate<typename>::size() const",
			"::stappler::data::ValueTemplate<typename>::empty() const",
			"::stappler::data::ValueTemplate<typename>::clear()",
			"::stappler::data::ValueTemplate<typename>::encode<class,class>(Stream&) const",
			"::stappler::data::ValueTemplate<typename>::isNull() const",
			"::stappler::data::ValueTemplate<typename>::isBasicType() const",
			"::stappler::data::ValueTemplate<typename>::isArray() const",
			"::stappler::data::ValueTemplate<typename>::isDictionary() const",
			"::stappler::data::ValueTemplate<typename>::isBool() const",
			"::stappler::data::ValueTemplate<typename>::isInteger() const",
			"::stappler::data::ValueTemplate<typename>::isDouble() const",
			"::stappler::data::ValueTemplate<typename>::isString() const",
			"::stappler::data::ValueTemplate<typename>::isBytes() const",
			"::stappler::data::ValueTemplate<typename>::getType() const",
			"::stappler::data::ValueTemplate<typename>::isNull<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isBasicType<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isArray<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isDictionary<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isBool<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isInteger<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isDouble<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isString<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isBytes<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getType<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::convert<typename>() const",
			"::stappler::data::ValueTemplate<typename>::reset(stappler::data::ValueTemplate::Type)",
			"::stappler::data::ValueTemplate<typename>::convertToDict()",
			"::stappler::data::ValueTemplate<typename>::convertToArray(int)",
			"::stappler::data::ValueTemplate<typename>::compare(stappler::data::ValueTemplate::ArrayType const&,stappler::data::ValueTemplate::ArrayType const&) const",
			"::stappler::data::ValueTemplate<typename>::compare(stappler::data::ValueTemplate::DictionaryType const&,stappler::data::ValueTemplate::DictionaryType const&) const",
			"::stappler::data::ValueTemplate<typename>::_type",
			"::stappler::data::ValueTemplate<typename>::",
			"::stappler::data::ValueTemplate<typename>::intVal",
			"::stappler::data::ValueTemplate<typename>::doubleVal",
			"::stappler::data::ValueTemplate<typename>::boolVal",
			"::stappler::data::ValueTemplate<typename>::strVal",
			"::stappler::data::ValueTemplate<typename>::bytesVal",
			"::stappler::data::ValueTemplate<typename>::arrayVal",
			"::stappler::data::ValueTemplate<typename>::dictVal",
			"::stappler::data::ValueTemplate<Interface>::Null",
			"::stappler::data::ValueTemplate<Interface>::StringNull",
			"::stappler::data::ValueTemplate<Interface>::BytesNull",
			"::stappler::data::ValueTemplate<Interface>::ArrayNull",
			"::stappler::data::ValueTemplate<Interface>::DictionaryNull",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate()",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Type)",
			"::stappler::data::ValueTemplate<typename>::~ValueTemplate()",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Self const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Self&&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate<typename>(ValueTemplate<OtherInterface> const&)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(InitializerList<stappler::data::ValueTemplate::Self>)",
			"::stappler::data::ValueTemplate<typename>::ValueTemplate(InitializerList<Pair<stappler::data::ValueTemplate::StringType, stappler::data::ValueTemplate::Self>>)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::Self const&)",
			"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::Self&&)",
			"::stappler::data::ValueTemplate<typename>::operator=<typename>(ValueTemplate<OtherInterface> const&)",
			"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::Self const&) const",
			"::stappler::data::ValueTemplate<typename>::emplace()",
			"::stappler::data::ValueTemplate<typename>::slice(int,int)",
			"::stappler::data::ValueTemplate<typename>::asInteger() const",
			"::stappler::data::ValueTemplate<typename>::asDouble() const",
			"::stappler::data::ValueTemplate<typename>::asBool() const",
			"::stappler::data::ValueTemplate<typename>::asString() const",
			"::stappler::data::ValueTemplate<typename>::asBytes() const",
			"::stappler::data::ValueTemplate<typename>::size() const",
			"::stappler::data::ValueTemplate<typename>::empty() const",
			"::stappler::data::ValueTemplate<typename>::convertToDict()",
			"::stappler::data::ValueTemplate<typename>::convertToArray(int)",
			"::stappler::data::ValueTemplate<typename>::compare(stappler::data::ValueTemplate::ArrayType const&,stappler::data::ValueTemplate::ArrayType const&) const",
			"::stappler::data::ValueTemplate<typename>::compare(stappler::data::ValueTemplate::DictionaryType const&,stappler::data::ValueTemplate::DictionaryType const&) const",
			"::stappler::data::ValueTemplate<typename>::clear()",
			"::stappler::data::ValueTemplate<typename>::reset(stappler::data::ValueTemplate::Type)",
			"::stappler::data::ValueTemplate<typename>::setValue<class,class>(Val&&,Key&&)",
			"::stappler::data::ValueTemplate<typename>::setValue<class>(Val&&)",
			"::stappler::data::ValueTemplate<typename>::addValue<class>(Val&&)",
			"::stappler::data::ValueTemplate<typename>::getValue<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getValue<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::emplace<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::hasValue<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getBool<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getInteger<class>(Key&&,int64_t) const",
			"::stappler::data::ValueTemplate<typename>::getDouble<class>(Key&&,double) const",
			"::stappler::data::ValueTemplate<typename>::getString<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getString<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getBytes<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getBytes<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getArray<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getArray<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getDict<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::getDict<class>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::erase<class>(Key&&)",
			"::stappler::data::ValueTemplate<typename>::encode<class,class>(Stream&) const",
			"::stappler::data::ValueTemplate<typename>::isNull<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isBasicType<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isArray<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isDictionary<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isBool<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isInteger<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isDouble<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isString<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::isBytes<typename>(Key&&) const",
			"::stappler::data::ValueTemplate<typename>::getType<typename>(Key&&) const"
		],
		"SPDataWrapper.h":  [
			"STAPPLER_DATA_SPDATAWRAPPER_H_",
			"::stappler::data::WrapperTemplate<typename>",
			"::stappler::data::WrapperTemplate<typename>::Value",
			"::stappler::data::WrapperTemplate<typename>::Array",
			"::stappler::data::WrapperTemplate<typename>::Dictionary",
			"::stappler::data::WrapperTemplate<typename>::String",
			"::stappler::data::WrapperTemplate<typename>::Bytes",
			"::stappler::data::WrapperTemplate<typename>::Type",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::value_type",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::reference",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::pointer",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::Iterator()",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::Iterator(Scheme*)",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::Iterator(Scheme*,typename Dictionary::iterator)",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::Iterator(const Iterator<Scheme>&)",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator=(const Iterator<Scheme>&)",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator*() const",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator->() const",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator++()",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator++(int)",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator==(const Iterator<Scheme>&) const",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator!=(const Iterator<Scheme>&) const",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::increment()",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::skipProtected()",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::scheme",
			"::stappler::data::WrapperTemplate<typename>::Iterator<class>::iter",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::value_type",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::reference",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::pointer",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::ConstIterator()",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::ConstIterator(Scheme const*)",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::ConstIterator(Scheme const*,typename Dictionary::const_iterator)",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::ConstIterator(const ConstIterator<Scheme>&)",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator=(const ConstIterator<Scheme>&)",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator*() const",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator->() const",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator++()",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator++(int)",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator==(const ConstIterator<Scheme>&) const",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator!=(const ConstIterator<Scheme>&) const",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::increment()",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::skipProtected()",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::scheme",
			"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::iter",
			"::stappler::data::WrapperTemplate<typename>::begin<typename>(Scheme*)",
			"::stappler::data::WrapperTemplate<typename>::end<typename>(Scheme*)",
			"::stappler::data::WrapperTemplate<typename>::begin<typename>(Scheme const*)",
			"::stappler::data::WrapperTemplate<typename>::end<typename>(Scheme const*)",
			"::stappler::data::WrapperTemplate<typename>::WrapperTemplate(stappler::data::WrapperTemplate::Value&&)",
			"::stappler::data::WrapperTemplate<typename>::WrapperTemplate()",
			"::stappler::data::WrapperTemplate<typename>::getData()",
			"::stappler::data::WrapperTemplate<typename>::getData() const",
			"::stappler::data::WrapperTemplate<typename>::isModified() const",
			"::stappler::data::WrapperTemplate<typename>::setModified(bool)",
			"::stappler::data::WrapperTemplate<typename>::setProtected(bool)",
			"::stappler::data::WrapperTemplate<typename>::isProtected() const",
			"::stappler::data::WrapperTemplate<typename>::emplace<class>(Key&&)",
			"::stappler::data::WrapperTemplate<typename>::hasValue<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::setValue<class,class>(Val&&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::getValue<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::setNull<class>(Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setBool<class>(bool,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setInteger<class>(int64_t,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setDouble<class>(double,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setString<class>(stappler::data::WrapperTemplate::String const&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setString<class>(stappler::data::WrapperTemplate::String&&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setString<class>(stappler::StringView,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setBytes<class>(stappler::data::WrapperTemplate::Bytes const&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setBytes<class>(stappler::data::WrapperTemplate::Bytes&&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setBytes<class>(stappler::BytesView,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setArray<class>(stappler::data::WrapperTemplate::Array const&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setArray<class>(stappler::data::WrapperTemplate::Array&&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setDict<class>(stappler::data::WrapperTemplate::Dictionary const&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::setDict<class>(stappler::data::WrapperTemplate::Dictionary&&,Key&&)",
			"::stappler::data::WrapperTemplate<typename>::getBool<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::getInteger<class>(Key&&,int64_t) const",
			"::stappler::data::WrapperTemplate<typename>::getDouble<class>(Key&&,double) const",
			"::stappler::data::WrapperTemplate<typename>::getString<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::getBytes<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::getArray<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::getDict<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::erase<class>(Key&&)",
			"::stappler::data::WrapperTemplate<typename>::newDict<class>(Key&&)",
			"::stappler::data::WrapperTemplate<typename>::newArray<class>(Key&&)",
			"::stappler::data::WrapperTemplate<typename>::isNull<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::isBasicType<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::isArray<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::isDictionary<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::isBool<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::isInteger<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::isDouble<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::isString<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::isBytes<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::getType<class>(Key&&) const",
			"::stappler::data::WrapperTemplate<typename>::_data",
			"::stappler::data::WrapperTemplate<typename>::_protected",
			"::stappler::data::WrapperTemplate<typename>::_modified"
		],
		"SPFilepath.h":  [
			"STAPPLER_FILESYSTEM_SPFILEPATH_H_",
			"::stappler::FilePath",
			"::stappler::filepath::isAbsolute(stappler::StringView)",
			"::stappler::filepath::isCanonical(stappler::StringView)",
			"::stappler::filepath::isBundled(stappler::StringView)",
			"::stappler::filepath::isAboveRoot(stappler::StringView)",
			"::stappler::filepath::validatePath(stappler::StringView)",
			"::stappler::filepath::reconstructPath<typename>(stappler::StringView)",
			"::stappler::filepath::absolute<typename>(stappler::StringView,bool)",
			"::stappler::filepath::canonical<typename>(stappler::StringView)",
			"::stappler::filepath::root(stappler::StringView)",
			"::stappler::filepath::lastComponent(stappler::StringView)",
			"::stappler::filepath::lastComponent(stappler::StringView,size_t)",
			"::stappler::filepath::fullExtension(stappler::StringView)",
			"::stappler::filepath::lastExtension(stappler::StringView)",
			"::stappler::filepath::name(stappler::StringView)",
			"::stappler::filepath::extensionCount(stappler::StringView)",
			"::stappler::filepath::split<typename>(stappler::StringView)",
			"::stappler::filepath::split(stappler::StringView,Callback<void (stappler::StringView)> const&)",
			"::stappler::filepath::_merge<typename>(stappler::StringView,stappler::StringView)",
			"::stappler::filepath::merge(std::vector<std::string> const&)",
			"::stappler::filepath::merge(memory::vector<memory::string> const&)",
			"::stappler::filepath::merge(std::vector<StringView> const&)",
			"::stappler::filepath::merge(memory::vector<StringView> const&)",
			"::stappler::filepath::merge<typename>(stappler::memory::StandartInterface::StringType&&)",
			"::stappler::filepath::merge<typename>(stappler::memory::PoolInterface::StringType&&)",
			"::stappler::filepath::merge<typename,class>(stappler::StringView,stappler::StringView,Args &&...)",
			"::stappler::filepath::extensionForContentType(stappler::StringView)",
			"::stappler::filepath::replace<typename>(stappler::StringView,stappler::StringView,stappler::StringView)",
			"::stappler::filepath::reconstructPath<typename>(stappler::StringView)",
			"::stappler::filepath::_merge<typename>(stappler::StringView,stappler::StringView)",
			"::stappler::filepath::split<typename>(stappler::StringView)",
			"::stappler::filepath::split(stappler::StringView,Callback<void (stappler::StringView)> const&)",
			"::stappler::filepath::replace<typename>(stappler::StringView,stappler::StringView,stappler::StringView)"
		],
		"SPFilesystem.h":  [
			"STAPPLER_FILESYSTEM_SPFILESYSTEM_H_",
			"::stappler::filesystem::Access",
			"::stappler::filesystem::Stat",
			"::stappler::filesystem::Stat::size",
			"::stappler::filesystem::Stat::atime",
			"::stappler::filesystem::Stat::ctime",
			"::stappler::filesystem::Stat::mtime",
			"::stappler::filesystem::Stat::isDir",
			"::stappler::filesystem::File",
			"::stappler::filesystem::File::Flags",
			"::stappler::filesystem::File::traits_type",
			"::stappler::filesystem::File::streamsize",
			"::stappler::filesystem::File::int_type",
			"::stappler::filesystem::File::open_tmp(char const*,bool)",
			"::stappler::filesystem::File::File()",
			"::stappler::filesystem::File::File(FILE*,stappler::filesystem::File::Flags)",
			"::stappler::filesystem::File::File(void*)",
			"::stappler::filesystem::File::File(void*,size_t)",
			"::stappler::filesystem::File::~File()",
			"::stappler::filesystem::File::File(stappler::filesystem::File&&)",
			"::stappler::filesystem::File::operator=(stappler::filesystem::File&&)",
			"::stappler::filesystem::File::File(stappler::filesystem::File const&)",
			"::stappler::filesystem::File::operator=(stappler::filesystem::File const&)",
			"::stappler::filesystem::File::read(uint8_t*,size_t)",
			"::stappler::filesystem::File::seek(int64_t,io::Seek)",
			"::stappler::filesystem::File::tell() const",
			"::stappler::filesystem::File::size() const",
			"::stappler::filesystem::File::xsgetc()",
			"::stappler::filesystem::File::xsputc(stappler::filesystem::File::int_type)",
			"::stappler::filesystem::File::xsputn(char const*,stappler::filesystem::File::streamsize)",
			"::stappler::filesystem::File::xsgetn(char*,stappler::filesystem::File::streamsize)",
			"::stappler::filesystem::File::eof() const",
			"::stappler::filesystem::File::close()",
			"::stappler::filesystem::File::close_remove()",
			"::stappler::filesystem::File::close_rename(stappler::StringView)",
			"::stappler::filesystem::File::is_open() const",
			"::stappler::filesystem::File::operator bool() const",
			"::stappler::filesystem::File::path() const",
			"::stappler::filesystem::File::set_tmp_path(char const*)",
			"::stappler::filesystem::File::_isBundled",
			"::stappler::filesystem::File::_size",
			"::stappler::filesystem::File::_flags",
			"::stappler::filesystem::File::_buf",
			"::stappler::filesystem::File::",
			"::stappler::filesystem::File::_nativeFile",
			"::stappler::filesystem::File::_platformFile",
			"::stappler::filesystem::exists(stappler::StringView)",
			"::stappler::filesystem::stat(stappler::StringView,stappler::filesystem::Stat&)",
			"::stappler::filesystem::mkdir(stappler::StringView)",
			"::stappler::filesystem::mkdir_recursive(stappler::StringView,bool)",
			"::stappler::filesystem::touch(stappler::StringView)",
			"::stappler::filesystem::move(stappler::StringView,stappler::StringView)",
			"::stappler::filesystem::copy(stappler::StringView,stappler::StringView,bool)",
			"::stappler::filesystem::remove(stappler::StringView,bool,bool)",
			"::stappler::filesystem::ftw(stappler::StringView,Callback<void (stappler::StringView, bool)> const&,int,bool)",
			"::stappler::filesystem::ftw_b(stappler::StringView,Callback<bool (stappler::StringView, bool)> const&,int,bool)",
			"::stappler::filesystem::writablePath<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::writablePathReadOnly<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::documentsPath<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::documentsPathReadOnly<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::currentDir<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::cachesPath<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::cachesPathReadOnly<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::write(stappler::StringView,uint8_t const*,size_t)",
			"::stappler::filesystem::write<typename>(stappler::StringView,BytesView const&)",
			"::stappler::filesystem::openForReading(stappler::StringView)",
			"::stappler::filesystem::readTextFile<typename>(stappler::StringView)",
			"::stappler::filesystem::readIntoBuffer(uint8_t*,stappler::StringView,size_t,size_t)",
			"::stappler::filesystem::readWithConsumer(io::Consumer const&,uint8_t*,size_t,stappler::StringView,size_t,size_t)",
			"::stappler::filesystem::readWithConsumer<size_t>(io::Consumer const&,stappler::StringView,size_t,size_t)",
			"::stappler::filesystem::readIntoMemory<typename>(stappler::StringView,size_t,size_t)",
			"::stappler::filesystem::platform::_getApplicationPath<typename>()",
			"::stappler::filesystem::platform::_getWritablePath<typename>(bool)",
			"::stappler::filesystem::platform::_getDocumentsPath<typename>(bool)",
			"::stappler::filesystem::platform::_getCachesPath<typename>(bool)",
			"::stappler::filesystem::platform::_exists(stappler::StringView,bool)",
			"::stappler::filesystem::platform::_stat(stappler::StringView,stappler::filesystem::Stat&,bool)",
			"::stappler::filesystem::platform::_openForReading(stappler::StringView)",
			"::stappler::filesystem::platform::_read(void*,uint8_t*,size_t)",
			"::stappler::filesystem::platform::_seek(void*,int64_t,io::Seek)",
			"::stappler::filesystem::platform::_tell(void*)",
			"::stappler::filesystem::platform::_eof(void*)",
			"::stappler::filesystem::platform::_close(void*)",
			"::stappler::filesystem::platform::_ftw(stappler::StringView,Callback<void (stappler::StringView, bool)> const&,int,bool,bool)",
			"::stappler::filesystem::platform::_ftw_b(stappler::StringView,Callback<bool (stappler::StringView, bool)> const&,int,bool,bool)",
			"::stappler::filesystem::native::nativeToPosix<typename>(stappler::StringView)",
			"::stappler::filesystem::native::posixToNative<typename>(stappler::StringView)",
			"::stappler::filesystem::native::getcwd_fn<typename>()",
			"::stappler::filesystem::native::remove_fn(stappler::StringView)",
			"::stappler::filesystem::native::mkdir_fn(stappler::StringView)",
			"::stappler::filesystem::native::access_fn(stappler::StringView,stappler::filesystem::Access)",
			"::stappler::filesystem::native::stat_fn(stappler::StringView,stappler::filesystem::Stat&)",
			"::stappler::filesystem::native::touch_fn(stappler::StringView)",
			"::stappler::filesystem::native::ftw_fn(stappler::StringView,Callback<void (stappler::StringView, bool)> const&,int,bool)",
			"::stappler::filesystem::native::ftw_b_fn(stappler::StringView,Callback<bool (stappler::StringView, bool)> const&,int,bool)",
			"::stappler::filesystem::native::rename_fn(stappler::StringView,stappler::StringView)",
			"::stappler::filesystem::native::fopen_fn(stappler::StringView,stappler::StringView)",
			"::stappler::filesystem::writablePath<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::writablePathReadOnly<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::cachesPath<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::cachesPathReadOnly<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::documentsPath<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::documentsPathReadOnly<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::currentDir<typename>(stappler::StringView,bool)",
			"::stappler::filesystem::readTextFile<typename>(stappler::StringView)",
			"::stappler::io::ProducerTraits<filesystem::File>::ProducerTraits<filesystem::File>",
			"::stappler::io::ProducerTraits<filesystem::File>::type",
			"::stappler::io::ProducerTraits<filesystem::File>::ReadFn(void*,uint8_t*,size_t)",
			"::stappler::io::ProducerTraits<filesystem::File>::SeekFn(void*,int64_t,stappler::io::Seek)",
			"::stappler::io::ProducerTraits<filesystem::File>::TellFn(void*)"
		],
		"SPFontStyle.h":  [
			"CORE_GEOM_SPFONTSTYLE_H_",
			"::stappler::geom::EnumSize",
			"::stappler::geom::Metric",
			"::stappler::geom::Metric::Units",
			"::stappler::geom::Metric::isAuto() const",
			"::stappler::geom::Metric::isFixed() const",
			"::stappler::geom::Metric::value",
			"::stappler::geom::Metric::metric",
			"::stappler::geom::Metric::Metric(float,stappler::geom::Metric::Units)",
			"::stappler::geom::Metric::Metric()",
			"::stappler::geom::Metric::readStyleValue(stappler::StringView,bool,bool)",
			"::stappler::geom::FontVariableAxis",
			"::stappler::geom::operator|(stappler::geom::FontVariableAxis const&,stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::operator&(stappler::geom::FontVariableAxis const&,stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::operator^(stappler::geom::FontVariableAxis const&,stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::operator|=(stappler::geom::FontVariableAxis&,stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::operator&=(stappler::geom::FontVariableAxis&,stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::operator^=(stappler::geom::FontVariableAxis&,stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::operator==(stappler::geom::FontVariableAxis const&,std::underlying_type<FontVariableAxis>::type const&)",
			"::stappler::geom::operator==(std::underlying_type<FontVariableAxis>::type const&,stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::operator!=(stappler::geom::FontVariableAxis const&,std::underlying_type<FontVariableAxis>::type const&)",
			"::stappler::geom::operator!=(std::underlying_type<FontVariableAxis>::type const&,stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::operator~(stappler::geom::FontVariableAxis const&)",
			"::stappler::geom::Autofit",
			"::stappler::geom::TextTransform",
			"::stappler::geom::TextDecoration",
			"::stappler::geom::TextAlign",
			"::stappler::geom::WhiteSpace",
			"::stappler::geom::Hyphens",
			"::stappler::geom::VerticalAlign",
			"::stappler::geom::FontStyle",
			"::stappler::geom::FontStyle::Normal",
			"::stappler::geom::FontStyle::Italic",
			"::stappler::geom::FontStyle::Oblique",
			"::stappler::geom::FontStyle::FromDegrees(float)",
			"::stappler::geom::FontWeight",
			"::stappler::geom::FontWeight::Thin",
			"::stappler::geom::FontWeight::ExtraLight",
			"::stappler::geom::FontWeight::Light",
			"::stappler::geom::FontWeight::Normal",
			"::stappler::geom::FontWeight::Regular",
			"::stappler::geom::FontWeight::Medium",
			"::stappler::geom::FontWeight::SemiBold",
			"::stappler::geom::FontWeight::Bold",
			"::stappler::geom::FontWeight::ExtraBold",
			"::stappler::geom::FontWeight::Heavy",
			"::stappler::geom::FontWeight::Black",
			"::stappler::geom::FontStretch",
			"::stappler::geom::FontStretch::UltraCondensed",
			"::stappler::geom::FontStretch::ExtraCondensed",
			"::stappler::geom::FontStretch::Condensed",
			"::stappler::geom::FontStretch::SemiCondensed",
			"::stappler::geom::FontStretch::Normal",
			"::stappler::geom::FontStretch::SemiExpanded",
			"::stappler::geom::FontStretch::Expanded",
			"::stappler::geom::FontStretch::ExtraExpanded",
			"::stappler::geom::FontStretch::UltraExpanded",
			"::stappler::geom::FontGrade",
			"::stappler::geom::FontGrade::Thin",
			"::stappler::geom::FontGrade::Reduced",
			"::stappler::geom::FontGrade::Normal",
			"::stappler::geom::FontGrade::Heavy",
			"::stappler::geom::FontVariant",
			"::stappler::geom::ListStyleType",
			"::stappler::geom::FontSize",
			"::stappler::geom::FontSize::XXSmall",
			"::stappler::geom::FontSize::XSmall",
			"::stappler::geom::FontSize::Small",
			"::stappler::geom::FontSize::Medium",
			"::stappler::geom::FontSize::Large",
			"::stappler::geom::FontSize::XLarge",
			"::stappler::geom::FontSize::XXLarge",
			"::stappler::geom::FontSize::progress(stappler::geom::FontSize,stappler::geom::FontSize,float)",
			"::stappler::geom::FontSize::make(float)",
			"::stappler::geom::FontSize::FontSize()",
			"::stappler::geom::FontSize::FontSize(stappler::geom::FontSize const&)",
			"::stappler::geom::FontSize::FontSize(uint16_t)",
			"::stappler::geom::FontSize::scale(float) const",
			"::stappler::geom::FontSize::operator*(float) const",
			"::stappler::geom::FontSize::operator/(float) const",
			"::stappler::geom::FontSize::get() const",
			"::stappler::geom::FontSize::val() const",
			"::stappler::geom::FontSize::operator-=(stappler::geom::FontSize)",
			"::stappler::geom::FontSize::operator==(stappler::geom::FontSize const&) const",
			"::stappler::geom::FontSize::operator!=(stappler::geom::FontSize const&) const",
			"::stappler::geom::FontSize::value",
			"::stappler::geom::TextParameters",
			"::stappler::geom::TextParameters::textTransform",
			"::stappler::geom::TextParameters::textDecoration",
			"::stappler::geom::TextParameters::whiteSpace",
			"::stappler::geom::TextParameters::hyphens",
			"::stappler::geom::TextParameters::verticalAlign",
			"::stappler::geom::TextParameters::color",
			"::stappler::geom::TextParameters::opacity",
			"::stappler::geom::TextParameters::operator==(stappler::geom::TextParameters const&) const",
			"::stappler::geom::TextParameters::operator!=(stappler::geom::TextParameters const&) const",
			"::stappler::geom::FontLayoutParameters",
			"::stappler::geom::FontLayoutParameters::fontStyle",
			"::stappler::geom::FontLayoutParameters::fontWeight",
			"::stappler::geom::FontLayoutParameters::fontStretch",
			"::stappler::geom::FontLayoutParameters::fontGrade",
			"::stappler::geom::FontLayoutParameters::operator==(stappler::geom::FontLayoutParameters const&) const",
			"::stappler::geom::FontLayoutParameters::operator!=(stappler::geom::FontLayoutParameters const&) const",
			"::stappler::geom::FontSpecializationVector",
			"::stappler::geom::FontSpecializationVector::fontSize",
			"::stappler::geom::FontSpecializationVector::density",
			"::stappler::geom::FontSpecializationVector::getSpecializationArgs<typename>() const",
			"::stappler::geom::FontSpecializationVector::operator==(stappler::geom::FontSpecializationVector const&) const",
			"::stappler::geom::FontSpecializationVector::operator!=(stappler::geom::FontSpecializationVector const&) const",
			"::stappler::geom::FontParameters",
			"::stappler::geom::FontParameters::create(stappler::StringView,memory::pool_t*)",
			"::stappler::geom::FontParameters::getFontConfigName<typename>(stappler::StringView,stappler::geom::FontSize,stappler::geom::FontStyle,stappler::geom::FontWeight,stappler::geom::FontStretch,stappler::geom::FontGrade,stappler::geom::FontVariant,bool)",
			"::stappler::geom::FontParameters::fontVariant",
			"::stappler::geom::FontParameters::listStyleType",
			"::stappler::geom::FontParameters::fontFamily",
			"::stappler::geom::FontParameters::persistent",
			"::stappler::geom::FontParameters::getConfigName<typename>(bool) const",
			"::stappler::geom::FontParameters::getSmallCaps() const",
			"::stappler::geom::FontParameters::operator==(stappler::geom::FontParameters const&) const",
			"::stappler::geom::FontParameters::operator!=(stappler::geom::FontParameters const&) const",
			"::stappler::geom::FontStretch::UltraCondensed",
			"::stappler::geom::FontStretch::ExtraCondensed",
			"::stappler::geom::FontStretch::Condensed",
			"::stappler::geom::FontStretch::SemiCondensed",
			"::stappler::geom::FontStretch::Normal",
			"::stappler::geom::FontStretch::SemiExpanded",
			"::stappler::geom::FontStretch::Expanded",
			"::stappler::geom::FontStretch::ExtraExpanded",
			"::stappler::geom::FontStretch::UltraExpanded",
			"::stappler::geom::FontWeight::Thin",
			"::stappler::geom::FontWeight::ExtraLight",
			"::stappler::geom::FontWeight::Light",
			"::stappler::geom::FontWeight::Normal",
			"::stappler::geom::FontWeight::Regular",
			"::stappler::geom::FontWeight::Medium",
			"::stappler::geom::FontWeight::SemiBold",
			"::stappler::geom::FontWeight::Bold",
			"::stappler::geom::FontWeight::ExtraBold",
			"::stappler::geom::FontWeight::Heavy",
			"::stappler::geom::FontWeight::Black",
			"::stappler::geom::FontSize::XXSmall",
			"::stappler::geom::FontSize::XSmall",
			"::stappler::geom::FontSize::Small",
			"::stappler::geom::FontSize::Medium",
			"::stappler::geom::FontSize::Large",
			"::stappler::geom::FontSize::XLarge",
			"::stappler::geom::FontSize::XXLarge",
			"::stappler::geom::FontStyle::Normal",
			"::stappler::geom::FontStyle::Italic",
			"::stappler::geom::FontStyle::Oblique",
			"::stappler::geom::FontGrade::Thin",
			"::stappler::geom::FontGrade::Reduced",
			"::stappler::geom::FontGrade::Normal",
			"::stappler::geom::FontGrade::Heavy",
			"::stappler::geom::FontLayoutId",
			"::stappler::geom::SpriteAnchor",
			"::stappler::geom::FontMetrics",
			"::stappler::geom::FontMetrics::size",
			"::stappler::geom::FontMetrics::height",
			"::stappler::geom::FontMetrics::ascender",
			"::stappler::geom::FontMetrics::descender",
			"::stappler::geom::FontMetrics::underlinePosition",
			"::stappler::geom::FontMetrics::underlineThickness",
			"::stappler::geom::CharLayout",
			"::stappler::geom::CharLayout::CharMask",
			"::stappler::geom::CharLayout::AnchorMask",
			"::stappler::geom::CharLayout::SourceMask",
			"::stappler::geom::CharLayout::SourceMax",
			"::stappler::geom::CharLayout::getObjectId(uint16_t,char16_t,stappler::geom::SpriteAnchor)",
			"::stappler::geom::CharLayout::getObjectId(uint32_t,stappler::geom::SpriteAnchor)",
			"::stappler::geom::CharLayout::getAnchorForObject(uint32_t)",
			"::stappler::geom::CharLayout::charID",
			"::stappler::geom::CharLayout::xAdvance",
			"::stappler::geom::CharLayout::operator char16_t() const",
			"::stappler::geom::CharSpec",
			"::stappler::geom::CharSpec::charID",
			"::stappler::geom::CharSpec::pos",
			"::stappler::geom::CharSpec::advance",
			"::stappler::geom::CharSpec::face",
			"::stappler::geom::CharTexture",
			"::stappler::geom::CharTexture::fontID",
			"::stappler::geom::CharTexture::charID",
			"::stappler::geom::CharTexture::x",
			"::stappler::geom::CharTexture::y",
			"::stappler::geom::CharTexture::width",
			"::stappler::geom::CharTexture::height",
			"::stappler::geom::CharTexture::bitmapWidth",
			"::stappler::geom::CharTexture::bitmapRows",
			"::stappler::geom::CharTexture::pitch",
			"::stappler::geom::CharTexture::bitmap",
			"::stappler::geom::FontAtlasValue",
			"::stappler::geom::FontAtlasValue::pos",
			"::stappler::geom::FontAtlasValue::tex",
			"::stappler::geom::EmplaceCharInterface",
			"::stappler::geom::EmplaceCharInterface::getX",
			"::stappler::geom::EmplaceCharInterface::getY",
			"::stappler::geom::EmplaceCharInterface::getWidth",
			"::stappler::geom::EmplaceCharInterface::getHeight",
			"::stappler::geom::EmplaceCharInterface::setX",
			"::stappler::geom::EmplaceCharInterface::setY",
			"::stappler::geom::EmplaceCharInterface::setTex",
			"::stappler::geom::emplaceChars(stappler::geom::EmplaceCharInterface const&,SpanView<void *> const&,float)",
			"::stappler::geom::operator<(stappler::geom::CharLayout const&,stappler::geom::CharLayout const&)",
			"::stappler::geom::operator>(stappler::geom::CharLayout const&,stappler::geom::CharLayout const&)",
			"::stappler::geom::operator<=(stappler::geom::CharLayout const&,stappler::geom::CharLayout const&)",
			"::stappler::geom::operator>=(stappler::geom::CharLayout const&,stappler::geom::CharLayout const&)",
			"::stappler::geom::operator<(stappler::geom::CharLayout const&,char16_t const&)",
			"::stappler::geom::operator>(stappler::geom::CharLayout const&,char16_t const&)",
			"::stappler::geom::operator<=(stappler::geom::CharLayout const&,char16_t const&)",
			"::stappler::geom::operator>=(stappler::geom::CharLayout const&,char16_t const&)",
			"::stappler::progress(geom::FontSize,geom::FontSize,float)",
			"::std::hash<stappler::geom::FontSize>::hash<stappler::geom::FontSize>",
			"::std::hash<stappler::geom::FontSize>::hash()",
			"::std::hash<stappler::geom::FontSize>::operator()(stappler::geom::FontSize const&) const"
		],
		"SPGeom.h":  [
			"CORE_GEOM_SPGEOM_H_",
			"::stappler::geom::_StructFieldCount<typename>",
			"::stappler::geom::_StructFieldCount<typename>::Count",
			"::stappler::geom::_StructFieldCount<float>::_StructFieldCount<float>",
			"::stappler::geom::_StructFieldCount<float>::Count",
			"::stappler::geom::_ApplyTrait<typename>",
			"::stappler::geom::_ApplyTrait<typename>::Bitset",
			"::stappler::geom::_ApplyTrait<typename>::apply<typename>(T const&,Functor const&)",
			"::stappler::geom::_ApplyTrait<typename>::apply<typename>(T const&,T const&,Functor const&)",
			"::stappler::geom::_ApplyTrait<typename>::bitop<typename>(T const&,Functor const&)",
			"::stappler::geom::_ApplyTrait<typename>::bitop<typename>(T const&,T const&,Functor const&)",
			"::stappler::geom::_ApplyTrait<float>::_ApplyTrait<float>",
			"::stappler::geom::_ApplyTrait<float>::Bitset",
			"::stappler::geom::_ApplyTrait<float>::apply<typename>(float const&,Functor const&)",
			"::stappler::geom::_ApplyTrait<float>::apply<typename>(float const&,float const&,Functor const&)",
			"::stappler::geom::_ApplyTrait<float>::bitop<typename>(float const&,Functor const&)",
			"::stappler::geom::_ApplyTrait<float>::bitop<typename>(float const&,float const&,Functor const&)",
			"::stappler::geom::fill<typename>(float)",
			"::stappler::geom::fill(float)",
			"::stappler::geom::apply<typename,typename>(T const&,Functor const&)",
			"::stappler::geom::apply<typename,typename>(T const&,T const&,Functor const&)",
			"::stappler::geom::bitop<typename,typename>(T const&,Functor const&)",
			"::stappler::geom::bitop<typename,typename>(T const&,T const&,Functor const&)",
			"::stappler::geom::_abs<typename>(T const&)",
			"::stappler::geom::_ceil<typename>(T const&)",
			"::stappler::geom::_floor<typename>(T const&)",
			"::stappler::geom::_trunc<typename>(T const&)",
			"::stappler::geom::_fract<typename>(T const&)",
			"::stappler::geom::_round<typename>(T const&)",
			"::stappler::geom::_sign<typename>(T const&)",
			"::stappler::geom::_inversesqrt<typename>(T const&)",
			"::stappler::geom::_max<typename>(T const&,T const&)",
			"::stappler::geom::_min<typename>(T const&,T const&)",
			"::stappler::geom::_mod<typename>(T const&,T const&)",
			"::stappler::geom::_step<typename>(T const&,T const&)",
			"::stappler::geom::_equal<typename>(T const&,T const&)",
			"::stappler::geom::_greaterThan<typename>(T const&,T const&)",
			"::stappler::geom::_greaterThanEqual<typename>(T const&,T const&)",
			"::stappler::geom::_lessThan<typename>(T const&,T const&)",
			"::stappler::geom::_lessThanEqual<typename>(T const&,T const&)",
			"::stappler::geom::_notEqual<typename>(T const&,T const&)",
			"::stappler::geom::_isinf<typename>(T const&)",
			"::stappler::geom::_isnan<typename>(T const&)"
		],
		"SPGeometry.h":  [
			"STAPPLER_GEOM_SPGEOMETRY_H_",
			"::stappler::geom::Size2",
			"::stappler::geom::Size2::ZERO",
			"::stappler::geom::Size2::width",
			"::stappler::geom::Size2::height",
			"::stappler::geom::Size2::Size2()",
			"::stappler::geom::Size2::Size2(float,float)",
			"::stappler::geom::Size2::Size2<typename>(stappler::geom::Size2 const&,Functor const&)",
			"::stappler::geom::Size2::Size2(stappler::geom::Size2 const&)",
			"::stappler::geom::Size2::Size2(stappler::geom::Vec2 const&)",
			"::stappler::geom::Size2::operator Vec2() const",
			"::stappler::geom::Size2::operator=(stappler::geom::Size2 const&)",
			"::stappler::geom::Size2::operator=(stappler::geom::Vec2 const&)",
			"::stappler::geom::Size2::operator+(stappler::geom::Size2 const&) const",
			"::stappler::geom::Size2::operator-(stappler::geom::Size2 const&) const",
			"::stappler::geom::Size2::operator*(float) const",
			"::stappler::geom::Size2::operator/(float) const",
			"::stappler::geom::Size2::setSize(float,float)",
			"::stappler::geom::Size2::fuzzyEquals(stappler::geom::Size2 const&,float) const",
			"::stappler::geom::Size2::ZERO",
			"::stappler::geom::Size3",
			"::stappler::geom::Size3::ZERO",
			"::stappler::geom::Size3::width",
			"::stappler::geom::Size3::height",
			"::stappler::geom::Size3::depth",
			"::stappler::geom::Size3::Size3()",
			"::stappler::geom::Size3::Size3(float,float,float)",
			"::stappler::geom::Size3::Size3<typename>(stappler::geom::Size3 const&,Functor const&)",
			"::stappler::geom::Size3::Size3(stappler::geom::Size3 const&)",
			"::stappler::geom::Size3::Size3(stappler::geom::Vec3 const&)",
			"::stappler::geom::Size3::operator Vec3() const",
			"::stappler::geom::Size3::operator=(stappler::geom::Size3 const&)",
			"::stappler::geom::Size3::operator=(stappler::geom::Vec3 const&)",
			"::stappler::geom::Size3::operator+(stappler::geom::Size3 const&) const",
			"::stappler::geom::Size3::operator-(stappler::geom::Size3 const&) const",
			"::stappler::geom::Size3::operator*(float) const",
			"::stappler::geom::Size3::operator/(float) const",
			"::stappler::geom::Size3::fuzzyEquals(stappler::geom::Size3 const&,float) const",
			"::stappler::geom::Size3::ZERO",
			"::stappler::geom::Extent2",
			"::stappler::geom::Extent2::ZERO",
			"::stappler::geom::Extent2::width",
			"::stappler::geom::Extent2::height",
			"::stappler::geom::Extent2::Extent2()",
			"::stappler::geom::Extent2::Extent2(uint32_t,uint32_t)",
			"::stappler::geom::Extent2::Extent2(stappler::geom::Extent2 const&)",
			"::stappler::geom::Extent2::operator=(stappler::geom::Extent2 const&)",
			"::stappler::geom::Extent2::Extent2(stappler::geom::Size2 const&)",
			"::stappler::geom::Extent2::Extent2(stappler::geom::Vec2 const&)",
			"::stappler::geom::Extent2::operator=(stappler::geom::Size2 const&)",
			"::stappler::geom::Extent2::operator=(stappler::geom::Vec2 const&)",
			"::stappler::geom::Extent2::operator==(stappler::geom::Extent2 const&) const",
			"::stappler::geom::Extent2::operator!=(stappler::geom::Extent2 const&) const",
			"::stappler::geom::Extent2::operator<=>(stappler::geom::Extent2 const&) const",
			"::stappler::geom::Extent2::operator Size2() const",
			"::stappler::geom::Extent2::ZERO",
			"::stappler::geom::Extent3",
			"::stappler::geom::Extent3::ZERO",
			"::stappler::geom::Extent3::width",
			"::stappler::geom::Extent3::height",
			"::stappler::geom::Extent3::depth",
			"::stappler::geom::Extent3::Extent3()",
			"::stappler::geom::Extent3::Extent3(uint32_t,uint32_t,uint32_t)",
			"::stappler::geom::Extent3::Extent3(stappler::geom::Extent2,uint32_t)",
			"::stappler::geom::Extent3::Extent3(stappler::geom::Extent3 const&)",
			"::stappler::geom::Extent3::operator=(stappler::geom::Extent3 const&)",
			"::stappler::geom::Extent3::Extent3(stappler::geom::Extent2 const&)",
			"::stappler::geom::Extent3::operator=(stappler::geom::Extent2 const&)",
			"::stappler::geom::Extent3::Extent3(stappler::geom::Size3 const&)",
			"::stappler::geom::Extent3::Extent3(stappler::geom::Vec3 const&)",
			"::stappler::geom::Extent3::operator=(stappler::geom::Size3 const&)",
			"::stappler::geom::Extent3::operator=(stappler::geom::Vec3 const&)",
			"::stappler::geom::Extent3::operator==(stappler::geom::Extent3 const&) const",
			"::stappler::geom::Extent3::operator!=(stappler::geom::Extent3 const&) const",
			"::stappler::geom::Extent3::operator<=>(stappler::geom::Extent3 const&) const",
			"::stappler::geom::Extent3::operator Size3() const",
			"::stappler::geom::Extent3::ZERO",
			"::stappler::geom::Rect",
			"::stappler::geom::Rect::ZERO",
			"::stappler::geom::Rect::origin",
			"::stappler::geom::Rect::size",
			"::stappler::geom::Rect::Rect()",
			"::stappler::geom::Rect::Rect(float,float,float,float)",
			"::stappler::geom::Rect::Rect(stappler::geom::Vec2 const&,stappler::geom::Size2 const&)",
			"::stappler::geom::Rect::Rect<typename>(stappler::geom::Rect const&,Functor const&)",
			"::stappler::geom::Rect::Rect(stappler::geom::Rect const&)",
			"::stappler::geom::Rect::operator=(stappler::geom::Rect const&)",
			"::stappler::geom::Rect::getMaxX() const",
			"::stappler::geom::Rect::getMidX() const",
			"::stappler::geom::Rect::getMinX() const",
			"::stappler::geom::Rect::getMaxY() const",
			"::stappler::geom::Rect::getMidY() const",
			"::stappler::geom::Rect::getMinY() const",
			"::stappler::geom::Rect::equals(stappler::geom::Rect const&) const",
			"::stappler::geom::Rect::containsPoint(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Rect::intersectsRect(stappler::geom::Rect const&) const",
			"::stappler::geom::Rect::intersectsCircle(stappler::geom::Vec2 const&,float) const",
			"::stappler::geom::Rect::unionWithRect(stappler::geom::Rect const&) const",
			"::stappler::geom::Rect::merge(stappler::geom::Rect const&)",
			"::stappler::geom::Rect::ZERO",
			"::stappler::geom::UVec2",
			"::stappler::geom::UVec2::x",
			"::stappler::geom::UVec2::y",
			"::stappler::geom::UVec2::operator==(stappler::geom::UVec2 const&) const",
			"::stappler::geom::UVec2::operator!=(stappler::geom::UVec2 const&) const",
			"::stappler::geom::URect",
			"::stappler::geom::URect::x",
			"::stappler::geom::URect::y",
			"::stappler::geom::URect::width",
			"::stappler::geom::URect::height",
			"::stappler::geom::URect::URect()",
			"::stappler::geom::URect::URect(stappler::geom::UVec2 const&,stappler::geom::Extent2 const&)",
			"::stappler::geom::URect::URect(uint32_t,uint32_t,uint32_t,uint32_t)",
			"::stappler::geom::URect::origin() const",
			"::stappler::geom::URect::operator==(stappler::geom::URect const&) const",
			"::stappler::geom::URect::operator!=(stappler::geom::URect const&) const",
			"::stappler::geom::URect::getMaxX() const",
			"::stappler::geom::URect::getMidX() const",
			"::stappler::geom::URect::getMinX() const",
			"::stappler::geom::URect::getMaxY() const",
			"::stappler::geom::URect::getMidY() const",
			"::stappler::geom::URect::getMinY() const",
			"::stappler::geom::URect::containsPoint(stappler::geom::UVec2 const&) const",
			"::stappler::geom::URect::intersectsRect(stappler::geom::URect const&) const",
			"::stappler::geom::TransformRect(stappler::geom::Rect const&,stappler::geom::Mat4 const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Rect const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Size2 const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Size3 const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Extent2 const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Extent3 const&)"
		],
		"SPGost3411-2012.h":  [
			"CORE_CORE_STRING_SPGOST3411_2012_H_",
			"::stappler::crypto::uint512_u",
			"::stappler::crypto::uint512_u::QWORD",
			"::stappler::crypto::uint512_u::B",
			"::stappler::crypto::Gost3411_Ctx",
			"::stappler::crypto::Gost3411_Ctx::buffer",
			"::stappler::crypto::Gost3411_Ctx::h",
			"::stappler::crypto::Gost3411_Ctx::N",
			"::stappler::crypto::Gost3411_Ctx::Sigma",
			"::stappler::crypto::Gost3411_Ctx::bufsize",
			"::stappler::crypto::Gost3411_Ctx::digest_size",
			"::stappler::crypto::Gost3411_512",
			"::stappler::crypto::Gost3411_512::_Ctx",
			"::stappler::crypto::Gost3411_512::Length",
			"::stappler::crypto::Gost3411_512::Buf",
			"::stappler::crypto::Gost3411_512::perform<typename>(Args &&...)",
			"::stappler::crypto::Gost3411_512::make(stappler::CoderSource const&,stappler::StringView const&)",
			"::stappler::crypto::Gost3411_512::hmac(stappler::CoderSource const&,stappler::CoderSource const&)",
			"::stappler::crypto::Gost3411_512::Gost3411_512()",
			"::stappler::crypto::Gost3411_512::init()",
			"::stappler::crypto::Gost3411_512::update(uint8_t const*,size_t)",
			"::stappler::crypto::Gost3411_512::update(stappler::CoderSource const&)",
			"::stappler::crypto::Gost3411_512::_update<typename,typename>(T&&,Args &&...)",
			"::stappler::crypto::Gost3411_512::_update<typename>(T&&)",
			"::stappler::crypto::Gost3411_512::final()",
			"::stappler::crypto::Gost3411_512::final(uint8_t*)",
			"::stappler::crypto::Gost3411_512::ctx",
			"::stappler::crypto::Gost3411_256",
			"::stappler::crypto::Gost3411_256::_Ctx",
			"::stappler::crypto::Gost3411_256::Length",
			"::stappler::crypto::Gost3411_256::Buf",
			"::stappler::crypto::Gost3411_256::perform<typename>(Args &&...)",
			"::stappler::crypto::Gost3411_256::make(stappler::CoderSource const&,stappler::StringView const&)",
			"::stappler::crypto::Gost3411_256::hmac(stappler::CoderSource const&,stappler::CoderSource const&)",
			"::stappler::crypto::Gost3411_256::Gost3411_256()",
			"::stappler::crypto::Gost3411_256::init()",
			"::stappler::crypto::Gost3411_256::update(uint8_t const*,size_t)",
			"::stappler::crypto::Gost3411_256::update(stappler::CoderSource const&)",
			"::stappler::crypto::Gost3411_256::_update<typename,typename>(T&&,Args &&...)",
			"::stappler::crypto::Gost3411_256::_update<typename>(T&&)",
			"::stappler::crypto::Gost3411_256::final()",
			"::stappler::crypto::Gost3411_256::final(uint8_t*)",
			"::stappler::crypto::Gost3411_256::ctx",
			"::stappler::crypto::Gost3411_512::perform<typename>(Args &&...)",
			"::stappler::crypto::Gost3411_512::_update<typename,typename>(T&&,Args &&...)",
			"::stappler::crypto::Gost3411_512::_update<typename>(T&&)",
			"::stappler::crypto::Gost3411_256::perform<typename>(Args &&...)",
			"::stappler::crypto::Gost3411_256::_update<typename,typename>(T&&,Args &&...)",
			"::stappler::crypto::Gost3411_256::_update<typename>(T&&)"
		],
		"SPHalfFloat.h":  [
			"STAPPLER_CORE_UTILS_SPHALFFLOAT_H_",
			"::stappler::halffloat::nan()",
			"::stappler::halffloat::posinf()",
			"::stappler::halffloat::neginf()",
			"::stappler::halffloat::decode(uint16_t)",
			"::stappler::halffloat::encode(float)"
		],
		"SPHash.h":  [
			"STAPPLER_CORE_STRING_SPHASH_H_",
			"::stappler::hash::xxh32",
			"::stappler::hash::xxh32::hash(char const*,uint32_t,uint32_t)",
			"::stappler::hash::xxh32::PRIME1",
			"::stappler::hash::xxh32::PRIME2",
			"::stappler::hash::xxh32::PRIME3",
			"::stappler::hash::xxh32::PRIME4",
			"::stappler::hash::xxh32::PRIME5",
			"::stappler::hash::xxh32::rotl(uint32_t,int)",
			"::stappler::hash::xxh32::round(uint32_t,uint32_t const)",
			"::stappler::hash::xxh32::avalanche_step(uint32_t const,int const,uint32_t const)",
			"::stappler::hash::xxh32::avalanche(uint32_t const)",
			"::stappler::hash::xxh32::endian32(char const*)",
			"::stappler::hash::xxh32::fetch32(char const*,uint32_t const)",
			"::stappler::hash::xxh32::finalize(uint32_t,char const*,uint32_t)",
			"::stappler::hash::xxh32::h16bytes(char const*,uint32_t,uint32_t,uint32_t,uint32_t,uint32_t)",
			"::stappler::hash::xxh32::h16bytes(char const*,uint32_t,uint32_t const)",
			"::stappler::hash::xxh64",
			"::stappler::hash::xxh64::hash(char const*,uint64_t,uint64_t)",
			"::stappler::hash::xxh64::PRIME1",
			"::stappler::hash::xxh64::PRIME2",
			"::stappler::hash::xxh64::PRIME3",
			"::stappler::hash::xxh64::PRIME4",
			"::stappler::hash::xxh64::PRIME5",
			"::stappler::hash::xxh64::rotl(uint64_t,int)",
			"::stappler::hash::xxh64::mix1(uint64_t const,uint64_t const,int)",
			"::stappler::hash::xxh64::mix2(uint64_t const,uint64_t const)",
			"::stappler::hash::xxh64::mix3(uint64_t const,uint64_t const)",
			"::stappler::hash::xxh64::endian32(char const*)",
			"::stappler::hash::xxh64::endian64(char const*)",
			"::stappler::hash::xxh64::fetch64(char const*,uint64_t const)",
			"::stappler::hash::xxh64::fetch32(char const*)",
			"::stappler::hash::xxh64::finalize(uint64_t,char const*,uint64_t)",
			"::stappler::hash::xxh64::h32bytes(char const*,uint64_t,uint64_t,uint64_t,uint64_t,uint64_t)",
			"::stappler::hash::xxh64::h32bytes(char const*,uint64_t,uint64_t const)",
			"::stappler::hash::hash32(char const*,uint32_t,uint32_t)",
			"::stappler::hash::hash64(char const*,size_t,uint64_t)",
			"::stappler::hash::hashSize(char const*,size_t,uint64_t)",
			"SP_HASH_INLINE"
		],
		"SPHashTable.h":  [
			"STAPPLER_CORE_UTILS_SPHASHTABLE_H_",
			"::stappler::NamedRef",
			"::stappler::NamedRef::~NamedRef()",
			"::stappler::NamedRef::getName() const",
			"::stappler::NamedMem",
			"::stappler::NamedMem::~NamedMem()",
			"::stappler::NamedMem::key",
			"::stappler::HashFunc",
			"::stappler::HashTraits<NamedRef*>::HashTraits<NamedRef*>",
			"::stappler::HashTraits<NamedRef*>::hash(uint32_t,stappler::NamedRef const*)",
			"::stappler::HashTraits<NamedRef*>::equal(stappler::NamedRef const*,stappler::NamedRef const*)",
			"::stappler::HashTraits<Rc<NamedRef>>::HashTraits<Rc<NamedRef>>",
			"::stappler::HashTraits<Rc<NamedRef>>::hash(uint32_t,stappler::NamedRef const*)",
			"::stappler::HashTraits<Rc<NamedRef>>::hash(uint32_t,stappler::StringView)",
			"::stappler::HashTraits<Rc<NamedRef>>::equal(stappler::NamedRef const*,stappler::NamedRef const*)",
			"::stappler::HashTraits<Rc<NamedRef>>::equal(stappler::NamedRef const*,stappler::StringView)",
			"::stappler::HashTraits<NamedMem*>::HashTraits<NamedMem*>",
			"::stappler::HashTraits<NamedMem*>::hash(uint32_t,stappler::NamedMem const*)",
			"::stappler::HashTraits<NamedMem*>::hash(uint32_t,stappler::StringView)",
			"::stappler::HashTraits<NamedMem*>::equal(stappler::NamedMem const*,stappler::NamedMem const*)",
			"::stappler::HashTraits<NamedMem*>::equal(stappler::NamedMem const*,stappler::StringView)",
			"::stappler::HashTraitDiscovery<Rc<Value>>::HashTraitDiscovery<Rc<Value>>",
			"::stappler::HashTraitDiscovery<Rc<Value>>::type",
			"::stappler::HashTraitDiscovery<Value*>::HashTraitDiscovery<Value*>",
			"::stappler::HashTraitDiscovery<Value*>::type",
			"::stappler::HashEntry<typename>",
			"::stappler::HashEntry<typename>::Type",
			"::stappler::HashEntry<typename>::Traits",
			"::stappler::HashEntry<typename>::getHash<typename>(uint32_t,Args &&...)",
			"::stappler::HashEntry<typename>::isEqual<typename>(Value const&,Args &&...)",
			"::stappler::HashEntry<typename>::next",
			"::stappler::HashEntry<typename>::hash",
			"::stappler::HashEntry<typename>::data",
			"::stappler::HashEntry<typename>::get()",
			"::stappler::HashEntry<typename>::get() const",
			"::stappler::HashIndex<typename>",
			"::stappler::HashIndex<typename>::Type",
			"::stappler::HashIndex<typename>::ht",
			"::stappler::HashIndex<typename>::_bucket",
			"::stappler::HashIndex<typename>::_self",
			"::stappler::HashIndex<typename>::_next",
			"::stappler::HashIndex<typename>::index",
			"::stappler::HashIndex<typename>::next()",
			"::stappler::HashIndex<typename>::operator==(const HashIndex<Value>&) const",
			"::stappler::HashIndex<typename>::operator!=(const HashIndex<Value>&) const",
			"::stappler::HashIndex<typename>::operator++()",
			"::stappler::HashIndex<typename>::operator++(int)",
			"::stappler::HashIndex<typename>::operator*() const",
			"::stappler::HashIndex<typename>::operator->() const",
			"::stappler::ConstHashIndex<typename>",
			"::stappler::ConstHashIndex<typename>::Type",
			"::stappler::ConstHashIndex<typename>::ht",
			"::stappler::ConstHashIndex<typename>::_bucket",
			"::stappler::ConstHashIndex<typename>::_self",
			"::stappler::ConstHashIndex<typename>::_next",
			"::stappler::ConstHashIndex<typename>::index",
			"::stappler::ConstHashIndex<typename>::next()",
			"::stappler::ConstHashIndex<typename>::operator==(const ConstHashIndex<Value>&) const",
			"::stappler::ConstHashIndex<typename>::operator!=(const ConstHashIndex<Value>&) const",
			"::stappler::ConstHashIndex<typename>::operator++()",
			"::stappler::ConstHashIndex<typename>::operator++(int)",
			"::stappler::ConstHashIndex<typename>::operator*() const",
			"::stappler::ConstHashIndex<typename>::operator->() const",
			"::stappler::HashTable<typename>",
			"::stappler::HashTable<typename>::Pool",
			"::stappler::HashTable<typename>::ValueType",
			"::stappler::HashTable<typename>::merge_fn",
			"::stappler::HashTable<typename>::foreach_fn",
			"::stappler::HashTable<typename>::INITIAL_MAX",
			"::stappler::HashTable<typename>::iterator",
			"::stappler::HashTable<typename>::const_iterator",
			"::stappler::HashTable<typename>::HashTable(stappler::HashTable::Pool*)",
			"::stappler::HashTable<typename>::HashTable(const HashTable<Value>&,stappler::HashTable::Pool*)",
			"::stappler::HashTable<typename>::HashTable(HashTable<Value>&&,stappler::HashTable::Pool*)",
			"::stappler::HashTable<typename>::~HashTable()",
			"::stappler::HashTable<typename>::operator=(const HashTable<Value>&)",
			"::stappler::HashTable<typename>::operator=(HashTable<Value>&&)",
			"::stappler::HashTable<typename>::assign<typename>(Args &&...)",
			"::stappler::HashTable<typename>::emplace<typename>(Args &&...)",
			"::stappler::HashTable<typename>::contains<typename>(Args &&...) const",
			"::stappler::HashTable<typename>::find<typename>(Args &&...)",
			"::stappler::HashTable<typename>::find<typename>(Args &&...) const",
			"::stappler::HashTable<typename>::get<typename>(Args &&...) const",
			"::stappler::HashTable<typename>::erase(stappler::HashTable::iterator)",
			"::stappler::HashTable<typename>::erase<typename>(Args &&...)",
			"::stappler::HashTable<typename>::size() const",
			"::stappler::HashTable<typename>::empty() const",
			"::stappler::HashTable<typename>::reserve(size_t)",
			"::stappler::HashTable<typename>::clear()",
			"::stappler::HashTable<typename>::begin()",
			"::stappler::HashTable<typename>::end()",
			"::stappler::HashTable<typename>::begin() const",
			"::stappler::HashTable<typename>::end() const",
			"::stappler::HashTable<typename>::get_cell_count() const",
			"::stappler::HashTable<typename>::get_free_count() const",
			"::stappler::HashTable<typename>::get_seed() const",
			"::stappler::HashTable<typename>::allocate_value()",
			"::stappler::HashTable<typename>::alloc_array(memory::pool_t*,uint32_t)",
			"::stappler::HashTable<typename>::expand_array(HashTable<Value>*,uint32_t)",
			"::stappler::HashTable<typename>::get_value<typename>(stappler::HashTable::ValueType***,Args &&...) const",
			"::stappler::HashTable<typename>::set_value<typename>(bool,stappler::HashTable::ValueType***,Args &&...)",
			"::stappler::HashTable<typename>::do_copy(HashEntry<Value>**,uint32_t)",
			"::stappler::HashTable<typename>::do_allocate_array(uint32_t)",
			"::stappler::HashTable<typename>::pool",
			"::stappler::HashTable<typename>::array",
			"::stappler::HashTable<typename>::count",
			"::stappler::HashTable<typename>::max",
			"::stappler::HashTable<typename>::seed",
			"::stappler::HashTable<typename>::free"
		],
		"SPHtmlParser.h":  [
			"STAPPLER_CORE_UTILS_SPHTMLPARSER_H_",
			"::stappler::html::parse<typename,typename,typename>(ReaderType&,StringReader const&,bool,bool)",
			"::stappler::html::ParserTraits<typename>",
			"::stappler::html::ParserTraits<typename>::success",
			"::stappler::html::ParserTraits<typename>::failure",
			"::stappler::html::ParserTraits<typename>::CallTest_onBeginTag<typename>(typeof (& C::onBeginTag))",
			"::stappler::html::ParserTraits<typename>::CallTest_onBeginTag<typename>()",
			"::stappler::html::ParserTraits<typename>::onBeginTag",
			"::stappler::html::ParserTraits<typename>::CallTest_onEndTag<typename>(typeof (& C::onEndTag))",
			"::stappler::html::ParserTraits<typename>::CallTest_onEndTag<typename>()",
			"::stappler::html::ParserTraits<typename>::onEndTag",
			"::stappler::html::ParserTraits<typename>::CallTest_onTagAttribute<typename>(typeof (& C::onTagAttribute))",
			"::stappler::html::ParserTraits<typename>::CallTest_onTagAttribute<typename>()",
			"::stappler::html::ParserTraits<typename>::onTagAttribute",
			"::stappler::html::ParserTraits<typename>::CallTest_onPushTag<typename>(typeof (& C::onPushTag))",
			"::stappler::html::ParserTraits<typename>::CallTest_onPushTag<typename>()",
			"::stappler::html::ParserTraits<typename>::onPushTag",
			"::stappler::html::ParserTraits<typename>::CallTest_onPopTag<typename>(typeof (& C::onPopTag))",
			"::stappler::html::ParserTraits<typename>::CallTest_onPopTag<typename>()",
			"::stappler::html::ParserTraits<typename>::onPopTag",
			"::stappler::html::ParserTraits<typename>::CallTest_onInlineTag<typename>(typeof (& C::onInlineTag))",
			"::stappler::html::ParserTraits<typename>::CallTest_onInlineTag<typename>()",
			"::stappler::html::ParserTraits<typename>::onInlineTag",
			"::stappler::html::ParserTraits<typename>::CallTest_onTagContent<typename>(typeof (& C::onTagContent))",
			"::stappler::html::ParserTraits<typename>::CallTest_onTagContent<typename>()",
			"::stappler::html::ParserTraits<typename>::onTagContent",
			"::stappler::html::ParserTraits<typename>::CallTest_onReadTagName<typename>(typeof (& C::onReadTagName))",
			"::stappler::html::ParserTraits<typename>::CallTest_onReadTagName<typename>()",
			"::stappler::html::ParserTraits<typename>::onReadTagName",
			"::stappler::html::ParserTraits<typename>::CallTest_onReadAttributeName<typename>(typeof (& C::onReadAttributeName))",
			"::stappler::html::ParserTraits<typename>::CallTest_onReadAttributeName<typename>()",
			"::stappler::html::ParserTraits<typename>::onReadAttributeName",
			"::stappler::html::ParserTraits<typename>::CallTest_onReadAttributeValue<typename>(typeof (& C::onReadAttributeValue))",
			"::stappler::html::ParserTraits<typename>::CallTest_onReadAttributeValue<typename>()",
			"::stappler::html::ParserTraits<typename>::onReadAttributeValue",
			"::stappler::html::ParserTraits<typename>::CallTest_shouldLowercaseTokens<typename>(typeof (& C::shouldLowercaseTokens))",
			"::stappler::html::ParserTraits<typename>::CallTest_shouldLowercaseTokens<typename>()",
			"::stappler::html::ParserTraits<typename>::shouldLowercaseTokens",
			"::stappler::html::ParserTraits<typename>::CallTest_shouldParseTag<typename>(typeof (& C::shouldParseTag))",
			"::stappler::html::ParserTraits<typename>::CallTest_shouldParseTag<typename>()",
			"::stappler::html::ParserTraits<typename>::shouldParseTag",
			"::stappler::html::Tag_readName<typename>(StringReader&,bool)",
			"::stappler::html::Tag_readAttrName<typename>(StringReader&,bool)",
			"::stappler::html::Tag_readAttrValue<typename>(StringReader&,bool)",
			"::stappler::html::Tag<typename>",
			"::stappler::html::Tag<typename>::StringReader",
			"::stappler::html::Tag<typename>::Tag(stappler::html::Tag::StringReader const&)",
			"::stappler::html::Tag<typename>::getName() const",
			"::stappler::html::Tag<typename>::setClosable(bool)",
			"::stappler::html::Tag<typename>::isClosable() const",
			"::stappler::html::Tag<typename>::setHasContent(bool)",
			"::stappler::html::Tag<typename>::hasContent() const",
			"::stappler::html::Tag<typename>::name",
			"::stappler::html::Tag<typename>::closable",
			"::stappler::html::Tag<typename>::content",
			"::stappler::html::Parser<typename,typename,typename,typename>",
			"::stappler::html::Parser<typename,typename,typename,typename>::StringReader",
			"::stappler::html::Parser<typename,typename,typename,typename>::OrigCharType",
			"::stappler::html::Parser<typename,typename,typename,typename>::CharType",
			"::stappler::html::Parser<typename,typename,typename,typename>::Tag",
			"::stappler::html::Parser<typename,typename,typename,typename>::Chars<CharType...>",
			"::stappler::html::Parser<typename,typename,typename,typename>::Range<CharType,CharType>",
			"::stappler::html::Parser<typename,typename,typename,typename>::GroupId",
			"::stappler::html::Parser<typename,typename,typename,typename>::Group<GroupId>",
			"::stappler::html::Parser<typename,typename,typename,typename>::LtChar",
			"::stappler::html::Parser<typename,typename,typename,typename>::Parser(ReaderType&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::cancel()",
			"::stappler::html::Parser<typename,typename,typename,typename>::parse(stappler::html::Parser::StringReader const&,bool)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onReadTagName(stappler::html::Parser::StringReader&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onReadAttributeName(stappler::html::Parser::StringReader&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onReadAttributeValue(stappler::html::Parser::StringReader&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onBeginTag(TagType&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onEndTag(TagType&,bool)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onTagAttribute(TagType&,stappler::html::Parser::StringReader&,stappler::html::Parser::StringReader&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onPushTag(TagType&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onPopTag(TagType&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onInlineTag(TagType&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::onTagContent(TagType&,stappler::html::Parser::StringReader&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::shouldParseTag(TagType&)",
			"::stappler::html::Parser<typename,typename,typename,typename>::lowercase",
			"::stappler::html::Parser<typename,typename,typename,typename>::canceled",
			"::stappler::html::Parser<typename,typename,typename,typename>::reader",
			"::stappler::html::Parser<typename,typename,typename,typename>::current",
			"::stappler::html::Parser<typename,typename,typename,typename>::tagStack",
			"::stappler::html::parse<typename,typename,typename>(ReaderType&,StringReader const&,bool,bool)"
		],
		"SPIO.h":  [
			"STAPPLER_CORE_IO_SPIO_H_",
			"::stappler::io::read(stappler::io::Producer const&,Callback<void (const stappler::io::Buffer &)> const&)",
			"::stappler::io::read(stappler::io::Producer const&,stappler::io::Buffer const&,Callback<void (const stappler::io::Buffer &)> const&)",
			"::stappler::io::read(stappler::io::Producer const&,stappler::io::Consumer const&)",
			"::stappler::io::read(stappler::io::Producer const&,stappler::io::Consumer const&,Callback<void (const stappler::io::Buffer &)> const&)",
			"::stappler::io::read(stappler::io::Producer const&,stappler::io::Consumer const&,stappler::io::Buffer const&)",
			"::stappler::io::read(stappler::io::Producer const&,stappler::io::Consumer const&,stappler::io::Buffer const&,Callback<void (const stappler::io::Buffer &)> const&)",
			"::stappler::io::tread<typename>(stappler::io::Producer const&,T const&)",
			"::stappler::io::tread<typename>(stappler::io::Producer const&,stappler::io::Buffer const&,T const&)",
			"::stappler::io::tread<typename>(stappler::io::Producer const&,stappler::io::Consumer const&,T const&)",
			"::stappler::io::tread<typename>(stappler::io::Producer const&,stappler::io::Consumer const&,stappler::io::Buffer const&,T const&)"
		],
		"SPIOBuffer.h":  [
			"STAPPLER_CORE_IO_SPIOBUFFER_H_",
			"::stappler::io::Buffer",
			"::stappler::io::Buffer::Buffer<typename,typename>(T&)",
			"::stappler::io::Buffer::prepare(size_t&) const",
			"::stappler::io::Buffer::save(uint8_t*,size_t,size_t) const",
			"::stappler::io::Buffer::capacity() const",
			"::stappler::io::Buffer::size() const",
			"::stappler::io::Buffer::data() const",
			"::stappler::io::Buffer::clear() const",
			"::stappler::io::Buffer::ptr",
			"::stappler::io::Buffer::prepare_ptr",
			"::stappler::io::Buffer::save_ptr",
			"::stappler::io::Buffer::size_ptr",
			"::stappler::io::Buffer::capacity_ptr",
			"::stappler::io::Buffer::data_ptr",
			"::stappler::io::Buffer::clear_ptr",
			"::stappler::io::Buffer::Buffer<typename,typename>(T&)",
			"::stappler::io::Buffer::prepare(size_t&) const",
			"::stappler::io::Buffer::save(uint8_t*,size_t,size_t) const",
			"::stappler::io::Buffer::capacity() const",
			"::stappler::io::Buffer::size() const",
			"::stappler::io::Buffer::data() const",
			"::stappler::io::Buffer::clear() const"
		],
		"SPIOCommon.h":  [
			"STAPPLER_CORE_IO_SPIOCOMMON_H_",
			"::stappler::io::Seek",
			"::stappler::io::read_fn",
			"::stappler::io::seek_fn",
			"::stappler::io::size_fn",
			"::stappler::io::write_fn",
			"::stappler::io::flush_fn",
			"::stappler::io::clear_fn",
			"::stappler::io::data_fn",
			"::stappler::io::prepare_fn",
			"::stappler::io::save_fn"
		],
		"SPIOConsumer.h":  [
			"STAPPLER_CORE_IO_SPIOCONSUMER_H_",
			"::stappler::io::ConsumerTraitsStream",
			"::stappler::io::ConsumerTraitsStream::stream_type",
			"::stappler::io::ConsumerTraitsStream::WriteFn(void*,uint8_t const*,size_t)",
			"::stappler::io::ConsumerTraitsStream::FlushFn(void*)",
			"::stappler::io::WriteFunction<typename>(T&,uint8_t const*,size_t)",
			"::stappler::io::FlushFunction<typename>(T&)",
			"::stappler::io::ConsumerTraitsOverload<class>",
			"::stappler::io::ConsumerTraitsOverload<class>::WriteFn(void*,uint8_t const*,size_t)",
			"::stappler::io::ConsumerTraitsOverload<class>::FlushFn(void*)",
			"::stappler::io::ConsumerTraitsReolution<typename>",
			"::stappler::io::ConsumerTraitsReolution<typename>::type",
			"::stappler::io::ConsumerTraits<typename>",
			"::stappler::io::ConsumerTraits<typename>::traits_type",
			"::stappler::io::ConsumerTraits<typename>::WriteFn(void*,uint8_t const*,size_t)",
			"::stappler::io::ConsumerTraits<typename>::FlushFn(void*)",
			"::stappler::io::Consumer",
			"::stappler::io::Consumer::Consumer<typename,typename>(T&)",
			"::stappler::io::Consumer::write(uint8_t const*,size_t) const",
			"::stappler::io::Consumer::write(stappler::io::Buffer const&) const",
			"::stappler::io::Consumer::flush() const",
			"::stappler::io::Consumer::ptr",
			"::stappler::io::Consumer::write_ptr",
			"::stappler::io::Consumer::flush_ptr",
			"::stappler::io::Consumer::Consumer<typename,typename>(T&)",
			"::stappler::io::Consumer::write(uint8_t const*,size_t) const",
			"::stappler::io::Consumer::flush() const"
		],
		"SPIOProducer.h":  [
			"STAPPLER_CORE_IO_SPIOPRODUCER_H_",
			"::stappler::io::ProducerTraitsStream",
			"::stappler::io::ProducerTraitsStream::stream_type",
			"::stappler::io::ProducerTraitsStream::ReadFn(void*,uint8_t*,size_t)",
			"::stappler::io::ProducerTraitsStream::SeekFn(void*,int64_t,stappler::io::Seek)",
			"::stappler::io::ProducerTraitsStream::TellFn(void*)",
			"::stappler::io::ReadFunction<class>(T&,uint8_t*,size_t)",
			"::stappler::io::SeekFunction<class>(T&,int64_t,stappler::io::Seek)",
			"::stappler::io::TellFunction<class>(T&)",
			"::stappler::io::ProducerTraitsOverload<class>",
			"::stappler::io::ProducerTraitsOverload<class>::ReadFn(void*,uint8_t*,size_t)",
			"::stappler::io::ProducerTraitsOverload<class>::SeekFn(void*,int64_t,stappler::io::Seek)",
			"::stappler::io::ProducerTraitsOverload<class>::TellFn(void*)",
			"::stappler::io::ProducerTraitsResolution<typename>",
			"::stappler::io::ProducerTraitsResolution<typename>::type",
			"::stappler::io::ProducerTraits<typename>",
			"::stappler::io::ProducerTraits<typename>::traits_type",
			"::stappler::io::ProducerTraits<typename>::ReadFn(void*,uint8_t*,size_t)",
			"::stappler::io::ProducerTraits<typename>::SeekFn(void*,int64_t,stappler::io::Seek)",
			"::stappler::io::ProducerTraits<typename>::TellFn(void*)",
			"::stappler::io::Producer",
			"::stappler::io::Producer::Producer<typename,typename>(T&)",
			"::stappler::io::Producer::read(uint8_t*,size_t) const",
			"::stappler::io::Producer::read(stappler::io::Buffer const&,size_t) const",
			"::stappler::io::Producer::seek(int64_t,stappler::io::Seek) const",
			"::stappler::io::Producer::seekAndRead<typename>(size_t,T&&,size_t) const",
			"::stappler::io::Producer::tell() const",
			"::stappler::io::Producer::ptr",
			"::stappler::io::Producer::read_ptr",
			"::stappler::io::Producer::seek_ptr",
			"::stappler::io::Producer::tell_ptr",
			"::stappler::io::Producer::Producer<typename,typename>(T&)",
			"::stappler::io::Producer::read(uint8_t*,size_t) const",
			"::stappler::io::Producer::seek(int64_t,stappler::io::Seek) const",
			"::stappler::io::Producer::seekAndRead<typename>(size_t,T&&,size_t) const",
			"::stappler::io::Producer::tell() const"
		],
		"SPIdn.h":  [
			"STAPPLER_IDN_SPIDN_H_",
			"::stappler::idn::toAscii<typename>(stappler::StringView,bool)",
			"::stappler::idn::toUnicode<typename>(stappler::StringView,bool)"
		],
		"SPLog.h":  [
			"STAPPLER_CORE_UTILS_SPLOG_H_",
			"::stappler::log::LogType",
			"::stappler::log::CustomLog",
			"::stappler::log::CustomLog::VA",
			"::stappler::log::CustomLog::VA::text",
			"::stappler::log::CustomLog::VA::",
			"::stappler::log::CustomLog::VA::format",
			"::stappler::log::CustomLog::VA::args",
			"::stappler::log::CustomLog::VA::format",
			"::stappler::log::CustomLog::VA::VA()",
			"::stappler::log::CustomLog::Type",
			"::stappler::log::CustomLog::log_fn",
			"::stappler::log::CustomLog::CustomLog(stappler::log::CustomLog::log_fn)",
			"::stappler::log::CustomLog::~CustomLog()",
			"::stappler::log::CustomLog::CustomLog(stappler::log::CustomLog const&)",
			"::stappler::log::CustomLog::operator=(stappler::log::CustomLog const&)",
			"::stappler::log::CustomLog::CustomLog(stappler::log::CustomLog&&)",
			"::stappler::log::CustomLog::operator=(stappler::log::CustomLog&&)",
			"::stappler::log::CustomLog::fn",
			"::stappler::log::CustomLog::manager",
			"::stappler::log::setLogFilterMask(std::bitset<6>&&)",
			"::stappler::log::format(stappler::log::LogType,stappler::StringView const&,char const*,...)",
			"::stappler::log::text(stappler::log::LogType,stappler::StringView const&,stappler::StringView const&)",
			"::stappler::log::verbose<typename>(stappler::StringView const&,Args &&...)",
			"::stappler::log::debug<typename>(stappler::StringView const&,Args &&...)",
			"::stappler::log::info<typename>(stappler::StringView const&,Args &&...)",
			"::stappler::log::warn<typename>(stappler::StringView const&,Args &&...)",
			"::stappler::log::error<typename>(stappler::StringView const&,Args &&...)",
			"::stappler::log::fatal<typename>(stappler::StringView const&,Args &&...)",
			"SPASSERT"
		],
		"SPMat4.h":  [
			"STAPPLER_GEOM_SPMAT4_H_",
			"::stappler::geom::Mat4",
			"::stappler::geom::Mat4::createLookAt(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createLookAt(float,float,float,float,float,float,float,float,float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createPerspective(float,float,float,float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createOrthographic(float,float,float,float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createOrthographicOffCenter(float,float,float,float,float,float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createBillboard(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createBillboard(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createScale(stappler::geom::Vec3 const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createScale(float,float,float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createRotation(stappler::geom::Quaternion const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createRotation(stappler::geom::Vec3 const&,float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createRotationX(float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createRotationY(float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createRotationZ(float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createTranslation(stappler::geom::Vec3 const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::createTranslation(float,float,float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::add(stappler::geom::Mat4 const&,stappler::geom::Mat4 const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::multiply(stappler::geom::Mat4 const&,float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::multiply(stappler::geom::Mat4 const&,stappler::geom::Mat4 const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::subtract(stappler::geom::Mat4 const&,stappler::geom::Mat4 const&,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::m",
			"::stappler::geom::Mat4::Mat4()",
			"::stappler::geom::Mat4::Mat4(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)",
			"::stappler::geom::Mat4::Mat4(float,float,float,float,float,float)",
			"::stappler::geom::Mat4::Mat4(stappler::geom::Mat4 const&)",
			"::stappler::geom::Mat4::add(float)",
			"::stappler::geom::Mat4::add(float,stappler::geom::Mat4*)",
			"::stappler::geom::Mat4::add(stappler::geom::Mat4 const&)",
			"::stappler::geom::Mat4::decompose(stappler::geom::Vec3*,stappler::geom::Quaternion*,stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::decompose(float*,float*,float*) const",
			"::stappler::geom::Mat4::determinant() const",
			"::stappler::geom::Mat4::getScale(stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::getRotation(stappler::geom::Quaternion*) const",
			"::stappler::geom::Mat4::getTranslation(stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::getScale(float*) const",
			"::stappler::geom::Mat4::getRotation(float*) const",
			"::stappler::geom::Mat4::getTranslation(float*) const",
			"::stappler::geom::Mat4::getUpVector(stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::getDownVector(stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::getLeftVector(stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::getRightVector(stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::getForwardVector(stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::getBackVector(stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::inverse()",
			"::stappler::geom::Mat4::negate()",
			"::stappler::geom::Mat4::transpose()",
			"::stappler::geom::Mat4::getInversed() const",
			"::stappler::geom::Mat4::getNegated() const",
			"::stappler::geom::Mat4::getTransposed() const",
			"::stappler::geom::Mat4::isIdentity() const",
			"::stappler::geom::Mat4::multiply(float)",
			"::stappler::geom::Mat4::multiply(float,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::multiply(stappler::geom::Mat4 const&)",
			"::stappler::geom::Mat4::rotate(stappler::geom::Quaternion const&)",
			"::stappler::geom::Mat4::rotate(stappler::geom::Quaternion const&,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::rotate(stappler::geom::Vec3 const&,float)",
			"::stappler::geom::Mat4::rotate(stappler::geom::Vec3 const&,float,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::rotateX(float)",
			"::stappler::geom::Mat4::rotateX(float,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::rotateY(float)",
			"::stappler::geom::Mat4::rotateY(float,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::rotateZ(float)",
			"::stappler::geom::Mat4::rotateZ(float,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::scale(float)",
			"::stappler::geom::Mat4::scale(float,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::scale(float,float,float)",
			"::stappler::geom::Mat4::scale(float,float,float,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::scale(stappler::geom::Vec3 const&)",
			"::stappler::geom::Mat4::scale(stappler::geom::Vec3 const&,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::subtract(stappler::geom::Mat4 const&)",
			"::stappler::geom::Mat4::transformPoint(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Mat4::transformPoint(stappler::geom::Vec2*) const",
			"::stappler::geom::Mat4::transformVector(stappler::geom::Vec4*) const",
			"::stappler::geom::Mat4::transformVector(float,float,float,float,stappler::geom::Vec4*) const",
			"::stappler::geom::Mat4::transformVector(float,float,float,float,float*) const",
			"::stappler::geom::Mat4::transformVector(stappler::geom::Vec4 const&,stappler::geom::Vec4*) const",
			"::stappler::geom::Mat4::transformVector(stappler::geom::Vec4 const&,stappler::geom::Vec3*) const",
			"::stappler::geom::Mat4::translate(float,float,float)",
			"::stappler::geom::Mat4::translate(float,float,float,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::translate(stappler::geom::Vec3 const&)",
			"::stappler::geom::Mat4::translate(stappler::geom::Vec3 const&,stappler::geom::Mat4*) const",
			"::stappler::geom::Mat4::operator+(stappler::geom::Mat4 const&) const",
			"::stappler::geom::Mat4::operator+=(stappler::geom::Mat4 const&)",
			"::stappler::geom::Mat4::operator-(stappler::geom::Mat4 const&) const",
			"::stappler::geom::Mat4::operator-=(stappler::geom::Mat4 const&)",
			"::stappler::geom::Mat4::operator-() const",
			"::stappler::geom::Mat4::operator*(stappler::geom::Mat4 const&) const",
			"::stappler::geom::Mat4::operator*=(stappler::geom::Mat4 const&)",
			"::stappler::geom::Mat4::operator==(stappler::geom::Mat4 const&) const",
			"::stappler::geom::Mat4::operator!=(stappler::geom::Mat4 const&) const",
			"::stappler::geom::Mat4::ZERO",
			"::stappler::geom::Mat4::IDENTITY",
			"::stappler::geom::Mat4::INVALID",
			"::stappler::geom::Mat4::ROTATION_Z_90",
			"::stappler::geom::Mat4::ROTATION_Z_180",
			"::stappler::geom::Mat4::ROTATION_Z_270",
			"::stappler::geom::Mat4::IDENTITY",
			"::stappler::geom::Mat4::ZERO",
			"::stappler::geom::Mat4::INVALID",
			"::stappler::geom::Mat4::ROTATION_Z_90",
			"::stappler::geom::Mat4::ROTATION_Z_180",
			"::stappler::geom::Mat4::ROTATION_Z_270",
			"::stappler::geom::operator*=(stappler::geom::Vec4&,stappler::geom::Mat4 const&)",
			"::stappler::geom::operator*(stappler::geom::Mat4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::operator*(stappler::geom::Mat4 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::operator*(stappler::geom::Mat4 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::operator<<(std::basic_ostream<char>&,stappler::geom::Mat4 const&)"
		],
		"SPMemAlloc.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMALLOC_H_",
			"::stappler::memory::AllocBase",
			"::stappler::memory::AllocBase::operator new(size_t)",
			"::stappler::memory::AllocBase::operator new(size_t,std::nothrow_t const&)",
			"::stappler::memory::AllocBase::operator new(size_t,void*)",
			"::stappler::memory::AllocBase::operator delete(void*)",
			"::stappler::memory::AllocPool",
			"::stappler::memory::AllocPool::operator new(size_t)",
			"::stappler::memory::AllocPool::operator new(size_t,stappler::mempool::base::pool_t*)",
			"::stappler::memory::AllocPool::operator new(size_t,void*)",
			"::stappler::memory::AllocPool::operator delete(void*)",
			"::stappler::memory::AllocPool::getCurrentPool()",
			"::stappler::memory::AllocPool::isCustomPool(stappler::mempool::base::pool_t*)",
			"::stappler::memory::AllocPool::cleanupObjectFromPool<typename>(void*)",
			"::stappler::memory::AllocPool::registerCleanupDestructor<typename>(T*,stappler::mempool::base::pool_t*)",
			"::stappler::memory::Allocator_SelectFirst<A,Args...>::Allocator_SelectFirst<A,Args...>",
			"::stappler::memory::Allocator_SelectFirst<A,Args...>::type",
			"::stappler::memory::Allocator_protect_construct<typename>",
			"::stappler::memory::Allocator_protect_construct<typename>::value",
			"::stappler::memory::Allocator<class>",
			"::stappler::memory::Allocator<class>::pointer",
			"::stappler::memory::Allocator<class>::const_pointer",
			"::stappler::memory::Allocator<class>::void_pointer",
			"::stappler::memory::Allocator<class>::const_void_pointer",
			"::stappler::memory::Allocator<class>::reference",
			"::stappler::memory::Allocator<class>::const_reference",
			"::stappler::memory::Allocator<class>::value_type",
			"::stappler::memory::Allocator<class>::size_type",
			"::stappler::memory::Allocator<class>::difference_type",
			"::stappler::memory::Allocator<class>::rebind<class>",
			"::stappler::memory::Allocator<class>::rebind<class>::other",
			"::stappler::memory::Allocator<class>::AllocFlag",
			"::stappler::memory::Allocator<class>::pool_ptr(stappler::mempool::base::pool_t*)",
			"::stappler::memory::Allocator<class>::Allocator()",
			"::stappler::memory::Allocator<class>::Allocator(stappler::mempool::base::pool_t*)",
			"::stappler::memory::Allocator<class>::Allocator<class>(Allocator<B> const&)",
			"::stappler::memory::Allocator<class>::Allocator<class>(Allocator<B>&&)",
			"::stappler::memory::Allocator<class>::operator=<class>(Allocator<B> const&)",
			"::stappler::memory::Allocator<class>::operator=<class>(Allocator<B>&&)",
			"::stappler::memory::Allocator<class>::allocate(size_t)",
			"::stappler::memory::Allocator<class>::__allocate(size_t&)",
			"::stappler::memory::Allocator<class>::__allocate(size_t,size_t&)",
			"::stappler::memory::Allocator<class>::deallocate(T*,size_t)",
			"::stappler::memory::Allocator<class>::__deallocate(T*,size_t,size_t)",
			"::stappler::memory::Allocator<class>::operator==<class>(Allocator<B> const&) const",
			"::stappler::memory::Allocator<class>::operator!=<class>(Allocator<B> const&) const",
			"::stappler::memory::Allocator<class>::address(stappler::memory::Allocator::reference) const",
			"::stappler::memory::Allocator<class>::address(stappler::memory::Allocator::const_reference) const",
			"::stappler::memory::Allocator<class>::max_size() const",
			"::stappler::memory::Allocator<class>::construct<typename>(stappler::memory::Allocator::pointer,Args &&...)",
			"::stappler::memory::Allocator<class>::destroy(stappler::memory::Allocator::pointer)",
			"::stappler::memory::Allocator<class>::destroy(stappler::memory::Allocator::pointer,size_t)",
			"::stappler::memory::Allocator<class>::operator pool_t*() const",
			"::stappler::memory::Allocator<class>::getPool() const",
			"::stappler::memory::Allocator<class>::copy(T*,T const*,size_t)",
			"::stappler::memory::Allocator<class>::copy_rewrite(T*,size_t,T const*,size_t)",
			"::stappler::memory::Allocator<class>::move(T*,T*,size_t)",
			"::stappler::memory::Allocator<class>::move_rewrite(T*,size_t,T*,size_t)",
			"::stappler::memory::Allocator<class>::test(stappler::memory::Allocator::AllocFlag) const",
			"::stappler::memory::Allocator<class>::set(stappler::memory::Allocator::AllocFlag)",
			"::stappler::memory::Allocator<class>::reset(stappler::memory::Allocator::AllocFlag)",
			"::stappler::memory::Allocator<class>::flip(stappler::memory::Allocator::AllocFlag)",
			"::stappler::memory::Allocator<class>::pool",
			"::stappler::memory::Storage<typename>",
			"::stappler::memory::Storage<typename>::Image",
			"::stappler::memory::Storage<typename>::Image::_value",
			"::stappler::memory::Storage<typename>::_storage",
			"::stappler::memory::Storage<typename>::Storage()",
			"::stappler::memory::Storage<typename>::Storage(stappler::nullptr_t)",
			"::stappler::memory::Storage<typename>::addr()",
			"::stappler::memory::Storage<typename>::addr() const",
			"::stappler::memory::Storage<typename>::ptr()",
			"::stappler::memory::Storage<typename>::ptr() const",
			"::stappler::memory::Storage<typename>::ref()",
			"::stappler::memory::Storage<typename>::ref() const",
			"::stappler::memory::AllocPool::cleanupObjectFromPool<typename>(void*)",
			"::stappler::memory::AllocPool::registerCleanupDestructor<typename>(T*,stappler::mempool::base::pool_t*)"
		],
		"SPMemDict.h":  [
			"STAPPLER_COMMON_MEMORY_SPMEMDICT_H_",
			"::stappler::memory::dict<typename,typename,typename>",
			"::stappler::memory::dict<typename,typename,typename>::key_type",
			"::stappler::memory::dict<typename,typename,typename>::mapped_type",
			"::stappler::memory::dict<typename,typename,typename>::value_type",
			"::stappler::memory::dict<typename,typename,typename>::key_compare",
			"::stappler::memory::dict<typename,typename,typename>::comparator_type",
			"::stappler::memory::dict<typename,typename,typename>::allocator_type",
			"::stappler::memory::dict<typename,typename,typename>::pointer",
			"::stappler::memory::dict<typename,typename,typename>::const_pointer",
			"::stappler::memory::dict<typename,typename,typename>::reference",
			"::stappler::memory::dict<typename,typename,typename>::const_reference",
			"::stappler::memory::dict<typename,typename,typename>::vector_type",
			"::stappler::memory::dict<typename,typename,typename>::iterator",
			"::stappler::memory::dict<typename,typename,typename>::const_iterator",
			"::stappler::memory::dict<typename,typename,typename>::reverse_iterator",
			"::stappler::memory::dict<typename,typename,typename>::const_reverse_iterator",
			"::stappler::memory::dict<typename,typename,typename>::size_type",
			"::stappler::memory::dict<typename,typename,typename>::difference_type",
			"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>",
			"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>::operator()(stappler::memory::dict::value_type const&,T const&)",
			"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>::operator()(T const&,stappler::memory::dict::value_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>::operator()(stappler::memory::dict::value_type const&,stappler::memory::dict::value_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>::comp",
			"::stappler::memory::dict<typename,typename,typename>::dict()",
			"::stappler::memory::dict<typename,typename,typename>::dict(Comp const&,stappler::memory::dict::allocator_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::dict(stappler::memory::dict::allocator_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::dict<class>(InputIterator,InputIterator,Comp const&,stappler::memory::dict::allocator_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::dict<class>(InputIterator,InputIterator,stappler::memory::dict::allocator_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::dict(const dict<Key, Value, Comp>&)",
			"::stappler::memory::dict<typename,typename,typename>::dict(const dict<Key, Value, Comp>&,stappler::memory::dict::allocator_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::dict(dict<Key, Value, Comp>&&)",
			"::stappler::memory::dict<typename,typename,typename>::dict(dict<Key, Value, Comp>&&,stappler::memory::dict::allocator_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::dict(InitializerList<stappler::memory::dict::value_type>,Comp const&,stappler::memory::dict::allocator_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::dict(InitializerList<stappler::memory::dict::value_type>,stappler::memory::dict::allocator_type const&)",
			"::stappler::memory::dict<typename,typename,typename>::operator=(const dict<Key, Value, Comp>&)",
			"::stappler::memory::dict<typename,typename,typename>::operator=(dict<Key, Value, Comp>&&)",
			"::stappler::memory::dict<typename,typename,typename>::operator=(InitializerList<stappler::memory::dict::value_type>)",
			"::stappler::memory::dict<typename,typename,typename>::reserve(stappler::memory::dict::size_type)",
			"::stappler::memory::dict<typename,typename,typename>::get_allocator() const",
			"::stappler::memory::dict<typename,typename,typename>::empty() const",
			"::stappler::memory::dict<typename,typename,typename>::size() const",
			"::stappler::memory::dict<typename,typename,typename>::clear()",
			"::stappler::memory::dict<typename,typename,typename>::begin()",
			"::stappler::memory::dict<typename,typename,typename>::end()",
			"::stappler::memory::dict<typename,typename,typename>::begin() const",
			"::stappler::memory::dict<typename,typename,typename>::end() const",
			"::stappler::memory::dict<typename,typename,typename>::cbegin() const",
			"::stappler::memory::dict<typename,typename,typename>::cend() const",
			"::stappler::memory::dict<typename,typename,typename>::rbegin()",
			"::stappler::memory::dict<typename,typename,typename>::rend()",
			"::stappler::memory::dict<typename,typename,typename>::rbegin() const",
			"::stappler::memory::dict<typename,typename,typename>::rend() const",
			"::stappler::memory::dict<typename,typename,typename>::crbegin() const",
			"::stappler::memory::dict<typename,typename,typename>::crend() const",
			"::stappler::memory::dict<typename,typename,typename>::insert<class>(P&&)",
			"::stappler::memory::dict<typename,typename,typename>::insert<class>(stappler::memory::dict::const_iterator,P&&)",
			"::stappler::memory::dict<typename,typename,typename>::insert<class>(InputIt,InputIt)",
			"::stappler::memory::dict<typename,typename,typename>::insert(InitializerList<stappler::memory::dict::value_type>)",
			"::stappler::memory::dict<typename,typename,typename>::insert_or_assign<class>(stappler::memory::dict::key_type const&,M&&)",
			"::stappler::memory::dict<typename,typename,typename>::insert_or_assign<class>(stappler::memory::dict::key_type&&,M&&)",
			"::stappler::memory::dict<typename,typename,typename>::insert_or_assign<class>(stappler::memory::dict::const_iterator,stappler::memory::dict::key_type const&,M&&)",
			"::stappler::memory::dict<typename,typename,typename>::insert_or_assign<class>(stappler::memory::dict::const_iterator,stappler::memory::dict::key_type&&,M&&)",
			"::stappler::memory::dict<typename,typename,typename>::emplace<class>(Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::emplace_hint<class>(stappler::memory::dict::const_iterator,Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::try_emplace<class>(stappler::memory::dict::key_type const&,Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::try_emplace<class>(stappler::memory::dict::key_type&&,Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::try_emplace<class>(stappler::memory::dict::const_iterator,stappler::memory::dict::key_type const&,Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::try_emplace<class>(stappler::memory::dict::const_iterator,stappler::memory::dict::key_type&&,Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::erase(stappler::memory::dict::iterator)",
			"::stappler::memory::dict<typename,typename,typename>::erase(stappler::memory::dict::const_iterator)",
			"::stappler::memory::dict<typename,typename,typename>::erase(stappler::memory::dict::const_iterator,stappler::memory::dict::const_iterator)",
			"::stappler::memory::dict<typename,typename,typename>::erase<class>(K const&)",
			"::stappler::memory::dict<typename,typename,typename>::find<class>(K const&)",
			"::stappler::memory::dict<typename,typename,typename>::find<class>(K const&) const",
			"::stappler::memory::dict<typename,typename,typename>::lower_bound<class>(K const&)",
			"::stappler::memory::dict<typename,typename,typename>::lower_bound<class>(K const&) const",
			"::stappler::memory::dict<typename,typename,typename>::upper_bound<class>(K const&)",
			"::stappler::memory::dict<typename,typename,typename>::upper_bound<class>(K const&) const",
			"::stappler::memory::dict<typename,typename,typename>::equal_range<class>(K const&)",
			"::stappler::memory::dict<typename,typename,typename>::equal_range<class>(K const&) const",
			"::stappler::memory::dict<typename,typename,typename>::count<class>(K const&) const",
			"::stappler::memory::dict<typename,typename,typename>::do_equal_check<typename,typename>(L const&,R const&) const",
			"::stappler::memory::dict<typename,typename,typename>::do_insert_or_assign<typename,class>(K&&,M&&)",
			"::stappler::memory::dict<typename,typename,typename>::do_insert_or_assign<typename,class>(stappler::memory::dict::const_iterator,K&&,M&&)",
			"::stappler::memory::dict<typename,typename,typename>::do_try_emplace<typename,typename>(K&&,Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::do_try_emplace<typename,typename>(stappler::memory::dict::const_iterator,K&&,Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::do_insert<class,class>(Pair<A, B> const&)",
			"::stappler::memory::dict<typename,typename,typename>::do_insert<class,class>(Pair<A, B>&&)",
			"::stappler::memory::dict<typename,typename,typename>::do_insert<class,class>(stappler::memory::dict::const_iterator,Pair<A, B> const&)",
			"::stappler::memory::dict<typename,typename,typename>::do_insert<class,class>(stappler::memory::dict::const_iterator,Pair<A, B>&&)",
			"::stappler::memory::dict<typename,typename,typename>::do_assign<class,class>(stappler::memory::dict::iterator,T&&,Args &&...)",
			"::stappler::memory::dict<typename,typename,typename>::do_erase<class>(K const&)",
			"::stappler::memory::dict<typename,typename,typename>::do_find<class>(K const&)",
			"::stappler::memory::dict<typename,typename,typename>::do_find<class>(K const&) const",
			"::stappler::memory::dict<typename,typename,typename>::do_count<class>(K const&) const",
			"::stappler::memory::dict<typename,typename,typename>::_data",
			"::stappler::memory::dict<typename,typename,typename>::_comp",
			"::stappler::memory::operator==<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)",
			"::stappler::memory::operator<<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)",
			"::stappler::memory::operator!=<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)",
			"::stappler::memory::operator><typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)",
			"::stappler::memory::operator<=<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)",
			"::stappler::memory::operator>=<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)"
		],
		"SPMemFunction.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMFUNCTION_H_",
			"::stappler::memory::check_signature<typename,typename,typename>",
			"::stappler::memory::check_signature<Func,Ret(Args...),typenamestd::enable_if<std::is_convertible<decltype(std::declval<Func>()(std::declval<Args>()...)),Ret>::value,void>::type>::check_signature<Func,Ret(Args...),typenamestd::enable_if<std::is_convertible<decltype(std::declval<Func>()(std::declval<Args>()...)),Ret>::value,void>::type>",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function<ReturnType(ArgumentTypes...)>",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::signature_type",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::allocator_type",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::~function()",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function(stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type const&)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function(stappler::nullptr_t,stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type const&)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator=(stappler::nullptr_t)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function(function<type-parameter-0-0 (type-parameter-0-1...)> const&,stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type const&)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator=(function<type-parameter-0-0 (type-parameter-0-1...)> const&)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function(function<type-parameter-0-0 (type-parameter-0-1...)>&&,stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type const&)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator=(function<type-parameter-0-0 (type-parameter-0-1...)>&&)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator=<typename>(FunctionT&&)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator()(ArgumentTypes...) const",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator bool() const",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator==(stappler::nullptr_t) const",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator!=(stappler::nullptr_t) const",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::get_allocator() const",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::OptBufferSize",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::invoke_pointer",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::destroy_pointer",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::copy_pointer",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::move_pointer",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits::invoke",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits::destroy",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits::copy",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits::move",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::traits_callback",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::makeFunctionTraits<typename>()",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::makeFreeFunction<typename>(FunctionT&&,stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type&,uint8_t*)",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::clear()",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::mAllocator",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::mCallback",
			"::stappler::memory::function<ReturnType(ArgumentTypes...)>::mBuffer",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback<ReturnType(ArgumentTypes...)>",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::signature_type",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::~callback()",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback(stappler::nullptr_t)",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=(stappler::nullptr_t)",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback<typename>(FunctionT const&)",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=<typename>(FunctionT const&)",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback<typename,typename>(FunctionType(ClassType::*))",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=<typename,typename>(FunctionType(ClassType::*))",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback(callback<type-parameter-0-0 (type-parameter-0-1...)> const&)",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=(callback<type-parameter-0-0 (type-parameter-0-1...)> const&)",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback(callback<type-parameter-0-0 (type-parameter-0-1...)>&&)",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=(callback<type-parameter-0-0 (type-parameter-0-1...)>&&)",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator()(ArgumentTypes...) const",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator bool() const",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::FunctionPointer",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::makeMemberFunction<typename,typename,typename>(FunctionType(ClassType::*))",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::mFunctor",
			"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::mCallback"
		],
		"SPMemInterface.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMINTERFACE_H_",
			"::stappler::memory::PoolInterface",
			"::stappler::memory::PoolInterface::AllocBaseType",
			"::stappler::memory::PoolInterface::StringType",
			"::stappler::memory::PoolInterface::WideStringType",
			"::stappler::memory::PoolInterface::BytesType",
			"::stappler::memory::PoolInterface::BasicStringType<typename>",
			"::stappler::memory::PoolInterface::ArrayType<typename>",
			"::stappler::memory::PoolInterface::DictionaryType<typename>",
			"::stappler::memory::PoolInterface::VectorType<typename>",
			"::stappler::memory::PoolInterface::MapType<typename,typename,typename>",
			"::stappler::memory::PoolInterface::SetType<typename,typename>",
			"::stappler::memory::PoolInterface::FunctionType<typename>",
			"::stappler::memory::PoolInterface::StringStreamType",
			"::stappler::memory::PoolInterface::usesMemoryPool()",
			"::stappler::memory::StandartInterface",
			"::stappler::memory::StandartInterface::AllocBaseType",
			"::stappler::memory::StandartInterface::StringType",
			"::stappler::memory::StandartInterface::WideStringType",
			"::stappler::memory::StandartInterface::BytesType",
			"::stappler::memory::StandartInterface::BasicStringType<typename>",
			"::stappler::memory::StandartInterface::ArrayType<typename>",
			"::stappler::memory::StandartInterface::DictionaryType<typename>",
			"::stappler::memory::StandartInterface::VectorType<typename>",
			"::stappler::memory::StandartInterface::MapType<typename,typename,typename>",
			"::stappler::memory::StandartInterface::SetType<typename,typename>",
			"::stappler::memory::StandartInterface::FunctionType<typename>",
			"::stappler::memory::StandartInterface::StringStreamType",
			"::stappler::memory::StandartInterface::usesMemoryPool()",
			"::stappler::traits::SelectStringStream<std::string>::SelectStringStream<std::string>",
			"::stappler::traits::SelectStringStream<std::string>::Type",
			"::stappler::traits::SelectStringStream<std::u16string>::SelectStringStream<std::u16string>",
			"::stappler::traits::SelectStringStream<std::u16string>::Type",
			"::stappler::traits::SelectStringStream<memory::string>::SelectStringStream<memory::string>",
			"::stappler::traits::SelectStringStream<memory::string>::Type",
			"::stappler::traits::SelectStringStream<memory::basic_string<char16_t>>::SelectStringStream<memory::basic_string<char16_t>>",
			"::stappler::traits::SelectStringStream<memory::basic_string<char16_t>>::Type",
			"::stappler::Callback<typename>",
			"::stappler::StringToNumber<typename>(memory::StandartInterface::StringType const&)",
			"::stappler::StringToNumber<typename>(memory::PoolInterface::StringType const&)",
			"::stappler::StringToNumber<typename>(char const*)"
		],
		"SPMemMap.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMMAP_H_",
			"::stappler::memory::map<typename,typename,typename>",
			"::stappler::memory::map<typename,typename,typename>::key_type",
			"::stappler::memory::map<typename,typename,typename>::mapped_type",
			"::stappler::memory::map<typename,typename,typename>::value_type",
			"::stappler::memory::map<typename,typename,typename>::key_compare",
			"::stappler::memory::map<typename,typename,typename>::allocator_type",
			"::stappler::memory::map<typename,typename,typename>::pointer",
			"::stappler::memory::map<typename,typename,typename>::const_pointer",
			"::stappler::memory::map<typename,typename,typename>::reference",
			"::stappler::memory::map<typename,typename,typename>::const_reference",
			"::stappler::memory::map<typename,typename,typename>::tree_type",
			"::stappler::memory::map<typename,typename,typename>::iterator",
			"::stappler::memory::map<typename,typename,typename>::const_iterator",
			"::stappler::memory::map<typename,typename,typename>::reverse_iterator",
			"::stappler::memory::map<typename,typename,typename>::const_reverse_iterator",
			"::stappler::memory::map<typename,typename,typename>::size_type",
			"::stappler::memory::map<typename,typename,typename>::difference_type",
			"::stappler::memory::map<typename,typename,typename>::map()",
			"::stappler::memory::map<typename,typename,typename>::map(Comp const&,stappler::memory::map::allocator_type const&)",
			"::stappler::memory::map<typename,typename,typename>::map(stappler::memory::map::allocator_type const&)",
			"::stappler::memory::map<typename,typename,typename>::map<class>(InputIterator,InputIterator,Comp const&,stappler::memory::map::allocator_type const&)",
			"::stappler::memory::map<typename,typename,typename>::map<class>(InputIterator,InputIterator,stappler::memory::map::allocator_type const&)",
			"::stappler::memory::map<typename,typename,typename>::map(const map<Key, Value, Comp>&)",
			"::stappler::memory::map<typename,typename,typename>::map(const map<Key, Value, Comp>&,stappler::memory::map::allocator_type const&)",
			"::stappler::memory::map<typename,typename,typename>::map(map<Key, Value, Comp>&&)",
			"::stappler::memory::map<typename,typename,typename>::map(map<Key, Value, Comp>&&,stappler::memory::map::allocator_type const&)",
			"::stappler::memory::map<typename,typename,typename>::map(InitializerList<stappler::memory::map::value_type>,Comp const&,stappler::memory::map::allocator_type const&)",
			"::stappler::memory::map<typename,typename,typename>::map(InitializerList<stappler::memory::map::value_type>,stappler::memory::map::allocator_type const&)",
			"::stappler::memory::map<typename,typename,typename>::operator=(const map<Key, Value, Comp>&)",
			"::stappler::memory::map<typename,typename,typename>::operator=(map<Key, Value, Comp>&&)",
			"::stappler::memory::map<typename,typename,typename>::operator=(InitializerList<stappler::memory::map::value_type>)",
			"::stappler::memory::map<typename,typename,typename>::get_allocator() const",
			"::stappler::memory::map<typename,typename,typename>::empty() const",
			"::stappler::memory::map<typename,typename,typename>::size() const",
			"::stappler::memory::map<typename,typename,typename>::capacity() const",
			"::stappler::memory::map<typename,typename,typename>::clear()",
			"::stappler::memory::map<typename,typename,typename>::shrink_to_fit()",
			"::stappler::memory::map<typename,typename,typename>::set_memory_persistent(bool)",
			"::stappler::memory::map<typename,typename,typename>::memory_persistent() const",
			"::stappler::memory::map<typename,typename,typename>::at(Key const&)",
			"::stappler::memory::map<typename,typename,typename>::at(Key const&) const",
			"::stappler::memory::map<typename,typename,typename>::operator[](Key const&)",
			"::stappler::memory::map<typename,typename,typename>::operator[](Key&&)",
			"::stappler::memory::map<typename,typename,typename>::begin()",
			"::stappler::memory::map<typename,typename,typename>::end()",
			"::stappler::memory::map<typename,typename,typename>::begin() const",
			"::stappler::memory::map<typename,typename,typename>::end() const",
			"::stappler::memory::map<typename,typename,typename>::cbegin() const",
			"::stappler::memory::map<typename,typename,typename>::cend() const",
			"::stappler::memory::map<typename,typename,typename>::rbegin()",
			"::stappler::memory::map<typename,typename,typename>::rend()",
			"::stappler::memory::map<typename,typename,typename>::rbegin() const",
			"::stappler::memory::map<typename,typename,typename>::rend() const",
			"::stappler::memory::map<typename,typename,typename>::crbegin() const",
			"::stappler::memory::map<typename,typename,typename>::crend() const",
			"::stappler::memory::map<typename,typename,typename>::swap(map<Key, Value, Comp>&)",
			"::stappler::memory::map<typename,typename,typename>::insert<class>(P&&)",
			"::stappler::memory::map<typename,typename,typename>::insert<class>(stappler::memory::map::const_iterator,P&&)",
			"::stappler::memory::map<typename,typename,typename>::insert<class>(InputIt,InputIt)",
			"::stappler::memory::map<typename,typename,typename>::insert(InitializerList<stappler::memory::map::value_type>)",
			"::stappler::memory::map<typename,typename,typename>::insert_or_assign<class>(stappler::memory::map::key_type const&,M&&)",
			"::stappler::memory::map<typename,typename,typename>::insert_or_assign<class>(stappler::memory::map::key_type&&,M&&)",
			"::stappler::memory::map<typename,typename,typename>::insert_or_assign<class>(stappler::memory::map::const_iterator,stappler::memory::map::key_type const&,M&&)",
			"::stappler::memory::map<typename,typename,typename>::insert_or_assign<class>(stappler::memory::map::const_iterator,stappler::memory::map::key_type&&,M&&)",
			"::stappler::memory::map<typename,typename,typename>::emplace<class>(Args &&...)",
			"::stappler::memory::map<typename,typename,typename>::emplace_hint<class>(stappler::memory::map::const_iterator,Args &&...)",
			"::stappler::memory::map<typename,typename,typename>::try_emplace<class>(stappler::memory::map::key_type const&,Args &&...)",
			"::stappler::memory::map<typename,typename,typename>::try_emplace<class>(stappler::memory::map::key_type&&,Args &&...)",
			"::stappler::memory::map<typename,typename,typename>::try_emplace<class>(stappler::memory::map::const_iterator,stappler::memory::map::key_type const&,Args &&...)",
			"::stappler::memory::map<typename,typename,typename>::try_emplace<class>(stappler::memory::map::const_iterator,stappler::memory::map::key_type&&,Args &&...)",
			"::stappler::memory::map<typename,typename,typename>::erase(stappler::memory::map::const_iterator)",
			"::stappler::memory::map<typename,typename,typename>::erase(stappler::memory::map::const_iterator,stappler::memory::map::const_iterator)",
			"::stappler::memory::map<typename,typename,typename>::erase(stappler::memory::map::key_type const&)",
			"::stappler::memory::map<typename,typename,typename>::find<class>(K const&)",
			"::stappler::memory::map<typename,typename,typename>::find<class>(K const&) const",
			"::stappler::memory::map<typename,typename,typename>::lower_bound<class>(K const&)",
			"::stappler::memory::map<typename,typename,typename>::lower_bound<class>(K const&) const",
			"::stappler::memory::map<typename,typename,typename>::upper_bound<class>(K const&)",
			"::stappler::memory::map<typename,typename,typename>::upper_bound<class>(K const&) const",
			"::stappler::memory::map<typename,typename,typename>::equal_range<class>(K const&)",
			"::stappler::memory::map<typename,typename,typename>::equal_range<class>(K const&) const",
			"::stappler::memory::map<typename,typename,typename>::count<class>(K const&) const",
			"::stappler::memory::map<typename,typename,typename>::reserve(size_t)",
			"::stappler::memory::map<typename,typename,typename>::do_insert<class,class>(Pair<A, B> const&)",
			"::stappler::memory::map<typename,typename,typename>::do_insert<class,class>(Pair<A, B>&&)",
			"::stappler::memory::map<typename,typename,typename>::do_insert<class,class>(stappler::memory::map::const_iterator,Pair<A, B> const&)",
			"::stappler::memory::map<typename,typename,typename>::do_insert<class,class>(stappler::memory::map::const_iterator,Pair<A, B>&&)",
			"::stappler::memory::map<typename,typename,typename>::do_assign<class,class>(stappler::memory::map::iterator,T&&,Args &&...)",
			"::stappler::memory::map<typename,typename,typename>::_tree",
			"::stappler::memory::operator==<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)",
			"::stappler::memory::operator<<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)",
			"::stappler::memory::operator!=<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)",
			"::stappler::memory::operator><typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)",
			"::stappler::memory::operator<=<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)",
			"::stappler::memory::operator>=<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)"
		],
		"SPMemPointerIterator.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMPOINTERITERATOR_H_",
			"::stappler::memory::pointer_iterator<class,class,class>",
			"::stappler::memory::pointer_iterator<class,class,class>::iterator_category",
			"::stappler::memory::pointer_iterator<class,class,class>::size_type",
			"::stappler::memory::pointer_iterator<class,class,class>::pointer",
			"::stappler::memory::pointer_iterator<class,class,class>::reference",
			"::stappler::memory::pointer_iterator<class,class,class>::iterator",
			"::stappler::memory::pointer_iterator<class,class,class>::difference_type",
			"::stappler::memory::pointer_iterator<class,class,class>::value_type",
			"::stappler::memory::pointer_iterator<class,class,class>::pointer_iterator()",
			"::stappler::memory::pointer_iterator<class,class,class>::pointer_iterator(stappler::memory::pointer_iterator::iterator const&)",
			"::stappler::memory::pointer_iterator<class,class,class>::pointer_iterator(stappler::memory::pointer_iterator::pointer)",
			"::stappler::memory::pointer_iterator<class,class,class>::operator=(stappler::memory::pointer_iterator::iterator const&)",
			"::stappler::memory::pointer_iterator<class,class,class>::operator==(stappler::memory::pointer_iterator::iterator const&) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator!=(stappler::memory::pointer_iterator::iterator const&) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator<(stappler::memory::pointer_iterator::iterator const&) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator>(stappler::memory::pointer_iterator::iterator const&) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator<=(stappler::memory::pointer_iterator::iterator const&) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator>=(stappler::memory::pointer_iterator::iterator const&) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator++()",
			"::stappler::memory::pointer_iterator<class,class,class>::operator++(int)",
			"::stappler::memory::pointer_iterator<class,class,class>::operator--()",
			"::stappler::memory::pointer_iterator<class,class,class>::operator--(int)",
			"::stappler::memory::pointer_iterator<class,class,class>::operator+=(stappler::memory::pointer_iterator::size_type)",
			"::stappler::memory::pointer_iterator<class,class,class>::operator-=(stappler::memory::pointer_iterator::size_type)",
			"::stappler::memory::pointer_iterator<class,class,class>::operator-(stappler::memory::pointer_iterator::iterator const&) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator*() const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator->() const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator[](stappler::memory::pointer_iterator::size_type) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator-(stappler::memory::pointer_iterator::pointer) const",
			"::stappler::memory::pointer_iterator<class,class,class>::operator pointer_iterator<value_type,const value_type*,const value_type&>() const",
			"::stappler::memory::pointer_iterator<class,class,class>::current"
		],
		"SPMemPoolApi.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMPOOLAPI_H_",
			"::stappler::memory::SUCCESS",
			"::stappler::memory::pool::context<typename>",
			"::stappler::memory::pool::context<typename>::pool_type",
			"::stappler::memory::pool::context<typename>::context(stappler::memory::pool::context::pool_type&)",
			"::stappler::memory::pool::context<typename>::context(stappler::memory::pool::context::pool_type&,uint32_t)",
			"::stappler::memory::pool::context<typename>::~context()",
			"::stappler::memory::pool::context<typename>::context(const context<_Pool>&)",
			"::stappler::memory::pool::context<typename>::operator=(const context<_Pool>&)",
			"::stappler::memory::pool::context<typename>::context(context<_Pool>&&)",
			"::stappler::memory::pool::context<typename>::operator=(context<_Pool>&&)",
			"::stappler::memory::pool::context<typename>::push()",
			"::stappler::memory::pool::context<typename>::push(uint32_t)",
			"::stappler::memory::pool::context<typename>::pop()",
			"::stappler::memory::pool::context<typename>::swap(context<_Pool>&)",
			"::stappler::memory::pool::context<typename>::owns() const",
			"::stappler::memory::pool::context<typename>::operator bool() const",
			"::stappler::memory::pool::context<typename>::pool() const",
			"::stappler::memory::pool::context<typename>::_pool",
			"::stappler::memory::pool::context<typename>::_owns"
		],
		"SPMemPoolConfig.h":  [
			"STAPPLER_CORE_MEMORY_POOL_SPMEMPOOLCONFIG_H_",
			"::stappler::mempool::apr::SPAprDefined",
			"::stappler::mempool::custom::Status",
			"::stappler::mempool::custom::BlockThreshold",
			"::stappler::mempool::custom::SPALIGN(size_t,uint32_t)",
			"::stappler::mempool::custom::SPALIGN_DEFAULT(size_t)",
			"::stappler::mempool::custom::BOUNDARY_INDEX",
			"::stappler::mempool::custom::BOUNDARY_SIZE",
			"::stappler::mempool::custom::MIN_ALLOC",
			"::stappler::mempool::custom::MAX_INDEX",
			"::stappler::mempool::custom::ALLOCATOR_MAX_FREE_UNLIMITED",
			"::stappler::mempool::custom::ALLOCATOR_MMAP_RESERVED",
			"::stappler::mempool::custom::SUCCESS",
			"::stappler::mempool::custom::POOL_MAGIC",
			"::stappler::mempool::custom::PoolFlags",
			"::stappler::mempool::custom::operator|(stappler::mempool::custom::PoolFlags const&,stappler::mempool::custom::PoolFlags const&)",
			"::stappler::mempool::custom::operator&(stappler::mempool::custom::PoolFlags const&,stappler::mempool::custom::PoolFlags const&)",
			"::stappler::mempool::custom::operator^(stappler::mempool::custom::PoolFlags const&,stappler::mempool::custom::PoolFlags const&)",
			"::stappler::mempool::custom::operator|=(stappler::mempool::custom::PoolFlags&,stappler::mempool::custom::PoolFlags const&)",
			"::stappler::mempool::custom::operator&=(stappler::mempool::custom::PoolFlags&,stappler::mempool::custom::PoolFlags const&)",
			"::stappler::mempool::custom::operator^=(stappler::mempool::custom::PoolFlags&,stappler::mempool::custom::PoolFlags const&)",
			"::stappler::mempool::custom::operator==(stappler::mempool::custom::PoolFlags const&,std::underlying_type<PoolFlags>::type const&)",
			"::stappler::mempool::custom::operator==(std::underlying_type<PoolFlags>::type const&,stappler::mempool::custom::PoolFlags const&)",
			"::stappler::mempool::custom::operator!=(stappler::mempool::custom::PoolFlags const&,std::underlying_type<PoolFlags>::type const&)",
			"::stappler::mempool::custom::operator!=(std::underlying_type<PoolFlags>::type const&,stappler::mempool::custom::PoolFlags const&)",
			"::stappler::mempool::custom::operator~(stappler::mempool::custom::PoolFlags const&)"
		],
		"SPMemPoolInterface.h":  [
			"STAPPLER_CORE_MEMORY_POOL_SPMEMPOOLINTERFACE_H_",
			"::stappler::mempool::base::pool_t",
			"::stappler::mempool::base::status_t",
			"::stappler::mempool::base::allocator_t",
			"::stappler::mempool::base::cleanup_fn",
			"::stappler::mempool::base::PoolFlags",
			"::stappler::mempool::base::get_mapped_regions_count()",
			"::stappler::mempool::base::sp_mmap(void*,size_t,int,int,int,off_t)",
			"::stappler::mempool::base::sp_munmap(void*,size_t)",
			"::stappler::mempool::base::pool::acquire()",
			"::stappler::mempool::base::pool::info()",
			"::stappler::mempool::base::pool::push(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::push(stappler::mempool::base::pool_t*,uint32_t,void const*)",
			"::stappler::mempool::base::pool::pop()",
			"::stappler::mempool::base::pool::foreach_info(void*,bool(*)(void*,stappler::mempool::base::pool_t*,uint32_t,void const*))",
			"::stappler::mempool::base::allocator::create(bool)",
			"::stappler::mempool::base::allocator::create(void*)",
			"::stappler::mempool::base::allocator::createWithMmap(uint32_t)",
			"::stappler::mempool::base::allocator::owner_set(stappler::mempool::base::allocator_t*,stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::allocator::owner_get(stappler::mempool::base::allocator_t*)",
			"::stappler::mempool::base::allocator::max_free_set(stappler::mempool::base::allocator_t*,size_t)",
			"::stappler::mempool::base::allocator::destroy(stappler::mempool::base::allocator_t*)",
			"::stappler::mempool::base::pool::PoolFlags",
			"::stappler::mempool::base::pool::Info",
			"::stappler::mempool::base::pool::initialize()",
			"::stappler::mempool::base::pool::terminate()",
			"::stappler::mempool::base::pool::create(stappler::mempool::base::pool::PoolFlags)",
			"::stappler::mempool::base::pool::create(stappler::mempool::base::allocator_t*,stappler::mempool::base::pool::PoolFlags)",
			"::stappler::mempool::base::pool::create(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::createTagged(char const*,stappler::mempool::base::pool::PoolFlags)",
			"::stappler::mempool::base::pool::createTagged(stappler::mempool::base::pool_t*,char const*)",
			"::stappler::mempool::base::pool::destroy(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::clear(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::alloc(stappler::mempool::base::pool_t*,size_t&)",
			"::stappler::mempool::base::pool::palloc(stappler::mempool::base::pool_t*,size_t)",
			"::stappler::mempool::base::pool::calloc(stappler::mempool::base::pool_t*,size_t,size_t)",
			"::stappler::mempool::base::pool::free(stappler::mempool::base::pool_t*,void*,size_t)",
			"::stappler::mempool::base::pool::cleanup_kill(stappler::mempool::base::pool_t*,void*,stappler::mempool::base::cleanup_fn)",
			"::stappler::mempool::base::pool::cleanup_register(stappler::mempool::base::pool_t*,void*,stappler::mempool::base::cleanup_fn)",
			"::stappler::mempool::base::pool::cleanup_register(stappler::mempool::base::pool_t*,memory::function<void ()>&&)",
			"::stappler::mempool::base::pool::foreach_info(void*,bool(*)(void*,stappler::mempool::base::pool_t*,uint32_t,void const*))",
			"::stappler::mempool::base::pool::userdata_set(void const*,char const*,stappler::mempool::base::cleanup_fn,stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::userdata_setn(void const*,char const*,stappler::mempool::base::cleanup_fn,stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::userdata_get(void**,char const*,stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::userdata_get(void**,char const*,size_t,stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::get_allocator(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::pmemdup(stappler::mempool::base::pool_t*,void const*,size_t)",
			"::stappler::mempool::base::pool::pstrdup(stappler::mempool::base::pool_t*,char const*)",
			"::stappler::mempool::base::pool::isThreadSafeForAllocations(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::isThreadSafeAsParent(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::get_tag(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::get_allocated_bytes(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::get_return_bytes(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::get_active_count()",
			"::stappler::mempool::base::pool::debug_begin(stappler::mempool::base::pool_t*)",
			"::stappler::mempool::base::pool::debug_end()",
			"::stappler::mempool::base::pool::debug_foreach(void*,void(*)(void*,stappler::mempool::base::pool_t*))"
		],
		"SPMemPoolStruct.h":  [
			"STAPPLER_CORE_MEMORY_POOL_SPMEMPOOLSTRUCT_H_",
			"::stappler::mempool::custom::MemAddr",
			"::stappler::mempool::custom::MemAddr::size",
			"::stappler::mempool::custom::MemAddr::next",
			"::stappler::mempool::custom::MemAddr::address",
			"::stappler::mempool::custom::AllocManager",
			"::stappler::mempool::custom::AllocManager::AllocFn",
			"::stappler::mempool::custom::AllocManager::pool",
			"::stappler::mempool::custom::AllocManager::buffered",
			"::stappler::mempool::custom::AllocManager::free_buffered",
			"::stappler::mempool::custom::AllocManager::tag",
			"::stappler::mempool::custom::AllocManager::ptr",
			"::stappler::mempool::custom::AllocManager::alloc_buffer",
			"::stappler::mempool::custom::AllocManager::allocated",
			"::stappler::mempool::custom::AllocManager::returned",
			"::stappler::mempool::custom::AllocManager::opts",
			"::stappler::mempool::custom::AllocManager::reset(void*)",
			"::stappler::mempool::custom::AllocManager::alloc(size_t&,stappler::mempool::custom::AllocManager::AllocFn)",
			"::stappler::mempool::custom::AllocManager::free(void*,size_t,stappler::mempool::custom::AllocManager::AllocFn)",
			"::stappler::mempool::custom::AllocManager::increment_alloc(size_t)",
			"::stappler::mempool::custom::AllocManager::increment_return(size_t)",
			"::stappler::mempool::custom::AllocManager::get_alloc()",
			"::stappler::mempool::custom::AllocManager::get_return()",
			"::stappler::mempool::custom::MemNode",
			"::stappler::mempool::custom::MemNode::next",
			"::stappler::mempool::custom::MemNode::ref",
			"::stappler::mempool::custom::MemNode::index",
			"::stappler::mempool::custom::MemNode::free_index",
			"::stappler::mempool::custom::MemNode::first_avail",
			"::stappler::mempool::custom::MemNode::endp",
			"::stappler::mempool::custom::MemNode::insert(stappler::mempool::custom::MemNode*)",
			"::stappler::mempool::custom::MemNode::remove()",
			"::stappler::mempool::custom::MemNode::free_space() const",
			"::stappler::mempool::custom::Cleanup",
			"::stappler::mempool::custom::Cleanup::Callback",
			"::stappler::mempool::custom::Cleanup::next",
			"::stappler::mempool::custom::Cleanup::data",
			"::stappler::mempool::custom::Cleanup::fn",
			"::stappler::mempool::custom::Cleanup::run(stappler::mempool::custom::Cleanup**)",
			"::stappler::mempool::custom::Allocator",
			"::stappler::mempool::custom::Allocator::AllocMutex",
			"::stappler::mempool::custom::Allocator::last",
			"::stappler::mempool::custom::Allocator::max",
			"::stappler::mempool::custom::Allocator::current",
			"::stappler::mempool::custom::Allocator::owner",
			"::stappler::mempool::custom::Allocator::mutex",
			"::stappler::mempool::custom::Allocator::buf",
			"::stappler::mempool::custom::Allocator::allocated",
			"::stappler::mempool::custom::Allocator::getAllocatorsCount()",
			"::stappler::mempool::custom::Allocator::Allocator(bool)",
			"::stappler::mempool::custom::Allocator::~Allocator()",
			"::stappler::mempool::custom::Allocator::set_max(uint32_t)",
			"::stappler::mempool::custom::Allocator::alloc(uint32_t)",
			"::stappler::mempool::custom::Allocator::free(stappler::mempool::custom::MemNode*)",
			"::stappler::mempool::custom::Allocator::lock()",
			"::stappler::mempool::custom::Allocator::unlock()",
			"::stappler::mempool::custom::Allocator::mmapdes",
			"::stappler::mempool::custom::Allocator::mmapPtr",
			"::stappler::mempool::custom::Allocator::mmapCurrent",
			"::stappler::mempool::custom::Allocator::mmapMax",
			"::stappler::mempool::custom::Allocator::run_mmap(uint64_t)",
			"::stappler::mempool::custom::Allocator::allocationTracker",
			"::stappler::mempool::custom::Pool",
			"::stappler::mempool::custom::Pool::tag",
			"::stappler::mempool::custom::Pool::parent",
			"::stappler::mempool::custom::Pool::child",
			"::stappler::mempool::custom::Pool::sibling",
			"::stappler::mempool::custom::Pool::ref",
			"::stappler::mempool::custom::Pool::cleanups",
			"::stappler::mempool::custom::Pool::free_cleanups",
			"::stappler::mempool::custom::Pool::allocator",
			"::stappler::mempool::custom::Pool::active",
			"::stappler::mempool::custom::Pool::self",
			"::stappler::mempool::custom::Pool::self_first_avail",
			"::stappler::mempool::custom::Pool::pre_cleanups",
			"::stappler::mempool::custom::Pool::user_data",
			"::stappler::mempool::custom::Pool::allocmngr",
			"::stappler::mempool::custom::Pool::threadSafe",
			"::stappler::mempool::custom::Pool::create(stappler::mempool::custom::Allocator*,stappler::mempool::custom::PoolFlags)",
			"::stappler::mempool::custom::Pool::destroy(stappler::mempool::custom::Pool*)",
			"::stappler::mempool::custom::Pool::getPoolsCount()",
			"::stappler::mempool::custom::Pool::Pool()",
			"::stappler::mempool::custom::Pool::Pool(stappler::mempool::custom::Allocator*,stappler::mempool::custom::MemNode*,bool)",
			"::stappler::mempool::custom::Pool::Pool(stappler::mempool::custom::Pool*,stappler::mempool::custom::Allocator*,stappler::mempool::custom::MemNode*,bool)",
			"::stappler::mempool::custom::Pool::~Pool()",
			"::stappler::mempool::custom::Pool::alloc(size_t&)",
			"::stappler::mempool::custom::Pool::free(void*,size_t)",
			"::stappler::mempool::custom::Pool::palloc(size_t)",
			"::stappler::mempool::custom::Pool::calloc(size_t,size_t)",
			"::stappler::mempool::custom::Pool::pmemdup(void const*,size_t)",
			"::stappler::mempool::custom::Pool::pstrdup(char const*)",
			"::stappler::mempool::custom::Pool::clear()",
			"::stappler::mempool::custom::Pool::make_child()",
			"::stappler::mempool::custom::Pool::make_child(stappler::mempool::custom::Allocator*)",
			"::stappler::mempool::custom::Pool::cleanup_register(void const*,Cleanup::Callback)",
			"::stappler::mempool::custom::Pool::pre_cleanup_register(void const*,Cleanup::Callback)",
			"::stappler::mempool::custom::Pool::cleanup_kill(void*,Cleanup::Callback)",
			"::stappler::mempool::custom::Pool::cleanup_run(void*,Cleanup::Callback)",
			"::stappler::mempool::custom::Pool::userdata_set(void const*,char const*,Cleanup::Callback)",
			"::stappler::mempool::custom::Pool::userdata_setn(void const*,char const*,Cleanup::Callback)",
			"::stappler::mempool::custom::Pool::userdata_get(void**,char const*)",
			"::stappler::mempool::custom::Pool::userdata_get(void**,char const*,size_t)",
			"::stappler::mempool::custom::Pool::lock()",
			"::stappler::mempool::custom::Pool::unlock()",
			"::stappler::mempool::custom::HashFunc",
			"::stappler::mempool::custom::HashEntry",
			"::stappler::mempool::custom::HashEntry::next",
			"::stappler::mempool::custom::HashEntry::hash",
			"::stappler::mempool::custom::HashEntry::key",
			"::stappler::mempool::custom::HashEntry::klen",
			"::stappler::mempool::custom::HashEntry::val",
			"::stappler::mempool::custom::HashIndex",
			"::stappler::mempool::custom::HashIndex::ht",
			"::stappler::mempool::custom::HashIndex::_self",
			"::stappler::mempool::custom::HashIndex::_next",
			"::stappler::mempool::custom::HashIndex::index",
			"::stappler::mempool::custom::HashIndex::next()",
			"::stappler::mempool::custom::HashIndex::self(void const**,size_t*,void**)",
			"::stappler::mempool::custom::HashTable",
			"::stappler::mempool::custom::HashTable::merge_fn",
			"::stappler::mempool::custom::HashTable::foreach_fn",
			"::stappler::mempool::custom::HashTable::pool",
			"::stappler::mempool::custom::HashTable::array",
			"::stappler::mempool::custom::HashTable::iterator",
			"::stappler::mempool::custom::HashTable::count",
			"::stappler::mempool::custom::HashTable::max",
			"::stappler::mempool::custom::HashTable::seed",
			"::stappler::mempool::custom::HashTable::hash_func",
			"::stappler::mempool::custom::HashTable::free",
			"::stappler::mempool::custom::HashTable::init(stappler::mempool::custom::HashTable*,stappler::mempool::custom::Pool*)",
			"::stappler::mempool::custom::HashTable::make(stappler::mempool::custom::Pool*)",
			"::stappler::mempool::custom::HashTable::make(stappler::mempool::custom::Pool*,stappler::mempool::custom::HashFunc)",
			"::stappler::mempool::custom::HashTable::first(stappler::mempool::custom::Pool*)",
			"::stappler::mempool::custom::HashTable::copy(stappler::mempool::custom::Pool*) const",
			"::stappler::mempool::custom::HashTable::get(void const*,size_t)",
			"::stappler::mempool::custom::HashTable::set(void const*,size_t,void const*)",
			"::stappler::mempool::custom::HashTable::size() const",
			"::stappler::mempool::custom::HashTable::clear()",
			"::stappler::mempool::custom::HashTable::merge(stappler::mempool::custom::Pool*,stappler::mempool::custom::HashTable const*) const",
			"::stappler::mempool::custom::HashTable::merge(stappler::mempool::custom::Pool*,stappler::mempool::custom::HashTable const*,stappler::mempool::custom::HashTable::merge_fn,void const*) const",
			"::stappler::mempool::custom::HashTable::foreach(stappler::mempool::custom::HashTable::foreach_fn,void*) const",
			"::stappler::mempool::custom::initialize()",
			"::stappler::mempool::custom::terminate()",
			"::stappler::mempool::custom::create(stappler::mempool::custom::Pool*)",
			"::stappler::mempool::custom::destroy(stappler::mempool::custom::Pool*)",
			"::stappler::mempool::custom::clear(stappler::mempool::custom::Pool*)",
			"::stappler::mempool::custom::SIZEOF_MEMNODE",
			"::stappler::mempool::custom::SIZEOF_POOL"
		],
		"SPMemPriorityQueue.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMPRIORITYQUEUE_H_",
			"SP_PRIORITY_QUEUE_RANGE_DEBUG",
			"::stappler::memory::PriorityQueue_lock_noOp(void*)",
			"::stappler::memory::PriorityQueue_lock_std_mutex(void*)",
			"::stappler::memory::PriorityQueue_unlock_std_mutex(void*)",
			"::stappler::memory::PriorityQueue<typename>",
			"::stappler::memory::PriorityQueue<typename>::PreallocatedNodes",
			"::stappler::memory::PriorityQueue<typename>::StorageNodes",
			"::stappler::memory::PriorityQueue<typename>::LockFnPtr",
			"::stappler::memory::PriorityQueue<typename>::PriorityType",
			"::stappler::memory::PriorityQueue<typename>::AlignedStorage",
			"::stappler::memory::PriorityQueue<typename>::AlignedStorage::buffer",
			"::stappler::memory::PriorityQueue<typename>::Node",
			"::stappler::memory::PriorityQueue<typename>::Node::storage",
			"::stappler::memory::PriorityQueue<typename>::Node::next",
			"::stappler::memory::PriorityQueue<typename>::Node::block",
			"::stappler::memory::PriorityQueue<typename>::Node::priority",
			"::stappler::memory::PriorityQueue<typename>::StorageBlock",
			"::stappler::memory::PriorityQueue<typename>::StorageBlock::nodes",
			"::stappler::memory::PriorityQueue<typename>::StorageBlock::used",
			"::stappler::memory::PriorityQueue<typename>::LockInterface",
			"::stappler::memory::PriorityQueue<typename>::LockInterface::lockPtr",
			"::stappler::memory::PriorityQueue<typename>::LockInterface::lockFn",
			"::stappler::memory::PriorityQueue<typename>::LockInterface::unlockFn",
			"::stappler::memory::PriorityQueue<typename>::LockInterface::clear()",
			"::stappler::memory::PriorityQueue<typename>::LockInterface::lock()",
			"::stappler::memory::PriorityQueue<typename>::LockInterface::unlock()",
			"::stappler::memory::PriorityQueue<typename>::LockInterface::operator==(stappler::memory::PriorityQueue::LockInterface const&) const",
			"::stappler::memory::PriorityQueue<typename>::LockInterface::operator!=(stappler::memory::PriorityQueue::LockInterface const&) const",
			"::stappler::memory::PriorityQueue<typename>::NodeInterface",
			"::stappler::memory::PriorityQueue<typename>::NodeInterface::first",
			"::stappler::memory::PriorityQueue<typename>::NodeInterface::last",
			"::stappler::memory::PriorityQueue<typename>::NodeInterface::lock",
			"::stappler::memory::PriorityQueue<typename>::PriorityQueue()",
			"::stappler::memory::PriorityQueue<typename>::~PriorityQueue()",
			"::stappler::memory::PriorityQueue<typename>::PriorityQueue(const PriorityQueue<Value>&)",
			"::stappler::memory::PriorityQueue<typename>::operator=(const PriorityQueue<Value>&)",
			"::stappler::memory::PriorityQueue<typename>::PriorityQueue(PriorityQueue<Value>&&)",
			"::stappler::memory::PriorityQueue<typename>::operator=(PriorityQueue<Value>&&)",
			"::stappler::memory::PriorityQueue<typename>::capacity() const",
			"::stappler::memory::PriorityQueue<typename>::free_capacity()",
			"::stappler::memory::PriorityQueue<typename>::setQueueLocking(stappler::memory::PriorityQueue::LockFnPtr,stappler::memory::PriorityQueue::LockFnPtr,void*)",
			"::stappler::memory::PriorityQueue<typename>::setFreeLocking(stappler::memory::PriorityQueue::LockFnPtr,stappler::memory::PriorityQueue::LockFnPtr,void*)",
			"::stappler::memory::PriorityQueue<typename>::setLocking(stappler::memory::PriorityQueue::LockFnPtr,stappler::memory::PriorityQueue::LockFnPtr,void*)",
			"::stappler::memory::PriorityQueue<typename>::setQueueLocking(std::mutex&)",
			"::stappler::memory::PriorityQueue<typename>::setFreeLocking(std::mutex&)",
			"::stappler::memory::PriorityQueue<typename>::setLocking(std::mutex&)",
			"::stappler::memory::PriorityQueue<typename>::clear()",
			"::stappler::memory::PriorityQueue<typename>::empty()",
			"::stappler::memory::PriorityQueue<typename>::empty<class>(std::unique_lock<T>&)",
			"::stappler::memory::PriorityQueue<typename>::push<typename>(stappler::memory::PriorityQueue::PriorityType,bool,Args &&...)",
			"::stappler::memory::PriorityQueue<typename>::pop_prefix(callback<void (stappler::memory::PriorityQueue::PriorityType, Value &&)> const&)",
			"::stappler::memory::PriorityQueue<typename>::pop_direct(callback<void (stappler::memory::PriorityQueue::PriorityType, Value &&)> const&)",
			"::stappler::memory::PriorityQueue<typename>::foreach(callback<void (stappler::memory::PriorityQueue::PriorityType, const Value &)> const&)",
			"::stappler::memory::PriorityQueue<typename>::initNodes(stappler::memory::PriorityQueue::Node*,stappler::memory::PriorityQueue::Node*,stappler::memory::PriorityQueue::StorageBlock*)",
			"::stappler::memory::PriorityQueue<typename>::popNode()",
			"::stappler::memory::PriorityQueue<typename>::pushNode(stappler::memory::PriorityQueue::Node*,bool)",
			"::stappler::memory::PriorityQueue<typename>::allocateNode()",
			"::stappler::memory::PriorityQueue<typename>::freeNode(stappler::memory::PriorityQueue::Node*)",
			"::stappler::memory::PriorityQueue<typename>::allocateBlock(std::unique_lock<LockInterface>&)",
			"::stappler::memory::PriorityQueue<typename>::deallocateBlock(std::unique_lock<LockInterface>&,stappler::memory::PriorityQueue::StorageBlock*)",
			"::stappler::memory::PriorityQueue<typename>::_preallocated",
			"::stappler::memory::PriorityQueue<typename>::_queue",
			"::stappler::memory::PriorityQueue<typename>::_free",
			"::stappler::memory::PriorityQueue<typename>::_capacity"
		],
		"SPMemRbtree.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMRBTREE_H_",
			"SP_MEM_RBTREE_DEBUG",
			"::stappler::memory::rbtree::NodeColor",
			"::stappler::memory::rbtree::Storage<typename>",
			"::stappler::memory::rbtree::NodeBase",
			"::stappler::memory::rbtree::NodeBase::Flag",
			"::stappler::memory::rbtree::NodeBase::Flag::color",
			"::stappler::memory::rbtree::NodeBase::Flag::prealloc",
			"::stappler::memory::rbtree::NodeBase::Flag::index",
			"::stappler::memory::rbtree::NodeBase::Flag::size",
			"::stappler::memory::rbtree::NodeBase::parent",
			"::stappler::memory::rbtree::NodeBase::left",
			"::stappler::memory::rbtree::NodeBase::right",
			"::stappler::memory::rbtree::NodeBase::flag",
			"::stappler::memory::rbtree::NodeBase::NodeBase()",
			"::stappler::memory::rbtree::NodeBase::NodeBase(stappler::memory::rbtree::NodeColor)",
			"::stappler::memory::rbtree::NodeBase::setColor(stappler::memory::rbtree::NodeColor)",
			"::stappler::memory::rbtree::NodeBase::getColor() const",
			"::stappler::memory::rbtree::NodeBase::setPrealloc(bool)",
			"::stappler::memory::rbtree::NodeBase::isPrealloc() const",
			"::stappler::memory::rbtree::NodeBase::setSize(uintptr_t)",
			"::stappler::memory::rbtree::NodeBase::getSize() const",
			"::stappler::memory::rbtree::NodeBase::setIndex(uintptr_t)",
			"::stappler::memory::rbtree::NodeBase::getIndex() const",
			"::stappler::memory::rbtree::NodeBase::min(stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::NodeBase::min(stappler::memory::rbtree::NodeBase const*)",
			"::stappler::memory::rbtree::NodeBase::max(stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::NodeBase::max(stappler::memory::rbtree::NodeBase const*)",
			"::stappler::memory::rbtree::NodeBase::increment(stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::NodeBase::increment(stappler::memory::rbtree::NodeBase const*)",
			"::stappler::memory::rbtree::NodeBase::decrement(stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::NodeBase::decrement(stappler::memory::rbtree::NodeBase const*)",
			"::stappler::memory::rbtree::NodeBase::replace(stappler::memory::rbtree::NodeBase*,stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::NodeBase::insert(stappler::memory::rbtree::NodeBase*,stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::NodeBase::remove(stappler::memory::rbtree::NodeBase*,stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::Node<typename>",
			"::stappler::memory::rbtree::Node<typename>::value",
			"::stappler::memory::rbtree::Node<typename>::cast(stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::Node<typename>::cast(stappler::memory::rbtree::NodeBase const*)",
			"::stappler::memory::rbtree::TreeIterator<typename>",
			"::stappler::memory::rbtree::TreeIterator<typename>::iterator_category",
			"::stappler::memory::rbtree::TreeIterator<typename>::node_type",
			"::stappler::memory::rbtree::TreeIterator<typename>::value_type",
			"::stappler::memory::rbtree::TreeIterator<typename>::reference",
			"::stappler::memory::rbtree::TreeIterator<typename>::pointer",
			"::stappler::memory::rbtree::TreeIterator<typename>::difference_type",
			"::stappler::memory::rbtree::TreeIterator<typename>::self",
			"::stappler::memory::rbtree::TreeIterator<typename>::node_ptr",
			"::stappler::memory::rbtree::TreeIterator<typename>::link_ptr",
			"::stappler::memory::rbtree::TreeIterator<typename>::TreeIterator()",
			"::stappler::memory::rbtree::TreeIterator<typename>::TreeIterator(stappler::memory::rbtree::TreeIterator::node_ptr)",
			"::stappler::memory::rbtree::TreeIterator<typename>::operator*() const",
			"::stappler::memory::rbtree::TreeIterator<typename>::operator->() const",
			"::stappler::memory::rbtree::TreeIterator<typename>::operator++()",
			"::stappler::memory::rbtree::TreeIterator<typename>::operator++(int)",
			"::stappler::memory::rbtree::TreeIterator<typename>::operator--()",
			"::stappler::memory::rbtree::TreeIterator<typename>::operator--(int)",
			"::stappler::memory::rbtree::TreeIterator<typename>::operator==(stappler::memory::rbtree::TreeIterator::self const&) const",
			"::stappler::memory::rbtree::TreeIterator<typename>::operator!=(stappler::memory::rbtree::TreeIterator::self const&) const",
			"::stappler::memory::rbtree::TreeIterator<typename>::_node",
			"::stappler::memory::rbtree::TreeConstIterator<typename>",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::iterator_category",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::node_type",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::value_type",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::reference",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::pointer",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::iterator",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::difference_type",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::self",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::node_ptr",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::link_ptr",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::TreeConstIterator()",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::TreeConstIterator(stappler::memory::rbtree::TreeConstIterator::node_ptr)",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::TreeConstIterator(stappler::memory::rbtree::TreeConstIterator::iterator const&)",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::constcast() const",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::operator*() const",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::operator->() const",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::operator++()",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::operator++(int)",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::operator--()",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::operator--(int)",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::operator==(stappler::memory::rbtree::TreeConstIterator::self const&) const",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::operator!=(stappler::memory::rbtree::TreeConstIterator::self const&) const",
			"::stappler::memory::rbtree::TreeConstIterator<typename>::_node",
			"::stappler::memory::rbtree::operator==<typename>(TreeIterator<Value> const&,TreeConstIterator<Value> const&)",
			"::stappler::memory::rbtree::operator!=<typename>(TreeIterator<Value> const&,TreeConstIterator<Value> const&)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Key>::TreeKeyExtractor<Key,Key>",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Key>::extract(Key const&)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Key>::construct<typename,typename>(A&,Node<Key>*,Key const&,Args &&...)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Key>::construct<typename,typename>(A&,Node<Key>*,Key&&,Args &&...)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<Key,Value>>::TreeKeyExtractor<Key,Pair<Key,Value>>",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<Key,Value>>::extract(Pair<Key, Value> const&)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<Key,Value>>::construct<typename,typename>(A&,Node<Pair<Key, Value>>*,Key const&,Args &&...)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<Key,Value>>::construct<typename,typename>(A&,Node<Pair<Key, Value>>*,Key&&,Args &&...)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<constKey,Value>>::TreeKeyExtractor<Key,Pair<constKey,Value>>",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<constKey,Value>>::extract(Pair<const Key, Value> const&)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<constKey,Value>>::construct<typename,typename>(A&,Node<Pair<const Key, Value>>*,Key const&,Args &&...)",
			"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<constKey,Value>>::construct<typename,typename>(A&,Node<Pair<const Key, Value>>*,Key&&,Args &&...)",
			"::stappler::memory::rbtree::TreeComparator<typename,typename,typename>",
			"::stappler::memory::rbtree::TreeComparator<typename,typename,typename>::compare(Key const&,Key const&,Comp const&)",
			"::stappler::memory::rbtree::TreeComparator<typename,typename,typename>::compare<typename,typename>(A const&,B const&,Comp const&,typename Comp::is_transparent*)",
			"::stappler::memory::rbtree::TreeComparator<Key,Comp,typenameComp::is_transparent>::TreeComparator<Key,Comp,typenameComp::is_transparent>",
			"::stappler::memory::rbtree::TreeComparator<Key,Comp,typenameComp::is_transparent>::compare<typename,typename>(A const&,B const&,Comp const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::value_type",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::node_type",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::node_ptr",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::base_type",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::const_node_ptr",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::node_allocator_type",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::value_allocator_type",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::comparator_type",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::iterator",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::const_iterator",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::reverse_iterator",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::const_reverse_iterator",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::Tree(Comp const&,stappler::memory::rbtree::Tree::value_allocator_type const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::Tree(const Tree<Key, Value, Comp>&,stappler::memory::rbtree::Tree::value_allocator_type const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::Tree(Tree<Key, Value, Comp>&&,stappler::memory::rbtree::Tree::value_allocator_type const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::operator=(const Tree<Key, Value, Comp>&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::operator=(Tree<Key, Value, Comp>&&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::~Tree()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::get_allocator() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::emplace<typename>(Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::emplace_hint<typename>(stappler::memory::rbtree::Tree::const_iterator,Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::try_emplace<typename,typename>(K&&,Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::try_emplace<typename,typename>(stappler::memory::rbtree::Tree::const_iterator,K&&,Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::insert_or_assign<typename,class>(K&&,M&&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::insert_or_assign<typename,class>(stappler::memory::rbtree::Tree::const_iterator,K&&,M&&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::erase(stappler::memory::rbtree::Tree::const_iterator)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::erase(stappler::memory::rbtree::Tree::const_iterator,stappler::memory::rbtree::Tree::const_iterator)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::erase_unique(Key const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::begin()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::end()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::begin() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::end() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::rbegin()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::rend()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::rbegin() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::rend() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::cbegin() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::cend() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::crbegin() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::crend() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::clear()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::shrink_to_fit()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::capacity() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::size() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::empty() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::set_memory_persistent(bool)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::memory_persistent() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::swap(Tree<Key, Value, Comp>&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::find<class>(K const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::find<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::lower_bound<class>(K const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::lower_bound<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::upper_bound<class>(K const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::upper_bound<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::equal_range<class>(K const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::equal_range<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::count<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::count_unique<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::reserve(size_t)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::_header",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::_comp",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::_allocator",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::_size",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::_tmp",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::root()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::root() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::setroot(stappler::memory::rbtree::Tree::base_type)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::left()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::left() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::setleft(stappler::memory::rbtree::Tree::base_type)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::right()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::right() const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::setright(stappler::memory::rbtree::Tree::base_type)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::extract(Value const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::extract(Storage<Value> const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::extract(stappler::memory::rbtree::NodeBase const*) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareLtTransparent<typename,typename>(A const&,B const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareLtKey(Key const&,Key const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareEqKey(Key const&,Key const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareEqValue(Value const&,Value const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareLtValue(Value const&,Value const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::key",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::val",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::current",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::parent",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::isLeft",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructNode<typename>(Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructKey(Key const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructKey(Key&&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructEmplace<typename,typename>(K&&,Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructAssign<typename>(Node<Value>*,M const&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructAssign<typename>(Node<Value>*,M&&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique_search(stappler::memory::rbtree::Tree::InsertData&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPosition_tryRoot(stappler::memory::rbtree::Tree::InsertData&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique_tryHint(stappler::memory::rbtree::Tree::InsertData&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique_tryLeft(stappler::memory::rbtree::Tree::InsertData&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique_tryRight(stappler::memory::rbtree::Tree::InsertData&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique(stappler::memory::rbtree::Tree::InsertData&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::insertNodeUnique<typename>(Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::insertNodeUniqueHint<typename>(stappler::memory::rbtree::Tree::const_iterator,Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::tryInsertNodeUnique<typename,typename>(K&&,Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::tryInsertNodeUniqueHint<typename,typename>(stappler::memory::rbtree::Tree::const_iterator,K&&,Args &&...)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::tryAssignNodeUnique<typename,typename>(K&&,M&&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::tryAssignNodeUniqueHint<typename,typename>(stappler::memory::rbtree::Tree::const_iterator,K&&,M&&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::makeInsert(Node<Value>*,stappler::memory::rbtree::NodeBase*,bool)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::deleteNode(stappler::memory::rbtree::NodeBase*)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::clear_visit(Node<Value>*)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::clone_visit(Node<Value> const*,Node<Value>*)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::clone(const Tree<Key, Value, Comp>&)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::find_impl<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::lower_bound_ptr<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::upper_bound_ptr<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::count_impl<class>(K const&) const",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::destroyNode(Node<Value>*)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::allocateNode()",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::allocateTmp(size_t)",
			"::stappler::memory::rbtree::Tree<typename,typename,typename>::releaseTmp()"
		],
		"SPMemSet.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMSET_H_",
			"::stappler::memory::set<typename,typename>",
			"::stappler::memory::set<typename,typename>::key_type",
			"::stappler::memory::set<typename,typename>::value_type",
			"::stappler::memory::set<typename,typename>::key_compare",
			"::stappler::memory::set<typename,typename>::value_compare",
			"::stappler::memory::set<typename,typename>::allocator_type",
			"::stappler::memory::set<typename,typename>::pointer",
			"::stappler::memory::set<typename,typename>::const_pointer",
			"::stappler::memory::set<typename,typename>::reference",
			"::stappler::memory::set<typename,typename>::const_reference",
			"::stappler::memory::set<typename,typename>::tree_type",
			"::stappler::memory::set<typename,typename>::iterator",
			"::stappler::memory::set<typename,typename>::const_iterator",
			"::stappler::memory::set<typename,typename>::reverse_iterator",
			"::stappler::memory::set<typename,typename>::const_reverse_iterator",
			"::stappler::memory::set<typename,typename>::size_type",
			"::stappler::memory::set<typename,typename>::difference_type",
			"::stappler::memory::set<typename,typename>::set()",
			"::stappler::memory::set<typename,typename>::set(stappler::memory::set::key_compare const&,stappler::memory::set::allocator_type const&)",
			"::stappler::memory::set<typename,typename>::set(stappler::memory::set::allocator_type const&)",
			"::stappler::memory::set<typename,typename>::set<class>(InputIterator,InputIterator,stappler::memory::set::key_compare const&,stappler::memory::set::allocator_type const&)",
			"::stappler::memory::set<typename,typename>::set<class>(InputIterator,InputIterator,stappler::memory::set::allocator_type const&)",
			"::stappler::memory::set<typename,typename>::set(const set<Value, Comp>&)",
			"::stappler::memory::set<typename,typename>::set(const set<Value, Comp>&,stappler::memory::set::allocator_type const&)",
			"::stappler::memory::set<typename,typename>::set(set<Value, Comp>&&)",
			"::stappler::memory::set<typename,typename>::set(set<Value, Comp>&&,stappler::memory::set::allocator_type const&)",
			"::stappler::memory::set<typename,typename>::set(InitializerList<stappler::memory::set::value_type>,stappler::memory::set::key_compare const&,stappler::memory::set::allocator_type const&)",
			"::stappler::memory::set<typename,typename>::set(InitializerList<stappler::memory::set::value_type>,stappler::memory::set::allocator_type const&)",
			"::stappler::memory::set<typename,typename>::operator=(const set<Value, Comp>&)",
			"::stappler::memory::set<typename,typename>::operator=(set<Value, Comp>&&)",
			"::stappler::memory::set<typename,typename>::operator=(InitializerList<stappler::memory::set::value_type>)",
			"::stappler::memory::set<typename,typename>::get_allocator() const",
			"::stappler::memory::set<typename,typename>::empty() const",
			"::stappler::memory::set<typename,typename>::size() const",
			"::stappler::memory::set<typename,typename>::capacity() const",
			"::stappler::memory::set<typename,typename>::clear()",
			"::stappler::memory::set<typename,typename>::shrink_to_fit()",
			"::stappler::memory::set<typename,typename>::set_memory_persistent(bool)",
			"::stappler::memory::set<typename,typename>::memory_persistent() const",
			"::stappler::memory::set<typename,typename>::insert(stappler::memory::set::value_type const&)",
			"::stappler::memory::set<typename,typename>::insert(stappler::memory::set::value_type&&)",
			"::stappler::memory::set<typename,typename>::insert(stappler::memory::set::const_iterator,stappler::memory::set::value_type const&)",
			"::stappler::memory::set<typename,typename>::insert(stappler::memory::set::const_iterator,stappler::memory::set::value_type&&)",
			"::stappler::memory::set<typename,typename>::insert<class>(InputIt,InputIt)",
			"::stappler::memory::set<typename,typename>::insert(InitializerList<stappler::memory::set::value_type>)",
			"::stappler::memory::set<typename,typename>::emplace<class>(Args &&...)",
			"::stappler::memory::set<typename,typename>::emplace_hint<class>(stappler::memory::set::const_iterator,Args &&...)",
			"::stappler::memory::set<typename,typename>::erase(stappler::memory::set::const_iterator)",
			"::stappler::memory::set<typename,typename>::erase(stappler::memory::set::const_iterator,stappler::memory::set::const_iterator)",
			"::stappler::memory::set<typename,typename>::erase(stappler::memory::set::key_type const&)",
			"::stappler::memory::set<typename,typename>::begin()",
			"::stappler::memory::set<typename,typename>::end()",
			"::stappler::memory::set<typename,typename>::begin() const",
			"::stappler::memory::set<typename,typename>::end() const",
			"::stappler::memory::set<typename,typename>::cbegin() const",
			"::stappler::memory::set<typename,typename>::cend() const",
			"::stappler::memory::set<typename,typename>::rbegin()",
			"::stappler::memory::set<typename,typename>::rend()",
			"::stappler::memory::set<typename,typename>::rbegin() const",
			"::stappler::memory::set<typename,typename>::rend() const",
			"::stappler::memory::set<typename,typename>::crbegin() const",
			"::stappler::memory::set<typename,typename>::crend() const",
			"::stappler::memory::set<typename,typename>::swap(set<Value, Comp>&)",
			"::stappler::memory::set<typename,typename>::find<class>(K const&)",
			"::stappler::memory::set<typename,typename>::find<class>(K const&) const",
			"::stappler::memory::set<typename,typename>::lower_bound<class>(K const&)",
			"::stappler::memory::set<typename,typename>::lower_bound<class>(K const&) const",
			"::stappler::memory::set<typename,typename>::upper_bound<class>(K const&)",
			"::stappler::memory::set<typename,typename>::upper_bound<class>(K const&) const",
			"::stappler::memory::set<typename,typename>::equal_range<class>(K const&)",
			"::stappler::memory::set<typename,typename>::equal_range<class>(K const&) const",
			"::stappler::memory::set<typename,typename>::count<class>(K const&) const",
			"::stappler::memory::set<typename,typename>::reserve(size_t)",
			"::stappler::memory::set<typename,typename>::_tree",
			"::stappler::memory::operator==<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)",
			"::stappler::memory::operator<<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)",
			"::stappler::memory::operator!=<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)",
			"::stappler::memory::operator><typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)",
			"::stappler::memory::operator<=<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)",
			"::stappler::memory::operator>=<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)",
			"::stappler::memory::swap<typename,typename>(set<_Tp, Comp>&,set<_Tp, Comp>&)"
		],
		"SPMemStorageMem.hpp":  [
			"STAPPLER_CORE_MEMORY_SPMEMSTORAGEMEM_HPP_",
			"::stappler::memory::impl::mem_small<typename,size_t>",
			"::stappler::memory::impl::mem_small<typename,size_t>::self",
			"::stappler::memory::impl::mem_small<typename,size_t>::pointer",
			"::stappler::memory::impl::mem_small<typename,size_t>::const_pointer",
			"::stappler::memory::impl::mem_small<typename,size_t>::size_type",
			"::stappler::memory::impl::mem_small<typename,size_t>::allocator",
			"::stappler::memory::impl::mem_small<typename,size_t>::max_capacity()",
			"::stappler::memory::impl::mem_small<typename,size_t>::assign(stappler::memory::impl::mem_small::allocator&,stappler::memory::impl::mem_small::const_pointer,stappler::memory::impl::mem_small::size_type)",
			"::stappler::memory::impl::mem_small<typename,size_t>::move_assign(stappler::memory::impl::mem_small::allocator&,stappler::memory::impl::mem_small::pointer,stappler::memory::impl::mem_small::size_type)",
			"::stappler::memory::impl::mem_small<typename,size_t>::force_clear()",
			"::stappler::memory::impl::mem_small<typename,size_t>::drop_unused()",
			"::stappler::memory::impl::mem_small<typename,size_t>::set_size(size_t)",
			"::stappler::memory::impl::mem_small<typename,size_t>::modify_size(intptr_t)",
			"::stappler::memory::impl::mem_small<typename,size_t>::size() const",
			"::stappler::memory::impl::mem_small<typename,size_t>::capacity() const",
			"::stappler::memory::impl::mem_small<typename,size_t>::data()",
			"::stappler::memory::impl::mem_small<typename,size_t>::data() const",
			"::stappler::memory::impl::mem_small<typename,size_t>::storage",
			"::stappler::memory::impl::mem_large<typename,size_t>",
			"::stappler::memory::impl::mem_large<typename,size_t>::self",
			"::stappler::memory::impl::mem_large<typename,size_t>::pointer",
			"::stappler::memory::impl::mem_large<typename,size_t>::const_pointer",
			"::stappler::memory::impl::mem_large<typename,size_t>::size_type",
			"::stappler::memory::impl::mem_large<typename,size_t>::allocator",
			"::stappler::memory::impl::mem_large<typename,size_t>::mem_large()",
			"::stappler::memory::impl::mem_large<typename,size_t>::mem_large(stappler::memory::impl::mem_large::self const&)",
			"::stappler::memory::impl::mem_large<typename,size_t>::operator=(stappler::memory::impl::mem_large::self const&)",
			"::stappler::memory::impl::mem_large<typename,size_t>::mem_large(stappler::memory::impl::mem_large::self&&)",
			"::stappler::memory::impl::mem_large<typename,size_t>::operator=(stappler::memory::impl::mem_large::self&&)",
			"::stappler::memory::impl::mem_large<typename,size_t>::assign(stappler::memory::impl::mem_large::allocator&,stappler::memory::impl::mem_large::const_pointer,stappler::memory::impl::mem_large::size_type)",
			"::stappler::memory::impl::mem_large<typename,size_t>::move_assign(stappler::memory::impl::mem_large::allocator&,stappler::memory::impl::mem_large::pointer,stappler::memory::impl::mem_large::size_type)",
			"::stappler::memory::impl::mem_large<typename,size_t>::assign_weak(stappler::memory::impl::mem_large::pointer,stappler::memory::impl::mem_large::size_type)",
			"::stappler::memory::impl::mem_large<typename,size_t>::assign_weak(stappler::memory::impl::mem_large::const_pointer,stappler::memory::impl::mem_large::size_type)",
			"::stappler::memory::impl::mem_large<typename,size_t>::assign_mem(stappler::memory::impl::mem_large::pointer,stappler::memory::impl::mem_large::size_type,stappler::memory::impl::mem_large::size_type)",
			"::stappler::memory::impl::mem_large<typename,size_t>::is_weak() const",
			"::stappler::memory::impl::mem_large<typename,size_t>::reserve(stappler::memory::impl::mem_large::allocator&,stappler::memory::impl::mem_large::size_type)",
			"::stappler::memory::impl::mem_large<typename,size_t>::clear_dealloc(stappler::memory::impl::mem_large::allocator&)",
			"::stappler::memory::impl::mem_large<typename,size_t>::force_clear()",
			"::stappler::memory::impl::mem_large<typename,size_t>::extract()",
			"::stappler::memory::impl::mem_large<typename,size_t>::drop_unused()",
			"::stappler::memory::impl::mem_large<typename,size_t>::grow_alloc(stappler::memory::impl::mem_large::allocator&,stappler::memory::impl::mem_large::size_type)",
			"::stappler::memory::impl::mem_large<typename,size_t>::modify_size(intptr_t)",
			"::stappler::memory::impl::mem_large<typename,size_t>::set_size(size_t)",
			"::stappler::memory::impl::mem_large<typename,size_t>::size() const",
			"::stappler::memory::impl::mem_large<typename,size_t>::capacity() const",
			"::stappler::memory::impl::mem_large<typename,size_t>::data()",
			"::stappler::memory::impl::mem_large<typename,size_t>::data() const",
			"::stappler::memory::impl::mem_large<typename,size_t>::empty() const",
			"::stappler::memory::impl::mem_large<typename,size_t>::_ptr",
			"::stappler::memory::impl::mem_large<typename,size_t>::_used",
			"::stappler::memory::impl::mem_large<typename,size_t>::_allocated",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::mem_soo_iface<Type,Extra,false>",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::base",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::pointer",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::const_pointer",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::size_type",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::allocator",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::get_soo_size()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::mem_soo_iface(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, false>::allocator const&)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::~mem_soo_iface()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::assign(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, false>::const_pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, false>::size_type)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::reserve_block_optimal()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::reserve(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, false>::size_type,bool)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::clear()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::perform_move(mem_soo_iface<type-parameter-0-0, Extra, false>&&)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::_allocator",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::mem_soo_iface<Type,Extra,true>",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::pointer",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::const_pointer",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::size_type",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::allocator",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::large_mem",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::small_mem",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::get_soo_size()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::mem_soo_iface(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::allocator const&)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::~mem_soo_iface()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::assign(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::const_pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::assign_weak(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::assign_weak(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::const_pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::assign_mem(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::is_weak() const",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::reserve(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type,bool)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::clear()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::force_clear()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::extract()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::data()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::data() const",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::size() const",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::capacity() const",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::empty() const",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::perform_move(mem_soo_iface<type-parameter-0-0, Extra, true>&&)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::clear_dealloc(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::allocator&)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::modify_size(intptr_t)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::set_size(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::_allocator",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::is_small() const",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::is_large() const",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::set_large_flag()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::set_large_flag_force()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::set_small_flag()",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::_large",
			"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::_small"
		],
		"SPMemString.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMSTRING_H_",
			"::stappler::memory::is_char_pointer<typename>",
			"::stappler::memory::is_char_pointer<constchar*>::is_char_pointer<constchar*>",
			"::stappler::memory::is_char_pointer<constchar*>::Type",
			"::stappler::memory::is_char_pointer<char*>::is_char_pointer<char*>",
			"::stappler::memory::is_char_pointer<char*>::Type",
			"::stappler::memory::is_char_pointer<constchar16_t*>::is_char_pointer<constchar16_t*>",
			"::stappler::memory::is_char_pointer<constchar16_t*>::Type",
			"::stappler::memory::is_char_pointer<char16_t*>::is_char_pointer<char16_t*>",
			"::stappler::memory::is_char_pointer<char16_t*>::Type",
			"::stappler::memory::is_char_pointer<constchar32_t*>::is_char_pointer<constchar32_t*>",
			"::stappler::memory::is_char_pointer<constchar32_t*>::Type",
			"::stappler::memory::is_char_pointer<char32_t*>::is_char_pointer<char32_t*>",
			"::stappler::memory::is_char_pointer<char32_t*>::Type",
			"::stappler::memory::basic_string<typename>",
			"::stappler::memory::basic_string<typename>::allocator_type",
			"::stappler::memory::basic_string<typename>::pointer",
			"::stappler::memory::basic_string<typename>::const_pointer",
			"::stappler::memory::basic_string<typename>::reference",
			"::stappler::memory::basic_string<typename>::const_reference",
			"::stappler::memory::basic_string<typename>::traits_type",
			"::stappler::memory::basic_string<typename>::size_type",
			"::stappler::memory::basic_string<typename>::charT",
			"::stappler::memory::basic_string<typename>::value_type",
			"::stappler::memory::basic_string<typename>::mem_type",
			"::stappler::memory::basic_string<typename>::self",
			"::stappler::memory::basic_string<typename>::iterator",
			"::stappler::memory::basic_string<typename>::const_iterator",
			"::stappler::memory::basic_string<typename>::reverse_iterator",
			"::stappler::memory::basic_string<typename>::const_reverse_iterator",
			"::stappler::memory::basic_string<typename>::npos",
			"::stappler::memory::basic_string<typename>::basic_string()",
			"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::self const&)",
			"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::self const&,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::self const&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string<class>(InputIterator,InputIterator,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string(InitializerList<stappler::memory::basic_string::charT>,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string(basic_string<CharType>&&)",
			"::stappler::memory::basic_string<typename>::basic_string(basic_string<CharType>&&,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::operator=(const basic_string<CharType>&)",
			"::stappler::memory::basic_string<typename>::operator=(basic_string<CharType>&&)",
			"::stappler::memory::basic_string<typename>::operator=(stappler::memory::basic_string::charT const*)",
			"::stappler::memory::basic_string<typename>::operator=(stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::operator=(InitializerList<stappler::memory::basic_string::charT>)",
			"::stappler::memory::basic_string<typename>::get_allocator() const",
			"::stappler::memory::basic_string<typename>::begin()",
			"::stappler::memory::basic_string<typename>::end()",
			"::stappler::memory::basic_string<typename>::begin() const",
			"::stappler::memory::basic_string<typename>::end() const",
			"::stappler::memory::basic_string<typename>::cbegin() const",
			"::stappler::memory::basic_string<typename>::cend() const",
			"::stappler::memory::basic_string<typename>::rbegin()",
			"::stappler::memory::basic_string<typename>::rend()",
			"::stappler::memory::basic_string<typename>::rbegin() const",
			"::stappler::memory::basic_string<typename>::rend() const",
			"::stappler::memory::basic_string<typename>::crbegin() const",
			"::stappler::memory::basic_string<typename>::crend() const",
			"::stappler::memory::basic_string<typename>::size() const",
			"::stappler::memory::basic_string<typename>::length() const",
			"::stappler::memory::basic_string<typename>::capacity() const",
			"::stappler::memory::basic_string<typename>::reserve(stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::resize(stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::resize(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::clear()",
			"::stappler::memory::basic_string<typename>::empty() const",
			"::stappler::memory::basic_string<typename>::shrink_to_fit()",
			"::stappler::memory::basic_string<typename>::operator[](stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::operator[](stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::at(stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::at(stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::back()",
			"::stappler::memory::basic_string<typename>::back() const",
			"::stappler::memory::basic_string<typename>::front()",
			"::stappler::memory::basic_string<typename>::front() const",
			"::stappler::memory::basic_string<typename>::append(const basic_string<CharType>&)",
			"::stappler::memory::basic_string<typename>::append(const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::append(stappler::memory::basic_string::charT const*)",
			"::stappler::memory::basic_string<typename>::append(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::append(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::append<class>(InputIterator,InputIterator)",
			"::stappler::memory::basic_string<typename>::append(InitializerList<stappler::memory::basic_string::charT>)",
			"::stappler::memory::basic_string<typename>::operator+=(const basic_string<CharType>&)",
			"::stappler::memory::basic_string<typename>::operator+=(stappler::memory::basic_string::charT const*)",
			"::stappler::memory::basic_string<typename>::operator+=(stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::operator+=(InitializerList<stappler::memory::basic_string::charT>)",
			"::stappler::memory::basic_string<typename>::assign(const basic_string<CharType>&)",
			"::stappler::memory::basic_string<typename>::assign(const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::assign(stappler::memory::basic_string::charT const*)",
			"::stappler::memory::basic_string<typename>::assign(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::assign(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::assign<class>(InputIterator,InputIterator)",
			"::stappler::memory::basic_string<typename>::assign(InitializerList<stappler::memory::basic_string::charT>)",
			"::stappler::memory::basic_string<typename>::assign(basic_string<CharType>&&)",
			"::stappler::memory::basic_string<typename>::push_back(CharType)",
			"::stappler::memory::basic_string<typename>::emplace_back(CharType)",
			"::stappler::memory::basic_string<typename>::pop_back()",
			"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,const basic_string<CharType>&)",
			"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*)",
			"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::insert<class>(stappler::memory::basic_string::const_iterator,InputIt,InputIt)",
			"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::const_iterator,std::initializer_list<charT>)",
			"::stappler::memory::basic_string<typename>::erase(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::erase(stappler::memory::basic_string::const_iterator)",
			"::stappler::memory::basic_string<typename>::erase(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,const basic_string<CharType>&)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,const basic_string<CharType>&)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::charT const*)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)",
			"::stappler::memory::basic_string<typename>::replace<class>(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,InputIt,InputIt)",
			"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,InitializerList<stappler::memory::basic_string::charT>)",
			"::stappler::memory::basic_string<typename>::c_str() const",
			"::stappler::memory::basic_string<typename>::data() const",
			"::stappler::memory::basic_string<typename>::data()",
			"::stappler::memory::basic_string<typename>::copy(stappler::memory::basic_string::charT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::substr(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::rfind(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::rfind(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_not_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_not_of(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_not_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_not_of(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::rfind(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::rfind(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_of(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_of(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_of(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_of(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_not_of(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_not_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_not_of(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_not_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::compare(const basic_string<CharType>&) const",
			"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,const basic_string<CharType>&) const",
			"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::charT const*) const",
			"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*) const",
			"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::make_weak(CharType const*,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::make_weak(CharType const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::assign_weak(CharType const*,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::assign_weak(CharType const*)",
			"::stappler::memory::basic_string<typename>::is_weak() const",
			"::stappler::memory::basic_string<typename>::basic_string<int>(stappler::memory::basic_string::charT const(&)[N],stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::basic_string<int>(stappler::memory::basic_string::charT(&)[N],stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::wrap(CharType*,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::wrap(CharType*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::wrap(CharType*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::basic_string<typename>::assign_wrap(CharType*,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::assign_wrap(CharType*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::extract()",
			"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)",
			"::stappler::memory::basic_string<typename>::_mem",
			"::stappler::memory::__basic_string_fill<CharType,InputIterator,true>::__basic_string_fill<CharType,InputIterator,true>",
			"::stappler::memory::__basic_string_fill<CharType,InputIterator,true>::fill(basic_string<CharType>&,InputIterator,InputIterator)",
			"::stappler::memory::__basic_string_fill<CharType,InputIterator,false>::__basic_string_fill<CharType,InputIterator,false>",
			"::stappler::memory::__basic_string_fill<CharType,InputIterator,false>::fill(basic_string<CharType>&,InputIterator,InputIterator)",
			"::stappler::memory::basic_string<typename>::basic_string<class>(InputIterator,InputIterator,stappler::memory::basic_string::allocator_type const&)",
			"::stappler::memory::operator+<class>(basic_string<CharT> const&,basic_string<CharT> const&)",
			"::stappler::memory::operator+<class>(CharT const*,basic_string<CharT> const&)",
			"::stappler::memory::operator+<class>(CharT,basic_string<CharT> const&)",
			"::stappler::memory::operator+<class>(basic_string<CharT> const&,CharT const*)",
			"::stappler::memory::operator+<class>(basic_string<CharT> const&,CharT)",
			"::stappler::memory::operator+<class>(basic_string<CharT>&&,basic_string<CharT> const&)",
			"::stappler::memory::operator+<class>(basic_string<CharT> const&,basic_string<CharT>&&)",
			"::stappler::memory::operator+<class>(basic_string<CharT>&&,basic_string<CharT>&&)",
			"::stappler::memory::operator+<class>(CharT const*,basic_string<CharT>&&)",
			"::stappler::memory::operator+<class>(CharT,basic_string<CharT>&&)",
			"::stappler::memory::operator+<class>(basic_string<CharT>&&,CharT const*)",
			"::stappler::memory::operator+<class>(basic_string<CharT>&&,CharT)",
			"::stappler::memory::operator==<class>(basic_string<CharT> const&,basic_string<CharT> const&)",
			"::stappler::memory::operator!=<class>(basic_string<CharT> const&,basic_string<CharT> const&)",
			"::stappler::memory::operator<<class>(basic_string<CharT> const&,basic_string<CharT> const&)",
			"::stappler::memory::operator<=<class>(basic_string<CharT> const&,basic_string<CharT> const&)",
			"::stappler::memory::operator><class>(basic_string<CharT> const&,basic_string<CharT> const&)",
			"::stappler::memory::operator>=<class>(basic_string<CharT> const&,basic_string<CharT> const&)",
			"::stappler::memory::operator==<class>(basic_string<CharT> const&,CharT const*)",
			"::stappler::memory::operator!=<class>(basic_string<CharT> const&,CharT const*)",
			"::stappler::memory::operator<<class>(basic_string<CharT> const&,CharT const*)",
			"::stappler::memory::operator<=<class>(basic_string<CharT> const&,CharT const*)",
			"::stappler::memory::operator><class>(basic_string<CharT> const&,CharT const*)",
			"::stappler::memory::operator>=<class>(basic_string<CharT> const&,CharT const*)",
			"::stappler::memory::operator==<class>(CharT const*,basic_string<CharT> const&)",
			"::stappler::memory::operator!=<class>(CharT const*,basic_string<CharT> const&)",
			"::stappler::memory::operator<<class>(CharT const*,basic_string<CharT> const&)",
			"::stappler::memory::operator<=<class>(CharT const*,basic_string<CharT> const&)",
			"::stappler::memory::operator><class>(CharT const*,basic_string<CharT> const&)",
			"::stappler::memory::operator>=<class>(CharT const*,basic_string<CharT> const&)",
			"::stappler::memory::basic_string<typename>::find(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find(_CharT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::rfind(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::rfind(_CharT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_of(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_of(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_not_of(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_first_not_of(_CharT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_not_of(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::basic_string<typename>::find_last_not_of(_CharT,stappler::memory::basic_string::size_type) const",
			"::stappler::memory::operator<<<typename>(std::basic_ostream<CharType>&,basic_string<CharType> const&)",
			"::stappler::memory::basic_string<CharType>::npos",
			"::stappler::memory::string",
			"::stappler::memory::u16string",
			"::stappler::memory::u32string",
			"::stappler::memory::weak_string",
			"::operator\"\"_weak(char const*,size_t)",
			"::std::hash<stappler::memory::basic_string<char>>::hash<stappler::memory::basic_string<char>>",
			"::std::hash<stappler::memory::basic_string<char>>::operator()(stappler::memory::basic_string<char> const&) const",
			"::std::hash<stappler::memory::basic_string<char16_t>>::hash<stappler::memory::basic_string<char16_t>>",
			"::std::hash<stappler::memory::basic_string<char16_t>>::operator()(stappler::memory::basic_string<char16_t> const&) const"
		],
		"SPMemStringStream.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMSTRINGSTREAM_H_",
			"::stappler::memory::basic_ostringbuf_bufsize",
			"::stappler::memory::basic_ostringbuf<typename>",
			"::stappler::memory::basic_ostringbuf<typename>::storage_type",
			"::stappler::memory::basic_ostringbuf<typename>::allocator_type",
			"::stappler::memory::basic_ostringbuf<typename>::storage_allocator_type",
			"::stappler::memory::basic_ostringbuf<typename>::traits_type",
			"::stappler::memory::basic_ostringbuf<typename>::size_type",
			"::stappler::memory::basic_ostringbuf<typename>::string_type",
			"::stappler::memory::basic_ostringbuf<typename>::mem_type",
			"::stappler::memory::basic_ostringbuf<typename>::char_type",
			"::stappler::memory::basic_ostringbuf<typename>::int_type",
			"::stappler::memory::basic_ostringbuf<typename>::streambuf_type",
			"::stappler::memory::basic_ostringbuf<typename>::basic_ostringbuf(stappler::memory::basic_ostringbuf::size_type,stappler::memory::basic_ostringbuf::allocator_type const&)",
			"::stappler::memory::basic_ostringbuf<typename>::basic_ostringbuf(CharType*,stappler::memory::basic_ostringbuf::size_type,stappler::memory::basic_ostringbuf::allocator_type const&)",
			"::stappler::memory::basic_ostringbuf<typename>::basic_ostringbuf(basic_ostringbuf<CharType>&&,stappler::memory::basic_ostringbuf::allocator_type const&)",
			"::stappler::memory::basic_ostringbuf<typename>::operator=(basic_ostringbuf<CharType>&&)",
			"::stappler::memory::basic_ostringbuf<typename>::~basic_ostringbuf()",
			"::stappler::memory::basic_ostringbuf<typename>::empty() const",
			"::stappler::memory::basic_ostringbuf<typename>::size() const",
			"::stappler::memory::basic_ostringbuf<typename>::data()",
			"::stappler::memory::basic_ostringbuf<typename>::data() const",
			"::stappler::memory::basic_ostringbuf<typename>::str() const",
			"::stappler::memory::basic_ostringbuf<typename>::clear()",
			"::stappler::memory::basic_ostringbuf<typename>::reserve(size_t)",
			"::stappler::memory::basic_ostringbuf<typename>::basic_ostringbuf(const basic_ostringbuf<CharType>&)",
			"::stappler::memory::basic_ostringbuf<typename>::operator=(const basic_ostringbuf<CharType>&)",
			"::stappler::memory::basic_ostringbuf<typename>::get_allocator() const",
			"::stappler::memory::basic_ostringbuf<typename>::make_flush()",
			"::stappler::memory::basic_ostringbuf<typename>::overflow(stappler::memory::basic_ostringbuf::int_type)",
			"::stappler::memory::basic_ostringbuf<typename>::sync()",
			"::stappler::memory::basic_ostringbuf<typename>::_buf",
			"::stappler::memory::basic_ostringstream<typename>",
			"::stappler::memory::basic_ostringstream<typename>::char_type",
			"::stappler::memory::basic_ostringstream<typename>::traits_type",
			"::stappler::memory::basic_ostringstream<typename>::allocator_type",
			"::stappler::memory::basic_ostringstream<typename>::int_type",
			"::stappler::memory::basic_ostringstream<typename>::pos_type",
			"::stappler::memory::basic_ostringstream<typename>::off_type",
			"::stappler::memory::basic_ostringstream<typename>::size_type",
			"::stappler::memory::basic_ostringstream<typename>::string_type",
			"::stappler::memory::basic_ostringstream<typename>::stringbuf_type",
			"::stappler::memory::basic_ostringstream<typename>::ostream_type",
			"::stappler::memory::basic_ostringstream<typename>::_buf",
			"::stappler::memory::basic_ostringstream<typename>::basic_ostringstream(stappler::memory::basic_ostringstream::size_type,stappler::memory::basic_ostringstream::allocator_type const&)",
			"::stappler::memory::basic_ostringstream<typename>::basic_ostringstream(CharType*,stappler::memory::basic_ostringstream::size_type,stappler::memory::basic_ostringstream::allocator_type const&)",
			"::stappler::memory::basic_ostringstream<typename>::basic_ostringstream(basic_ostringstream<CharType>&&)",
			"::stappler::memory::basic_ostringstream<typename>::operator=(basic_ostringstream<CharType>&&)",
			"::stappler::memory::basic_ostringstream<typename>::~basic_ostringstream()",
			"::stappler::memory::basic_ostringstream<typename>::basic_ostringstream(const basic_ostringstream<CharType>&)",
			"::stappler::memory::basic_ostringstream<typename>::operator=(const basic_ostringstream<CharType>&)",
			"::stappler::memory::basic_ostringstream<typename>::swap(basic_ostringstream<CharType>&)",
			"::stappler::memory::basic_ostringstream<typename>::rdbuf() const",
			"::stappler::memory::basic_ostringstream<typename>::str() const",
			"::stappler::memory::basic_ostringstream<typename>::weak() const",
			"::stappler::memory::basic_ostringstream<typename>::clear()",
			"::stappler::memory::basic_ostringstream<typename>::empty() const",
			"::stappler::memory::basic_ostringstream<typename>::size() const",
			"::stappler::memory::basic_ostringstream<typename>::data()",
			"::stappler::memory::basic_ostringstream<typename>::data() const",
			"::stappler::memory::basic_ostringstream<typename>::reserve(size_t)",
			"::stappler::memory::basic_ostringstream<typename>::get_allocator() const",
			"::stappler::memory::ostringstream",
			"::stappler::memory::operator<<<typename>(std::basic_ostream<CharType>&,basic_ostringstream<CharType> const&)"
		],
		"SPMemUserData.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMUSERDATA_H_",
			"::stappler::memory::pool::store(stappler::mempool::base::pool_t*,void*,stappler::StringView const&,memory::function<void ()>&&)",
			"::stappler::memory::pool::get<typename>(stappler::mempool::base::pool_t*,stappler::StringView const&)",
			"::stappler::memory::pool::store(void*,stappler::StringView const&,memory::function<void ()>&&)",
			"::stappler::memory::pool::get<typename>(stappler::StringView const&)"
		],
		"SPMemUuid.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMUUID_H_",
			"::stappler::memory::uuid",
			"::stappler::memory::uuid::FormattedLength",
			"::stappler::memory::uuid::uuid_t",
			"::stappler::memory::uuid::parse(stappler::memory::uuid::uuid_t&,char const*)",
			"::stappler::memory::uuid::format(char*,stappler::memory::uuid::uuid_t const&)",
			"::stappler::memory::uuid::generate()",
			"::stappler::memory::uuid::uuid()",
			"::stappler::memory::uuid::uuid(stappler::StringView)",
			"::stappler::memory::uuid::uuid(stappler::BytesView)",
			"::stappler::memory::uuid::uuid(stappler::memory::uuid::uuid_t const&)",
			"::stappler::memory::uuid::uuid(stappler::memory::uuid const&)",
			"::stappler::memory::uuid::operator=(stappler::memory::uuid const&)",
			"::stappler::memory::uuid::operator=(memory::string const&)",
			"::stappler::memory::uuid::operator=(std::string const&)",
			"::stappler::memory::uuid::operator=(memory::vector<uint8_t> const&)",
			"::stappler::memory::uuid::operator=(std::vector<uint8_t> const&)",
			"::stappler::memory::uuid::str<typename>() const",
			"::stappler::memory::uuid::bytes<typename>() const",
			"::stappler::memory::uuid::array() const",
			"::stappler::memory::uuid::data() const",
			"::stappler::memory::uuid::size() const",
			"::stappler::memory::uuid::_uuid"
		],
		"SPMemVector.h":  [
			"STAPPLER_CORE_MEMORY_SPMEMVECTOR_H_",
			"::stappler::memory::vector<typename>",
			"::stappler::memory::vector<typename>::allocator_type",
			"::stappler::memory::vector<typename>::pointer",
			"::stappler::memory::vector<typename>::const_pointer",
			"::stappler::memory::vector<typename>::reference",
			"::stappler::memory::vector<typename>::const_reference",
			"::stappler::memory::vector<typename>::size_type",
			"::stappler::memory::vector<typename>::value_type",
			"::stappler::memory::vector<typename>::mem_type",
			"::stappler::memory::vector<typename>::self",
			"::stappler::memory::vector<typename>::iterator",
			"::stappler::memory::vector<typename>::const_iterator",
			"::stappler::memory::vector<typename>::reverse_iterator",
			"::stappler::memory::vector<typename>::const_reverse_iterator",
			"::stappler::memory::vector<typename>::vector()",
			"::stappler::memory::vector<typename>::vector(stappler::memory::vector::allocator_type const&)",
			"::stappler::memory::vector<typename>::vector(stappler::memory::vector::size_type,Type const&,stappler::memory::vector::allocator_type const&)",
			"::stappler::memory::vector<typename>::vector(stappler::memory::vector::size_type,stappler::memory::vector::allocator_type const&)",
			"::stappler::memory::vector<typename>::vector<class>(InputIt,InputIt,stappler::memory::vector::allocator_type const&)",
			"::stappler::memory::vector<typename>::vector(const vector<Type>&)",
			"::stappler::memory::vector<typename>::vector(const vector<Type>&,stappler::memory::vector::allocator_type const&)",
			"::stappler::memory::vector<typename>::vector(vector<Type>&&)",
			"::stappler::memory::vector<typename>::vector(vector<Type>&&,stappler::memory::vector::allocator_type const&)",
			"::stappler::memory::vector<typename>::vector(InitializerList<Type>,stappler::memory::vector::allocator_type const&)",
			"::stappler::memory::vector<typename>::operator=(const vector<Type>&)",
			"::stappler::memory::vector<typename>::operator=(vector<Type>&&)",
			"::stappler::memory::vector<typename>::operator=(InitializerList<Type>)",
			"::stappler::memory::vector<typename>::assign(stappler::memory::vector::size_type,Type const&)",
			"::stappler::memory::vector<typename>::assign<class>(InputIt,InputIt)",
			"::stappler::memory::vector<typename>::assign(InitializerList<Type>)",
			"::stappler::memory::vector<typename>::assign_strong(Type*,stappler::memory::vector::size_type)",
			"::stappler::memory::vector<typename>::get_allocator() const",
			"::stappler::memory::vector<typename>::at(stappler::memory::vector::size_type)",
			"::stappler::memory::vector<typename>::at(stappler::memory::vector::size_type) const",
			"::stappler::memory::vector<typename>::operator[](stappler::memory::vector::size_type)",
			"::stappler::memory::vector<typename>::operator[](stappler::memory::vector::size_type) const",
			"::stappler::memory::vector<typename>::front()",
			"::stappler::memory::vector<typename>::front() const",
			"::stappler::memory::vector<typename>::back()",
			"::stappler::memory::vector<typename>::back() const",
			"::stappler::memory::vector<typename>::data()",
			"::stappler::memory::vector<typename>::data() const",
			"::stappler::memory::vector<typename>::begin()",
			"::stappler::memory::vector<typename>::end()",
			"::stappler::memory::vector<typename>::begin() const",
			"::stappler::memory::vector<typename>::end() const",
			"::stappler::memory::vector<typename>::cbegin() const",
			"::stappler::memory::vector<typename>::cend() const",
			"::stappler::memory::vector<typename>::rbegin()",
			"::stappler::memory::vector<typename>::rend()",
			"::stappler::memory::vector<typename>::rbegin() const",
			"::stappler::memory::vector<typename>::rend() const",
			"::stappler::memory::vector<typename>::crbegin() const",
			"::stappler::memory::vector<typename>::crend() const",
			"::stappler::memory::vector<typename>::size() const",
			"::stappler::memory::vector<typename>::capacity() const",
			"::stappler::memory::vector<typename>::empty() const",
			"::stappler::memory::vector<typename>::reserve_block_optimal()",
			"::stappler::memory::vector<typename>::reserve(stappler::memory::vector::size_type)",
			"::stappler::memory::vector<typename>::shrink_to_fit()",
			"::stappler::memory::vector<typename>::clear()",
			"::stappler::memory::vector<typename>::emplace<class>(stappler::memory::vector::const_iterator,Args &&...)",
			"::stappler::memory::vector<typename>::insert(stappler::memory::vector::const_iterator,Type const&)",
			"::stappler::memory::vector<typename>::insert(stappler::memory::vector::const_iterator,Type&&)",
			"::stappler::memory::vector<typename>::insert(stappler::memory::vector::const_iterator,stappler::memory::vector::size_type,Type const&)",
			"::stappler::memory::vector<typename>::insert<class>(stappler::memory::vector::const_iterator,InputIt,InputIt)",
			"::stappler::memory::vector<typename>::insert(stappler::memory::vector::const_iterator,InitializerList<Type>)",
			"::stappler::memory::vector<typename>::erase(stappler::memory::vector::const_iterator)",
			"::stappler::memory::vector<typename>::erase(stappler::memory::vector::const_iterator,stappler::memory::vector::const_iterator)",
			"::stappler::memory::vector<typename>::emplace_back<class>(Args &&...)",
			"::stappler::memory::vector<typename>::push_back(Type const&)",
			"::stappler::memory::vector<typename>::push_back(Type&&)",
			"::stappler::memory::vector<typename>::pop_back()",
			"::stappler::memory::vector<typename>::resize(stappler::memory::vector::size_type)",
			"::stappler::memory::vector<typename>::resize(stappler::memory::vector::size_type,stappler::memory::vector::value_type const&)",
			"::stappler::memory::vector<typename>::make_weak(Type const*,stappler::memory::vector::size_type,stappler::memory::vector::allocator_type const&)",
			"::stappler::memory::vector<typename>::assign_weak(Type const*,stappler::memory::vector::size_type)",
			"::stappler::memory::vector<typename>::is_weak() const",
			"::stappler::memory::vector<typename>::force_clear()",
			"::stappler::memory::vector<typename>::_mem",
			"::stappler::memory::bytes",
			"::stappler::memory::operator==<typename>(vector<_Tp> const&,vector<_Tp> const&)",
			"::stappler::memory::operator<<typename>(vector<_Tp> const&,vector<_Tp> const&)",
			"::stappler::memory::operator<(vector<uint8_t> const&,vector<uint8_t> const&)",
			"::stappler::memory::operator!=<typename>(vector<_Tp> const&,vector<_Tp> const&)",
			"::stappler::memory::operator><typename>(vector<_Tp> const&,vector<_Tp> const&)",
			"::stappler::memory::operator<=<typename>(vector<_Tp> const&,vector<_Tp> const&)",
			"::stappler::memory::operator>=<typename>(vector<_Tp> const&,vector<_Tp> const&)"
		],
		"SPMemory.h":  [
			"STAPPLER_CORE_SPMEMORY_H_",
			"::stappler::mem_pool::pool",
			"::stappler::mem_pool::allocator",
			"::stappler::mem_pool::CharGroupId",
			"::stappler::mem_pool::AllocBase",
			"::stappler::mem_pool::String",
			"::stappler::mem_pool::WideString",
			"::stappler::mem_pool::Bytes",
			"::stappler::mem_pool::StringStream",
			"::stappler::mem_pool::OutputStream",
			"::stappler::mem_pool::Vector<typename>",
			"::stappler::mem_pool::Map<typename,typename,typename>",
			"::stappler::mem_pool::Set<typename,typename>",
			"::stappler::mem_pool::Function<typename>",
			"::stappler::mem_pool::dict<typename,typename,typename>",
			"::stappler::mem_pool::Mutex",
			"::stappler::mem_pool::perform<typename>(Callback const&,memory::pool_t*)",
			"::stappler::mem_pool::emplace_ordered<typename>(Vector<T>&,T)",
			"::stappler::mem_pool::exists_ordered<typename>(Vector<T>&,T const&)",
			"::stappler::mem_std::pool",
			"::stappler::mem_std::allocator",
			"::stappler::mem_std::AllocBase",
			"::stappler::mem_std::String",
			"::stappler::mem_std::WideString",
			"::stappler::mem_std::Bytes",
			"::stappler::mem_std::StringStream",
			"::stappler::mem_std::OutputStream",
			"::stappler::mem_std::Vector<typename>",
			"::stappler::mem_std::Map<typename,typename,typename>",
			"::stappler::mem_std::Set<typename,typename>",
			"::stappler::mem_std::HashMap<typename,typename>",
			"::stappler::mem_std::HashSet<typename>",
			"::stappler::mem_std::Function<typename>",
			"::stappler::mem_std::Mutex",
			"::stappler::mem_std::perform<typename>(Callback const&,memory::pool_t*)",
			"::stappler::mem_std::emplace_ordered<typename>(Vector<T>&,T)",
			"::stappler::mem_std::exists_ordered<typename>(Vector<T>&,T const&)",
			"::stappler::mem_pool::Value",
			"::stappler::mem_pool::Array",
			"::stappler::mem_pool::Dictionary",
			"::stappler::mem_pool::EncodeFormat",
			"::stappler::mem_pool::emplace_ordered(Vector<stappler::mem_pool::Value>&,stappler::mem_pool::Value const&)",
			"::stappler::mem_std::Value",
			"::stappler::mem_std::Array",
			"::stappler::mem_std::Dictionary",
			"::stappler::mem_std::EncodeFormat",
			"::stappler::mem_std::emplace_ordered(Vector<stappler::mem_std::Value>&,stappler::mem_std::Value const&)"
		],
		"SPMovingAverage.h":  [
			"STAPPLER_CORE_UTILS_SPMOVINGAVERAGE_H_",
			"::stappler::math::MovingAverage<size_t,typename>",
			"::stappler::math::MovingAverage<size_t,typename>::dropValues()",
			"::stappler::math::MovingAverage<size_t,typename>::addValue(T)",
			"::stappler::math::MovingAverage<size_t,typename>::getAverage(bool) const",
			"::stappler::math::MovingAverage<size_t,typename>::step(T)",
			"::stappler::math::MovingAverage<size_t,typename>::range(bool)",
			"::stappler::math::MovingAverage<size_t,typename>::size() const",
			"::stappler::math::MovingAverage<size_t,typename>::reset(T const&)",
			"::stappler::math::MovingAverage<size_t,typename>::MovingAverage()",
			"::stappler::math::MovingAverage<size_t,typename>::_current",
			"::stappler::math::MovingAverage<size_t,typename>::_values"
		],
		"SPNetworkContext.h":  [
			"STAPPLER_NETWORK_SPNETWORKCONTEXT_H_",
			"::stappler::network::Context<typename>",
			"::stappler::network::Context<typename>::userdata",
			"::stappler::network::Context<typename>::curl",
			"::stappler::network::Context<typename>::share",
			"::stappler::network::Context<typename>::origHandle",
			"::stappler::network::Context<typename>::handle",
			"::stappler::network::Context<typename>::headersData",
			"::stappler::network::Context<typename>::headers",
			"::stappler::network::Context<typename>::mailTo",
			"::stappler::network::Context<typename>::inputFile",
			"::stappler::network::Context<typename>::outputFile",
			"::stappler::network::Context<typename>::inputPos",
			"::stappler::network::Context<typename>::code",
			"::stappler::network::Context<typename>::success",
			"::stappler::network::Context<typename>::error",
			"::stappler::network::prepare<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)",
			"::stappler::network::finalize<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)",
			"::stappler::network::perform<typename>(HandleData<Interface>&,Callback<bool (CURL *)> const&,Callback<bool (CURL *)> const&)"
		],
		"SPNetworkData.h":  [
			"STAPPLER_NETWORK_SPNETWORKHANDLEDATA_H_",
			"::stappler::network::DefaultCertPath",
			"::stappler::network::Method",
			"::stappler::network::AuthMethod",
			"::stappler::network::getActiveHandles()",
			"::stappler::network::AuthData<typename>",
			"::stappler::network::AuthData<typename>::String",
			"::stappler::network::AuthData<typename>::data",
			"::stappler::network::AuthData<typename>::proxyAddress",
			"::stappler::network::AuthData<typename>::proxyAuth",
			"::stappler::network::AuthData<typename>::authMethod",
			"::stappler::network::SendData<typename>",
			"::stappler::network::SendData<typename>::Function<typename>",
			"::stappler::network::SendData<typename>::Vector<typename>",
			"::stappler::network::SendData<typename>::Map<typename,typename>",
			"::stappler::network::SendData<typename>::String",
			"::stappler::network::SendData<typename>::Bytes",
			"::stappler::network::SendData<typename>::IOCallback",
			"::stappler::network::SendData<typename>::DataSource",
			"::stappler::network::SendData<typename>::headers",
			"::stappler::network::SendData<typename>::url",
			"::stappler::network::SendData<typename>::recipients",
			"::stappler::network::SendData<typename>::from",
			"::stappler::network::SendData<typename>::userAgent",
			"::stappler::network::SendData<typename>::data",
			"::stappler::network::SendData<typename>::size",
			"::stappler::network::SendData<typename>::offset",
			"::stappler::network::SendData<typename>::method",
			"::stappler::network::ProcessData<typename>",
			"::stappler::network::ProcessData<typename>::Function<typename>",
			"::stappler::network::ProcessData<typename>::String",
			"::stappler::network::ProcessData<typename>::StringStream",
			"::stappler::network::ProcessData<typename>::ProgressCallback",
			"::stappler::network::ProcessData<typename>::debugData",
			"::stappler::network::ProcessData<typename>::cookieFile",
			"::stappler::network::ProcessData<typename>::error",
			"::stappler::network::ProcessData<typename>::uploadProgress",
			"::stappler::network::ProcessData<typename>::downloadProgress",
			"::stappler::network::ProcessData<typename>::sharedHandle",
			"::stappler::network::ProcessData<typename>::uploadProgressValue",
			"::stappler::network::ProcessData<typename>::uploadProgressTiming",
			"::stappler::network::ProcessData<typename>::downloadProgressValue",
			"::stappler::network::ProcessData<typename>::downloadProgressTiming",
			"::stappler::network::ProcessData<typename>::errorCode",
			"::stappler::network::ProcessData<typename>::responseCode",
			"::stappler::network::ProcessData<typename>::connectTimeout",
			"::stappler::network::ProcessData<typename>::lowSpeedTime",
			"::stappler::network::ProcessData<typename>::lowSpeedLimit",
			"::stappler::network::ProcessData<typename>::shared",
			"::stappler::network::ProcessData<typename>::verifyTsl",
			"::stappler::network::ProcessData<typename>::debug",
			"::stappler::network::ProcessData<typename>::reuse",
			"::stappler::network::ProcessData<typename>::silent",
			"::stappler::network::ProcessData<typename>::performed",
			"::stappler::network::ReceiveData<typename>",
			"::stappler::network::ReceiveData<typename>::Function<typename>",
			"::stappler::network::ReceiveData<typename>::Vector<typename>",
			"::stappler::network::ReceiveData<typename>::Map<typename,typename>",
			"::stappler::network::ReceiveData<typename>::String",
			"::stappler::network::ReceiveData<typename>::Bytes",
			"::stappler::network::ReceiveData<typename>::IOCallback",
			"::stappler::network::ReceiveData<typename>::HeaderCallback",
			"::stappler::network::ReceiveData<typename>::DataSource",
			"::stappler::network::ReceiveData<typename>::headers",
			"::stappler::network::ReceiveData<typename>::parsed",
			"::stappler::network::ReceiveData<typename>::contentType",
			"::stappler::network::ReceiveData<typename>::data",
			"::stappler::network::ReceiveData<typename>::headerCallback",
			"::stappler::network::ReceiveData<typename>::offset",
			"::stappler::network::ReceiveData<typename>::resumeDownload",
			"::stappler::network::HandleData<typename>",
			"::stappler::network::HandleData<typename>::Vector<typename>",
			"::stappler::network::HandleData<typename>::Function<typename>",
			"::stappler::network::HandleData<typename>::Map<typename,typename>",
			"::stappler::network::HandleData<typename>::String",
			"::stappler::network::HandleData<typename>::StringStream",
			"::stappler::network::HandleData<typename>::Bytes",
			"::stappler::network::HandleData<typename>::Value",
			"::stappler::network::HandleData<typename>::HeaderMap",
			"::stappler::network::HandleData<typename>::ProgressCallback",
			"::stappler::network::HandleData<typename>::IOCallback",
			"::stappler::network::HandleData<typename>::HeaderCallback",
			"::stappler::network::HandleData<typename>::send",
			"::stappler::network::HandleData<typename>::process",
			"::stappler::network::HandleData<typename>::receive",
			"::stappler::network::HandleData<typename>::auth",
			"::stappler::network::HandleData<typename>::~HandleData()",
			"::stappler::network::HandleData<typename>::reset(stappler::network::Method,stappler::StringView)",
			"::stappler::network::HandleData<typename>::getResponseCode() const",
			"::stappler::network::HandleData<typename>::getErrorCode() const",
			"::stappler::network::HandleData<typename>::getError() const",
			"::stappler::network::HandleData<typename>::setCookieFile(stappler::StringView)",
			"::stappler::network::HandleData<typename>::setUserAgent(stappler::StringView)",
			"::stappler::network::HandleData<typename>::setUrl(stappler::StringView)",
			"::stappler::network::HandleData<typename>::clearHeaders()",
			"::stappler::network::HandleData<typename>::addHeader(stappler::StringView,stappler::StringView)",
			"::stappler::network::HandleData<typename>::getRequestHeaders() const",
			"::stappler::network::HandleData<typename>::setMailFrom(stappler::StringView)",
			"::stappler::network::HandleData<typename>::clearMailTo()",
			"::stappler::network::HandleData<typename>::addMailTo(stappler::StringView)",
			"::stappler::network::HandleData<typename>::setAuthority(stappler::StringView,stappler::StringView,stappler::network::AuthMethod)",
			"::stappler::network::HandleData<typename>::setPrivateKeyAuth(stappler::BytesView)",
			"::stappler::network::HandleData<typename>::setPrivateKeyAuth(crypto::PrivateKey const&)",
			"::stappler::network::HandleData<typename>::setProxy(stappler::StringView,stappler::StringView)",
			"::stappler::network::HandleData<typename>::setReceiveFile(stappler::StringView,bool)",
			"::stappler::network::HandleData<typename>::setReceiveCallback(stappler::network::HandleData::IOCallback&&)",
			"::stappler::network::HandleData<typename>::setResumeDownload(bool)",
			"::stappler::network::HandleData<typename>::setResumeOffset(uint64_t)",
			"::stappler::network::HandleData<typename>::getReceiveDataSource() const",
			"::stappler::network::HandleData<typename>::setSendSize(size_t)",
			"::stappler::network::HandleData<typename>::setSendFile(stappler::StringView,stappler::StringView)",
			"::stappler::network::HandleData<typename>::setSendCallback(stappler::network::HandleData::IOCallback&&,size_t,stappler::StringView)",
			"::stappler::network::HandleData<typename>::setSendData(stappler::StringView,stappler::StringView)",
			"::stappler::network::HandleData<typename>::setSendData(stappler::BytesView,stappler::StringView)",
			"::stappler::network::HandleData<typename>::setSendData(stappler::network::HandleData::Bytes&&,stappler::StringView)",
			"::stappler::network::HandleData<typename>::setSendData(uint8_t const*,size_t,stappler::StringView)",
			"::stappler::network::HandleData<typename>::setSendData(stappler::network::HandleData::Value const&,data::EncodeFormat)",
			"::stappler::network::HandleData<typename>::getSendDataSource() const",
			"::stappler::network::HandleData<typename>::setHeaderCallback(stappler::network::HandleData::HeaderCallback&&)",
			"::stappler::network::HandleData<typename>::getHeaderCallback() const",
			"::stappler::network::HandleData<typename>::getReceivedHeaderString(stappler::StringView) const",
			"::stappler::network::HandleData<typename>::getReceivedHeaderInt(stappler::StringView) const",
			"::stappler::network::HandleData<typename>::getMethod() const",
			"::stappler::network::HandleData<typename>::getUrl() const",
			"::stappler::network::HandleData<typename>::getCookieFile() const",
			"::stappler::network::HandleData<typename>::getUserAgent() const",
			"::stappler::network::HandleData<typename>::getResponseContentType() const",
			"::stappler::network::HandleData<typename>::getRecievedHeaders() const",
			"::stappler::network::HandleData<typename>::setDebug(bool)",
			"::stappler::network::HandleData<typename>::setReuse(bool)",
			"::stappler::network::HandleData<typename>::setShared(bool)",
			"::stappler::network::HandleData<typename>::setSilent(bool)",
			"::stappler::network::HandleData<typename>::getDebugData() const",
			"::stappler::network::HandleData<typename>::setDownloadProgress(stappler::network::HandleData::ProgressCallback&&)",
			"::stappler::network::HandleData<typename>::setUploadProgress(stappler::network::HandleData::ProgressCallback&&)",
			"::stappler::network::HandleData<typename>::setConnectTimeout(int)",
			"::stappler::network::HandleData<typename>::setLowSpeedLimit(int,size_t)",
			"::stappler::network::HandleData<typename>::setVerifyTls(bool)"
		],
		"SPNetworkHandle.h":  [
			"STAPPLER_NETWORK_SPNETWORKHANDLE_H_",
			"::stappler::network::Handle<typename>",
			"::stappler::network::Handle<typename>::DataType",
			"::stappler::network::Handle<typename>::String",
			"::stappler::network::Handle<typename>::StringStream",
			"::stappler::network::Handle<typename>::Bytes",
			"::stappler::network::Handle<typename>::Value",
			"::stappler::network::Handle<typename>::ProgressCallback",
			"::stappler::network::Handle<typename>::IOCallback",
			"::stappler::network::Handle<typename>::Handle()",
			"::stappler::network::Handle<typename>::Handle(Handle<Interface>&&)",
			"::stappler::network::Handle<typename>::operator=(Handle<Interface>&&)",
			"::stappler::network::Handle<typename>::init(stappler::network::Method,stappler::StringView)",
			"::stappler::network::Handle<typename>::perform()",
			"::stappler::network::Handle<typename>::getData()",
			"::stappler::network::MultiHandle<typename>",
			"::stappler::network::MultiHandle<typename>::addHandle(Handle<Interface>*,void*)",
			"::stappler::network::MultiHandle<typename>::perform(Callback<bool (Handle<Interface> *, void *)> const&)",
			"::stappler::network::MultiHandle<typename>::pending",
			"::stappler::mem_std::NetworkHandle",
			"::stappler::mem_pool::NetworkHandle"
		],
		"SPPadding.h":  [
			"STAPPLER_GEOM_SPPADDING_H_",
			"::stappler::geom::Padding",
			"::stappler::geom::Padding::top",
			"::stappler::geom::Padding::right",
			"::stappler::geom::Padding::bottom",
			"::stappler::geom::Padding::left",
			"::stappler::geom::Padding::horizontal() const",
			"::stappler::geom::Padding::vertical() const",
			"::stappler::geom::Padding::getBottomLeft(stappler::geom::Size2 const&) const",
			"::stappler::geom::Padding::getTopLeft(stappler::geom::Size2 const&) const",
			"::stappler::geom::Padding::getBottomRight(stappler::geom::Size2 const&) const",
			"::stappler::geom::Padding::getTopRight(stappler::geom::Size2 const&) const",
			"::stappler::geom::Padding::setTop(float)",
			"::stappler::geom::Padding::setBottom(float)",
			"::stappler::geom::Padding::setLeft(float)",
			"::stappler::geom::Padding::setRight(float)",
			"::stappler::geom::Padding::set(float,float,float,float)",
			"::stappler::geom::Padding::set(float,float,float)",
			"::stappler::geom::Padding::set(float,float)",
			"::stappler::geom::Padding::set(float)",
			"::stappler::geom::Padding::Padding(float,float,float,float)",
			"::stappler::geom::Padding::Padding(float,float,float)",
			"::stappler::geom::Padding::Padding(float,float)",
			"::stappler::geom::Padding::Padding(float)",
			"::stappler::geom::Padding::Padding()",
			"::stappler::geom::Padding::Padding(stappler::geom::Padding const&)",
			"::stappler::geom::Padding::operator==(stappler::geom::Padding const&) const",
			"::stappler::geom::Padding::operator!=(stappler::geom::Padding const&) const",
			"::stappler::geom::Padding::operator*=(float)",
			"::stappler::geom::Padding::operator/=(float)",
			"::stappler::geom::Padding::operator*(float)",
			"::stappler::geom::Padding::operator/(float)",
			"::stappler::geom::Margin"
		],
		"SPPriorityList.h":  [
			"STAPPLER_CORE_UTILS_SPPRIORITYLIST_H_",
			"::stappler::PriorityListEntry<typename>",
			"::stappler::PriorityListEntry<typename>::prev",
			"::stappler::PriorityListEntry<typename>::next",
			"::stappler::PriorityListEntry<typename>::target",
			"::stappler::PriorityListEntry<typename>::priority",
			"::stappler::PriorityListEntry<typename>::value",
			"::stappler::HashTraits<PriorityListEntry<Value>*>::HashTraits<PriorityListEntry<Value>*>",
			"::stappler::HashTraits<PriorityListEntry<Value>*>::Entry",
			"::stappler::HashTraits<PriorityListEntry<Value>*>::ValueSize",
			"::stappler::HashTraits<PriorityListEntry<Value>*>::ValueOffset",
			"::stappler::HashTraits<PriorityListEntry<Value>*>::hash(uint32_t,stappler::HashTraits<PriorityListEntry<type-parameter-0-0> *>::Entry const*)",
			"::stappler::HashTraits<PriorityListEntry<Value>*>::hash(uint32_t,void const*)",
			"::stappler::HashTraits<PriorityListEntry<Value>*>::equal(stappler::HashTraits<PriorityListEntry<type-parameter-0-0> *>::Entry const*,stappler::HashTraits<PriorityListEntry<type-parameter-0-0> *>::Entry const*)",
			"::stappler::HashTraits<PriorityListEntry<Value>*>::equal(stappler::HashTraits<PriorityListEntry<type-parameter-0-0> *>::Entry const*,void const*)",
			"::stappler::PriorityList<typename>",
			"::stappler::PriorityList<typename>::Pool",
			"::stappler::PriorityList<typename>::Entry",
			"::stappler::PriorityList<typename>::PriorityList(stappler::PriorityList::Pool*)",
			"::stappler::PriorityList<typename>::~PriorityList()",
			"::stappler::PriorityList<typename>::emplace<typename>(void*,int32_t,Args &&...)",
			"::stappler::PriorityList<typename>::find(void*)",
			"::stappler::PriorityList<typename>::foreach(Callback<bool (void *, int32_t, Value &)> const&)",
			"::stappler::PriorityList<typename>::erase(void const*)",
			"::stappler::PriorityList<typename>::clear()",
			"::stappler::PriorityList<typename>::empty() const",
			"::stappler::PriorityList<typename>::emplace_list<typename>(bool,stappler::PriorityList::Entry**,void*,int32_t,Args &&...)",
			"::stappler::PriorityList<typename>::allocate<typename>(void*,int32_t,Args &&...)",
			"::stappler::PriorityList<typename>::erase_entry(stappler::PriorityList::Entry*)",
			"::stappler::PriorityList<typename>::free(stappler::PriorityList::Entry*)",
			"::stappler::PriorityList<typename>::foreach_list(stappler::PriorityList::Entry*,Callback<bool (void *, int32_t, Value &)> const&)",
			"::stappler::PriorityList<typename>::_pool",
			"::stappler::PriorityList<typename>::_size",
			"::stappler::PriorityList<typename>::_negList",
			"::stappler::PriorityList<typename>::_zeroList",
			"::stappler::PriorityList<typename>::_posList",
			"::stappler::PriorityList<typename>::_hash",
			"::stappler::PriorityList<typename>::_free",
			"::stappler::PriorityList<typename>::emplace<typename>(void*,int32_t,Args &&...)",
			"::stappler::PriorityList<typename>::find(void*)",
			"::stappler::PriorityList<typename>::foreach(Callback<bool (void *, int32_t, Value &)> const&)",
			"::stappler::PriorityList<typename>::erase(void const*)",
			"::stappler::PriorityList<typename>::clear()",
			"::stappler::PriorityList<typename>::empty() const",
			"::stappler::PriorityList<typename>::emplace_list<typename>(bool,stappler::PriorityList::Entry**,void*,int32_t,Args &&...)",
			"::stappler::PriorityList<typename>::allocate<typename>(void*,int32_t,Args &&...)",
			"::stappler::PriorityList<typename>::erase_entry(stappler::PriorityList::Entry*)",
			"::stappler::PriorityList<typename>::free(stappler::PriorityList::Entry*)",
			"::stappler::PriorityList<typename>::foreach_list(stappler::PriorityList::Entry*,Callback<bool (void *, int32_t, Value &)> const&)"
		],
		"SPQuaternion.h":  [
			"STAPPLER_GEOM_SPQUATERNION_H_",
			"::stappler::geom::Quaternion",
			"::stappler::geom::Quaternion::multiply(stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,stappler::geom::Quaternion*)",
			"::stappler::geom::Quaternion::lerp(stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,float,stappler::geom::Quaternion*)",
			"::stappler::geom::Quaternion::slerp(stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,float,stappler::geom::Quaternion*)",
			"::stappler::geom::Quaternion::squad(stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,float,stappler::geom::Quaternion*)",
			"::stappler::geom::Quaternion::x",
			"::stappler::geom::Quaternion::y",
			"::stappler::geom::Quaternion::z",
			"::stappler::geom::Quaternion::w",
			"::stappler::geom::Quaternion::Quaternion()",
			"::stappler::geom::Quaternion::Quaternion(float,float,float,float)",
			"::stappler::geom::Quaternion::Quaternion(stappler::geom::Mat4 const&)",
			"::stappler::geom::Quaternion::Quaternion(stappler::geom::Vec3 const&)",
			"::stappler::geom::Quaternion::Quaternion(stappler::geom::Vec3 const&,float)",
			"::stappler::geom::Quaternion::Quaternion(stappler::geom::Quaternion const&)",
			"::stappler::geom::Quaternion::operator==(stappler::geom::Quaternion const&) const",
			"::stappler::geom::Quaternion::operator!=(stappler::geom::Quaternion const&) const",
			"::stappler::geom::Quaternion::toEulerAngles() const",
			"::stappler::geom::Quaternion::isIdentity() const",
			"::stappler::geom::Quaternion::isZero() const",
			"::stappler::geom::Quaternion::conjugate()",
			"::stappler::geom::Quaternion::getConjugated() const",
			"::stappler::geom::Quaternion::inverse()",
			"::stappler::geom::Quaternion::multiply(stappler::geom::Quaternion const&)",
			"::stappler::geom::Quaternion::normalize()",
			"::stappler::geom::Quaternion::getInversed() const",
			"::stappler::geom::Quaternion::getNormalized() const",
			"::stappler::geom::Quaternion::toAxisAngle(stappler::geom::Vec3*) const",
			"::stappler::geom::Quaternion::operator*(stappler::geom::Quaternion const&) const",
			"::stappler::geom::Quaternion::operator*(stappler::geom::Vec3 const&) const",
			"::stappler::geom::Quaternion::operator*=(stappler::geom::Quaternion const&)",
			"::stappler::geom::Quaternion::IDENTITY",
			"::stappler::geom::Quaternion::ZERO",
			"::stappler::geom::Quaternion::IDENTITY",
			"::stappler::geom::Quaternion::ZERO"
		],
		"SPRef.h":  [
			"STAPPLER_CORE_UTILS_SPREF_H_",
			"SP_REF_DEBUG",
			"::stappler::AtomicCounter",
			"::stappler::AtomicCounter::AtomicCounter()",
			"::stappler::AtomicCounter::increment()",
			"::stappler::AtomicCounter::decrement()",
			"::stappler::AtomicCounter::get() const",
			"::stappler::AtomicCounter::_count",
			"::stappler::RefBase<typename>",
			"::stappler::RefBase<typename>::InterfaceType",
			"::stappler::RefBase<typename>::retain()",
			"::stappler::RefBase<typename>::release(uint64_t)",
			"::stappler::RefBase<typename>::getReferenceCount() const",
			"::stappler::RefBase<typename>::~RefBase()",
			"::stappler::RefBase<typename>::RefBase()",
			"::stappler::RefBase<typename>::_counter",
			"::stappler::memleak::getNextRefId()",
			"::stappler::memleak::retainBacktrace(RefBase<memory::StandartInterface> const*)",
			"::stappler::memleak::releaseBacktrace(RefBase<memory::StandartInterface> const*,uint64_t)",
			"::stappler::memleak::foreachBacktrace(RefBase<memory::StandartInterface> const*,Callback<void (uint64_t, stappler::Time, const std::vector<std::string> &)> const&)",
			"::stappler::memleak::retainBacktrace(RefBase<memory::PoolInterface> const*)",
			"::stappler::memleak::releaseBacktrace(RefBase<memory::PoolInterface> const*,uint64_t)",
			"::stappler::memleak::foreachBacktrace(RefBase<memory::PoolInterface> const*,Callback<void (uint64_t, stappler::Time, const std::vector<std::string> &)> const&)",
			"::stappler::RcBase<typename>",
			"::stappler::RcBase<typename>::Type",
			"::stappler::RcBase<typename>::Self",
			"::stappler::RcBase<typename>::Pointer",
			"::stappler::RcBase<typename>::create<class>(Args &&...)",
			"::stappler::RcBase<typename>::alloc()",
			"::stappler::RcBase<typename>::alloc<class>(Args &&...)",
			"::stappler::RcBase<typename>::RcBase()",
			"::stappler::RcBase<typename>::RcBase(stappler::nullptr_t const&)",
			"::stappler::RcBase<typename>::RcBase(stappler::RcBase::Pointer const&)",
			"::stappler::RcBase<typename>::RcBase(stappler::RcBase::Self const&)",
			"::stappler::RcBase<typename>::RcBase(stappler::RcBase::Self&&)",
			"::stappler::RcBase<typename>::operator=(stappler::nullptr_t const&)",
			"::stappler::RcBase<typename>::operator=<typename,typename std::enable_if<std::is_convertible<B *, Base *>({})>::type*>(RcBase<B> const&)",
			"::stappler::RcBase<typename>::operator=(stappler::RcBase::Pointer const&)",
			"::stappler::RcBase<typename>::operator=(stappler::RcBase::Self const&)",
			"::stappler::RcBase<typename>::operator=(stappler::RcBase::Self&&)",
			"::stappler::RcBase<typename>::~RcBase()",
			"::stappler::RcBase<typename>::set(stappler::RcBase::Pointer const&)",
			"::stappler::RcBase<typename>::get() const",
			"::stappler::RcBase<typename>::operator Base*() const",
			"::stappler::RcBase<typename>::operator bool() const",
			"::stappler::RcBase<typename>::operator RcBase<B><typename,typename std::enable_if<std::is_convertible<Base *, B *>({})>::type*>()",
			"::stappler::RcBase<typename>::swap(stappler::RcBase::Self&)",
			"::stappler::RcBase<typename>::operator->() const",
			"::stappler::RcBase<typename>::cast<typename>() const",
			"::stappler::RcBase<typename>::operator==(stappler::RcBase::Self const&) const",
			"::stappler::RcBase<typename>::operator==(Base const*&) const",
			"::stappler::RcBase<typename>::operator==(typename std::remove_const<Base>::type*) const",
			"::stappler::RcBase<typename>::operator==(std::nullptr_t const) const",
			"::stappler::RcBase<typename>::operator!=(stappler::RcBase::Self const&) const",
			"::stappler::RcBase<typename>::operator!=(Base const*&) const",
			"::stappler::RcBase<typename>::operator!=(typename std::remove_const<Base>::type*) const",
			"::stappler::RcBase<typename>::operator!=(std::nullptr_t const) const",
			"::stappler::RcBase<typename>::operator>(stappler::RcBase::Self const&) const",
			"::stappler::RcBase<typename>::operator>(Base const*) const",
			"::stappler::RcBase<typename>::operator>(typename std::remove_const<Base>::type*) const",
			"::stappler::RcBase<typename>::operator>(std::nullptr_t const) const",
			"::stappler::RcBase<typename>::operator<(stappler::RcBase::Self const&) const",
			"::stappler::RcBase<typename>::operator<(Base const*) const",
			"::stappler::RcBase<typename>::operator<(typename std::remove_const<Base>::type*) const",
			"::stappler::RcBase<typename>::operator<(std::nullptr_t const) const",
			"::stappler::RcBase<typename>::operator>=(stappler::RcBase::Self const&) const",
			"::stappler::RcBase<typename>::operator>=(Base const*) const",
			"::stappler::RcBase<typename>::operator>=(typename std::remove_const<Base>::type*) const",
			"::stappler::RcBase<typename>::operator>=(std::nullptr_t const) const",
			"::stappler::RcBase<typename>::operator<=(stappler::RcBase::Self const&) const",
			"::stappler::RcBase<typename>::operator<=(Base const*) const",
			"::stappler::RcBase<typename>::operator<=(typename std::remove_const<Base>::type*) const",
			"::stappler::RcBase<typename>::operator<=(std::nullptr_t const) const",
			"::stappler::RcBase<typename>::doRetain()",
			"::stappler::RcBase<typename>::doRelease()",
			"::stappler::RcBase<typename>::doSwap(stappler::RcBase::Pointer)",
			"::stappler::RcBase<typename>::RcBase(stappler::RcBase::Pointer,bool)",
			"::stappler::RcBase<typename>::_ptr",
			"::stappler::Rc<typename>",
			"::stappler::mem_std::Ref",
			"::stappler::mem_pool::Ref"
		],
		"SPRefContainer.h":  [
			"STAPPLER_CORE_UTILS_SPREFCONTAINER_H_",
			"::stappler::RefContainer<typename>",
			"::stappler::RefContainer<typename>::Interface",
			"::stappler::RefContainer<typename>::Vector<typename>",
			"::stappler::RefContainer<typename>::ReserveItems",
			"::stappler::RefContainer<typename>::ContainerSize",
			"::stappler::RefContainer<typename>::_container",
			"::stappler::RefContainer<typename>::_nitems",
			"::stappler::RefContainer<typename>::~RefContainer()",
			"::stappler::RefContainer<typename>::RefContainer()",
			"::stappler::RefContainer<typename>::getItemByTag(uint32_t) const",
			"::stappler::RefContainer<typename>::addItem(Item*)",
			"::stappler::RefContainer<typename>::removeItem(Item*)",
			"::stappler::RefContainer<typename>::invalidateItemByTag(uint32_t)",
			"::stappler::RefContainer<typename>::invalidateAllItemsByTag(uint32_t)",
			"::stappler::RefContainer<typename>::removeItemByTag(uint32_t)",
			"::stappler::RefContainer<typename>::removeAllItemsByTag(uint32_t)",
			"::stappler::RefContainer<typename>::cleanup()",
			"::stappler::RefContainer<typename>::foreach<typename>(Callback const&) const",
			"::stappler::RefContainer<typename>::clear()",
			"::stappler::RefContainer<typename>::empty() const",
			"::stappler::RefContainer<typename>::size() const",
			"::stappler::RefContainer<typename>::~RefContainer()",
			"::stappler::RefContainer<typename>::RefContainer()",
			"::stappler::RefContainer<typename>::getItemByTag(uint32_t) const",
			"::stappler::RefContainer<typename>::addItem(Item*)",
			"::stappler::RefContainer<typename>::removeItem(Item*)",
			"::stappler::RefContainer<typename>::invalidateItemByTag(uint32_t)",
			"::stappler::RefContainer<typename>::invalidateAllItemsByTag(uint32_t)",
			"::stappler::RefContainer<typename>::removeItemByTag(uint32_t)",
			"::stappler::RefContainer<typename>::removeAllItemsByTag(uint32_t)",
			"::stappler::RefContainer<typename>::cleanup()",
			"::stappler::RefContainer<typename>::foreach<typename>(Callback const&) const",
			"::stappler::RefContainer<typename>::clear()",
			"::stappler::RefContainer<typename>::empty() const",
			"::stappler::RefContainer<typename>::size() const"
		],
		"SPSIMD.h":  [
			"STAPPLER_GEOM_SPSIMD_H_",
			"SP_SIMD_DEBUG",
			"SP_ATTR_OPTIMIZE_FN",
			"SP_ATTR_OPTIMIZE_INLINE_FN",
			"SP_GEOM_DEFAULT_SIMD_SSE",
			"SP_GEOM_DEFAULT_SIMD_NEON",
			"SP_GEOM_DEFAULT_SIMD_NEON64",
			"SP_GEOM_DEFAULT_SIMD",
			"SP_GEOM_DEFAULT_SIMD_NAMESPACE",
			"::stappler::simd::f32x4",
			"::stappler::simd::load(float,float,float,float)",
			"::stappler::simd::load(float const[4])",
			"::stappler::simd::load(float)",
			"::stappler::simd::store(float[4],stappler::simd::f32x4 const&)",
			"::stappler::simd::mul(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)",
			"::stappler::simd::div(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)",
			"::stappler::simd::add(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)",
			"::stappler::simd::sub(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)",
			"::stappler::simd::rsqrt(stappler::simd::f32x4 const&)",
			"::stappler::simd::load1(float)",
			"::stappler::simd::store1(float*,stappler::simd::f32x4 const&)",
			"::stappler::simd::mul1(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)",
			"::stappler::simd::add1(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)",
			"::stappler::simd::sub1(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)",
			"::stappler::simd::rsqrt1(stappler::simd::f32x4 const&)",
			"::stappler::simd::add(float const[4],float const[4],float[4])",
			"::stappler::simd::add(float const[4],float const&,float[4])",
			"::stappler::simd::sub(float const[4],float const[4],float[4])",
			"::stappler::simd::sub(float const[4],float const&,float[4])",
			"::stappler::simd::multiply(float const[4],float const[4],float[4])",
			"::stappler::simd::multiply(float const[4],float const&,float[4])",
			"::stappler::simd::divide(float const[4],float const[4],float[4])",
			"::stappler::simd::divide(float const[4],float const&,float[4])",
			"::stappler::simd::addMat4Scalar(float const[16],float,float[16])",
			"::stappler::simd::addMat4(float const[16],float const[16],float[16])",
			"::stappler::simd::subtractMat4(float const[16],float const[16],float[16])",
			"::stappler::simd::multiplyMat4Scalar(float const[16],float,float[16])",
			"::stappler::simd::multiplyMat4(float const[16],float const[16],float[16])",
			"::stappler::simd::negateMat4(float const[16],float[16])",
			"::stappler::simd::transposeMat4(float const[16],float[16])",
			"::stappler::simd::transformVec4Components(float const[16],float,float,float,float,float[4])",
			"::stappler::simd::transformVec4(float const[16],float const[4],float[4])",
			"::stappler::simd::crossVec3(float const[3],float const[3],float[3])",
			"::stappler::simd::isVec2BboxIntersects(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&,stappler::simd::f32x4&)"
		],
		"SPSearchConfiguration.h":  [
			"STAPPLER_SEARCH_SPSEARCHCONFIGURATION_H_",
			"::stappler::search::Configuration",
			"::stappler::search::Configuration::Map<typename,typename>",
			"::stappler::search::Configuration::Vector<typename>",
			"::stappler::search::Configuration::Set<typename>",
			"::stappler::search::Configuration::String",
			"::stappler::search::Configuration::StringStream",
			"::stappler::search::Configuration::StemmerCallback",
			"::stappler::search::Configuration::StemWordCallback",
			"::stappler::search::Configuration::PreStemCallback",
			"::stappler::search::Configuration::SearchVector",
			"::stappler::search::Configuration::WordMap",
			"::stappler::search::Configuration::HeadlineConfig",
			"::stappler::search::Configuration::HeadlineConfig::DefaultMaxWords",
			"::stappler::search::Configuration::HeadlineConfig::DefaultMinWords",
			"::stappler::search::Configuration::HeadlineConfig::DefaultShortWord",
			"::stappler::search::Configuration::HeadlineConfig::startToken",
			"::stappler::search::Configuration::HeadlineConfig::stopToken",
			"::stappler::search::Configuration::HeadlineConfig::startFragment",
			"::stappler::search::Configuration::HeadlineConfig::stopFragment",
			"::stappler::search::Configuration::HeadlineConfig::separator",
			"::stappler::search::Configuration::HeadlineConfig::maxWords",
			"::stappler::search::Configuration::HeadlineConfig::minWords",
			"::stappler::search::Configuration::HeadlineConfig::shortWord",
			"::stappler::search::Configuration::HeadlineConfig::fragmentCallback",
			"::stappler::search::Configuration::Configuration()",
			"::stappler::search::Configuration::Configuration(stappler::search::Language)",
			"::stappler::search::Configuration::setLanguage(stappler::search::Language)",
			"::stappler::search::Configuration::getLanguage() const",
			"::stappler::search::Configuration::setStemmer(stappler::search::ParserToken,stappler::search::Configuration::StemmerCallback&&)",
			"::stappler::search::Configuration::getStemmer(stappler::search::ParserToken) const",
			"::stappler::search::Configuration::setCustomStopwords(stappler::StringView const*)",
			"::stappler::search::Configuration::getCustomStopwords() const",
			"::stappler::search::Configuration::setPreStem(stappler::search::Configuration::PreStemCallback&&)",
			"::stappler::search::Configuration::getPreStem() const",
			"::stappler::search::Configuration::stemPhrase(stappler::StringView const&,stappler::search::Configuration::StemWordCallback const&) const",
			"::stappler::search::Configuration::stemHtml(stappler::StringView const&,stappler::search::Configuration::StemWordCallback const&) const",
			"::stappler::search::Configuration::stemWord(stappler::StringView const&,stappler::search::ParserToken,stappler::search::Configuration::StemWordCallback const&) const",
			"::stappler::search::Configuration::makeHeadline(stappler::search::Configuration::HeadlineConfig const&,stappler::StringView const&,Vector<stappler::search::Configuration::String> const&) const",
			"::stappler::search::Configuration::makeHtmlHeadlines(stappler::search::Configuration::HeadlineConfig const&,stappler::StringView const&,Vector<stappler::search::Configuration::String> const&,size_t) const",
			"::stappler::search::Configuration::makeHeadlines(stappler::search::Configuration::HeadlineConfig const&,Callback<void (const Function<bool (const stappler::StringView &, const stappler::StringView &)>)> const&,Vector<stappler::search::Configuration::String> const&,size_t) const",
			"::stappler::search::Configuration::stemQuery(Vector<stappler::search::SearchData> const&) const",
			"::stappler::search::Configuration::makeSearchVector(stappler::search::Configuration::SearchVector&,stappler::StringView,SearchData::Rank,size_t,Callback<void (stappler::StringView, stappler::StringView, stappler::search::ParserToken)> const&) const",
			"::stappler::search::Configuration::encodeSearchVector(stappler::search::Configuration::SearchVector const&,SearchData::Rank) const",
			"::stappler::search::Configuration::parseQuery(stappler::StringView) const",
			"::stappler::search::Configuration::isMatch(stappler::search::Configuration::SearchVector const&,stappler::StringView) const",
			"::stappler::search::Configuration::isMatch(stappler::search::Configuration::SearchVector const&,stappler::search::SearchQuery const&) const",
			"::stappler::search::Configuration::getEnvForToken(stappler::search::ParserToken) const",
			"::stappler::search::Configuration::_language",
			"::stappler::search::Configuration::_primary",
			"::stappler::search::Configuration::_secondary",
			"::stappler::search::Configuration::_stemmers",
			"::stappler::search::Configuration::_preStem",
			"::stappler::search::Configuration::_customStopwords"
		],
		"SPSearchDistance.h":  [
			"STAPPLER_SEARCH_SPSEARCHDISTANCE_H_",
			"::stappler::search::Distance",
			"::stappler::search::Distance::Value",
			"::stappler::search::Distance::Storage",
			"::stappler::search::Distance::Storage::Struct",
			"::stappler::search::Distance::Storage::Struct::v1",
			"::stappler::search::Distance::Storage::Struct::v2",
			"::stappler::search::Distance::Storage::Struct::v3",
			"::stappler::search::Distance::Storage::Struct::v4",
			"::stappler::search::Distance::Storage::Struct::set(uint8_t,stappler::search::Distance::Value)",
			"::stappler::search::Distance::Storage::Struct::get(uint8_t) const",
			"::stappler::search::Distance::Storage::Size",
			"::stappler::search::Distance::Storage::Size::size",
			"::stappler::search::Distance::Storage::Size::vec",
			"::stappler::search::Distance::Storage::Array",
			"::stappler::search::Distance::Storage::Vec",
			"::stappler::search::Distance::Storage::merge(stappler::search::Distance::Storage const&,stappler::search::Distance::Storage const&)",
			"::stappler::search::Distance::Storage::Storage()",
			"::stappler::search::Distance::Storage::~Storage()",
			"::stappler::search::Distance::Storage::Storage(stappler::search::Distance::Storage const&)",
			"::stappler::search::Distance::Storage::Storage(stappler::search::Distance::Storage&&)",
			"::stappler::search::Distance::Storage::operator=(stappler::search::Distance::Storage const&)",
			"::stappler::search::Distance::Storage::operator=(stappler::search::Distance::Storage&&)",
			"::stappler::search::Distance::Storage::empty() const",
			"::stappler::search::Distance::Storage::size() const",
			"::stappler::search::Distance::Storage::capacity() const",
			"::stappler::search::Distance::Storage::reserve(size_t)",
			"::stappler::search::Distance::Storage::emplace_back(stappler::search::Distance::Value)",
			"::stappler::search::Distance::Storage::reverse()",
			"::stappler::search::Distance::Storage::at(size_t) const",
			"::stappler::search::Distance::Storage::set(size_t,stappler::search::Distance::Value)",
			"::stappler::search::Distance::Storage::clear()",
			"::stappler::search::Distance::Storage::isVecStorage() const",
			"::stappler::search::Distance::Storage::isVecStorage(size_t) const",
			"::stappler::search::Distance::Storage::_size",
			"::stappler::search::Distance::Storage::",
			"::stappler::search::Distance::Storage::_array",
			"::stappler::search::Distance::Storage::_bytes",
			"::stappler::search::Distance::Distance()",
			"::stappler::search::Distance::Distance(stappler::StringView const&,stappler::StringView const&,size_t)",
			"::stappler::search::Distance::Distance(stappler::search::Distance const&)",
			"::stappler::search::Distance::Distance(stappler::search::Distance&&)",
			"::stappler::search::Distance::operator=(stappler::search::Distance const&)",
			"::stappler::search::Distance::operator=(stappler::search::Distance&&)",
			"::stappler::search::Distance::empty() const",
			"::stappler::search::Distance::size() const",
			"::stappler::search::Distance::diff_original(size_t,bool) const",
			"::stappler::search::Distance::diff_canonical(size_t,bool) const",
			"::stappler::search::Distance::nmatch() const",
			"::stappler::search::Distance::info() const",
			"::stappler::search::Distance::_storage"
		],
		"SPSearchIndex.h":  [
			"STAPPLER_SEARCH_SPSEARCHINDEX_H_",
			"::stappler::search::SearchIndex",
			"::stappler::search::SearchIndex::DefaultSep",
			"::stappler::search::SearchIndex::TokenType",
			"::stappler::search::SearchIndex::TokenCallback",
			"::stappler::search::SearchIndex::TokenizerCallback",
			"::stappler::search::SearchIndex::HeuristicCallback",
			"::stappler::search::SearchIndex::FilterCallback",
			"::stappler::search::SearchIndex::Slice",
			"::stappler::search::SearchIndex::Slice::start",
			"::stappler::search::SearchIndex::Slice::size",
			"::stappler::search::SearchIndex::Node",
			"::stappler::search::SearchIndex::Node::id",
			"::stappler::search::SearchIndex::Node::tag",
			"::stappler::search::SearchIndex::Node::canonical",
			"::stappler::search::SearchIndex::Node::alignment",
			"::stappler::search::SearchIndex::Token",
			"::stappler::search::SearchIndex::Token::index",
			"::stappler::search::SearchIndex::Token::slice",
			"::stappler::search::SearchIndex::ResultToken",
			"::stappler::search::SearchIndex::ResultToken::word",
			"::stappler::search::SearchIndex::ResultToken::match",
			"::stappler::search::SearchIndex::ResultToken::slice",
			"::stappler::search::SearchIndex::ResultNode",
			"::stappler::search::SearchIndex::ResultNode::score",
			"::stappler::search::SearchIndex::ResultNode::node",
			"::stappler::search::SearchIndex::ResultNode::matches",
			"::stappler::search::SearchIndex::Result",
			"::stappler::search::SearchIndex::Result::ref",
			"::stappler::search::SearchIndex::Result::nodes",
			"::stappler::search::SearchIndex::Heuristic",
			"::stappler::search::SearchIndex::Heuristic::TagCallback",
			"::stappler::search::SearchIndex::Heuristic::SizeCallback",
			"::stappler::search::SearchIndex::Heuristic::Heuristic()",
			"::stappler::search::SearchIndex::Heuristic::Heuristic(stappler::search::SearchIndex::Heuristic::TagCallback const&,bool)",
			"::stappler::search::SearchIndex::Heuristic::operator()(stappler::search::SearchIndex const&,SearchIndex::ResultNode const&)",
			"::stappler::search::SearchIndex::Heuristic::excludeEqualMatches",
			"::stappler::search::SearchIndex::Heuristic::fullMatchScore",
			"::stappler::search::SearchIndex::Heuristic::tagScore",
			"::stappler::search::SearchIndex::Heuristic::wordScore",
			"::stappler::search::SearchIndex::Heuristic::positionScore",
			"::stappler::search::SearchIndex::init(stappler::search::SearchIndex::TokenizerCallback const&)",
			"::stappler::search::SearchIndex::reserve(size_t)",
			"::stappler::search::SearchIndex::add(stappler::StringView const&,int64_t,int64_t)",
			"::stappler::search::SearchIndex::performSearch(stappler::StringView const&,size_t,stappler::search::SearchIndex::HeuristicCallback const&,stappler::search::SearchIndex::FilterCallback const&)",
			"::stappler::search::SearchIndex::resolveToken(stappler::search::SearchIndex::Node const&,stappler::search::SearchIndex::ResultToken const&) const",
			"::stappler::search::SearchIndex::convertToken(stappler::search::SearchIndex::Node const&,stappler::search::SearchIndex::ResultToken const&) const",
			"::stappler::search::SearchIndex::print() const",
			"::stappler::search::SearchIndex::makeStringView(stappler::search::SearchIndex::Token const&) const",
			"::stappler::search::SearchIndex::makeStringView(uint32_t,stappler::search::SearchIndex::Slice const&) const",
			"::stappler::search::SearchIndex::onToken(Vector<stappler::search::SearchIndex::Token>&,stappler::StringView const&,uint32_t,stappler::search::SearchIndex::Slice const&)",
			"::stappler::search::SearchIndex::_nodes",
			"::stappler::search::SearchIndex::_tokens",
			"::stappler::search::SearchIndex::_tokenizer"
		],
		"SPSearchParser.h":  [
			"STAPPLER_SEARCH_SPSEARCHPARSER_H_",
			"::stappler::search::ParserToken",
			"::stappler::search::UrlToken",
			"::stappler::search::Language",
			"::stappler::search::ParserStatus",
			"::stappler::search::SearchData",
			"::stappler::search::SearchData::Language",
			"::stappler::search::SearchData::Rank",
			"::stappler::search::SearchData::Type",
			"::stappler::search::SearchData::buffer",
			"::stappler::search::SearchData::language",
			"::stappler::search::SearchData::rank",
			"::stappler::search::SearchData::type",
			"::stappler::search::SearchData::getLanguage() const",
			"::stappler::search::SearchOp",
			"::stappler::search::SearchQuery",
			"::stappler::search::SearchQuery::Block",
			"::stappler::search::SearchQuery::Format",
			"::stappler::search::SearchQuery::block",
			"::stappler::search::SearchQuery::offset",
			"::stappler::search::SearchQuery::op",
			"::stappler::search::SearchQuery::value",
			"::stappler::search::SearchQuery::source",
			"::stappler::search::SearchQuery::args",
			"::stappler::search::SearchQuery::SearchQuery()",
			"::stappler::search::SearchQuery::SearchQuery(stappler::StringView,size_t,stappler::StringView)",
			"::stappler::search::SearchQuery::SearchQuery(stappler::search::SearchOp,stappler::StringView)",
			"::stappler::search::SearchQuery::clear()",
			"::stappler::search::SearchQuery::encode(Callback<void (stappler::StringView)> const&,stappler::search::SearchQuery::Format) const",
			"::stappler::search::SearchQuery::describe(std::ostream&,size_t) const",
			"::stappler::search::SearchQuery::foreach(Callback<void (stappler::StringView, stappler::StringView)> const&) const",
			"::stappler::search::isStopword(stappler::StringView const&,stappler::search::Language)",
			"::stappler::search::isStopword(stappler::StringView const&,stappler::search::StemmerEnv*)",
			"::stappler::search::isStopword(stappler::StringView const&,stappler::StringView const*)",
			"::stappler::search::getLanguageName(stappler::search::Language)",
			"::stappler::search::parseLanguage(stappler::StringView const&)",
			"::stappler::search::detectLanguage(stappler::StringView const&)",
			"::stappler::search::getParserTokenName(stappler::search::ParserToken)",
			"::stappler::search::isWordPart(stappler::search::ParserToken)",
			"::stappler::search::isComplexWord(stappler::search::ParserToken)",
			"::stappler::search::parseHtml(stappler::StringView,Callback<void (stappler::StringView)> const&)",
			"::stappler::search::parseUrl(stappler::StringView&,Callback<void (stappler::StringViewUtf8, stappler::search::UrlToken)> const&)",
			"::stappler::search::parsePhrase(stappler::StringView,Callback<stappler::search::ParserStatus (stappler::StringView, stappler::search::ParserToken)> const&)",
			"::stappler::search::getStemmer(stappler::search::Language)",
			"::stappler::search::stemWord(stappler::StringView,Callback<void (stappler::StringView)> const&,stappler::search::StemmerEnv*)",
			"::stappler::search::stemWord(stappler::StringView,Callback<void (stappler::StringView)> const&,stappler::search::Language)",
			"::stappler::search::normalizeWord(stappler::StringView const&)"
		],
		"SPSha.h":  [
			"STAPPLER_CORE_STRING_SPCRYPTO_H_",
			"::stappler::CoderSource",
			"::stappler::CoderSource::CoderSource(uint8_t const*,size_t)",
			"::stappler::CoderSource::CoderSource(char const*,size_t)",
			"::stappler::CoderSource::CoderSource(char const*)",
			"::stappler::CoderSource::CoderSource(stappler::StringView const&)",
			"::stappler::CoderSource::CoderSource(typename memory::PoolInterface::BytesType const&)",
			"::stappler::CoderSource::CoderSource(typename memory::StandartInterface::BytesType const&)",
			"::stappler::CoderSource::CoderSource(typename memory::PoolInterface::StringType const&)",
			"::stappler::CoderSource::CoderSource(typename memory::StandartInterface::StringType const&)",
			"::stappler::CoderSource::CoderSource<stappler::Endian>(BytesViewTemplate<Order> const&)",
			"::stappler::CoderSource::CoderSource(BytesReader<uint8_t> const&)",
			"::stappler::CoderSource::CoderSource(BytesReader<char> const&)",
			"::stappler::CoderSource::CoderSource<size_t>(std::array<uint8_t, Size> const&)",
			"::stappler::CoderSource::CoderSource<typename>(Container const&)",
			"::stappler::CoderSource::CoderSource()",
			"::stappler::CoderSource::_data",
			"::stappler::CoderSource::_offset",
			"::stappler::CoderSource::CoderSource(stappler::CoderSource const&)",
			"::stappler::CoderSource::CoderSource(stappler::CoderSource&&)",
			"::stappler::CoderSource::operator=(stappler::CoderSource const&)",
			"::stappler::CoderSource::operator=(stappler::CoderSource&&)",
			"::stappler::CoderSource::data() const",
			"::stappler::CoderSource::size() const",
			"::stappler::CoderSource::empty() const",
			"::stappler::CoderSource::view() const",
			"::stappler::CoderSource::operator[](size_t) const",
			"::stappler::CoderSource::read(uint8_t*,size_t)",
			"::stappler::CoderSource::seek(int64_t,io::Seek)",
			"::stappler::CoderSource::tell() const",
			"::stappler::crypto::HMAC_I_PAD",
			"::stappler::crypto::HMAC_O_PAD",
			"::stappler::crypto::SP_SECURE_KEY",
			"::stappler::crypto::Sha512",
			"::stappler::crypto::Sha512::_Ctx",
			"::stappler::crypto::Sha512::_Ctx::length",
			"::stappler::crypto::Sha512::_Ctx::state",
			"::stappler::crypto::Sha512::_Ctx::curlen",
			"::stappler::crypto::Sha512::_Ctx::buf",
			"::stappler::crypto::Sha512::Length",
			"::stappler::crypto::Sha512::Buf",
			"::stappler::crypto::Sha512::make(stappler::CoderSource const&,stappler::StringView const&)",
			"::stappler::crypto::Sha512::hmac(stappler::CoderSource const&,stappler::CoderSource const&)",
			"::stappler::crypto::Sha512::perform<typename>(Args &&...)",
			"::stappler::crypto::Sha512::Sha512()",
			"::stappler::crypto::Sha512::init()",
			"::stappler::crypto::Sha512::update(uint8_t const*,size_t)",
			"::stappler::crypto::Sha512::update(stappler::CoderSource const&)",
			"::stappler::crypto::Sha512::_update<typename,typename>(T&&,Args &&...)",
			"::stappler::crypto::Sha512::_update<typename>(T&&)",
			"::stappler::crypto::Sha512::final()",
			"::stappler::crypto::Sha512::final(uint8_t*)",
			"::stappler::crypto::Sha512::ctx",
			"::stappler::crypto::Sha256",
			"::stappler::crypto::Sha256::_Ctx",
			"::stappler::crypto::Sha256::_Ctx::length",
			"::stappler::crypto::Sha256::_Ctx::state",
			"::stappler::crypto::Sha256::_Ctx::curlen",
			"::stappler::crypto::Sha256::_Ctx::buf",
			"::stappler::crypto::Sha256::Length",
			"::stappler::crypto::Sha256::Buf",
			"::stappler::crypto::Sha256::make(stappler::CoderSource const&,stappler::StringView const&)",
			"::stappler::crypto::Sha256::hmac(stappler::CoderSource const&,stappler::CoderSource const&)",
			"::stappler::crypto::Sha256::perform<typename>(Args &&...)",
			"::stappler::crypto::Sha256::Sha256()",
			"::stappler::crypto::Sha256::init()",
			"::stappler::crypto::Sha256::update(uint8_t const*,size_t)",
			"::stappler::crypto::Sha256::update(stappler::CoderSource const&)",
			"::stappler::crypto::Sha256::_update<typename,typename>(T&&,Args &&...)",
			"::stappler::crypto::Sha256::_update<typename>(T&&)",
			"::stappler::crypto::Sha256::final()",
			"::stappler::crypto::Sha256::final(uint8_t*)",
			"::stappler::crypto::Sha256::ctx",
			"::stappler::crypto::Sha512::perform<typename>(Args &&...)",
			"::stappler::crypto::Sha512::_update<typename,typename>(T&&,Args &&...)",
			"::stappler::crypto::Sha512::_update<typename>(T&&)",
			"::stappler::crypto::Sha256::perform<typename>(Args &&...)",
			"::stappler::crypto::Sha256::_update<typename,typename>(T&&,Args &&...)",
			"::stappler::crypto::Sha256::_update<typename>(T&&)",
			"::stappler::io::ProducerTraits<CoderSource>::ProducerTraits<CoderSource>",
			"::stappler::io::ProducerTraits<CoderSource>::type",
			"::stappler::io::ProducerTraits<CoderSource>::ReadFn(void*,uint8_t*,size_t)",
			"::stappler::io::ProducerTraits<CoderSource>::SeekFn(void*,int64_t,stappler::io::Seek)",
			"::stappler::io::ProducerTraits<CoderSource>::TellFn(void*)"
		],
		"SPSpanView.h":  [
			"STAPPLER_CORE_STRING_SPSPANVIEW_H_",
			"::stappler::SpanView<typename>",
			"::stappler::SpanView<typename>::Type",
			"::stappler::SpanView<typename>::Self",
			"::stappler::SpanView<typename>::iterator",
			"::stappler::SpanView<typename>::reverse_iterator",
			"::stappler::SpanView<typename>::SpanView()",
			"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Type const*,size_t)",
			"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Type const*,stappler::SpanView::Type const*)",
			"::stappler::SpanView<typename>::alloc(memory::pool_t*,size_t)",
			"::stappler::SpanView<typename>::SpanView<class>(InputIt,InputIt)",
			"::stappler::SpanView<typename>::SpanView(InitializerList<stappler::SpanView::Type>)",
			"::stappler::SpanView<typename>::SpanView(std::vector<Type> const&)",
			"::stappler::SpanView<typename>::SpanView(std::vector<Type> const&,size_t)",
			"::stappler::SpanView<typename>::SpanView(std::vector<Type> const&,size_t,size_t)",
			"::stappler::SpanView<typename>::SpanView(memory::vector<Type> const&)",
			"::stappler::SpanView<typename>::SpanView(memory::vector<Type> const&,size_t)",
			"::stappler::SpanView<typename>::SpanView(memory::vector<Type> const&,size_t,size_t)",
			"::stappler::SpanView<typename>::SpanView<size_t>(stappler::SpanView::Type const(&)[Size])",
			"::stappler::SpanView<typename>::SpanView<size_t>(std::array<Type, Size> const&)",
			"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Self const&)",
			"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Self const&,size_t)",
			"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Self const&,size_t,size_t)",
			"::stappler::SpanView<typename>::operator=(memory::vector<Type> const&)",
			"::stappler::SpanView<typename>::operator=(std::vector<Type> const&)",
			"::stappler::SpanView<typename>::operator=<size_t>(std::array<Type, Size> const&)",
			"::stappler::SpanView<typename>::operator=(stappler::SpanView::Self const&)",
			"::stappler::SpanView<typename>::set(stappler::SpanView::Type const*,size_t)",
			"::stappler::SpanView<typename>::offset(size_t)",
			"::stappler::SpanView<typename>::data() const",
			"::stappler::SpanView<typename>::size() const",
			"::stappler::SpanView<typename>::begin() const",
			"::stappler::SpanView<typename>::end() const",
			"::stappler::SpanView<typename>::rbegin() const",
			"::stappler::SpanView<typename>::rend() const",
			"::stappler::SpanView<typename>::operator>(size_t const&) const",
			"::stappler::SpanView<typename>::operator>=(size_t const&) const",
			"::stappler::SpanView<typename>::operator<(size_t const&) const",
			"::stappler::SpanView<typename>::operator<=(size_t const&) const",
			"::stappler::SpanView<typename>::operator++()",
			"::stappler::SpanView<typename>::operator++(int)",
			"::stappler::SpanView<typename>::operator+=(size_t)",
			"::stappler::SpanView<typename>::operator==(stappler::SpanView::Self const&) const",
			"::stappler::SpanView<typename>::operator!=(stappler::SpanView::Self const&) const",
			"::stappler::SpanView<typename>::front() const",
			"::stappler::SpanView<typename>::back() const",
			"::stappler::SpanView<typename>::at(size_t const&) const",
			"::stappler::SpanView<typename>::operator[](size_t const&) const",
			"::stappler::SpanView<typename>::operator*() const",
			"::stappler::SpanView<typename>::clear()",
			"::stappler::SpanView<typename>::empty() const",
			"::stappler::SpanView<typename>::first(size_t) const",
			"::stappler::SpanView<typename>::last(size_t) const",
			"::stappler::SpanView<typename>::pop_front(size_t)",
			"::stappler::SpanView<typename>::pop_back(size_t)",
			"::stappler::SpanView<typename>::vec<typename>() const",
			"::stappler::SpanView<typename>::bytes() const",
			"::stappler::SpanView<typename>::pdup(memory::pool_t*) const",
			"::stappler::SpanView<typename>::hash() const",
			"::stappler::SpanView<typename>::sub(size_t,size_t) const",
			"::stappler::SpanView<typename>::ptr",
			"::stappler::SpanView<typename>::len",
			"::stappler::operator<<typename>(SpanView<_Tp> const&,SpanView<_Tp> const&)",
			"::stappler::operator><typename>(SpanView<_Tp> const&,SpanView<_Tp> const&)",
			"::stappler::operator<=<typename>(SpanView<_Tp> const&,SpanView<_Tp> const&)",
			"::stappler::operator>=<typename>(SpanView<_Tp> const&,SpanView<_Tp> const&)",
			"::stappler::makeSpanView<typename>(std::vector<Type> const&)",
			"::stappler::makeSpanView<typename>(memory::vector<Type> const&)",
			"::stappler::makeSpanView<typename,size_t>(std::array<Type, Size> const&)",
			"::stappler::makeSpanView<typename>(Type const*,size_t)",
			"::std::hash<stappler::SpanView<Value>>::hash<stappler::SpanView<Value>>",
			"::std::hash<stappler::SpanView<Value>>::operator()(stappler::SpanView<Value> const&)"
		],
		"SPSql.h":  [
			"STAPPLER_SQL_SQLQUERY_H_",
			"::stappler::sql::Profile",
			"::stappler::sql::Comparation",
			"::stappler::sql::Ordering",
			"::stappler::sql::Nulls",
			"::stappler::sql::Operator",
			"::stappler::sql::encodeComparation(stappler::sql::Comparation)",
			"::stappler::sql::decodeComparation(stappler::StringView)",
			"::stappler::sql::PatternComparator<typename>",
			"::stappler::sql::PatternComparator<typename>::Type",
			"::stappler::sql::PatternComparator<typename>::cmp",
			"::stappler::sql::PatternComparator<typename>::value",
			"::stappler::sql::SimpleBinder<typename>",
			"::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,data::ValueTemplate<Interface> const&)",
			"::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,const typename Interface::StringType&)",
			"::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,const typename Interface::BytesType&)",
			"::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,PatternComparator<data::ValueTemplate<Interface>> const&)",
			"::stappler::sql::Query<typename,typename>",
			"::stappler::sql::Query<typename,typename>::Stream",
			"::stappler::sql::Query<typename,typename>::String",
			"::stappler::sql::Query<typename,typename>::Distinct",
			"::stappler::sql::Query<typename,typename>::State",
			"::stappler::sql::Query<typename,typename>::FinalizationState",
			"::stappler::sql::Query<typename,typename>::RawString",
			"::stappler::sql::Query<typename,typename>::RawString::data",
			"::stappler::sql::Query<typename,typename>::RawStringView",
			"::stappler::sql::Query<typename,typename>::RawStringView::data",
			"::stappler::sql::Query<typename,typename>::Field",
			"::stappler::sql::Query<typename,typename>::Field::all()",
			"::stappler::sql::Query<typename,typename>::Field::all(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::Field::Field(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::Field::Field(char const*)",
			"::stappler::sql::Query<typename,typename>::Field::Field(std::string const&)",
			"::stappler::sql::Query<typename,typename>::Field::Field(memory::string const&)",
			"::stappler::sql::Query<typename,typename>::Field::Field(stappler::StringView const&,bool)",
			"::stappler::sql::Query<typename,typename>::Field::Field<typename,typename>(SourceString&&,FieldString&&)",
			"::stappler::sql::Query<typename,typename>::Field::as(char const*)",
			"::stappler::sql::Query<typename,typename>::Field::as(std::string const&)",
			"::stappler::sql::Query<typename,typename>::Field::as(memory::string const&)",
			"::stappler::sql::Query<typename,typename>::Field::from(char const*)",
			"::stappler::sql::Query<typename,typename>::Field::from(std::string const&)",
			"::stappler::sql::Query<typename,typename>::Field::from(memory::string const&)",
			"::stappler::sql::Query<typename,typename>::Field::source",
			"::stappler::sql::Query<typename,typename>::Field::name",
			"::stappler::sql::Query<typename,typename>::Field::alias",
			"::stappler::sql::Query<typename,typename>::Field::plain",
			"::stappler::sql::Query<typename,typename>::Expand<typename>",
			"::stappler::sql::Query<typename,typename>::Expand<typename>::fields<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
			"::stappler::sql::Query<typename,typename>::Expand<typename>::fields(Clause&,stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::Expand<typename>::from<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
			"::stappler::sql::Query<typename,typename>::Expand<typename>::from(Clause&,stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename,typename>(Clause&,Value&&,VArgs &&...)",
			"::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename>(Clause&,Value&&)",
			"::stappler::sql::Query<typename,typename>::Expand<typename>::values(Clause&)",
			"::stappler::sql::Query<typename,typename>::QueryHandle",
			"::stappler::sql::Query<typename,typename>::QueryHandle::query",
			"::stappler::sql::Query<typename,typename>::QueryHandle::state",
			"::stappler::sql::Query<typename,typename>::QueryHandle::finalize()",
			"::stappler::sql::Query<typename,typename>::QueryHandle::QueryHandle(Query<Binder, Interface>*,stappler::sql::Query::State)",
			"::stappler::sql::Query<typename,typename>::WhereClause<typename>",
			"::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)",
			"::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)",
			"::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)",
			"::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)",
			"::stappler::sql::Query<typename,typename>::WhereClause<typename>::parenthesis<typename>(stappler::sql::Operator,Callback const&)",
			"::stappler::sql::Query<typename,typename>::WhereBegin",
			"::stappler::sql::Query<typename,typename>::WhereBegin::where<typename>(Args &&...)",
			"::stappler::sql::Query<typename,typename>::WhereBegin::where()",
			"::stappler::sql::Query<typename,typename>::WhereBegin::whereParentesis<typename>(Callback const&)",
			"::stappler::sql::Query<typename,typename>::WhereContinue",
			"::stappler::sql::Query<typename,typename>::SetClause<typename>",
			"::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,Value&&)",
			"::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,stappler::StringView const&,Value&&)",
			"::stappler::sql::Query<typename,typename>::SetClause<typename>::def(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
			"::stappler::sql::Query<typename,typename>::FieldsClause<typename>::fields<typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::FieldsClause<typename>::field(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::FieldsClause<typename>::aggregate(stappler::StringView const&,stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::GenericQuery",
			"::stappler::sql::Query<typename,typename>::GenericQuery::with<typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::select(stappler::sql::Query::Distinct)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::insert(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::insert(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::update(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::update(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::remove(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::GenericQuery::remove(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::Select",
			"::stappler::sql::Query<typename,typename>::Select::all()",
			"::stappler::sql::Query<typename,typename>::Select::count()",
			"::stappler::sql::Query<typename,typename>::Select::count(stappler::sql::Query::String const&)",
			"::stappler::sql::Query<typename,typename>::Select::from()",
			"::stappler::sql::Query<typename,typename>::Select::from(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::Select::from<typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::SelectFrom",
			"::stappler::sql::Query<typename,typename>::SelectFrom::from(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::from<typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::innerJoinOn<typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::leftJoinOn<typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::rightJoinOn<typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::fullJoinOn<typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::where<typename>(Args &&...)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::where()",
			"::stappler::sql::Query<typename,typename>::SelectFrom::group(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
			"::stappler::sql::Query<typename,typename>::SelectFrom::forUpdate()",
			"::stappler::sql::Query<typename,typename>::SelectGroup",
			"::stappler::sql::Query<typename,typename>::SelectGroup::fields<typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::SelectGroup::field(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::SelectGroup::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
			"::stappler::sql::Query<typename,typename>::SelectWhere",
			"::stappler::sql::Query<typename,typename>::SelectWhere::group(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::SelectWhere::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
			"::stappler::sql::Query<typename,typename>::SelectWhere::forUpdate()",
			"::stappler::sql::Query<typename,typename>::SelectOrder",
			"::stappler::sql::Query<typename,typename>::SelectOrder::limit(size_t,size_t)",
			"::stappler::sql::Query<typename,typename>::SelectOrder::limit(size_t)",
			"::stappler::sql::Query<typename,typename>::SelectOrder::offset(size_t)",
			"::stappler::sql::Query<typename,typename>::SelectOrder::forUpdate()",
			"::stappler::sql::Query<typename,typename>::SelectPost",
			"::stappler::sql::Query<typename,typename>::SelectPost::forUpdate()",
			"::stappler::sql::Query<typename,typename>::Insert",
			"::stappler::sql::Query<typename,typename>::Insert::values<typename>(Args &&...)",
			"::stappler::sql::Query<typename,typename>::InsertValues",
			"::stappler::sql::Query<typename,typename>::InsertValues::value<typename>(Value&&)",
			"::stappler::sql::Query<typename,typename>::InsertValues::def()",
			"::stappler::sql::Query<typename,typename>::InsertValues::values<typename>(Args &&...)",
			"::stappler::sql::Query<typename,typename>::InsertValues::onConflict(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::InsertValues::onConflictDoNothing()",
			"::stappler::sql::Query<typename,typename>::InsertValues::returning()",
			"::stappler::sql::Query<typename,typename>::InsertValues::next()",
			"::stappler::sql::Query<typename,typename>::InsertConflict",
			"::stappler::sql::Query<typename,typename>::InsertConflict::doNothing()",
			"::stappler::sql::Query<typename,typename>::InsertConflict::doUpdate()",
			"::stappler::sql::Query<typename,typename>::InsertUpdateValues",
			"::stappler::sql::Query<typename,typename>::InsertUpdateValues::excluded(stappler::StringView)",
			"::stappler::sql::Query<typename,typename>::InsertUpdateValues::excluded(stappler::StringView,stappler::StringView)",
			"::stappler::sql::Query<typename,typename>::InsertUpdateValues::where<typename>(Args &&...)",
			"::stappler::sql::Query<typename,typename>::InsertUpdateValues::where()",
			"::stappler::sql::Query<typename,typename>::InsertUpdateValues::returning()",
			"::stappler::sql::Query<typename,typename>::InsertWhereValues",
			"::stappler::sql::Query<typename,typename>::InsertWhereValues::returning()",
			"::stappler::sql::Query<typename,typename>::InsertPostConflict",
			"::stappler::sql::Query<typename,typename>::InsertPostConflict::returning()",
			"::stappler::sql::Query<typename,typename>::Update",
			"::stappler::sql::Query<typename,typename>::Update::where<typename>(Args &&...)",
			"::stappler::sql::Query<typename,typename>::Update::where()",
			"::stappler::sql::Query<typename,typename>::Update::returning()",
			"::stappler::sql::Query<typename,typename>::UpdateWhere",
			"::stappler::sql::Query<typename,typename>::UpdateWhere::returning()",
			"::stappler::sql::Query<typename,typename>::Delete",
			"::stappler::sql::Query<typename,typename>::Delete::where<typename>(Args &&...)",
			"::stappler::sql::Query<typename,typename>::Delete::where()",
			"::stappler::sql::Query<typename,typename>::Delete::returning()",
			"::stappler::sql::Query<typename,typename>::DeleteWhere",
			"::stappler::sql::Query<typename,typename>::DeleteWhere::returning()",
			"::stappler::sql::Query<typename,typename>::Returning",
			"::stappler::sql::Query<typename,typename>::Returning::all()",
			"::stappler::sql::Query<typename,typename>::Returning::count()",
			"::stappler::sql::Query<typename,typename>::Returning::count(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::Query()",
			"::stappler::sql::Query<typename,typename>::setProfile(stappler::sql::Profile)",
			"::stappler::sql::Query<typename,typename>::with<typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::Query<typename,typename>::select(stappler::sql::Query::Distinct)",
			"::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::insert(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::insert(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::update(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::update(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::remove(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::remove(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::finalize()",
			"::stappler::sql::Query<typename,typename>::writeBind<typename>(Value&&)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawString const&)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawStringView const&)",
			"::stappler::sql::Query<typename,typename>::writeBind(Callback<void (stappler::sql::Query::Select &)> const&)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&,bool)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::StringView const&,stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::getStream()",
			"::stappler::sql::Query<typename,typename>::getBinder()",
			"::stappler::sql::Query<typename,typename>::getTarget() const",
			"::stappler::sql::Query<typename,typename>::finalization",
			"::stappler::sql::Query<typename,typename>::binder",
			"::stappler::sql::Query<typename,typename>::stream",
			"::stappler::sql::Query<typename,typename>::target",
			"::stappler::sql::Query<typename,typename>::subquery",
			"::stappler::sql::Query<typename,typename>::profile",
			"::stappler::sql::BinderTraits<typename,typename,typename>",
			"::stappler::sql::BinderTraits<typename,typename,typename>::writeBind<typename>(Query<Binder, Interface>&,Binder&,V&&)",
			"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>",
			"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::Field&)",
			"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>",
			"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::RawString&)",
			"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>",
			"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::RawStringView&)",
			"::stappler::sql::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>",
			"::stappler::sql::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>::writeBind(Query<Binder, Interface>&,Binder&,Callback<void (typename Query<Binder, Interface>::Select &)> const&)",
			"::stappler::sql::QueryHandle::finalize()",
			"::stappler::sql::Query<typename,typename>::writeBind<typename>(Value&&)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawString const&)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawStringView const&)",
			"::stappler::sql::Query<typename,typename>::writeBind(Callback<void (stappler::sql::Query::Select &)> const&)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&,bool)",
			"::stappler::sql::Query<typename,typename>::writeBind(stappler::StringView const&,stappler::sql::Query::Field const&)",
			"::stappler::sql::Query<typename,typename>::getStream()",
			"::stappler::sql::Query<typename,typename>::getBinder()",
			"::stappler::sql::Query<typename,typename>::getTarget() const",
			"::stappler::sql::Query<typename,typename>::finalize()",
			"::stappler::sql::Query<typename,typename>::with<typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::GenericQuery::with<typename,typename,typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::GenericQuery::select(stappler::sql::Query::Distinct)",
			"::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::GenericQuery::insert(stappler::StringView const&)",
			"::stappler::sql::GenericQuery::insert(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::GenericQuery::update(stappler::StringView const&)",
			"::stappler::sql::GenericQuery::update(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::GenericQuery::remove(stappler::StringView const&)",
			"::stappler::sql::GenericQuery::remove(stappler::StringView const&,stappler::StringView const&)"
		],
		"SPSqlInsert.hpp":  [
			"STAPPLER_SQL_SPSQLINSERT_HPP_",
			"::stappler::sql::Insert::values<typename,typename,typename>(Args &&...)",
			"::stappler::sql::InsertValues::values<typename,typename,typename>(Args &&...)",
			"::stappler::sql::InsertValues::value<typename,typename,typename>(Value&&)",
			"::stappler::sql::InsertValues::def()",
			"::stappler::sql::InsertValues::onConflict(stappler::StringView const&)",
			"::stappler::sql::InsertValues::onConflictDoNothing()",
			"::stappler::sql::InsertValues::returning()",
			"::stappler::sql::InsertValues::next()",
			"::stappler::sql::InsertConflict::doNothing()",
			"::stappler::sql::InsertConflict::doUpdate()",
			"::stappler::sql::InsertUpdateValues::excluded(stappler::StringView)",
			"::stappler::sql::InsertUpdateValues::excluded(stappler::StringView,stappler::StringView)",
			"::stappler::sql::InsertUpdateValues::where<typename,typename,typename>(Args &&...)",
			"::stappler::sql::InsertUpdateValues::where()",
			"::stappler::sql::InsertUpdateValues::returning()",
			"::stappler::sql::InsertWhereValues::returning()",
			"::stappler::sql::InsertPostConflict::returning()",
			"::stappler::sql::Returning::all()",
			"::stappler::sql::Returning::count()",
			"::stappler::sql::Returning::count(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::insert(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::insert(stappler::StringView const&,stappler::StringView const&)"
		],
		"SPSqlSelect.hpp":  [
			"STAPPLER_SQL_SPSQLSELECT_HPP_",
			"::stappler::sql::Select::all()",
			"::stappler::sql::Select::count()",
			"::stappler::sql::Select::count(stappler::sql::Query::String const&)",
			"::stappler::sql::FieldsClause<typename>::fields<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::FieldsClause<typename>::field(stappler::sql::Query::Field const&)",
			"::stappler::sql::FieldsClause<typename>::aggregate(stappler::StringView const&,stappler::sql::Query::Field const&)",
			"::stappler::sql::Select::from()",
			"::stappler::sql::Select::from(stappler::sql::Query::Field const&)",
			"::stappler::sql::Select::from<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::SelectFrom::from(stappler::sql::Query::Field const&)",
			"::stappler::sql::SelectFrom::from<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::SelectFrom::innerJoinOn<typename,typename,typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::SelectFrom::leftJoinOn<typename,typename,typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::SelectFrom::rightJoinOn<typename,typename,typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::SelectFrom::fullJoinOn<typename,typename,typename>(stappler::StringView const&,Callback const&)",
			"::stappler::sql::SelectFrom::where<typename,typename,typename>(Args &&...)",
			"::stappler::sql::SelectFrom::where()",
			"::stappler::sql::SelectFrom::group(stappler::sql::Query::Field const&)",
			"::stappler::sql::Query_writeOrderSt<typename,typename>(typename Interface::StringStreamType&,Query<Binder, Interface>&,stappler::sql::Ordering,const typename Query<Binder, Interface>::Field&,stappler::sql::Nulls)",
			"::stappler::sql::SelectFrom::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
			"::stappler::sql::SelectFrom::forUpdate()",
			"::stappler::sql::SelectGroup::fields<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::SelectGroup::field(stappler::sql::Query::Field const&)",
			"::stappler::sql::SelectGroup::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
			"::stappler::sql::SelectWhere::group(stappler::sql::Query::Field const&)",
			"::stappler::sql::SelectWhere::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
			"::stappler::sql::SelectWhere::forUpdate()",
			"::stappler::sql::SelectOrder::limit(size_t,size_t)",
			"::stappler::sql::SelectOrder::limit(size_t)",
			"::stappler::sql::SelectOrder::offset(size_t)",
			"::stappler::sql::SelectOrder::forUpdate()",
			"::stappler::sql::SelectPost::forUpdate()",
			"::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
			"::stappler::sql::Query<typename,typename>::select(stappler::sql::Query::Distinct)"
		],
		"SPSqlUpdate.hpp":  [
			"STAPPLER_SQL_SPSQLUPDATE_HPP_",
			"::stappler::sql::Update::where<typename,typename,typename>(Args &&...)",
			"::stappler::sql::Update::where()",
			"::stappler::sql::Update::returning()",
			"::stappler::sql::UpdateWhere::returning()",
			"::stappler::sql::Query<typename,typename>::update(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::update(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::sql::Delete::where<typename,typename,typename>(Args &&...)",
			"::stappler::sql::Delete::where()",
			"::stappler::sql::Delete::returning()",
			"::stappler::sql::DeleteWhere::returning()",
			"::stappler::sql::Query<typename,typename>::remove(stappler::StringView const&)",
			"::stappler::sql::Query<typename,typename>::remove(stappler::StringView const&,stappler::StringView const&)"
		],
		"SPSqlWhere.hpp":  [
			"STAPPLER_SQL_SPSQLWHERE_HPP_",
			"::stappler::sql::Query_writeOperator<typename>(Stream&,stappler::sql::Operator)",
			"::stappler::sql::Query_writeFieldName<typename>(typename Interface::StringStreamType&,stappler::StringView const&,bool)",
			"::stappler::sql::Query_writeComparationStr<typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::StringView const&,Value1&&)",
			"::stappler::sql::Query_writeComparationStr<typename,typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::StringView const&,Value1&&,stappler::StringView const&,Value2&&,stappler::StringView const&)",
			"::stappler::sql::Query_writeComparationBetween<typename,typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,Value1&&,Value2&&)",
			"::stappler::sql::Query_writeComparationStrNoArg<typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::StringView const&)",
			"::stappler::sql::Query_writeComparation<typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::sql::Comparation,Value1&&)",
			"::stappler::sql::makePatternComparator<typename>(stappler::sql::Comparation,T&&)",
			"::stappler::sql::Query_writeComparation<typename,typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::sql::Comparation,Value1&&,Value2&&)",
			"::stappler::sql::WhereClause<typename>::where<typename,typename,typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)",
			"::stappler::sql::WhereClause<typename>::where<typename,typename,typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)",
			"::stappler::sql::WhereClause<typename>::where<typename,typename,typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)",
			"::stappler::sql::WhereClause<typename>::where<typename,typename,typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)",
			"::stappler::sql::WhereClause<typename>::parenthesis<typename,typename,typename>(stappler::sql::Operator,Callback const&)",
			"::stappler::sql::WhereBegin::where<typename,typename,typename>(Args &&...)",
			"::stappler::sql::WhereBegin::where()",
			"::stappler::sql::WhereBegin::whereParentesis<typename,typename,typename>(Callback const&)",
			"::stappler::sql::SetClause<typename>::set<typename,typename,typename>(stappler::StringView const&,Value&&)",
			"::stappler::sql::SetClause<typename>::set<typename,typename,typename>(stappler::StringView const&,stappler::StringView const&,Value&&)",
			"::stappler::sql::SetClause<typename>::def(stappler::StringView const&)"
		],
		"SPString.h":  [
			"STAPPLER_CORE_STRING_SPSTRING_H_",
			"::stappler::string::getUtf16Length(char32_t)",
			"::stappler::string::getUtf16Length(stappler::StringView const&)",
			"::stappler::string::getUtf16HtmlLength(stappler::StringView const&)",
			"::stappler::string::getUtf8Length(stappler::WideStringView const&)",
			"::stappler::string::read(char const*)",
			"::stappler::string::charToKoi8r(char16_t)",
			"::stappler::string::InterfaceForString<typenamememory::StandartInterface::StringType>::InterfaceForString<typenamememory::StandartInterface::StringType>",
			"::stappler::string::InterfaceForString<typenamememory::StandartInterface::StringType>::Type",
			"::stappler::string::InterfaceForString<typenamememory::StandartInterface::WideStringType>::InterfaceForString<typenamememory::StandartInterface::WideStringType>",
			"::stappler::string::InterfaceForString<typenamememory::StandartInterface::WideStringType>::Type",
			"::stappler::string::InterfaceForString<typenamememory::PoolInterface::StringType>::InterfaceForString<typenamememory::PoolInterface::StringType>",
			"::stappler::string::InterfaceForString<typenamememory::PoolInterface::StringType>::Type",
			"::stappler::string::InterfaceForString<typenamememory::PoolInterface::WideStringType>::InterfaceForString<typenamememory::PoolInterface::WideStringType>",
			"::stappler::string::InterfaceForString<typenamememory::PoolInterface::WideStringType>::Type",
			"::stappler::string::InterfaceForString<consttypenamememory::StandartInterface::StringType>::InterfaceForString<consttypenamememory::StandartInterface::StringType>",
			"::stappler::string::InterfaceForString<consttypenamememory::StandartInterface::StringType>::Type",
			"::stappler::string::InterfaceForString<consttypenamememory::StandartInterface::WideStringType>::InterfaceForString<consttypenamememory::StandartInterface::WideStringType>",
			"::stappler::string::InterfaceForString<consttypenamememory::StandartInterface::WideStringType>::Type",
			"::stappler::string::InterfaceForString<consttypenamememory::PoolInterface::StringType>::InterfaceForString<consttypenamememory::PoolInterface::StringType>",
			"::stappler::string::InterfaceForString<consttypenamememory::PoolInterface::StringType>::Type",
			"::stappler::string::InterfaceForString<consttypenamememory::PoolInterface::WideStringType>::InterfaceForString<consttypenamememory::PoolInterface::WideStringType>",
			"::stappler::string::InterfaceForString<consttypenamememory::PoolInterface::WideStringType>::Type",
			"::stappler::string::utf8Decode(stappler::string::char_const_ptr_ref_t)",
			"::stappler::string::utf8HtmlDecode(stappler::string::char_const_ptr_ref_t)",
			"::stappler::string::isValidUtf8(stappler::StringView)",
			"::stappler::string::utf8Encode<typename>(StringType&,char16_t)",
			"::stappler::string::utf8Encode<typename>(StringType&,char32_t)",
			"::stappler::string::utf8Encode(std::ostream&,char16_t)",
			"::stappler::string::utf8Encode(std::ostream&,char32_t)",
			"::stappler::string::utf16Encode<typename>(StringType&,char32_t)",
			"::stappler::string::utf16Encode(std::basic_ostream<char16_t>&,char32_t)",
			"::stappler::string::trim<typename,typename>(StringType&)",
			"::stappler::string::tolower<typename,typename>(StringType&)",
			"::stappler::string::toupper<typename,typename>(StringType&)",
			"::stappler::string::toupper<typename>(stappler::StringView const&)",
			"::stappler::string::toupper<typename>(stappler::WideStringView const&)",
			"::stappler::string::tolower<typename>(stappler::StringView const&)",
			"::stappler::string::tolower<typename>(stappler::WideStringView const&)",
			"::stappler::string::urlencode<typename>(stappler::StringView const&)",
			"::stappler::string::urldecode<typename>(Storage&,stappler::StringView const&)",
			"::stappler::string::urldecode<typename>(stappler::StringView const&)",
			"::stappler::string::toUtf16<typename>(stappler::StringView const&)",
			"::stappler::string::toUtf16<typename>(char32_t)",
			"::stappler::string::toUtf16Html<typename>(stappler::StringView const&)",
			"::stappler::string::toUtf8<typename>(stappler::WideStringView const&)",
			"::stappler::string::toUtf8<typename>(char16_t)",
			"::stappler::string::toKoi8r<typename>(stappler::WideStringView const&)",
			"::stappler::string::split<typename>(stappler::StringView const&,stappler::StringView const&,T&&)",
			"::stappler::string::footprint_3(char16_t)",
			"::stappler::string::footprint_4(char16_t)",
			"::stappler::string::footprint<typename>(stappler::StringView const&)",
			"::stappler::string::footprint<typename>(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>",
			"::stappler::string::StringTraits<typename>::String",
			"::stappler::string::StringTraits<typename>::WideString",
			"::stappler::string::StringTraits<typename>::StringStream",
			"::stappler::string::StringTraits<typename>::Vector<typename>",
			"::stappler::string::StringTraits<typename>::Set<typename>",
			"::stappler::string::StringTraits<typename>::split<typename>(stappler::string::StringTraits::String const&,stappler::string::StringTraits::String const&,T&&)",
			"::stappler::string::StringTraits<typename>::trim(stappler::string::StringTraits::WideString&)",
			"::stappler::string::StringTraits<typename>::trim(stappler::string::StringTraits::String&)",
			"::stappler::string::StringTraits<typename>::urlencode(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::urldecode(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::toUtf16(char32_t)",
			"::stappler::string::StringTraits<typename>::toUtf16(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::toUtf16Html(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::toUtf8(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::toUtf8(char16_t)",
			"::stappler::string::StringTraits<typename>::toKoi8r(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::tolower(stappler::string::StringTraits::WideString&)",
			"::stappler::string::StringTraits<typename>::toupper(stappler::string::StringTraits::WideString&)",
			"::stappler::string::StringTraits<typename>::tolower(stappler::string::StringTraits::String&)",
			"::stappler::string::StringTraits<typename>::toupper(stappler::string::StringTraits::String&)",
			"::stappler::string::StringTraits<typename>::tolower(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::toupper(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::tolower(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::toupper(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::isUrlencodeChar(char)",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::ToStringTraits<memory::StandartInterface>",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::String",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::WideString",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::StringStream",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::toStringStream<typename>(stappler::string::ToStringTraits<stappler::memory::StandartInterface>::StringStream&,T)",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::toStringStream<typename,typename>(stappler::string::ToStringTraits<stappler::memory::StandartInterface>::StringStream&,T,Args &&...)",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::toString<class>(T)",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::toString(stappler::StringView const&)",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::toString(stappler::string::ToStringTraits<stappler::memory::StandartInterface>::String const&)",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::toString(char const*)",
			"::stappler::string::ToStringTraits<memory::StandartInterface>::toString<typename,typename>(T,Args &&...)",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::ToStringTraits<memory::PoolInterface>",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::String",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::WideString",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::StringStream",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::toStringStream<typename>(stappler::string::ToStringTraits<stappler::memory::PoolInterface>::StringStream&,T)",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::toStringStream<typename,typename>(stappler::string::ToStringTraits<stappler::memory::PoolInterface>::StringStream&,T,Args &&...)",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::toString<class>(T)",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::toString(stappler::StringView const&)",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::toString(stappler::string::ToStringTraits<stappler::memory::PoolInterface>::String const&)",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::toString(char const*)",
			"::stappler::string::ToStringTraits<memory::PoolInterface>::toString<typename,typename>(T,Args &&...)",
			"::stappler::string::Sha256",
			"::stappler::string::Sha512",
			"::stappler::string::hash32(stappler::StringView const&)",
			"::stappler::string::hash64(stappler::StringView const&)",
			"::stappler::string::stdlibHashUnsigned<typename>(StringType const&)",
			"::stappler::string::stdlibHashSigned<typename>(StringType const&)",
			"::stappler::base16::charToHex(char const&,bool)",
			"::stappler::base16::hexToChar(char const&)",
			"::stappler::base16::hexToChar(char const&,char const&)",
			"::stappler::base16::encodeSize(size_t)",
			"::stappler::base16::decodeSize(size_t)",
			"::stappler::base16::encode<typename>(stappler::CoderSource const&)",
			"::stappler::base16::encode(std::basic_ostream<char>&,stappler::CoderSource const&)",
			"::stappler::base16::encode(Callback<void (char)> const&,stappler::CoderSource const&)",
			"::stappler::base16::encode(char*,size_t,stappler::CoderSource const&)",
			"::stappler::base16::decode<typename>(stappler::CoderSource const&)",
			"::stappler::base16::decode(std::basic_ostream<char>&,stappler::CoderSource const&)",
			"::stappler::base16::decode(Callback<void (uint8_t)> const&,stappler::CoderSource const&)",
			"::stappler::base16::decode(uint8_t*,size_t,stappler::CoderSource const&)",
			"::stappler::base64::encodeSize(size_t)",
			"::stappler::base64::decodeSize(size_t)",
			"::stappler::base64::encode<typename>(stappler::CoderSource const&)",
			"::stappler::base64::encode(std::basic_ostream<char>&,stappler::CoderSource const&)",
			"::stappler::base64::encode(Callback<void (char)> const&,stappler::CoderSource const&)",
			"::stappler::base64::encode(char*,size_t,stappler::CoderSource const&)",
			"::stappler::base64::decode<typename>(stappler::CoderSource const&)",
			"::stappler::base64::decode(std::basic_ostream<char>&,stappler::CoderSource const&)",
			"::stappler::base64::decode(Callback<void (uint8_t)> const&,stappler::CoderSource const&)",
			"::stappler::base64::decode(uint8_t*,size_t,stappler::CoderSource const&)",
			"::stappler::base64url::encodeSize(size_t)",
			"::stappler::base64url::decodeSize(size_t)",
			"::stappler::base64url::encode<typename>(stappler::CoderSource const&)",
			"::stappler::base64url::encode(std::basic_ostream<char>&,stappler::CoderSource const&)",
			"::stappler::base64url::encode(Callback<void (char)> const&,stappler::CoderSource const&)",
			"::stappler::base64url::encode(char*,size_t,stappler::CoderSource const&)",
			"::stappler::base64url::decode<typename>(stappler::CoderSource const&)",
			"::stappler::base64url::decode(std::basic_ostream<char>&,stappler::CoderSource const&)",
			"::stappler::base64url::decode(Callback<void (uint8_t)> const&,stappler::CoderSource const&)",
			"::stappler::base64url::decode(uint8_t*,size_t,stappler::CoderSource const&)",
			"::stappler::toStringStreamConcat<typename,typename>(StreamType&,Container const&)",
			"::stappler::toStringStreamConcat<typename,typename,typename>(StreamType&,Container const&,Sep const&)",
			"::stappler::toStringConcat<typename,typename>(Container const&)",
			"::stappler::toStringConcat<typename,typename,typename>(Container const&,Sep const&)",
			"::stappler::string::trim<typename,typename>(StringType&)",
			"::stappler::string::tolower<typename,typename>(StringType&)",
			"::stappler::string::toupper<typename,typename>(StringType&)",
			"::stappler::string::toupper<typename>(stappler::StringView const&)",
			"::stappler::string::toupper<typename>(stappler::WideStringView const&)",
			"::stappler::string::tolower<typename>(stappler::StringView const&)",
			"::stappler::string::tolower<typename>(stappler::WideStringView const&)",
			"::stappler::string::urlencode<typename>(stappler::StringView const&)",
			"::stappler::string::urldecode<typename>(stappler::StringView const&)",
			"::stappler::string::toUtf16<typename>(stappler::StringView const&)",
			"::stappler::string::toUtf16<typename>(char32_t)",
			"::stappler::string::toUtf16Html<typename>(stappler::StringView const&)",
			"::stappler::string::toUtf8<typename>(stappler::WideStringView const&)",
			"::stappler::string::toUtf8<typename>(char16_t)",
			"::stappler::string::toKoi8r<typename>(stappler::WideStringView const&)",
			"::stappler::string::split<typename>(stappler::StringView const&,stappler::StringView const&,T&&)",
			"::stappler::string::_footprint_size(stappler::StringView const&)",
			"::stappler::string::_footprint_size(stappler::WideStringView const&)",
			"::stappler::string::_make_footprint(stappler::StringView const&,uint8_t*)",
			"::stappler::string::_make_footprint(stappler::WideStringView const&,uint8_t*)",
			"::stappler::string::footprint<typename>(stappler::StringView const&)",
			"::stappler::string::footprint<typename>(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::split<typename>(stappler::string::StringTraits::String const&,stappler::string::StringTraits::String const&,T&&)",
			"::stappler::string::StringTraits<typename>::trim(stappler::string::StringTraits::String&)",
			"::stappler::string::StringTraits<typename>::trim(stappler::string::StringTraits::WideString&)",
			"::stappler::string::StringTraits<typename>::urlencode(stappler::StringView const&)",
			"::stappler::string::urldecode<typename>(Storage&,stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::urldecode(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::toUtf16(char32_t)",
			"::stappler::string::StringTraits<typename>::toUtf16(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::toUtf16Html(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::toUtf8(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::toUtf8(char16_t)",
			"::stappler::string::StringTraits<typename>::toKoi8r(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::tolower(stappler::string::StringTraits::WideString&)",
			"::stappler::string::StringTraits<typename>::toupper(stappler::string::StringTraits::WideString&)",
			"::stappler::string::StringTraits<typename>::tolower(stappler::string::StringTraits::String&)",
			"::stappler::string::StringTraits<typename>::toupper(stappler::string::StringTraits::String&)",
			"::stappler::string::StringTraits<typename>::tolower(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::toupper(stappler::WideStringView const&)",
			"::stappler::string::StringTraits<typename>::tolower(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::toupper(stappler::StringView const&)",
			"::stappler::string::StringTraits<typename>::isUrlencodeChar(char)",
			"::stappler::string::utf8Encode<typename>(StringType&,char16_t)",
			"::stappler::string::utf8Encode(std::ostream&,char16_t)",
			"::stappler::string::utf8Encode<typename>(StringType&,char32_t)",
			"::stappler::string::utf8Encode(std::ostream&,char32_t)",
			"::stappler::string::utf16Encode<typename>(StringType&,char32_t)",
			"::stappler::string::utf16Encode(std::basic_ostream<char16_t>&,char32_t)",
			"::stappler::base64::__encode_pool(stappler::CoderSource const&)",
			"::stappler::base64::__encode_std(stappler::CoderSource const&)",
			"::stappler::base64::__decode_pool(stappler::CoderSource const&)",
			"::stappler::base64::__decode_std(stappler::CoderSource const&)",
			"::stappler::base64::decode(stappler::CoderSource const&)",
			"::stappler::base64::decode(stappler::CoderSource const&)",
			"::stappler::base64url::encodeSize(size_t)",
			"::stappler::base64url::decodeSize(size_t)",
			"::stappler::base64url::__encode_pool(stappler::CoderSource const&)",
			"::stappler::base64url::__encode_std(stappler::CoderSource const&)",
			"::stappler::base64url::decode<typename>(stappler::CoderSource const&)",
			"::stappler::base64url::decode(std::basic_ostream<char>&,stappler::CoderSource const&)",
			"::stappler::base64url::decode(Callback<void (uint8_t)> const&,stappler::CoderSource const&)",
			"::stappler::base64url::decode(uint8_t*,size_t,stappler::CoderSource const&)",
			"::stappler::mem_pool::String",
			"::stappler::mem_pool::WideString",
			"::stappler::mem_pool::StringStream",
			"::stappler::mem_pool::Interface",
			"::stappler::mem_pool::to_string::toString<typename>(T const&)",
			"::stappler::mem_pool::to_string::toStringStream<typename>(mem_pool::StringStream&,T)",
			"::stappler::mem_pool::to_string::toStringStream<typename,typename>(mem_pool::StringStream&,T,Args &&...)",
			"::stappler::mem_pool::to_string::toString<typename,typename>(T,Args &&...)",
			"::stappler::mem_std::String",
			"::stappler::mem_std::WideString",
			"::stappler::mem_std::StringStream",
			"::stappler::mem_std::Interface",
			"::stappler::mem_std::to_string::toString<typename>(T const&)",
			"::stappler::mem_std::to_string::toStringStream<typename>(mem_std::StringStream&,T)",
			"::stappler::mem_std::to_string::toStringStream<typename,typename>(mem_std::StringStream&,T,Args &&...)",
			"::stappler::mem_std::to_string::toString<typename,typename>(T,Args &&...)"
		],
		"SPStringView.h":  [
			"STAPPLER_CORE_STRING_SPSTRINGVIEW_H_",
			"::stappler::const_char_ptr",
			"::stappler::const_char16_ptr",
			"::stappler::StringView_readNumber<typename>(stappler::const_char_ptr&,size_t&,int)",
			"::stappler::StringView_readNumber<typename>(stappler::const_char16_ptr&,size_t&,int)",
			"::stappler::ReaderClassBase<typename>",
			"::stappler::ReaderClassBase<typename>::Chars<CharType...>",
			"::stappler::ReaderClassBase<typename>::Range<CharType,CharType>",
			"::stappler::ReaderClassBase<typename>::GroupId",
			"::stappler::ReaderClassBase<typename>::Group<GroupId>",
			"::stappler::StringViewBase<typename>",
			"::stappler::StringViewBase<typename>::Self",
			"::stappler::StringViewBase<typename>::MatchCharType",
			"::stappler::StringViewBase<typename>::CharType",
			"::stappler::StringViewBase<typename>::value_type",
			"::stappler::StringViewBase<typename>::TraitsType",
			"::stappler::StringViewBase<typename>::PoolString",
			"::stappler::StringViewBase<typename>::StdString",
			"::stappler::StringViewBase<typename>::MatchChars<CharType...>",
			"::stappler::StringViewBase<typename>::MatchRange<char,char>",
			"::stappler::StringViewBase<typename>::MatchCharGroup<stappler::CharGroupId>",
			"::stappler::StringViewBase<typename>::Numbers",
			"::stappler::StringViewBase<typename>::Latin",
			"::stappler::StringViewBase<typename>::WhiteSpace",
			"::stappler::StringViewBase<typename>::LatinLowercase",
			"::stappler::StringViewBase<typename>::LatinUppercase",
			"::stappler::StringViewBase<typename>::Alphanumeric",
			"::stappler::StringViewBase<typename>::Hexadecimial",
			"::stappler::StringViewBase<typename>::Base64",
			"::stappler::StringViewBase<typename>::merge<typename,typename>(Args &&...)",
			"::stappler::StringViewBase<typename>::StringViewBase()",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::CharType const*,size_t)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::CharType const*,size_t,size_t)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::Self const&,size_t,size_t)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::Self const&,size_t)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::PoolString const&)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::StdString const&)",
			"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::PoolString const&)",
			"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::StdString const&)",
			"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::Self const&)",
			"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::PoolString const&)",
			"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::StdString const&)",
			"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::Self const&)",
			"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::CharType const*,size_t)",
			"::stappler::StringViewBase<typename>::operator==(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::operator!=(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::CharType const&) const",
			"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::CharType const*) const",
			"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::is<stappler::StringViewBase::CharType>() const",
			"::stappler::StringViewBase<typename>::is<stappler::CharGroupId>() const",
			"::stappler::StringViewBase<typename>::is<typename>() const",
			"::stappler::StringViewBase<typename>::sub(size_t,size_t) const",
			"::stappler::StringViewBase<typename>::pdup(memory::pool_t*) const",
			"::stappler::StringViewBase<typename>::str<typename>() const",
			"::stappler::StringViewBase<typename>::operator++()",
			"::stappler::StringViewBase<typename>::operator++(int)",
			"::stappler::StringViewBase<typename>::operator+=(size_t)",
			"::stappler::StringViewBase<typename>::begin() const",
			"::stappler::StringViewBase<typename>::end() const",
			"::stappler::StringViewBase<typename>::operator-(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::operator-=(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::hash() const",
			"::stappler::StringViewBase<typename>::hash32() const",
			"::stappler::StringViewBase<typename>::readFloat()",
			"::stappler::StringViewBase<typename>::readDouble()",
			"::stappler::StringViewBase<typename>::readInteger(int)",
			"::stappler::StringViewBase<typename>::skipChars<typename>()",
			"::stappler::StringViewBase<typename>::skipUntil<typename>()",
			"::stappler::StringViewBase<typename>::backwardSkipChars<typename>()",
			"::stappler::StringViewBase<typename>::backwardSkipUntil<typename>()",
			"::stappler::StringViewBase<typename>::skipString(stappler::StringViewBase::Self const&)",
			"::stappler::StringViewBase<typename>::skipUntilString(stappler::StringViewBase::Self const&,bool)",
			"::stappler::StringViewBase<typename>::readChars<typename>()",
			"::stappler::StringViewBase<typename>::readUntil<typename>()",
			"::stappler::StringViewBase<typename>::backwardReadChars<typename>()",
			"::stappler::StringViewBase<typename>::backwardReadUntil<typename>()",
			"::stappler::StringViewBase<typename>::readUntilString(stappler::StringViewBase::Self const&)",
			"::stappler::StringViewBase<typename>::split<typename,typename>(Callback const&) const",
			"::stappler::StringViewBase<typename>::trimChars<typename>()",
			"::stappler::StringViewBase<typename>::trimUntil<typename>()",
			"::stappler::StringViewBase<typename>::__size<typename>(T const&)",
			"::stappler::StringViewBase<typename>::__size(stappler::StringViewBase::CharType const*)",
			"::stappler::StringViewBase<typename>::_size<typename,typename>(T&&)",
			"::stappler::StringViewBase<typename>::_size<typename,typename>(T&&,Args &&...)",
			"::stappler::StringViewBase<typename>::__merge<typename,typename>(Buf&,T const&)",
			"::stappler::StringViewBase<typename>::__merge<typename>(Buf&,stappler::StringViewBase::CharType const*)",
			"::stappler::StringViewBase<typename>::_merge<typename,typename,typename>(Buf&,T&&,Args &&...)",
			"::stappler::StringViewBase<typename>::_merge<typename,typename>(Buf&,T&&)",
			"::stappler::StringViewBase<typename>::match<typename>(stappler::StringViewBase::CharType)",
			"::stappler::StringViewUtf8",
			"::stappler::StringViewUtf8::Self",
			"::stappler::StringViewUtf8::MatchCharType",
			"::stappler::StringViewUtf8::CharType",
			"::stappler::StringViewUtf8::value_type",
			"::stappler::StringViewUtf8::TraitsType",
			"::stappler::StringViewUtf8::PoolString",
			"::stappler::StringViewUtf8::StdString",
			"::stappler::StringViewUtf8::MatchChars<MatchCharType...>",
			"::stappler::StringViewUtf8::MatchRange<char,char>",
			"::stappler::StringViewUtf8::MatchCharGroup<stappler::CharGroupId>",
			"::stappler::StringViewUtf8::MatchCompose<typename>",
			"::stappler::StringViewUtf8::Chars<MatchCharType...>",
			"::stappler::StringViewUtf8::Range<char,char>",
			"::stappler::StringViewUtf8::CharGroup<stappler::CharGroupId>",
			"::stappler::StringViewUtf8::Compose<typename>",
			"::stappler::StringViewUtf8::Numbers",
			"::stappler::StringViewUtf8::Latin",
			"::stappler::StringViewUtf8::WhiteSpace",
			"::stappler::StringViewUtf8::LatinLowercase",
			"::stappler::StringViewUtf8::LatinUppercase",
			"::stappler::StringViewUtf8::Alphanumeric",
			"::stappler::StringViewUtf8::Hexadecimial",
			"::stappler::StringViewUtf8::Base64",
			"::stappler::StringViewUtf8::StringViewUtf8()",
			"::stappler::StringViewUtf8::StringViewUtf8(char const*,size_t)",
			"::stappler::StringViewUtf8::StringViewUtf8(char const*,size_t,size_t)",
			"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8 const&,size_t)",
			"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8 const&,size_t,size_t)",
			"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8::PoolString const&)",
			"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8::StdString const&)",
			"::stappler::StringViewUtf8::StringViewUtf8(StringViewBase<char> const&)",
			"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::PoolString const&)",
			"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::StdString const&)",
			"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::PoolString const&)",
			"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::StdString const&)",
			"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::set(char const*,size_t)",
			"::stappler::StringViewUtf8::operator==(stappler::StringViewUtf8::Self const&) const",
			"::stappler::StringViewUtf8::operator!=(stappler::StringViewUtf8::Self const&) const",
			"::stappler::StringViewUtf8::is(char const&) const",
			"::stappler::StringViewUtf8::is(char16_t const&) const",
			"::stappler::StringViewUtf8::is(char const*) const",
			"::stappler::StringViewUtf8::is(stappler::StringViewUtf8::Self const&) const",
			"::stappler::StringViewUtf8::is<char16_t>() const",
			"::stappler::StringViewUtf8::is<stappler::CharGroupId>() const",
			"::stappler::StringViewUtf8::is<typename>() const",
			"::stappler::StringViewUtf8::sub(size_t,size_t) const",
			"::stappler::StringViewUtf8::letter<typename>() const",
			"::stappler::StringViewUtf8::str<typename>() const",
			"::stappler::StringViewUtf8::offset(size_t)",
			"::stappler::StringViewUtf8::operator++()",
			"::stappler::StringViewUtf8::operator++(int)",
			"::stappler::StringViewUtf8::operator+=(size_t)",
			"::stappler::StringViewUtf8::isSpace() const",
			"::stappler::StringViewUtf8::begin() const",
			"::stappler::StringViewUtf8::end() const",
			"::stappler::StringViewUtf8::operator-(stappler::StringViewUtf8::Self const&) const",
			"::stappler::StringViewUtf8::operator-=(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::operator*() const",
			"::stappler::StringViewUtf8::foreach<typename>(Callback const&)",
			"::stappler::StringViewUtf8::code_size() const",
			"::stappler::StringViewUtf8::operator StringViewBase<char>() const",
			"::stappler::StringViewUtf8::hash() const",
			"::stappler::StringViewUtf8::hash32() const",
			"::stappler::StringViewUtf8::readFloat()",
			"::stappler::StringViewUtf8::readDouble()",
			"::stappler::StringViewUtf8::readInteger(int)",
			"::stappler::StringViewUtf8::skipChars<typename>()",
			"::stappler::StringViewUtf8::skipUntil<typename>()",
			"::stappler::StringViewUtf8::backwardSkipChars<typename>()",
			"::stappler::StringViewUtf8::backwardSkipUntil<typename>()",
			"::stappler::StringViewUtf8::skipString(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::skipUntilString(stappler::StringViewUtf8::Self const&,bool)",
			"::stappler::StringViewUtf8::readChars<typename>()",
			"::stappler::StringViewUtf8::readUntil<typename>()",
			"::stappler::StringViewUtf8::backwardReadChars<typename>()",
			"::stappler::StringViewUtf8::backwardReadUntil<typename>()",
			"::stappler::StringViewUtf8::readUntilString(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::split<typename,typename>(Callback const&) const",
			"::stappler::StringViewUtf8::trimChars<typename>()",
			"::stappler::StringViewUtf8::trimUntil<typename>()",
			"::stappler::StringViewUtf8::rv_match_utf8<typename>(stappler::StringViewUtf8::CharType const*,size_t,uint8_t&)",
			"::stappler::StringViewUtf8::match<typename>(char16_t)",
			"::stappler::StringView",
			"::stappler::WideStringView",
			"::stappler::operator<<<typename>(Callback<void (StringViewBase<Char>)> const&,int64_t,StringViewBase<Char>)",
			"::stappler::operator<<<typename>(Callback<void (StringViewBase<Char>)> const&,uint64_t,StringViewBase<Char>)",
			"::stappler::operator<<<typename>(Callback<void (StringViewBase<Char>)> const&,StringViewBase<Char>,StringViewBase<Char>)",
			"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,int64_t)",
			"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,uint64_t)",
			"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,stappler::StringViewUtf8)",
			"::stappler::string::compare<typename,typename,typename>(L const&,R const&)",
			"::stappler::string::compareCaseInsensivive<typename,typename,typename>(L const&,R const&)",
			"::stappler::string::length<typename>(_CharT const*)",
			"::stappler::string::length<typename>(_CharT const*,size_t)",
			"::stappler::operator<<<typename>(std::basic_ostream<C>&,StringViewBase<C> const&)",
			"::stappler::operator<<(std::basic_ostream<char>&,stappler::StringViewUtf8 const&)",
			"::stappler::operator><typename>(StringViewBase<C> const&,StringViewBase<C> const&)",
			"::stappler::operator>=<typename>(StringViewBase<C> const&,StringViewBase<C> const&)",
			"::stappler::operator<<typename>(StringViewBase<C> const&,StringViewBase<C> const&)",
			"::stappler::operator<=<typename>(StringViewBase<C> const&,StringViewBase<C> const&)",
			"::stappler::operator==<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator!=<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator><typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator>=<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator<<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator<=<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator==<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)",
			"::stappler::operator!=<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)",
			"::stappler::operator><typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)",
			"::stappler::operator>=<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)",
			"::stappler::operator<<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)",
			"::stappler::operator<=<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)",
			"::stappler::operator==<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator!=<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator><typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator>=<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator<<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator<=<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator==<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)",
			"::stappler::operator!=<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)",
			"::stappler::operator><typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)",
			"::stappler::operator>=<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)",
			"::stappler::operator<<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)",
			"::stappler::operator<=<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)",
			"::stappler::operator+<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator+<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)",
			"::stappler::operator+<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)",
			"::stappler::operator+<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)",
			"::stappler::operator+<typename>(typename memory::StandartInterface::BasicStringType<C>&&,StringViewBase<C> const&)",
			"::stappler::operator+<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C>&&)",
			"::stappler::operator+<typename>(typename memory::PoolInterface::BasicStringType<C>&&,StringViewBase<C> const&)",
			"::stappler::operator+<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C>&&)",
			"::stappler::StringViewBase<typename>::merge<typename,typename>(Args &&...)",
			"::stappler::StringViewBase<typename>::__size<typename>(T const&)",
			"::stappler::StringViewBase<typename>::__size(stappler::StringViewBase::CharType const*)",
			"::stappler::StringViewBase<typename>::_size<typename,typename>(T&&)",
			"::stappler::StringViewBase<typename>::_size<typename,typename>(T&&,Args &&...)",
			"::stappler::StringViewBase<typename>::__merge<typename,typename>(Buf&,T const&)",
			"::stappler::StringViewBase<typename>::__merge<typename>(Buf&,stappler::StringViewBase::CharType const*)",
			"::stappler::StringViewBase<typename>::_merge<typename,typename,typename>(Buf&,T&&,Args &&...)",
			"::stappler::StringViewBase<typename>::_merge<typename,typename>(Buf&,T&&)",
			"::stappler::StringViewBase<typename>::StringViewBase()",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::CharType const*,size_t)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::CharType const*,size_t,size_t)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::Self const&,size_t,size_t)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::Self const&,size_t)",
			"::stappler::StringViewBase(char const*,size_t)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::PoolString const&)",
			"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::StdString const&)",
			"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::PoolString const&)",
			"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::StdString const&)",
			"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::Self const&)",
			"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::PoolString const&)",
			"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::StdString const&)",
			"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::Self const&)",
			"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::CharType const*,size_t)",
			"::stappler::StringViewBase<typename>::operator==(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::operator!=(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::pdup(memory::pool_t*) const",
			"::stappler::StringViewBase<typename>::str<typename>() const",
			"::stappler::StringViewBase<typename>::operator++()",
			"::stappler::StringViewBase<typename>::operator++(int)",
			"::stappler::StringViewBase<typename>::operator+=(size_t)",
			"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::CharType const&) const",
			"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::CharType const*) const",
			"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::is<_CharType>() const",
			"::stappler::StringViewBase<typename>::is<stappler::CharGroupId>() const",
			"::stappler::StringViewBase<typename>::is<typename>() const",
			"::stappler::StringViewBase<typename>::begin() const",
			"::stappler::StringViewBase<typename>::end() const",
			"::stappler::StringViewBase<typename>::operator-(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::operator-=(stappler::StringViewBase::Self const&) const",
			"::stappler::StringViewBase<typename>::readFloat()",
			"::stappler::StringViewBase<typename>::readDouble()",
			"::stappler::StringViewBase<typename>::readInteger(int)",
			"::stappler::StringViewBase<typename>::skipChars<typename>()",
			"::stappler::StringViewBase<typename>::skipUntil<typename>()",
			"::stappler::StringViewBase<typename>::backwardSkipChars<typename>()",
			"::stappler::StringViewBase<typename>::backwardSkipUntil<typename>()",
			"::stappler::StringViewBase<typename>::skipString(stappler::StringViewBase::Self const&)",
			"::stappler::StringViewBase<typename>::skipUntilString(stappler::StringViewBase::Self const&,bool)",
			"::stappler::StringViewBase<typename>::readChars<typename>()",
			"::stappler::StringViewBase<typename>::readUntil<typename>()",
			"::stappler::StringViewBase<typename>::backwardReadChars<typename>()",
			"::stappler::StringViewBase<typename>::backwardReadUntil<typename>()",
			"::stappler::StringViewBase<typename>::readUntilString(stappler::StringViewBase::Self const&)",
			"::stappler::StringViewBase<typename>::split<typename,typename>(Callback const&) const",
			"::stappler::StringViewBase<typename>::trimChars<typename>()",
			"::stappler::StringViewBase<typename>::trimUntil<typename>()",
			"::stappler::StringViewBase<typename>::match<typename>(stappler::StringViewBase::CharType)",
			"::stappler::StringViewUtf8::StringViewUtf8()",
			"::stappler::StringViewUtf8::StringViewUtf8(char const*,size_t)",
			"::stappler::StringViewUtf8::StringViewUtf8(char const*,size_t,size_t)",
			"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8 const&,size_t)",
			"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8 const&,size_t,size_t)",
			"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8::PoolString const&)",
			"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8::StdString const&)",
			"::stappler::StringViewUtf8::StringViewUtf8(StringViewBase<char> const&)",
			"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::PoolString const&)",
			"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::StdString const&)",
			"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::PoolString const&)",
			"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::StdString const&)",
			"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::set(char const*,size_t)",
			"::stappler::StringViewUtf8::is(char const&) const",
			"::stappler::StringViewUtf8::is(char16_t const&) const",
			"::stappler::StringViewUtf8::is(char const*) const",
			"::stappler::StringViewUtf8::is(stappler::StringViewUtf8::Self const&) const",
			"::stappler::StringViewUtf8::is<char16_t>() const",
			"::stappler::StringViewUtf8::is<stappler::CharGroupId>() const",
			"::stappler::StringViewUtf8::is<typename>() const",
			"::stappler::StringViewUtf8::letter<typename>() const",
			"::stappler::StringViewUtf8::str<typename>() const",
			"::stappler::StringViewUtf8::operator==(stappler::StringViewUtf8::Self const&) const",
			"::stappler::StringViewUtf8::operator!=(stappler::StringViewUtf8::Self const&) const",
			"::stappler::StringViewUtf8::offset(size_t)",
			"::stappler::StringViewUtf8::operator++()",
			"::stappler::StringViewUtf8::operator++(int)",
			"::stappler::StringViewUtf8::operator+=(size_t)",
			"::stappler::StringViewUtf8::isSpace() const",
			"::stappler::StringViewUtf8::begin() const",
			"::stappler::StringViewUtf8::end() const",
			"::stappler::StringViewUtf8::operator-(stappler::StringViewUtf8::Self const&) const",
			"::stappler::StringViewUtf8::operator-=(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::operator*() const",
			"::stappler::StringViewUtf8::foreach<typename>(Callback const&)",
			"::stappler::StringViewUtf8::code_size() const",
			"::stappler::StringViewUtf8::operator StringViewBase<char>() const",
			"::stappler::StringViewUtf8::readFloat()",
			"::stappler::StringViewUtf8::readDouble()",
			"::stappler::StringViewUtf8::readInteger(int)",
			"::stappler::StringViewUtf8::skipChars<typename>()",
			"::stappler::StringViewUtf8::skipUntil<typename>()",
			"::stappler::StringViewUtf8::backwardSkipChars<typename>()",
			"::stappler::StringViewUtf8::backwardSkipUntil<typename>()",
			"::stappler::StringViewUtf8::skipString(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::skipUntilString(stappler::StringViewUtf8::Self const&,bool)",
			"::stappler::StringViewUtf8::readChars<typename>()",
			"::stappler::StringViewUtf8::readUntil<typename>()",
			"::stappler::StringViewUtf8::backwardReadChars<typename>()",
			"::stappler::StringViewUtf8::backwardReadUntil<typename>()",
			"::stappler::StringViewUtf8::readUntilString(stappler::StringViewUtf8::Self const&)",
			"::stappler::StringViewUtf8::split<typename,typename>(Callback const&) const",
			"::stappler::StringViewUtf8::trimChars<typename>()",
			"::stappler::StringViewUtf8::trimUntil<typename>()",
			"::stappler::StringViewUtf8::rv_match_utf8<typename>(stappler::StringViewUtf8::CharType const*,size_t,uint8_t&)",
			"::stappler::StringViewUtf8::match<typename>(char16_t)",
			"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,char const*)",
			"::stappler::operator<<<size_t>(Callback<void (StringViewBase<char>)> const&,char const[N],StringViewBase<char>)",
			"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,StringViewBase<char>)",
			"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,double)",
			"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,int64_t)",
			"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,uint64_t)",
			"::stappler::operator<<(Callback<void (StringViewBase<char16_t>)> const&,StringViewBase<char16_t>)",
			"::stappler::operator<<(Callback<void (StringViewBase<char16_t>)> const&,int64_t)",
			"::stappler::operator<<(Callback<void (StringViewBase<char16_t>)> const&,uint64_t)",
			"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,stappler::StringViewUtf8)",
			"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,int64_t)",
			"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,uint64_t)",
			"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,char const*)",
			"::stappler::operator<<<size_t>(std::function<void (StringViewBase<char>)> const&,char const[N],StringViewBase<char>)",
			"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,StringViewBase<char>)",
			"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,double)",
			"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,int64_t)",
			"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,uint64_t)",
			"::stappler::operator<<(std::function<void (StringViewBase<char16_t>)> const&,StringViewBase<char16_t>)",
			"::stappler::operator<<(std::function<void (StringViewBase<char16_t>)> const&,int64_t)",
			"::stappler::operator<<(std::function<void (StringViewBase<char16_t>)> const&,uint64_t)",
			"::stappler::operator<<(std::function<void (StringViewUtf8)> const&,stappler::StringViewUtf8)",
			"::stappler::operator<<(std::function<void (StringViewUtf8)> const&,int64_t)",
			"::stappler::operator<<(std::function<void (StringViewUtf8)> const&,uint64_t)",
			"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,char const*)",
			"::stappler::operator<<<size_t>(memory::function<void (StringViewBase<char>)> const&,char const[N],StringViewBase<char>)",
			"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,StringViewBase<char>)",
			"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,double)",
			"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,int64_t)",
			"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,uint64_t)",
			"::stappler::operator<<(memory::function<void (StringViewBase<char16_t>)> const&,StringViewBase<char16_t>)",
			"::stappler::operator<<(memory::function<void (StringViewBase<char16_t>)> const&,int64_t)",
			"::stappler::operator<<(memory::function<void (StringViewBase<char16_t>)> const&,uint64_t)",
			"::stappler::operator<<(memory::function<void (StringViewUtf8)> const&,stappler::StringViewUtf8)",
			"::stappler::operator<<(memory::function<void (StringViewUtf8)> const&,int64_t)",
			"::stappler::operator<<(memory::function<void (StringViewUtf8)> const&,uint64_t)",
			"::stappler::string::compare<typename,typename,typename>(L const&,R const&)",
			"::stappler::string::compareCaseInsensivive<typename,typename,typename>(L const&,R const&)",
			"::std::hash<stappler::StringView>::hash<stappler::StringView>",
			"::std::hash<stappler::StringView>::hash()",
			"::std::hash<stappler::StringView>::operator()(stappler::StringView const&) const",
			"::std::hash<stappler::StringViewUtf8>::hash<stappler::StringViewUtf8>",
			"::std::hash<stappler::StringViewUtf8>::hash()",
			"::std::hash<stappler::StringViewUtf8>::operator()(stappler::StringViewUtf8 const&) const",
			"::std::hash<stappler::WideStringView>::hash<stappler::WideStringView>",
			"::std::hash<stappler::WideStringView>::hash()",
			"::std::hash<stappler::WideStringView>::operator()(stappler::WideStringView const&) const"
		],
		"SPSubscription.h":  [
			"STAPPLER_CORE_UTILS_SPSUBSCRIPTION_H_",
			"::stappler::SubscriptionId",
			"::stappler::SubscriptionFlags",
			"::stappler::SubscriptionFlags::Super",
			"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::ValueWrapper<unsigned long, stappler::SubscriptionFlagsClassFlag>::Type const&)",
			"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::ValueWrapper<unsigned long, stappler::SubscriptionFlagsClassFlag>::Type&&)",
			"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::SubscriptionFlags const&)",
			"::stappler::SubscriptionFlags::operator=(stappler::SubscriptionFlags const&)",
			"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::SubscriptionFlags&&)",
			"::stappler::SubscriptionFlags::operator=(stappler::SubscriptionFlags&&)",
			"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::SubscriptionFlags::Super const&)",
			"::stappler::SubscriptionFlags::operator=(stappler::SubscriptionFlags::Super const&)",
			"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::SubscriptionFlags::Super&&)",
			"::stappler::SubscriptionFlags::operator=(stappler::SubscriptionFlags::Super&&)",
			"::stappler::SubscriptionFlags::hasFlag<typename>(T) const",
			"::stappler::SubscriptionFlags::initial() const",
			"::stappler::SubscriptionTemplate<typename>",
			"::stappler::SubscriptionTemplate<typename>::Interface",
			"::stappler::SubscriptionTemplate<typename>::Id",
			"::stappler::SubscriptionTemplate<typename>::Flags",
			"::stappler::SubscriptionTemplate<typename>::FlagsMap",
			"::stappler::SubscriptionTemplate<typename>::getNextId()",
			"::stappler::SubscriptionTemplate<typename>::Initial",
			"::stappler::SubscriptionTemplate<typename>::~SubscriptionTemplate()",
			"::stappler::SubscriptionTemplate<typename>::_Flag<class>(T)",
			"::stappler::SubscriptionTemplate<typename>::Flag()",
			"::stappler::SubscriptionTemplate<typename>::Flag<class,class>(T,Args &&...)",
			"::stappler::SubscriptionTemplate<typename>::setDirty(stappler::SubscriptionTemplate::Flags,bool)",
			"::stappler::SubscriptionTemplate<typename>::subscribe(stappler::SubscriptionTemplate::Id)",
			"::stappler::SubscriptionTemplate<typename>::unsubscribe(stappler::SubscriptionTemplate::Id)",
			"::stappler::SubscriptionTemplate<typename>::check(stappler::SubscriptionTemplate::Id)",
			"::stappler::SubscriptionTemplate<typename>::setForwardedSubscription(SubscriptionTemplate<_Interface>*)",
			"::stappler::SubscriptionTemplate<typename>::_forwarded",
			"::stappler::SubscriptionTemplate<typename>::_forwardedFlags",
			"::stappler::SubscriptionTemplate<typename>::_flags",
			"::stappler::Binding<class>",
			"::stappler::Binding<class>::Id",
			"::stappler::Binding<class>::Flags",
			"::stappler::Binding<class>::Binding()",
			"::stappler::Binding<class>::Binding(T*)",
			"::stappler::Binding<class>::~Binding()",
			"::stappler::Binding<class>::Binding(Binding<T> const&)",
			"::stappler::Binding<class>::operator=(Binding<T> const&)",
			"::stappler::Binding<class>::Binding(Binding<T>&&)",
			"::stappler::Binding<class>::operator=(Binding<T>&&)",
			"::stappler::Binding<class>::operator T*()",
			"::stappler::Binding<class>::operator T*() const",
			"::stappler::Binding<class>::operator bool() const",
			"::stappler::Binding<class>::operator->()",
			"::stappler::Binding<class>::operator->() const",
			"::stappler::Binding<class>::check()",
			"::stappler::Binding<class>::set(T*)",
			"::stappler::Binding<class>::get() const",
			"::stappler::Binding<class>::_id",
			"::stappler::Binding<class>::_subscription",
			"::stappler::SubscriptionTemplate<typename>::setDirty(stappler::SubscriptionTemplate::Flags,bool)",
			"::stappler::SubscriptionTemplate<typename>::subscribe(stappler::SubscriptionTemplate::Id)",
			"::stappler::SubscriptionTemplate<typename>::unsubscribe(stappler::SubscriptionTemplate::Id)",
			"::stappler::SubscriptionTemplate<typename>::check(stappler::SubscriptionTemplate::Id)",
			"::stappler::SubscriptionTemplate<typename>::setForwardedSubscription(SubscriptionTemplate<_Interface>*)",
			"::stappler::Binding<class>::Binding()",
			"::stappler::Binding<class>::Binding(T*)",
			"::stappler::Binding<class>::~Binding()",
			"::stappler::Binding<class>::Binding(Binding<T> const&)",
			"::stappler::Binding<class>::operator=(Binding<T> const&)",
			"::stappler::Binding<class>::Binding(Binding<T>&&)",
			"::stappler::Binding<class>::operator=(Binding<T>&&)",
			"::stappler::Binding<class>::check()",
			"::stappler::Binding<class>::set(T*)",
			"::stappler::Binding<class>::get() const",
			"::stappler::mem_std::Subscription",
			"::stappler::mem_pool::Subscription"
		],
		"SPSvgReader.h":  [
			"STAPPLER_VG_SPSVGREADER_H_",
			"::stappler::vg::Metric",
			"::stappler::vg::SvgTag",
			"::stappler::vg::SvgTag::SvgTag(stappler::StringView&)",
			"::stappler::vg::SvgTag::Shape",
			"::stappler::vg::SvgTag::shape",
			"::stappler::vg::SvgTag::mat",
			"::stappler::vg::SvgTag::id",
			"::stappler::vg::SvgTag::ref",
			"::stappler::vg::SvgTag::rpath",
			"::stappler::vg::SvgTag::getPath()",
			"::stappler::vg::SvgReader",
			"::stappler::vg::SvgReader::Parser",
			"::stappler::vg::SvgReader::Tag",
			"::stappler::vg::SvgReader::StringReader",
			"::stappler::vg::SvgReader::SvgReader()",
			"::stappler::vg::SvgReader::onBeginTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&)",
			"::stappler::vg::SvgReader::onEndTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&,bool)",
			"::stappler::vg::SvgReader::onStyleParameter(stappler::vg::SvgReader::Tag&,stappler::vg::SvgReader::StringReader&,stappler::vg::SvgReader::StringReader&)",
			"::stappler::vg::SvgReader::onStyle(stappler::vg::SvgReader::Tag&,stappler::vg::SvgReader::StringReader&)",
			"::stappler::vg::SvgReader::onTagAttribute(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&,stappler::vg::SvgReader::StringReader&,stappler::vg::SvgReader::StringReader&)",
			"::stappler::vg::SvgReader::onPushTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&)",
			"::stappler::vg::SvgReader::onPopTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&)",
			"::stappler::vg::SvgReader::onInlineTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&)",
			"::stappler::vg::SvgReader::_defs",
			"::stappler::vg::SvgReader::_squareLength",
			"::stappler::vg::SvgReader::_width",
			"::stappler::vg::SvgReader::_height",
			"::stappler::vg::SvgReader::_nextId",
			"::stappler::vg::SvgReader::_viewBox",
			"::stappler::vg::SvgReader::_drawOrder",
			"::stappler::vg::SvgReader::_paths"
		],
		"SPTess.h":  [
			"STAPPLER_TESS_SPTESS_H_",
			"::stappler::geom::VerboseFlag",
			"::stappler::geom::Winding",
			"::stappler::geom::TessResult",
			"::stappler::geom::TessResult::nvertexes",
			"::stappler::geom::TessResult::nfaces",
			"::stappler::geom::TessResult::target",
			"::stappler::geom::TessResult::pushVertex",
			"::stappler::geom::TessResult::pushTriangle",
			"::stappler::geom::Tesselator",
			"::stappler::geom::Tesselator::Cursor",
			"::stappler::geom::Tesselator::Cursor::edge",
			"::stappler::geom::Tesselator::Cursor::root",
			"::stappler::geom::Tesselator::Cursor::count",
			"::stappler::geom::Tesselator::Cursor::isClockwise",
			"::stappler::geom::Tesselator::Cursor::closed",
			"::stappler::geom::Tesselator::Cursor::origin",
			"::stappler::geom::Tesselator::~Tesselator()",
			"::stappler::geom::Tesselator::init(memory::pool_t*)",
			"::stappler::geom::Tesselator::setAntialiasValue(float)",
			"::stappler::geom::Tesselator::getAntialiasValue() const",
			"::stappler::geom::Tesselator::RelocateRule",
			"::stappler::geom::Tesselator::setRelocateRule(stappler::geom::Tesselator::RelocateRule)",
			"::stappler::geom::Tesselator::getRelocateRule() const",
			"::stappler::geom::Tesselator::setWindingRule(stappler::geom::Winding)",
			"::stappler::geom::Tesselator::getWindingRule() const",
			"::stappler::geom::Tesselator::preallocate(uint32_t)",
			"::stappler::geom::Tesselator::beginContour(bool)",
			"::stappler::geom::Tesselator::pushVertex(stappler::geom::Tesselator::Cursor&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Tesselator::pushStrokeVertex(stappler::geom::Tesselator::Cursor&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Tesselator::pushStrokeTop(stappler::geom::Tesselator::Cursor&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Tesselator::pushStrokeBottom(stappler::geom::Tesselator::Cursor&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Tesselator::closeContour(stappler::geom::Tesselator::Cursor&)",
			"::stappler::geom::Tesselator::closeStrokeContour(stappler::geom::Tesselator::Cursor&)",
			"::stappler::geom::Tesselator::prepare(stappler::geom::TessResult&)",
			"::stappler::geom::Tesselator::write(stappler::geom::TessResult&)",
			"::stappler::geom::Tesselator::_data"
		],
		"SPTessLine.h":  [
			"STAPPLER_TESS_SPTESSLINE_H_",
			"::stappler::geom::LineCup",
			"::stappler::geom::LineJoin",
			"::stappler::geom::DrawStyle",
			"::stappler::geom::operator|(stappler::geom::DrawStyle const&,stappler::geom::DrawStyle const&)",
			"::stappler::geom::operator&(stappler::geom::DrawStyle const&,stappler::geom::DrawStyle const&)",
			"::stappler::geom::operator^(stappler::geom::DrawStyle const&,stappler::geom::DrawStyle const&)",
			"::stappler::geom::operator|=(stappler::geom::DrawStyle&,stappler::geom::DrawStyle const&)",
			"::stappler::geom::operator&=(stappler::geom::DrawStyle&,stappler::geom::DrawStyle const&)",
			"::stappler::geom::operator^=(stappler::geom::DrawStyle&,stappler::geom::DrawStyle const&)",
			"::stappler::geom::operator==(stappler::geom::DrawStyle const&,std::underlying_type<DrawStyle>::type const&)",
			"::stappler::geom::operator==(std::underlying_type<DrawStyle>::type const&,stappler::geom::DrawStyle const&)",
			"::stappler::geom::operator!=(stappler::geom::DrawStyle const&,std::underlying_type<DrawStyle>::type const&)",
			"::stappler::geom::operator!=(std::underlying_type<DrawStyle>::type const&,stappler::geom::DrawStyle const&)",
			"::stappler::geom::operator~(stappler::geom::DrawStyle const&)",
			"::stappler::geom::LineDrawer",
			"::stappler::geom::LineDrawer::LineDrawer(float,Rc<stappler::geom::Tesselator>&&,Rc<stappler::geom::Tesselator>&&,float,stappler::geom::LineJoin,stappler::geom::LineCup)",
			"::stappler::geom::LineDrawer::drawBegin(float,float)",
			"::stappler::geom::LineDrawer::drawLine(float,float)",
			"::stappler::geom::LineDrawer::drawQuadBezier(float,float,float,float)",
			"::stappler::geom::LineDrawer::drawCubicBezier(float,float,float,float,float,float)",
			"::stappler::geom::LineDrawer::drawArc(float,float,float,bool,bool,float,float)",
			"::stappler::geom::LineDrawer::drawClose(bool)",
			"::stappler::geom::LineDrawer::push(float,float)",
			"::stappler::geom::LineDrawer::pushStroke(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::LineDrawer::BufferNode",
			"::stappler::geom::LineDrawer::BufferNode::next",
			"::stappler::geom::LineDrawer::BufferNode::prev",
			"::stappler::geom::LineDrawer::BufferNode::point",
			"::stappler::geom::LineDrawer::style",
			"::stappler::geom::LineDrawer::lineJoin",
			"::stappler::geom::LineDrawer::lineCup",
			"::stappler::geom::LineDrawer::distanceError",
			"::stappler::geom::LineDrawer::angularError",
			"::stappler::geom::LineDrawer::strokeWidth",
			"::stappler::geom::LineDrawer::count",
			"::stappler::geom::LineDrawer::origin",
			"::stappler::geom::LineDrawer::buffer",
			"::stappler::geom::LineDrawer::target",
			"::stappler::geom::LineDrawer::fill",
			"::stappler::geom::LineDrawer::fillCursor",
			"::stappler::geom::LineDrawer::stroke",
			"::stappler::geom::LineDrawer::strokeCursor",
			"::stappler::geom::LineDrawer::_miterLimit"
		],
		"SPTessSimd.hpp":  [
			"CORE_TESS_SPTESSSIMD_HPP_",
			"::stappler::geom::getNormalizedVec(float const[2],float const[2],float const[2])",
			"::stappler::geom::getBisectVec(simd::f32x4 const&)",
			"::stappler::geom::getVertexNormal(float const[2],float const[],float const[],float[4])"
		],
		"SPTessTypes.h":  [
			"STAPPLER_TESS_SPTESSTYPES_H_",
			"::stappler::geom::QueueHandle",
			"::stappler::geom::VertexSetPrealloc",
			"::stappler::geom::EdgeSetPrealloc",
			"::stappler::geom::VertexAllocBatch",
			"::stappler::geom::EdgeAllocBatch",
			"::stappler::geom::TessVerboseInfo",
			"::stappler::geom::VertexType",
			"::stappler::geom::Helper",
			"::stappler::geom::Helper::e1",
			"::stappler::geom::Helper::e2",
			"::stappler::geom::Helper::type",
			"::stappler::geom::EdgeDictNode",
			"::stappler::geom::EdgeDictNode::org",
			"::stappler::geom::EdgeDictNode::norm",
			"::stappler::geom::EdgeDictNode::value",
			"::stappler::geom::EdgeDictNode::edge",
			"::stappler::geom::EdgeDictNode::windingAbove",
			"::stappler::geom::EdgeDictNode::horizontal",
			"::stappler::geom::EdgeDictNode::helper",
			"::stappler::geom::EdgeDictNode::current() const",
			"::stappler::geom::EdgeDictNode::dst() const",
			"::stappler::geom::EdgeDictNode::dstX() const",
			"::stappler::geom::EdgeDictNode::dstY() const",
			"::stappler::geom::EdgeDictNode::operator<(stappler::geom::EdgeDictNode const&) const",
			"::stappler::geom::EdgeDictNode::operator<(stappler::geom::Edge const&) const",
			"::stappler::geom::EdgeDictNode::operator<(stappler::geom::Vec2 const&) const",
			"::stappler::geom::EdgeDictNode::operator<=(stappler::geom::EdgeDictNode const&) const",
			"::stappler::geom::EdgeDictNode::operator==(stappler::geom::EdgeDictNode const&) const",
			"::stappler::geom::Vertex",
			"::stappler::geom::Vertex::_edge",
			"::stappler::geom::Vertex::_origin",
			"::stappler::geom::Vertex::_uniqueIdx",
			"::stappler::geom::Vertex::_queueHandle",
			"::stappler::geom::Vertex::_exportIdx",
			"::stappler::geom::Vertex::insertBefore(stappler::geom::HalfEdge*)",
			"::stappler::geom::Vertex::removeFromList(stappler::geom::Vertex*)",
			"::stappler::geom::Vertex::foreach(Callback<void (const stappler::geom::HalfEdge &)> const&) const",
			"::stappler::geom::Vertex::relocate(stappler::geom::Vec2 const&)",
			"::stappler::geom::FaceEdge",
			"::stappler::geom::FaceEdge::_next",
			"::stappler::geom::FaceEdge::_vertex",
			"::stappler::geom::FaceEdge::_origin",
			"::stappler::geom::FaceEdge::_displaced",
			"::stappler::geom::FaceEdge::_value",
			"::stappler::geom::FaceEdge::_direction",
			"::stappler::geom::FaceEdge::_splitVertex",
			"::stappler::geom::FaceEdge::_degenerate",
			"::stappler::geom::FaceEdge::foreach(Callback<void (const stappler::geom::FaceEdge &)> const&) const",
			"::stappler::geom::HalfEdge",
			"::stappler::geom::HalfEdge::_originNext",
			"::stappler::geom::HalfEdge::_leftNext",
			"::stappler::geom::HalfEdge::origin",
			"::stappler::geom::HalfEdge::vertex",
			"::stappler::geom::HalfEdge::_realWinding",
			"::stappler::geom::HalfEdge::isRight",
			"::stappler::geom::HalfEdge::edgeOffset",
			"::stappler::geom::HalfEdge::_winding",
			"::stappler::geom::HalfEdge::_mark",
			"::stappler::geom::HalfEdge::splitEdgeLoops(stappler::geom::HalfEdge*,stappler::geom::HalfEdge*,stappler::geom::Vertex*)",
			"::stappler::geom::HalfEdge::joinEdgeLoops(stappler::geom::HalfEdge*,stappler::geom::HalfEdge*)",
			"::stappler::geom::HalfEdge::sym() const",
			"::stappler::geom::HalfEdge::getIndex() const",
			"::stappler::geom::HalfEdge::setOrigin(stappler::geom::Vertex const*)",
			"::stappler::geom::HalfEdge::copyOrigin(stappler::geom::HalfEdge const*)",
			"::stappler::geom::HalfEdge::getOriginNext() const",
			"::stappler::geom::HalfEdge::getOriginPrev() const",
			"::stappler::geom::HalfEdge::getDestinationNext() const",
			"::stappler::geom::HalfEdge::getDestinationPrev() const",
			"::stappler::geom::HalfEdge::getLeftLoopNext() const",
			"::stappler::geom::HalfEdge::getLeftLoopPrev() const",
			"::stappler::geom::HalfEdge::getRightLoopNext() const",
			"::stappler::geom::HalfEdge::getRightLoopPrev() const",
			"::stappler::geom::HalfEdge::getOrgVec() const",
			"::stappler::geom::HalfEdge::getDstVec() const",
			"::stappler::geom::HalfEdge::getNormVec() const",
			"::stappler::geom::HalfEdge::getLength() const",
			"::stappler::geom::HalfEdge::getEdge() const",
			"::stappler::geom::HalfEdge::goesLeft() const",
			"::stappler::geom::HalfEdge::goesRight() const",
			"::stappler::geom::HalfEdge::foreachOnFace(Callback<void (stappler::geom::HalfEdge &)> const&)",
			"::stappler::geom::HalfEdge::foreachOnVertex(Callback<void (stappler::geom::HalfEdge &)> const&)",
			"::stappler::geom::HalfEdge::foreachOnFace(Callback<void (const stappler::geom::HalfEdge &)> const&) const",
			"::stappler::geom::HalfEdge::foreachOnVertex(Callback<void (const stappler::geom::HalfEdge &)> const&) const",
			"::stappler::geom::HalfEdge::getDirection() const",
			"::stappler::geom::Edge",
			"::stappler::geom::Edge::left",
			"::stappler::geom::Edge::right",
			"::stappler::geom::Edge::node",
			"::stappler::geom::Edge::direction",
			"::stappler::geom::Edge::inverted",
			"::stappler::geom::Edge::invalidated",
			"::stappler::geom::Edge::Edge()",
			"::stappler::geom::Edge::getLeftVec() const",
			"::stappler::geom::Edge::getRightVec() const",
			"::stappler::geom::Edge::getOrgVec() const",
			"::stappler::geom::Edge::getDstVec() const",
			"::stappler::geom::Edge::getLeftOrg() const",
			"::stappler::geom::Edge::getRightOrg() const",
			"::stappler::geom::Edge::updateInfo()",
			"::stappler::geom::Edge::getLeftWinding() const",
			"::stappler::geom::Edge::getRightWinding() const",
			"::stappler::geom::Edge::getPostitive()",
			"::stappler::geom::Edge::getNegative()",
			"::stappler::geom::ObjectAllocator",
			"::stappler::geom::ObjectAllocator::_pool",
			"::stappler::geom::ObjectAllocator::_freeVertexes",
			"::stappler::geom::ObjectAllocator::_freeEdges",
			"::stappler::geom::ObjectAllocator::_freeFaces",
			"::stappler::geom::ObjectAllocator::_vertexes",
			"::stappler::geom::ObjectAllocator::_exportVertexes",
			"::stappler::geom::ObjectAllocator::_edgesOfInterests",
			"::stappler::geom::ObjectAllocator::_faceEdges",
			"::stappler::geom::ObjectAllocator::_boundaries",
			"::stappler::geom::ObjectAllocator::_vertexOffset",
			"::stappler::geom::ObjectAllocator::ObjectAllocator(memory::pool_t*)",
			"::stappler::geom::ObjectAllocator::allocEdge()",
			"::stappler::geom::ObjectAllocator::allocVertex()",
			"::stappler::geom::ObjectAllocator::allocFaceEdge()",
			"::stappler::geom::ObjectAllocator::releaseEdge(stappler::geom::Edge*)",
			"::stappler::geom::ObjectAllocator::releaseVertex(uint32_t,uint32_t)",
			"::stappler::geom::ObjectAllocator::releaseVertex(stappler::geom::Vertex*)",
			"::stappler::geom::ObjectAllocator::trimVertexes()",
			"::stappler::geom::ObjectAllocator::preallocateVertexes(uint32_t)",
			"::stappler::geom::ObjectAllocator::preallocateEdges(uint32_t)",
			"::stappler::geom::ObjectAllocator::preallocateFaceEdges(uint32_t)",
			"::stappler::geom::ObjectAllocator::removeEdgeFromVec(memory::vector<HalfEdge *>&,stappler::geom::HalfEdge*)",
			"::stappler::geom::VertexPriorityQueue",
			"::stappler::geom::VertexPriorityQueue::Handle",
			"::stappler::geom::VertexPriorityQueue::Key",
			"::stappler::geom::VertexPriorityQueue::InvalidHandle",
			"::stappler::geom::VertexPriorityQueue::Node",
			"::stappler::geom::VertexPriorityQueue::Node::handle",
			"::stappler::geom::VertexPriorityQueue::Elem",
			"::stappler::geom::VertexPriorityQueue::Elem::key",
			"::stappler::geom::VertexPriorityQueue::Elem::node",
			"::stappler::geom::VertexPriorityQueue::Heap",
			"::stappler::geom::VertexPriorityQueue::Heap::nodes",
			"::stappler::geom::VertexPriorityQueue::Heap::handles",
			"::stappler::geom::VertexPriorityQueue::Heap::size",
			"::stappler::geom::VertexPriorityQueue::Heap::max",
			"::stappler::geom::VertexPriorityQueue::Heap::freeList",
			"::stappler::geom::VertexPriorityQueue::Heap::initialized",
			"::stappler::geom::VertexPriorityQueue::Heap::pool",
			"::stappler::geom::VertexPriorityQueue::Heap::Heap(memory::pool_t*,uint32_t)",
			"::stappler::geom::VertexPriorityQueue::Heap::~Heap()",
			"::stappler::geom::VertexPriorityQueue::Heap::init()",
			"::stappler::geom::VertexPriorityQueue::Heap::empty() const",
			"::stappler::geom::VertexPriorityQueue::Heap::getMin() const",
			"::stappler::geom::VertexPriorityQueue::Heap::insert(stappler::geom::VertexPriorityQueue::Key)",
			"::stappler::geom::VertexPriorityQueue::Heap::extractMin()",
			"::stappler::geom::VertexPriorityQueue::Heap::remove(stappler::geom::VertexPriorityQueue::Handle)",
			"::stappler::geom::VertexPriorityQueue::Heap::floatDown(int)",
			"::stappler::geom::VertexPriorityQueue::Heap::floatUp(int)",
			"::stappler::geom::VertexPriorityQueue::heap",
			"::stappler::geom::VertexPriorityQueue::keys",
			"::stappler::geom::VertexPriorityQueue::order",
			"::stappler::geom::VertexPriorityQueue::size",
			"::stappler::geom::VertexPriorityQueue::max",
			"::stappler::geom::VertexPriorityQueue::initialized",
			"::stappler::geom::VertexPriorityQueue::pool",
			"::stappler::geom::VertexPriorityQueue::freeList",
			"::stappler::geom::VertexPriorityQueue::VertexPriorityQueue(memory::pool_t*,memory::vector<Vertex *> const&)",
			"::stappler::geom::VertexPriorityQueue::~VertexPriorityQueue()",
			"::stappler::geom::VertexPriorityQueue::init()",
			"::stappler::geom::VertexPriorityQueue::empty() const",
			"::stappler::geom::VertexPriorityQueue::insert(stappler::geom::VertexPriorityQueue::Key)",
			"::stappler::geom::VertexPriorityQueue::remove(stappler::geom::VertexPriorityQueue::Handle)",
			"::stappler::geom::VertexPriorityQueue::extractMin()",
			"::stappler::geom::VertexPriorityQueue::getMin() const",
			"::stappler::geom::IntersectionEvent",
			"::stappler::geom::EdgeDict",
			"::stappler::geom::EdgeDict::event",
			"::stappler::geom::EdgeDict::nodes",
			"::stappler::geom::EdgeDict::pool",
			"::stappler::geom::EdgeDict::EdgeDict(memory::pool_t*,uint32_t)",
			"::stappler::geom::EdgeDict::push(stappler::geom::Edge*,int16_t)",
			"::stappler::geom::EdgeDict::pop(stappler::geom::EdgeDictNode const*)",
			"::stappler::geom::EdgeDict::update(stappler::geom::Vertex*,float)",
			"::stappler::geom::EdgeDict::checkForIntersects(stappler::geom::Vertex*,stappler::geom::Vec2&,stappler::geom::IntersectionEvent&,float) const",
			"::stappler::geom::EdgeDict::checkForIntersects(stappler::geom::HalfEdge*,stappler::geom::Vec2&,stappler::geom::IntersectionEvent&,float) const",
			"::stappler::geom::EdgeDict::getEdgeBelow(stappler::geom::Edge const*) const",
			"::stappler::geom::EdgeDict::getEdgeBelow(stappler::geom::Vec2 const&,uint32_t) const",
			"::stappler::geom::VertLeq(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::VertLeq(stappler::geom::Vertex const*,stappler::geom::Vertex const*)",
			"::stappler::geom::VertEq(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,float)",
			"::stappler::geom::FloatEq(float,float,float)",
			"::stappler::geom::VertEq(stappler::geom::Vertex const*,stappler::geom::Vertex const*,float)",
			"::stappler::geom::EdgeGoesRight(stappler::geom::HalfEdge const*)",
			"::stappler::geom::EdgeGoesLeft(stappler::geom::HalfEdge const*)",
			"::stappler::geom::AngleIsConvex(stappler::geom::HalfEdge const*,stappler::geom::HalfEdge const*)",
			"::stappler::geom::EdgeDirection(stappler::geom::Vec2 const&)",
			"::stappler::geom::EdgeAngle(stappler::geom::Vec2 const&)",
			"::stappler::geom::EdgeAngle(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::EdgeAngleIsBelowTolerance(float,float)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Vertex const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::HalfEdge const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::FaceEdge const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::VerboseFlag)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::EdgeDictNode const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::Edge const&)",
			"::stappler::geom::operator<<(std::ostream&,stappler::geom::IntersectionEvent const&)",
			"::stappler::geom::isWindingInside(stappler::geom::Winding,int16_t)"
		],
		"SPThread.h":  [
			"STAPPLER_THREADS_SPTHREAD_H_",
			"::stappler::thread::ThreadInfo",
			"::stappler::thread::ThreadInfo::mainThreadId",
			"::stappler::thread::ThreadInfo::getThreadLocal()",
			"::stappler::thread::ThreadInfo::setMainThread()",
			"::stappler::thread::ThreadInfo::setThreadInfo(uint32_t,uint32_t,stappler::StringView,bool)",
			"::stappler::thread::ThreadInfo::setThreadInfo(stappler::StringView)",
			"::stappler::thread::ThreadInfo::threadId",
			"::stappler::thread::ThreadInfo::workerId",
			"::stappler::thread::ThreadInfo::name",
			"::stappler::thread::ThreadInfo::managed",
			"::stappler::thread::ThreadInfo::detouched",
			"::stappler::thread::ThreadInterface<typename>",
			"::stappler::thread::ThreadInterface<typename>::~ThreadInterface()",
			"::stappler::thread::ThreadInterface<typename>::getOwner()",
			"::stappler::thread::ThreadInterface<typename>::workerThread(ThreadInterface<Interface>*,void const*)",
			"::stappler::thread::ThreadInterface<typename>::threadInit()",
			"::stappler::thread::ThreadInterface<typename>::threadDispose()",
			"::stappler::thread::ThreadInterface<typename>::worker()"
		],
		"SPThreadTask.h":  [
			"STAPPLER_THREADS_SPTHREADTASK_H_",
			"::stappler::thread::Task",
			"::stappler::thread::Task::Ref",
			"::stappler::thread::Task::PrepareCallback",
			"::stappler::thread::Task::ExecuteCallback",
			"::stappler::thread::Task::CompleteCallback",
			"::stappler::thread::Task::PriorityType",
			"::stappler::thread::Task::Task()",
			"::stappler::thread::Task::~Task()",
			"::stappler::thread::Task::init(stappler::thread::Task::CompleteCallback const&,stappler::thread::Task::Ref*)",
			"::stappler::thread::Task::init(stappler::thread::Task::CompleteCallback&&,stappler::thread::Task::Ref*)",
			"::stappler::thread::Task::init(stappler::thread::Task::ExecuteCallback const&,stappler::thread::Task::CompleteCallback const&,stappler::thread::Task::Ref*)",
			"::stappler::thread::Task::init(stappler::thread::Task::ExecuteCallback&&,stappler::thread::Task::CompleteCallback&&,stappler::thread::Task::Ref*)",
			"::stappler::thread::Task::init(stappler::thread::Task::PrepareCallback const&,stappler::thread::Task::ExecuteCallback const&,stappler::thread::Task::CompleteCallback const&,stappler::thread::Task::Ref*)",
			"::stappler::thread::Task::init(stappler::thread::Task::PrepareCallback&&,stappler::thread::Task::ExecuteCallback&&,stappler::thread::Task::CompleteCallback&&,stappler::thread::Task::Ref*)",
			"::stappler::thread::Task::addPrepareCallback(stappler::thread::Task::PrepareCallback const&)",
			"::stappler::thread::Task::addPrepareCallback(stappler::thread::Task::PrepareCallback&&)",
			"::stappler::thread::Task::addExecuteCallback(stappler::thread::Task::ExecuteCallback const&)",
			"::stappler::thread::Task::addExecuteCallback(stappler::thread::Task::ExecuteCallback&&)",
			"::stappler::thread::Task::addCompleteCallback(stappler::thread::Task::CompleteCallback const&)",
			"::stappler::thread::Task::addCompleteCallback(stappler::thread::Task::CompleteCallback&&)",
			"::stappler::thread::Task::setTag(int)",
			"::stappler::thread::Task::getTag() const",
			"::stappler::thread::Task::setPriority(PriorityType::Type)",
			"::stappler::thread::Task::getPriority() const",
			"::stappler::thread::Task::addRef(stappler::thread::Task::Ref*)",
			"::stappler::thread::Task::setSuccessful(bool)",
			"::stappler::thread::Task::isSuccessful() const",
			"::stappler::thread::Task::getPrepareTasks() const",
			"::stappler::thread::Task::getExecuteTasks() const",
			"::stappler::thread::Task::getCompleteTasks() const",
			"::stappler::thread::Task::prepare() const",
			"::stappler::thread::Task::execute()",
			"::stappler::thread::Task::onComplete()",
			"::stappler::thread::Task::_isSuccessful",
			"::stappler::thread::Task::_tag",
			"::stappler::thread::Task::_priority",
			"::stappler::thread::Task::_refs",
			"::stappler::thread::Task::_prepare",
			"::stappler::thread::Task::_execute",
			"::stappler::thread::Task::_complete"
		],
		"SPThreadTaskQueue.h":  [
			"STAPPLER_THREADS_SPTHREADTASKQUEUE_H_",
			"::stappler::thread::TaskQueue",
			"::stappler::thread::TaskQueue::Ref",
			"::stappler::thread::TaskQueue::TaskMap",
			"::stappler::thread::TaskQueue::Flags",
			"::stappler::thread::TaskQueue::getOwner()",
			"::stappler::thread::TaskQueue::TaskQueue(stappler::StringView,std::function<void ()>&&)",
			"::stappler::thread::TaskQueue::~TaskQueue()",
			"::stappler::thread::TaskQueue::finalize()",
			"::stappler::thread::TaskQueue::performAsync(Rc<stappler::thread::Task>&&)",
			"::stappler::thread::TaskQueue::perform(Rc<stappler::thread::Task>&&,bool)",
			"::stappler::thread::TaskQueue::perform(std::function<void ()>&&,stappler::thread::TaskQueue::Ref*,bool)",
			"::stappler::thread::TaskQueue::perform(stappler::thread::TaskQueue::TaskMap&&)",
			"::stappler::thread::TaskQueue::update(uint32_t*)",
			"::stappler::thread::TaskQueue::onMainThread(Rc<stappler::thread::Task>&&)",
			"::stappler::thread::TaskQueue::onMainThread(std::function<void ()>&&,stappler::thread::TaskQueue::Ref*)",
			"::stappler::thread::TaskQueue::spawnWorkers(stappler::thread::TaskQueue::Flags)",
			"::stappler::thread::TaskQueue::spawnWorkers(stappler::thread::TaskQueue::Flags,uint32_t,uint16_t,stappler::StringView)",
			"::stappler::thread::TaskQueue::cancelWorkers()",
			"::stappler::thread::TaskQueue::performAll(stappler::thread::TaskQueue::Flags)",
			"::stappler::thread::TaskQueue::waitForAll(stappler::TimeInterval)",
			"::stappler::thread::TaskQueue::wait(uint32_t*)",
			"::stappler::thread::TaskQueue::wait(stappler::TimeInterval,uint32_t*)",
			"::stappler::thread::TaskQueue::lock()",
			"::stappler::thread::TaskQueue::unlock()",
			"::stappler::thread::TaskQueue::getName() const",
			"::stappler::thread::TaskQueue::getThreadIds() const",
			"::stappler::thread::TaskQueue::getOutputCounter() const",
			"::stappler::thread::TaskQueue::getThreadCount() const",
			"::stappler::thread::TaskQueue::popTask(uint32_t)",
			"::stappler::thread::TaskQueue::onMainThreadWorker(Rc<stappler::thread::Task>&&)",
			"::stappler::thread::TaskQueue::_context",
			"::stappler::thread::TaskQueue::_inputMutexQueue",
			"::stappler::thread::TaskQueue::_inputMutexFree",
			"::stappler::thread::TaskQueue::_inputQueue",
			"::stappler::thread::TaskQueue::_outputMutex",
			"::stappler::thread::TaskQueue::_outputQueue",
			"::stappler::thread::TaskQueue::_outputCallbacks",
			"::stappler::thread::TaskQueue::_outputCounter",
			"::stappler::thread::TaskQueue::_tasksCounter",
			"::stappler::thread::TaskQueue::_name",
			"::stappler::thread::TaskQueue::_wakeup",
			"::stappler::thread::operator|(TaskQueue::Flags const&,TaskQueue::Flags const&)",
			"::stappler::thread::operator&(TaskQueue::Flags const&,TaskQueue::Flags const&)",
			"::stappler::thread::operator^(TaskQueue::Flags const&,TaskQueue::Flags const&)",
			"::stappler::thread::operator|=(TaskQueue::Flags&,TaskQueue::Flags const&)",
			"::stappler::thread::operator&=(TaskQueue::Flags&,TaskQueue::Flags const&)",
			"::stappler::thread::operator^=(TaskQueue::Flags&,TaskQueue::Flags const&)",
			"::stappler::thread::operator==(TaskQueue::Flags const&,std::underlying_type<TaskQueue::Flags>::type const&)",
			"::stappler::thread::operator==(std::underlying_type<TaskQueue::Flags>::type const&,TaskQueue::Flags const&)",
			"::stappler::thread::operator!=(TaskQueue::Flags const&,std::underlying_type<TaskQueue::Flags>::type const&)",
			"::stappler::thread::operator!=(std::underlying_type<TaskQueue::Flags>::type const&,TaskQueue::Flags const&)",
			"::stappler::thread::operator~(TaskQueue::Flags const&)"
		],
		"SPTime.h":  [
			"STAPPLER_CORE_UTILS_SPTIME_H_",
			"SP_COMPILE_TIME",
			"::stappler::sp_time_exp_t",
			"::stappler::sp_time_exp_t::tm_gmt_e",
			"::stappler::sp_time_exp_t::tm_usec",
			"::stappler::sp_time_exp_t::tm_sec",
			"::stappler::sp_time_exp_t::tm_min",
			"::stappler::sp_time_exp_t::tm_hour",
			"::stappler::sp_time_exp_t::tm_mday",
			"::stappler::sp_time_exp_t::tm_mon",
			"::stappler::sp_time_exp_t::tm_year",
			"::stappler::sp_time_exp_t::tm_wday",
			"::stappler::sp_time_exp_t::tm_yday",
			"::stappler::sp_time_exp_t::tm_isdst",
			"::stappler::sp_time_exp_t::tm_gmtoff",
			"::stappler::sp_time_exp_t::tm_gmt_type",
			"::stappler::sp_time_exp_t::sp_time_exp_t()",
			"::stappler::sp_time_exp_t::sp_time_exp_t(int64_t,int32_t,bool)",
			"::stappler::sp_time_exp_t::sp_time_exp_t(int64_t,int32_t)",
			"::stappler::sp_time_exp_t::sp_time_exp_t(int64_t)",
			"::stappler::sp_time_exp_t::sp_time_exp_t(int64_t,bool)",
			"::stappler::sp_time_exp_t::sp_time_exp_t(stappler::Time,int32_t,bool)",
			"::stappler::sp_time_exp_t::sp_time_exp_t(stappler::Time,int32_t)",
			"::stappler::sp_time_exp_t::sp_time_exp_t(stappler::Time)",
			"::stappler::sp_time_exp_t::sp_time_exp_t(stappler::Time,bool)",
			"::stappler::sp_time_exp_t::read(stappler::StringView)",
			"::stappler::sp_time_exp_t::get() const",
			"::stappler::sp_time_exp_t::gmt_get() const",
			"::stappler::sp_time_exp_t::ltz_get() const",
			"::stappler::sp_time_exp_t::geti() const",
			"::stappler::sp_time_exp_t::gmt_geti() const",
			"::stappler::sp_time_exp_t::ltz_geti() const",
			"::stappler::sp_time_exp_t::encodeRfc822(char*) const",
			"::stappler::sp_time_exp_t::encodeCTime(char*) const",
			"::stappler::sp_time_exp_t::encodeIso8601(char*,size_t) const",
			"::stappler::TimeStorage",
			"::stappler::TimeStorage::toMicroseconds() const",
			"::stappler::TimeStorage::toMilliseconds() const",
			"::stappler::TimeStorage::toSeconds() const",
			"::stappler::TimeStorage::toFloatSeconds() const",
			"::stappler::TimeStorage::toMicros() const",
			"::stappler::TimeStorage::toMillis() const",
			"::stappler::TimeStorage::mksec() const",
			"::stappler::TimeStorage::msec() const",
			"::stappler::TimeStorage::sec() const",
			"::stappler::TimeStorage::fsec() const",
			"::stappler::TimeStorage::asLocal() const",
			"::stappler::TimeStorage::asGmt() const",
			"::stappler::TimeStorage::setMicros(uint64_t)",
			"::stappler::TimeStorage::setMillis(uint64_t)",
			"::stappler::TimeStorage::setMicroseconds(uint64_t)",
			"::stappler::TimeStorage::setMilliseconds(uint64_t)",
			"::stappler::TimeStorage::setSeconds(time_t)",
			"::stappler::TimeStorage::clear()",
			"::stappler::TimeStorage::operator bool() const",
			"::stappler::TimeStorage::TimeStorage()",
			"::stappler::TimeStorage::TimeStorage(stappler::TimeStorage const&)",
			"::stappler::TimeStorage::TimeStorage(stappler::TimeStorage&&)",
			"::stappler::TimeStorage::operator=(stappler::TimeStorage const&)",
			"::stappler::TimeStorage::operator=(stappler::TimeStorage&&)",
			"::stappler::TimeStorage::TimeStorage(uint64_t)",
			"::stappler::TimeStorage::_value",
			"::stappler::TimeInterval",
			"::stappler::TimeInterval::between(stappler::Time const&,stappler::Time const&)",
			"::stappler::TimeInterval::microseconds(uint64_t)",
			"::stappler::TimeInterval::milliseconds(uint64_t)",
			"::stappler::TimeInterval::seconds(time_t)",
			"::stappler::TimeInterval::floatSeconds(float)",
			"::stappler::TimeInterval::operator+(stappler::Time const&) const",
			"::stappler::TimeInterval::operator+(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator+=(stappler::TimeInterval const&)",
			"::stappler::TimeInterval::operator-(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator-=(stappler::TimeInterval const&)",
			"::stappler::TimeInterval::operator*(float) const",
			"::stappler::TimeInterval::operator*=(float)",
			"::stappler::TimeInterval::operator/(float) const",
			"::stappler::TimeInterval::operator/=(float)",
			"::stappler::TimeInterval::operator<(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator>(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator<=(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator>=(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator==(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator!=(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::TimeInterval(stappler::nullptr_t)",
			"::stappler::TimeInterval::operator=(stappler::nullptr_t)",
			"::stappler::TimeInterval::TimeInterval()",
			"::stappler::TimeInterval::TimeInterval(stappler::TimeInterval const&)",
			"::stappler::TimeInterval::TimeInterval(stappler::TimeInterval&&)",
			"::stappler::TimeInterval::operator=(stappler::TimeInterval const&)",
			"::stappler::TimeInterval::operator=(stappler::TimeInterval&&)",
			"::stappler::Time",
			"::stappler::Time::now()",
			"::stappler::Time::fromCompileTime(char const*,char const*)",
			"::stappler::Time::fromHttp(stappler::StringView)",
			"::stappler::Time::microseconds(uint64_t)",
			"::stappler::Time::milliseconds(uint64_t)",
			"::stappler::Time::seconds(time_t)",
			"::stappler::Time::floatSeconds(float)",
			"::stappler::Time::toHttp<typename>() const",
			"::stappler::Time::toAtomXml<typename>() const",
			"::stappler::Time::toRfc822<typename>() const",
			"::stappler::Time::toCTime<typename>() const",
			"::stappler::Time::toIso8601<typename>(size_t) const",
			"::stappler::Time::toFormat<typename>(char const*) const",
			"::stappler::Time::operator+(stappler::TimeInterval const&) const",
			"::stappler::Time::operator+=(stappler::TimeInterval const&)",
			"::stappler::Time::operator-(stappler::Time const&) const",
			"::stappler::Time::operator-(stappler::TimeInterval const&) const",
			"::stappler::Time::operator-=(stappler::TimeInterval const&)",
			"::stappler::Time::operator<(stappler::Time const&) const",
			"::stappler::Time::operator>(stappler::Time const&) const",
			"::stappler::Time::operator<=(stappler::Time const&) const",
			"::stappler::Time::operator>=(stappler::Time const&) const",
			"::stappler::Time::operator==(stappler::Time const&) const",
			"::stappler::Time::operator!=(stappler::Time const&) const",
			"::stappler::Time::Time(stappler::nullptr_t)",
			"::stappler::Time::operator=(stappler::nullptr_t)",
			"::stappler::Time::Time()",
			"::stappler::Time::Time(stappler::Time const&)",
			"::stappler::Time::Time(stappler::Time&&)",
			"::stappler::Time::operator=(stappler::Time const&)",
			"::stappler::Time::operator=(stappler::Time&&)",
			"::stappler::Time::encodeToFormat(char*,size_t,char const*) const",
			"::stappler::operator\"\"_sec(unsigned long long)",
			"::stappler::operator\"\"_msec(unsigned long long)",
			"::stappler::operator\"\"_mksec(unsigned long long)",
			"::stappler::TimeInterval::operator+(stappler::Time const&) const",
			"::stappler::TimeInterval::operator+(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator+=(stappler::TimeInterval const&)",
			"::stappler::TimeInterval::operator-(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator-=(stappler::TimeInterval const&)",
			"::stappler::TimeInterval::operator*(float) const",
			"::stappler::TimeInterval::operator*=(float)",
			"::stappler::TimeInterval::operator/(float) const",
			"::stappler::TimeInterval::operator/=(float)",
			"::stappler::TimeInterval::operator<(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator>(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator<=(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator>=(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator==(stappler::TimeInterval const&) const",
			"::stappler::TimeInterval::operator!=(stappler::TimeInterval const&) const",
			"::stappler::Time::operator+(stappler::TimeInterval const&) const",
			"::stappler::Time::operator+=(stappler::TimeInterval const&)",
			"::stappler::Time::operator-(stappler::Time const&) const",
			"::stappler::Time::operator-(stappler::TimeInterval const&) const",
			"::stappler::Time::operator-=(stappler::TimeInterval const&)",
			"::stappler::Time::operator<(stappler::Time const&) const",
			"::stappler::Time::operator>(stappler::Time const&) const",
			"::stappler::Time::operator<=(stappler::Time const&) const",
			"::stappler::Time::operator>=(stappler::Time const&) const",
			"::stappler::Time::operator==(stappler::Time const&) const",
			"::stappler::Time::operator!=(stappler::Time const&) const"
		],
		"SPUnicode.h":  [
			"STAPPLER_CORE_STRING_SPUNICODE_H_",
			"::stappler::unicode::utf8_length_data",
			"::stappler::unicode::utf8_length_mask",
			"::stappler::unicode::utf8Decode(char const*)",
			"::stappler::unicode::utf8Decode(char const*,uint8_t&)",
			"::stappler::unicode::utf8Decode(char16_t const*)",
			"::stappler::unicode::utf8Decode(char16_t const*,uint8_t&)",
			"::stappler::unicode::utf8EncodeLength(char16_t)",
			"::stappler::unicode::utf8EncodeBuf(char*,char16_t)",
			"::stappler::unicode::isUtf8Surrogate(char)",
			"::stappler::unicode::utf8Decode(char const*)",
			"::stappler::unicode::utf8Decode(char const*,uint8_t&)",
			"::stappler::unicode::utf8Decode(char16_t const*)",
			"::stappler::unicode::utf8Decode(char16_t const*,uint8_t&)",
			"::stappler::unicode::utf8EncodeLength(char16_t)",
			"::stappler::unicode::utf8EncodeBuf(char*,char16_t)",
			"::stappler::unicode::utf8Encode(std::string&,char16_t)",
			"::stappler::unicode::utf8Encode(memory::string&,char16_t)",
			"::stappler::unicode::utf8Encode(std::ostream&,char16_t)",
			"::stappler::unicode::isUtf8Surrogate(char)",
			"::stappler::string::char_ptr_t",
			"::stappler::string::char_ptr_ref_t",
			"::stappler::string::char_const_ptr_t",
			"::stappler::string::char_const_ptr_ref_t",
			"::stappler::string::char_const_ptr_const_ref_t",
			"::stappler::string::toupper(char&,char&)",
			"::stappler::string::tolower(char&,char&)",
			"::stappler::string::toupper(char16_t)",
			"::stappler::string::tolower(char16_t)",
			"::stappler::string::toupper_buf(char*,size_t)",
			"::stappler::string::tolower_buf(char*,size_t)",
			"::stappler::string::toupper_buf(char16_t*,size_t)",
			"::stappler::string::tolower_buf(char16_t*,size_t)",
			"::stappler::string::isspace(char)",
			"::stappler::string::isspace(char16_t)",
			"::stappler::string::isspace(stappler::string::char_const_ptr_t)",
			"::stappler::string::_to_decimal(int64_t,char*)",
			"::stappler::string::_to_decimal(uint64_t,char*)",
			"::stappler::string::_to_decimal(int64_t,char16_t*)",
			"::stappler::string::_to_decimal(uint64_t,char16_t*)"
		],
		"SPUrl.h":  [
			"STAPPLER_CORE_UTILS_SPURL_H_",
			"::stappler::UrlView",
			"::stappler::UrlView::UrlToken",
			"::stappler::UrlView::scheme",
			"::stappler::UrlView::user",
			"::stappler::UrlView::password",
			"::stappler::UrlView::host",
			"::stappler::UrlView::port",
			"::stappler::UrlView::path",
			"::stappler::UrlView::query",
			"::stappler::UrlView::fragment",
			"::stappler::UrlView::url",
			"::stappler::UrlView::isValidIdnTld(stappler::StringView)",
			"::stappler::UrlView::parseUrl(stappler::StringView&,Callback<void (stappler::StringViewUtf8, UrlView::UrlToken)> const&)",
			"::stappler::UrlView::parsePath<typename>(stappler::StringView)",
			"::stappler::UrlView::parseArgs<typename>(stappler::StringView,size_t)",
			"::stappler::UrlView::UrlView()",
			"::stappler::UrlView::UrlView(stappler::StringView)",
			"::stappler::UrlView::clear()",
			"::stappler::UrlView::parse(stappler::StringView const&)",
			"::stappler::UrlView::parse(stappler::StringView&)",
			"::stappler::UrlView::get<typename>() const",
			"::stappler::UrlView::isEmail() const",
			"::stappler::UrlView::isPath() const"
		],
		"SPUrlTld.hpp":  [
			"STAPPLER_CORE_UTILS_SPURLTLD_HPP_",
			"::stappler::s_IdnTld"
		],
		"SPValid.h":  [
			"STAPPLER_CORE_UTILS_SPVALID_H_",
			"::stappler::valid::validateIdentifier(stappler::StringView)",
			"::stappler::valid::validateText(stappler::StringView)",
			"::stappler::valid::validateEmailWithoutNormalization(stappler::StringView)",
			"::stappler::valid::validateEmail(memory::PoolInterface::StringType&)",
			"::stappler::valid::validateEmail(memory::StandartInterface::StringType&)",
			"::stappler::valid::validateUrl(memory::PoolInterface::StringType&)",
			"::stappler::valid::validateUrl(memory::StandartInterface::StringType&)",
			"::stappler::valid::validateNumber(stappler::StringView const&)",
			"::stappler::valid::validateHexadecimial(stappler::StringView const&)",
			"::stappler::valid::validateBase64(stappler::StringView const&)",
			"::stappler::valid::makeRandomBytes(uint8_t*,size_t)",
			"::stappler::valid::makeRandomBytes<typename>(size_t)",
			"::stappler::valid::makePassword<typename>(stappler::StringView const&,stappler::StringView const&)",
			"::stappler::valid::validatePassord(stappler::StringView const&,stappler::BytesView const&,stappler::StringView const&)",
			"::stappler::valid::generatePassword<typename>(size_t)",
			"::stappler::valid::readIp(stappler::StringView)",
			"::stappler::valid::readIp(stappler::StringView,bool&)",
			"::stappler::valid::readIpRange(stappler::StringView)"
		],
		"SPVec2.h":  [
			"STAPPLER_GEOM_SPVEC2_H_",
			"::stappler::geom::Vec2",
			"::stappler::geom::Vec2::Dimansions",
			"::stappler::geom::Vec2::ZERO",
			"::stappler::geom::Vec2::ONE",
			"::stappler::geom::Vec2::UNIT_X",
			"::stappler::geom::Vec2::UNIT_Y",
			"::stappler::geom::Vec2::add(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)",
			"::stappler::geom::Vec2::subtract(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)",
			"::stappler::geom::Vec2::scale(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)",
			"::stappler::geom::Vec2::unscale(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)",
			"::stappler::geom::Vec2::cross(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::dot(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::angle(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::clamp(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)",
			"::stappler::geom::Vec2::forAngle(float const)",
			"::stappler::geom::Vec2::isLineIntersect(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,float*,float*)",
			"::stappler::geom::Vec2::isLineOverlap(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::isLineParallel(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::isSegmentOverlap(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*,stappler::geom::Vec2*)",
			"::stappler::geom::Vec2::isSegmentIntersect(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::getIntersectPoint(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::getSegmentIntersectPoint<typename>(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,Callback const&)",
			"::stappler::geom::Vec2::isCounterClockwise(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::bitop<typename>(stappler::geom::Vec2 const&,Functor const&)",
			"::stappler::geom::Vec2::bitop<typename>(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,Functor const&)",
			"::stappler::geom::Vec2::fill(float)",
			"::stappler::geom::Vec2::x",
			"::stappler::geom::Vec2::y",
			"::stappler::geom::Vec2::Vec2()",
			"::stappler::geom::Vec2::Vec2(float,float)",
			"::stappler::geom::Vec2::Vec2(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::Vec2<typename>(stappler::geom::Vec2 const&,Functor const&)",
			"::stappler::geom::Vec2::Vec2<typename>(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,Functor const&)",
			"::stappler::geom::Vec2::Vec2(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::Vec2(stappler::geom::Size2 const&)",
			"::stappler::geom::Vec2::Vec2(stappler::geom::Extent2 const&)",
			"::stappler::geom::Vec2::isValid() const",
			"::stappler::geom::Vec2::add(float const&)",
			"::stappler::geom::Vec2::add(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::subtract(float const&)",
			"::stappler::geom::Vec2::subtract(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::scale(float const&)",
			"::stappler::geom::Vec2::scale(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::unscale(float const&)",
			"::stappler::geom::Vec2::unscale(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::clamp(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::distanceSquared(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::lengthSquared() const",
			"::stappler::geom::Vec2::distance(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::length() const",
			"::stappler::geom::Vec2::isWithinDistance(stappler::geom::Vec2 const&,float) const",
			"::stappler::geom::Vec2::dot(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::cross(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::negate()",
			"::stappler::geom::Vec2::normalize()",
			"::stappler::geom::Vec2::getNormalized() const",
			"::stappler::geom::Vec2::fuzzyEquals(stappler::geom::Vec2 const&,float) const",
			"::stappler::geom::Vec2::getAngle() const",
			"::stappler::geom::Vec2::getPerp() const",
			"::stappler::geom::Vec2::getMidpoint(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::getClampPoint(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::getRPerp() const",
			"::stappler::geom::Vec2::project(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::rotate(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::unrotate(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::getAngle(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Vec2::rotateByAngle(stappler::geom::Vec2 const&,float) const",
			"::stappler::geom::Vec2::rotate(stappler::geom::Vec2 const&,float)",
			"::stappler::geom::Vec2::operator+=(float const&)",
			"::stappler::geom::Vec2::operator+=(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::operator-=(float const&)",
			"::stappler::geom::Vec2::operator-=(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::operator*=(float const&)",
			"::stappler::geom::Vec2::operator*=(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::operator/=(float const&)",
			"::stappler::geom::Vec2::operator/=(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::normalize()",
			"::stappler::geom::Vec2::ZERO",
			"::stappler::geom::Vec2::ONE",
			"::stappler::geom::Vec2::UNIT_X",
			"::stappler::geom::Vec2::UNIT_Y",
			"::stappler::geom::operator+(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::operator+(stappler::geom::Vec2 const&,float const&)",
			"::stappler::geom::operator+(float const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::operator-(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::operator-(stappler::geom::Vec2 const&,float const&)",
			"::stappler::geom::operator*(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::operator*(stappler::geom::Vec2 const&,float const&)",
			"::stappler::geom::operator*(float const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::operator/(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::operator/(stappler::geom::Vec2 const&,float const&)",
			"::stappler::geom::operator-(stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::project(stappler::geom::Vec2 const&) const",
			"::stappler::geom::Anchor::Middle",
			"::stappler::geom::Anchor::BottomLeft",
			"::stappler::geom::Anchor::TopLeft",
			"::stappler::geom::Anchor::BottomRight",
			"::stappler::geom::Anchor::TopRight",
			"::stappler::geom::Anchor::MiddleRight",
			"::stappler::geom::Anchor::MiddleLeft",
			"::stappler::geom::Anchor::MiddleTop",
			"::stappler::geom::Anchor::MiddleBottom",
			"::stappler::geom::operator<<(std::basic_ostream<char>&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec2::getSegmentIntersectPoint<typename>(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,Callback const&)",
			"::stappler::geom::Vec2::isCounterClockwise(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)"
		],
		"SPVec3.h":  [
			"STAPPLER_GEOM_SPVEC3_H_",
			"::stappler::geom::Vec3",
			"::stappler::geom::Vec3::Dimansions",
			"::stappler::geom::Vec3::ZERO",
			"::stappler::geom::Vec3::ONE",
			"::stappler::geom::Vec3::UNIT_X",
			"::stappler::geom::Vec3::UNIT_Y",
			"::stappler::geom::Vec3::UNIT_Z",
			"::stappler::geom::Vec3::add(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)",
			"::stappler::geom::Vec3::subtract(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)",
			"::stappler::geom::Vec3::scale(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)",
			"::stappler::geom::Vec3::unscale(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)",
			"::stappler::geom::Vec3::cross(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)",
			"::stappler::geom::Vec3::dot(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::angle(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::clamp(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)",
			"::stappler::geom::Vec3::bitop<typename>(stappler::geom::Vec3 const&,Functor const&)",
			"::stappler::geom::Vec3::bitop<typename>(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,Functor const&)",
			"::stappler::geom::Vec3::fill(float)",
			"::stappler::geom::Vec3::x",
			"::stappler::geom::Vec3::y",
			"::stappler::geom::Vec3::z",
			"::stappler::geom::Vec3::Vec3()",
			"::stappler::geom::Vec3::Vec3(float,float,float)",
			"::stappler::geom::Vec3::Vec3(stappler::geom::Vec2 const&,float)",
			"::stappler::geom::Vec3::Vec3(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::Vec3<typename>(stappler::geom::Vec3 const&,Functor const&)",
			"::stappler::geom::Vec3::Vec3<typename>(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,Functor const&)",
			"::stappler::geom::Vec3::Vec3(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::Vec3(stappler::geom::Size3 const&)",
			"::stappler::geom::Vec3::Vec3(stappler::geom::Extent3 const&)",
			"::stappler::geom::Vec3::isValid() const",
			"::stappler::geom::Vec3::xy() const",
			"::stappler::geom::Vec3::add(float const&)",
			"::stappler::geom::Vec3::add(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::subtract(float const&)",
			"::stappler::geom::Vec3::subtract(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::scale(float const&)",
			"::stappler::geom::Vec3::scale(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::unscale(float const&)",
			"::stappler::geom::Vec3::unscale(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::clamp(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::distanceSquared(stappler::geom::Vec3 const&) const",
			"::stappler::geom::Vec3::lengthSquared() const",
			"::stappler::geom::Vec3::distance(stappler::geom::Vec3 const&) const",
			"::stappler::geom::Vec3::length() const",
			"::stappler::geom::Vec3::isWithinDistance(stappler::geom::Vec3 const&,float) const",
			"::stappler::geom::Vec3::dot(stappler::geom::Vec3 const&) const",
			"::stappler::geom::Vec3::cross(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::negate()",
			"::stappler::geom::Vec3::normalize()",
			"::stappler::geom::Vec3::getNormalized() const",
			"::stappler::geom::Vec3::fuzzyEquals(stappler::geom::Vec3 const&,float) const",
			"::stappler::geom::Vec3::operator+=(float const&)",
			"::stappler::geom::Vec3::operator+=(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::operator-=(float const&)",
			"::stappler::geom::Vec3::operator-=(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::operator*=(float const&)",
			"::stappler::geom::Vec3::operator*=(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::operator/=(float const&)",
			"::stappler::geom::Vec3::operator/=(stappler::geom::Vec3 const&)",
			"::stappler::geom::Vec3::normalize()",
			"::stappler::geom::Vec3::ZERO",
			"::stappler::geom::Vec3::ONE",
			"::stappler::geom::Vec3::UNIT_X",
			"::stappler::geom::Vec3::UNIT_Y",
			"::stappler::geom::Vec3::UNIT_Z",
			"::stappler::geom::operator+(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::operator+(stappler::geom::Vec3 const&,float const&)",
			"::stappler::geom::operator+(float const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::operator-(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::operator-(stappler::geom::Vec3 const&,float const&)",
			"::stappler::geom::operator*(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::operator*(stappler::geom::Vec3 const&,float const&)",
			"::stappler::geom::operator*(float const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::operator/(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)",
			"::stappler::geom::operator/(stappler::geom::Vec3 const&,float const&)",
			"::stappler::geom::operator-(stappler::geom::Vec3 const&)",
			"::stappler::geom::operator<<(std::basic_ostream<char>&,stappler::geom::Vec3 const&)"
		],
		"SPVec4.h":  [
			"STAPPLER_GEOM_SPVEC4_H",
			"::stappler::geom::Vec4",
			"::stappler::geom::Vec4::Dimansions",
			"::stappler::geom::Vec4::ZERO",
			"::stappler::geom::Vec4::ONE",
			"::stappler::geom::Vec4::UNIT_X",
			"::stappler::geom::Vec4::UNIT_Y",
			"::stappler::geom::Vec4::UNIT_Z",
			"::stappler::geom::Vec4::UNIT_W",
			"::stappler::geom::Vec4::add(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)",
			"::stappler::geom::Vec4::subtract(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)",
			"::stappler::geom::Vec4::scale(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)",
			"::stappler::geom::Vec4::unscale(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)",
			"::stappler::geom::Vec4::dot(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::angle(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::clamp(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)",
			"::stappler::geom::Vec4::bitop<typename>(stappler::geom::Vec4 const&,Functor const&)",
			"::stappler::geom::Vec4::bitop<typename>(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,Functor const&)",
			"::stappler::geom::Vec4::fill(float)",
			"::stappler::geom::Vec4::x",
			"::stappler::geom::Vec4::y",
			"::stappler::geom::Vec4::z",
			"::stappler::geom::Vec4::w",
			"::stappler::geom::Vec4::Vec4()",
			"::stappler::geom::Vec4::Vec4(float,float,float,float)",
			"::stappler::geom::Vec4::Vec4(stappler::geom::Vec2 const&,float,float)",
			"::stappler::geom::Vec4::Vec4(stappler::geom::Vec3 const&,float)",
			"::stappler::geom::Vec4::Vec4(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::geom::Vec4::Vec4(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::Vec4(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::Vec4<typename>(stappler::geom::Vec4 const&,Functor const&)",
			"::stappler::geom::Vec4::Vec4<typename>(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,Functor const&)",
			"::stappler::geom::Vec4::isValid() const",
			"::stappler::geom::Vec4::xy() const",
			"::stappler::geom::Vec4::xyz() const",
			"::stappler::geom::Vec4::add(float const&)",
			"::stappler::geom::Vec4::add(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::subtract(float const&)",
			"::stappler::geom::Vec4::subtract(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::scale(float const&)",
			"::stappler::geom::Vec4::scale(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::unscale(float const&)",
			"::stappler::geom::Vec4::unscale(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::clamp(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::distanceSquared(stappler::geom::Vec4 const&) const",
			"::stappler::geom::Vec4::lengthSquared() const",
			"::stappler::geom::Vec4::distance(stappler::geom::Vec4 const&) const",
			"::stappler::geom::Vec4::length() const",
			"::stappler::geom::Vec4::isWithinDistance(stappler::geom::Vec4 const&,float) const",
			"::stappler::geom::Vec4::dot(stappler::geom::Vec4 const&) const",
			"::stappler::geom::Vec4::negate()",
			"::stappler::geom::Vec4::normalize()",
			"::stappler::geom::Vec4::getNormalized() const",
			"::stappler::geom::Vec4::fuzzyEquals(stappler::geom::Vec4 const&,float) const",
			"::stappler::geom::Vec4::operator+=(float const&)",
			"::stappler::geom::Vec4::operator+=(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::operator-=(float const&)",
			"::stappler::geom::Vec4::operator-=(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::operator*=(float const&)",
			"::stappler::geom::Vec4::operator*=(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::operator/=(float const&)",
			"::stappler::geom::Vec4::operator/=(stappler::geom::Vec4 const&)",
			"::stappler::geom::Vec4::normalize()",
			"::stappler::geom::Vec4::ZERO",
			"::stappler::geom::Vec4::ONE",
			"::stappler::geom::Vec4::UNIT_X",
			"::stappler::geom::Vec4::UNIT_Y",
			"::stappler::geom::Vec4::UNIT_Z",
			"::stappler::geom::Vec4::UNIT_W",
			"::stappler::geom::operator+(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::operator+(stappler::geom::Vec4 const&,float const&)",
			"::stappler::geom::operator+(float const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::operator-(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::operator-(stappler::geom::Vec4 const&,float const&)",
			"::stappler::geom::operator*(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::operator*(stappler::geom::Vec4 const&,float const&)",
			"::stappler::geom::operator*(float const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::operator/(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)",
			"::stappler::geom::operator/(stappler::geom::Vec4 const&,float const&)",
			"::stappler::geom::operator-(stappler::geom::Vec4 const&)",
			"::stappler::geom::operator<<(std::basic_ostream<char>&,stappler::geom::Vec4 const&)"
		],
		"SPVectorImage.h":  [
			"STAPPLER_VG_SPVECTORIMAGE_H_",
			"::stappler::vg::VectorPathRef",
			"::stappler::vg::VectorPathRef::String",
			"::stappler::vg::VectorPathRef::~VectorPathRef()",
			"::stappler::vg::VectorPathRef::init(stappler::vg::VectorImage*,stappler::vg::VectorPathRef::String const&,Rc<stappler::vg::VectorPath> const&)",
			"::stappler::vg::VectorPathRef::init(stappler::vg::VectorImage*,stappler::vg::VectorPathRef::String const&,Rc<stappler::vg::VectorPath>&&)",
			"::stappler::vg::VectorPathRef::count() const",
			"::stappler::vg::VectorPathRef::setPath(stappler::BytesView)",
			"::stappler::vg::VectorPathRef::setPath(stappler::StringView)",
			"::stappler::vg::VectorPathRef::moveTo(float,float)",
			"::stappler::vg::VectorPathRef::moveTo(stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPathRef::lineTo(float,float)",
			"::stappler::vg::VectorPathRef::lineTo(stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPathRef::quadTo(float,float,float,float)",
			"::stappler::vg::VectorPathRef::quadTo(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPathRef::cubicTo(float,float,float,float,float,float)",
			"::stappler::vg::VectorPathRef::cubicTo(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPathRef::arcTo(float,float,float,bool,bool,float,float)",
			"::stappler::vg::VectorPathRef::arcTo(stappler::geom::Vec2 const&,float,bool,bool,stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPathRef::closePath()",
			"::stappler::vg::VectorPathRef::addRect(stappler::geom::Rect const&)",
			"::stappler::vg::VectorPathRef::addRect(stappler::geom::Rect const&,float)",
			"::stappler::vg::VectorPathRef::addOval(stappler::geom::Rect const&)",
			"::stappler::vg::VectorPathRef::addCircle(float,float,float)",
			"::stappler::vg::VectorPathRef::addArc(stappler::geom::Rect const&,float,float)",
			"::stappler::vg::VectorPathRef::setFillColor(stappler::geom::Color4B const&)",
			"::stappler::vg::VectorPathRef::getFillColor() const",
			"::stappler::vg::VectorPathRef::setStrokeColor(stappler::geom::Color4B const&)",
			"::stappler::vg::VectorPathRef::getStrokeColor() const",
			"::stappler::vg::VectorPathRef::setFillOpacity(uint8_t)",
			"::stappler::vg::VectorPathRef::getFillOpacity() const",
			"::stappler::vg::VectorPathRef::setStrokeOpacity(uint8_t)",
			"::stappler::vg::VectorPathRef::getStrokeOpacity() const",
			"::stappler::vg::VectorPathRef::setStrokeWidth(float)",
			"::stappler::vg::VectorPathRef::getStrokeWidth() const",
			"::stappler::vg::VectorPathRef::setWindingRule(vg::Winding)",
			"::stappler::vg::VectorPathRef::getWindingRule() const",
			"::stappler::vg::VectorPathRef::setStyle(vg::DrawStyle)",
			"::stappler::vg::VectorPathRef::getStyle() const",
			"::stappler::vg::VectorPathRef::setTransform(stappler::geom::Mat4 const&)",
			"::stappler::vg::VectorPathRef::applyTransform(stappler::geom::Mat4 const&)",
			"::stappler::vg::VectorPathRef::getTransform() const",
			"::stappler::vg::VectorPathRef::setAntialiased(bool)",
			"::stappler::vg::VectorPathRef::isAntialiased() const",
			"::stappler::vg::VectorPathRef::clear()",
			"::stappler::vg::VectorPathRef::getId() const",
			"::stappler::vg::VectorPathRef::empty() const",
			"::stappler::vg::VectorPathRef::valid() const",
			"::stappler::vg::VectorPathRef::operator bool() const",
			"::stappler::vg::VectorPathRef::setPath(Rc<stappler::vg::VectorPath>&&)",
			"::stappler::vg::VectorPathRef::getPath() const",
			"::stappler::vg::VectorPathRef::markCopyOnWrite()",
			"::stappler::vg::VectorPathRef::setImage(stappler::vg::VectorImage*)",
			"::stappler::vg::VectorPathRef::copy()",
			"::stappler::vg::VectorPathRef::_copyOnWrite",
			"::stappler::vg::VectorPathRef::_id",
			"::stappler::vg::VectorPathRef::_path",
			"::stappler::vg::VectorPathRef::_image",
			"::stappler::vg::VectorImageData",
			"::stappler::vg::VectorImageData::String",
			"::stappler::vg::VectorImageData::~VectorImageData()",
			"::stappler::vg::VectorImageData::init(stappler::vg::VectorImage*,stappler::geom::Size2,stappler::geom::Rect,Interface::VectorType<PathXRef>&&,Interface::MapType<String, VectorPath>&&,uint16_t)",
			"::stappler::vg::VectorImageData::init(stappler::vg::VectorImage*,stappler::geom::Size2,stappler::geom::Rect)",
			"::stappler::vg::VectorImageData::init(stappler::vg::VectorImageData&)",
			"::stappler::vg::VectorImageData::setImageSize(stappler::geom::Size2 const&)",
			"::stappler::vg::VectorImageData::getImageSize() const",
			"::stappler::vg::VectorImageData::getViewBox() const",
			"::stappler::vg::VectorImageData::getPaths() const",
			"::stappler::vg::VectorImageData::copyPath(stappler::StringView,Rc<stappler::vg::VectorPath> const&)",
			"::stappler::vg::VectorImageData::getNextId()",
			"::stappler::vg::VectorImageData::addPath(stappler::StringView,stappler::StringView,stappler::vg::VectorPath&&,stappler::geom::Mat4)",
			"::stappler::vg::VectorImageData::removePath(stappler::StringView)",
			"::stappler::vg::VectorImageData::clear()",
			"::stappler::vg::VectorImageData::getDrawOrder() const",
			"::stappler::vg::VectorImageData::setDrawOrder(Interface::VectorType<PathXRef>&&)",
			"::stappler::vg::VectorImageData::resetDrawOrder()",
			"::stappler::vg::VectorImageData::setViewBoxTransform(stappler::geom::Mat4 const&)",
			"::stappler::vg::VectorImageData::getViewBoxTransform() const",
			"::stappler::vg::VectorImageData::setBatchDrawing(bool)",
			"::stappler::vg::VectorImageData::isBatchDrawing() const",
			"::stappler::vg::VectorImageData::draw<typename>(Callback const&) const",
			"::stappler::vg::VectorImageData::_allowBatchDrawing",
			"::stappler::vg::VectorImageData::_imageSize",
			"::stappler::vg::VectorImageData::_viewBox",
			"::stappler::vg::VectorImageData::_viewBoxTransform",
			"::stappler::vg::VectorImageData::_order",
			"::stappler::vg::VectorImageData::_paths",
			"::stappler::vg::VectorImageData::_nextId",
			"::stappler::vg::VectorImageData::_image",
			"::stappler::vg::VectorImage",
			"::stappler::vg::VectorImage::String",
			"::stappler::vg::VectorImage::isSvg(stappler::StringView)",
			"::stappler::vg::VectorImage::isSvg(stappler::BytesView)",
			"::stappler::vg::VectorImage::isSvg(stappler::FilePath)",
			"::stappler::vg::VectorImage::~VectorImage()",
			"::stappler::vg::VectorImage::init(stappler::geom::Size2,stappler::StringView)",
			"::stappler::vg::VectorImage::init(stappler::geom::Size2,stappler::vg::VectorPath&&)",
			"::stappler::vg::VectorImage::init(stappler::geom::Size2)",
			"::stappler::vg::VectorImage::init(stappler::StringView)",
			"::stappler::vg::VectorImage::init(stappler::BytesView)",
			"::stappler::vg::VectorImage::init(stappler::FilePath)",
			"::stappler::vg::VectorImage::setImageSize(stappler::geom::Size2 const&)",
			"::stappler::vg::VectorImage::getImageSize() const",
			"::stappler::vg::VectorImage::getViewBox() const",
			"::stappler::vg::VectorImage::addPath(stappler::vg::VectorPath const&,stappler::StringView,stappler::StringView,stappler::geom::Mat4)",
			"::stappler::vg::VectorImage::addPath(stappler::vg::VectorPath&&,stappler::StringView,stappler::StringView,stappler::geom::Mat4)",
			"::stappler::vg::VectorImage::addPath(stappler::StringView,stappler::StringView,stappler::geom::Mat4)",
			"::stappler::vg::VectorImage::getPath(stappler::StringView) const",
			"::stappler::vg::VectorImage::getPaths() const",
			"::stappler::vg::VectorImage::removePath(Rc<stappler::vg::VectorPathRef> const&)",
			"::stappler::vg::VectorImage::removePath(stappler::StringView)",
			"::stappler::vg::VectorImage::clear()",
			"::stappler::vg::VectorImage::getDrawOrder() const",
			"::stappler::vg::VectorImage::setDrawOrder(Interface::VectorType<PathXRef> const&)",
			"::stappler::vg::VectorImage::setDrawOrder(Interface::VectorType<PathXRef>&&)",
			"::stappler::vg::VectorImage::resetDrawOrder()",
			"::stappler::vg::VectorImage::setViewBoxTransform(stappler::geom::Mat4 const&)",
			"::stappler::vg::VectorImage::getViewBoxTransform() const",
			"::stappler::vg::VectorImage::setBatchDrawing(bool)",
			"::stappler::vg::VectorImage::isBatchDrawing() const",
			"::stappler::vg::VectorImage::popData()",
			"::stappler::vg::VectorImage::isDirty() const",
			"::stappler::vg::VectorImage::setDirty()",
			"::stappler::vg::VectorImage::clearDirty()",
			"::stappler::vg::VectorImage::copy()",
			"::stappler::vg::VectorImage::markCopyOnWrite()",
			"::stappler::vg::VectorImage::copyPath(stappler::StringView,Rc<stappler::vg::VectorPath> const&)",
			"::stappler::vg::VectorImage::_dirty",
			"::stappler::vg::VectorImage::_copyOnWrite",
			"::stappler::vg::VectorImage::_data",
			"::stappler::vg::VectorImage::_paths",
			"::stappler::vg::VectorImageData::draw<typename>(Callback const&) const"
		],
		"SPVectorPath.h":  [
			"STAPPLER_VG_SPVECTORPATH_H_",
			"::stappler::vg::Interface",
			"::stappler::vg::PathXRef",
			"::stappler::vg::PathXRef::id",
			"::stappler::vg::PathXRef::cacheId",
			"::stappler::vg::PathXRef::mat",
			"::stappler::vg::VectorPath",
			"::stappler::vg::VectorPath::DrawStyle",
			"::stappler::vg::VectorPath::Winding",
			"::stappler::vg::VectorPath::LineCup",
			"::stappler::vg::VectorPath::LineJoin",
			"::stappler::vg::VectorPath::Params",
			"::stappler::vg::VectorPath::Params::transform",
			"::stappler::vg::VectorPath::Params::fillColor",
			"::stappler::vg::VectorPath::Params::strokeColor",
			"::stappler::vg::VectorPath::Params::style",
			"::stappler::vg::VectorPath::Params::strokeWidth",
			"::stappler::vg::VectorPath::Params::winding",
			"::stappler::vg::VectorPath::Params::lineCup",
			"::stappler::vg::VectorPath::Params::lineJoin",
			"::stappler::vg::VectorPath::Params::miterLimit",
			"::stappler::vg::VectorPath::Params::isAntialiased",
			"::stappler::vg::VectorPath::CommandData",
			"::stappler::vg::VectorPath::CommandData::",
			"::stappler::vg::VectorPath::CommandData::x",
			"::stappler::vg::VectorPath::CommandData::y",
			"::stappler::vg::VectorPath::CommandData::p",
			"::stappler::vg::VectorPath::CommandData::",
			"::stappler::vg::VectorPath::CommandData::v",
			"::stappler::vg::VectorPath::CommandData::a",
			"::stappler::vg::VectorPath::CommandData::b",
			"::stappler::vg::VectorPath::CommandData::f",
			"::stappler::vg::VectorPath::CommandData::CommandData(float,float)",
			"::stappler::vg::VectorPath::CommandData::CommandData(float,bool,bool)",
			"::stappler::vg::VectorPath::Command",
			"::stappler::vg::VectorPath::VectorPath()",
			"::stappler::vg::VectorPath::VectorPath(size_t)",
			"::stappler::vg::VectorPath::VectorPath(stappler::vg::VectorPath const&)",
			"::stappler::vg::VectorPath::operator=(stappler::vg::VectorPath const&)",
			"::stappler::vg::VectorPath::VectorPath(stappler::vg::VectorPath&&)",
			"::stappler::vg::VectorPath::operator=(stappler::vg::VectorPath&&)",
			"::stappler::vg::VectorPath::init()",
			"::stappler::vg::VectorPath::init(stappler::StringView const&)",
			"::stappler::vg::VectorPath::init(stappler::FilePath&&)",
			"::stappler::vg::VectorPath::init(stappler::BytesView)",
			"::stappler::vg::VectorPath::addPath(stappler::vg::VectorPath const&)",
			"::stappler::vg::VectorPath::addPath(stappler::BytesView)",
			"::stappler::vg::VectorPath::addPath(stappler::StringView)",
			"::stappler::vg::VectorPath::count() const",
			"::stappler::vg::VectorPath::moveTo(float,float)",
			"::stappler::vg::VectorPath::moveTo(stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPath::lineTo(float,float)",
			"::stappler::vg::VectorPath::lineTo(stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPath::quadTo(float,float,float,float)",
			"::stappler::vg::VectorPath::quadTo(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPath::cubicTo(float,float,float,float,float,float)",
			"::stappler::vg::VectorPath::cubicTo(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPath::arcTo(float,float,float,bool,bool,float,float)",
			"::stappler::vg::VectorPath::arcTo(stappler::geom::Vec2 const&,float,bool,bool,stappler::geom::Vec2 const&)",
			"::stappler::vg::VectorPath::closePath()",
			"::stappler::vg::VectorPath::addRect(stappler::geom::Rect const&)",
			"::stappler::vg::VectorPath::addRect(stappler::geom::Rect const&,float,float)",
			"::stappler::vg::VectorPath::addRect(float,float,float,float)",
			"::stappler::vg::VectorPath::addOval(stappler::geom::Rect const&)",
			"::stappler::vg::VectorPath::addCircle(float,float,float)",
			"::stappler::vg::VectorPath::addEllipse(float,float,float,float)",
			"::stappler::vg::VectorPath::addArc(stappler::geom::Rect const&,float,float)",
			"::stappler::vg::VectorPath::addRect(float,float,float,float,float,float)",
			"::stappler::vg::VectorPath::setFillColor(stappler::geom::Color4B const&)",
			"::stappler::vg::VectorPath::setFillColor(stappler::geom::Color3B const&,bool)",
			"::stappler::vg::VectorPath::setFillColor(stappler::geom::Color const&,bool)",
			"::stappler::vg::VectorPath::getFillColor() const",
			"::stappler::vg::VectorPath::setStrokeColor(stappler::geom::Color4B const&)",
			"::stappler::vg::VectorPath::setStrokeColor(stappler::geom::Color3B const&,bool)",
			"::stappler::vg::VectorPath::setStrokeColor(stappler::geom::Color const&,bool)",
			"::stappler::vg::VectorPath::getStrokeColor() const",
			"::stappler::vg::VectorPath::setFillOpacity(uint8_t)",
			"::stappler::vg::VectorPath::getFillOpacity() const",
			"::stappler::vg::VectorPath::setStrokeOpacity(uint8_t)",
			"::stappler::vg::VectorPath::getStrokeOpacity() const",
			"::stappler::vg::VectorPath::setStrokeWidth(float)",
			"::stappler::vg::VectorPath::getStrokeWidth() const",
			"::stappler::vg::VectorPath::setWindingRule(stappler::vg::VectorPath::Winding)",
			"::stappler::vg::VectorPath::getWindingRule() const",
			"::stappler::vg::VectorPath::setLineCup(stappler::vg::VectorPath::LineCup)",
			"::stappler::vg::VectorPath::getLineCup() const",
			"::stappler::vg::VectorPath::setLineJoin(stappler::vg::VectorPath::LineJoin)",
			"::stappler::vg::VectorPath::getLineJoin() const",
			"::stappler::vg::VectorPath::setMiterLimit(float)",
			"::stappler::vg::VectorPath::getMiterLimit() const",
			"::stappler::vg::VectorPath::setStyle(stappler::vg::VectorPath::DrawStyle)",
			"::stappler::vg::VectorPath::getStyle() const",
			"::stappler::vg::VectorPath::setAntialiased(bool)",
			"::stappler::vg::VectorPath::isAntialiased() const",
			"::stappler::vg::VectorPath::setTransform(stappler::geom::Mat4 const&)",
			"::stappler::vg::VectorPath::applyTransform(stappler::geom::Mat4 const&)",
			"::stappler::vg::VectorPath::getTransform() const",
			"::stappler::vg::VectorPath::clear()",
			"::stappler::vg::VectorPath::setParams(stappler::vg::VectorPath::Params const&)",
			"::stappler::vg::VectorPath::getParams() const",
			"::stappler::vg::VectorPath::empty() const",
			"::stappler::vg::VectorPath::reserve(size_t,size_t)",
			"::stappler::vg::VectorPath::getCommands() const",
			"::stappler::vg::VectorPath::getPoints() const",
			"::stappler::vg::VectorPath::operator bool() const",
			"::stappler::vg::VectorPath::encode() const",
			"::stappler::vg::VectorPath::toString(bool) const",
			"::stappler::vg::VectorPath::commandsCount() const",
			"::stappler::vg::VectorPath::dataCount() const",
			"::stappler::vg::VectorPath::_points",
			"::stappler::vg::VectorPath::_commands",
			"::stappler::vg::VectorPath::_params"
		],
		"STContinueToken.h":  [
			"STAPPLER_DB_STCONTINUETOKEN_H_",
			"::stappler::db::ContinueToken",
			"::stappler::db::ContinueToken::Flags",
			"::stappler::db::ContinueToken::ContinueToken()",
			"::stappler::db::ContinueToken::ContinueToken(stappler::StringView const&,size_t,bool)",
			"::stappler::db::ContinueToken::ContinueToken(stappler::StringView const&)",
			"::stappler::db::ContinueToken::ContinueToken(stappler::db::ContinueToken const&)",
			"::stappler::db::ContinueToken::ContinueToken(stappler::db::ContinueToken&&)",
			"::stappler::db::ContinueToken::operator=(stappler::db::ContinueToken const&)",
			"::stappler::db::ContinueToken::operator=(stappler::db::ContinueToken&&)",
			"::stappler::db::ContinueToken::operator bool() const",
			"::stappler::db::ContinueToken::hasPrev() const",
			"::stappler::db::ContinueToken::hasNext() const",
			"::stappler::db::ContinueToken::isInit() const",
			"::stappler::db::ContinueToken::encode() const",
			"::stappler::db::ContinueToken::perform(stappler::db::Scheme const&,stappler::db::Transaction const&,stappler::db::Query&)",
			"::stappler::db::ContinueToken::perform(stappler::db::Scheme const&,stappler::db::Transaction const&,stappler::db::Query&,stappler::db::Ordering)",
			"::stappler::db::ContinueToken::performOrdered(stappler::db::Scheme const&,stappler::db::Transaction const&,stappler::db::Query&)",
			"::stappler::db::ContinueToken::refresh(stappler::db::Scheme const&,stappler::db::Transaction const&,stappler::db::Query&)",
			"::stappler::db::ContinueToken::encodeNext() const",
			"::stappler::db::ContinueToken::encodePrev() const",
			"::stappler::db::ContinueToken::getStart() const",
			"::stappler::db::ContinueToken::getEnd() const",
			"::stappler::db::ContinueToken::getTotal() const",
			"::stappler::db::ContinueToken::getCount() const",
			"::stappler::db::ContinueToken::getFetched() const",
			"::stappler::db::ContinueToken::getField() const",
			"::stappler::db::ContinueToken::getNumResults() const",
			"::stappler::db::ContinueToken::hasFlag(stappler::db::ContinueToken::Flags) const",
			"::stappler::db::ContinueToken::setFlag(stappler::db::ContinueToken::Flags)",
			"::stappler::db::ContinueToken::unsetFlag(stappler::db::ContinueToken::Flags)",
			"::stappler::db::ContinueToken::getFirstVec() const",
			"::stappler::db::ContinueToken::getLastVec() const",
			"::stappler::db::ContinueToken::hasPrevImpl() const",
			"::stappler::db::ContinueToken::hasNextImpl() const",
			"::stappler::db::ContinueToken::encodeNextImpl() const",
			"::stappler::db::ContinueToken::encodePrevImpl() const",
			"::stappler::db::ContinueToken::_init",
			"::stappler::db::ContinueToken::_numResults",
			"::stappler::db::ContinueToken::field",
			"::stappler::db::ContinueToken::initVec",
			"::stappler::db::ContinueToken::firstVec",
			"::stappler::db::ContinueToken::lastVec",
			"::stappler::db::ContinueToken::count",
			"::stappler::db::ContinueToken::fetched",
			"::stappler::db::ContinueToken::total",
			"::stappler::db::ContinueToken::flags",
			"::stappler::db::operator|(ContinueToken::Flags const&,ContinueToken::Flags const&)",
			"::stappler::db::operator&(ContinueToken::Flags const&,ContinueToken::Flags const&)",
			"::stappler::db::operator^(ContinueToken::Flags const&,ContinueToken::Flags const&)",
			"::stappler::db::operator|=(ContinueToken::Flags&,ContinueToken::Flags const&)",
			"::stappler::db::operator&=(ContinueToken::Flags&,ContinueToken::Flags const&)",
			"::stappler::db::operator^=(ContinueToken::Flags&,ContinueToken::Flags const&)",
			"::stappler::db::operator==(ContinueToken::Flags const&,std::underlying_type<ContinueToken::Flags>::type const&)",
			"::stappler::db::operator==(std::underlying_type<ContinueToken::Flags>::type const&,ContinueToken::Flags const&)",
			"::stappler::db::operator!=(ContinueToken::Flags const&,std::underlying_type<ContinueToken::Flags>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<ContinueToken::Flags>::type const&,ContinueToken::Flags const&)",
			"::stappler::db::operator~(ContinueToken::Flags const&)"
		],
		"STFieldIntArray.h":  [
			"STAPPLER_DB_EXTENSIONS_STFIELDINTARRAY_H_",
			"::stappler::db::FieldIntArray",
			"::stappler::db::FieldIntArray::FieldIntArray<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldIntArray::transformValue(db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldIntArray::readFromStorage(db::ResultCursor const&,size_t) const",
			"::stappler::db::FieldIntArray::writeToStorage(db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldIntArray::getTypeName() const",
			"::stappler::db::FieldIntArray::isSimpleLayout() const",
			"::stappler::db::FieldIntArray::getIndexName() const",
			"::stappler::db::FieldIntArray::getIndexField() const",
			"::stappler::db::FieldIntArray::isComparationAllowed(db::Comparation) const",
			"::stappler::db::FieldIntArray::writeQuery(db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldBigIntArray",
			"::stappler::db::FieldBigIntArray::FieldBigIntArray<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldBigIntArray::transformValue(db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldBigIntArray::readFromStorage(db::ResultCursor const&,size_t) const",
			"::stappler::db::FieldBigIntArray::writeToStorage(db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldBigIntArray::getTypeName() const",
			"::stappler::db::FieldBigIntArray::isSimpleLayout() const",
			"::stappler::db::FieldBigIntArray::getIndexName() const",
			"::stappler::db::FieldBigIntArray::getIndexField() const",
			"::stappler::db::FieldBigIntArray::isComparationAllowed(db::Comparation) const",
			"::stappler::db::FieldBigIntArray::writeQuery(db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const"
		],
		"STFieldPoint.h":  [
			"STAPPLER_DB_EXTENSIONS_STFIELDPOINT_H_",
			"::stappler::db::FieldPoint",
			"::stappler::db::FieldPoint::FieldPoint<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldPoint::transformValue(db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldPoint::readFromStorage(db::ResultCursor const&,size_t) const",
			"::stappler::db::FieldPoint::writeToStorage(db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldPoint::getTypeName() const",
			"::stappler::db::FieldPoint::isSimpleLayout() const",
			"::stappler::db::FieldPoint::getIndexName() const",
			"::stappler::db::FieldPoint::getIndexField() const",
			"::stappler::db::FieldPoint::isComparationAllowed(stappler::sql::Comparation) const",
			"::stappler::db::FieldPoint::writeQuery(db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const"
		],
		"STFieldTextArray.h":  [
			"STAPPLER_DB_EXTENSIONS_STFIELDTEXTARRAY_H_",
			"::stappler::db::FieldTextArray",
			"::stappler::db::FieldTextArray::FieldTextArray<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldTextArray::transformValue(db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldTextArray::readFromStorage(db::ResultCursor const&,size_t) const",
			"::stappler::db::FieldTextArray::writeToStorage(db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldTextArray::getTypeName() const",
			"::stappler::db::FieldTextArray::isSimpleLayout() const",
			"::stappler::db::FieldTextArray::getIndexName() const",
			"::stappler::db::FieldTextArray::getIndexField() const",
			"::stappler::db::FieldTextArray::isComparationAllowed(db::Comparation) const",
			"::stappler::db::FieldTextArray::writeQuery(db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const"
		],
		"STInputFile.h":  [
			"STAPPLER_DB_STINPUTFILE_H_",
			"::stappler::db::InputFile",
			"::stappler::db::InputFile::path",
			"::stappler::db::InputFile::name",
			"::stappler::db::InputFile::type",
			"::stappler::db::InputFile::encoding",
			"::stappler::db::InputFile::original",
			"::stappler::db::InputFile::file",
			"::stappler::db::InputFile::isBinary",
			"::stappler::db::InputFile::writeSize",
			"::stappler::db::InputFile::headerSize",
			"::stappler::db::InputFile::id",
			"::stappler::db::InputFile::InputFile(stappler::mem_pool::String&&,stappler::mem_pool::String&&,stappler::mem_pool::String&&,stappler::mem_pool::String&&,size_t,int64_t)",
			"::stappler::db::InputFile::~InputFile()",
			"::stappler::db::InputFile::isOpen() const",
			"::stappler::db::InputFile::write(char const*,size_t)",
			"::stappler::db::InputFile::close()",
			"::stappler::db::InputFile::save(stappler::StringView const&) const",
			"::stappler::db::InputFile::readBytes()",
			"::stappler::db::InputFile::readText()",
			"::stappler::db::InputFile::negativeId() const",
			"::stappler::db::InputFile::InputFile(stappler::db::InputFile const&)",
			"::stappler::db::InputFile::InputFile(stappler::db::InputFile&&)",
			"::stappler::db::InputFile::operator=(stappler::db::InputFile const&)",
			"::stappler::db::InputFile::operator=(stappler::db::InputFile&&)"
		],
		"STPqDriver.h":  [
			"STAPPLER_DB_PQ_SPDBPQDRIVER_H_",
			"::stappler::db::pq::Driver",
			"::stappler::db::pq::Driver::Status",
			"::stappler::db::pq::Driver::TransactionStatus",
			"::stappler::db::pq::Driver::open(stappler::StringView,void const*)",
			"::stappler::db::pq::Driver::~Driver()",
			"::stappler::db::pq::Driver::init(stappler::db::sql::Driver::Handle,Vector<stappler::StringView> const&)",
			"::stappler::db::pq::Driver::performWithStorage(stappler::db::sql::Driver::Handle,Callback<void (const db::Adapter &)> const&) const",
			"::stappler::db::pq::Driver::acquireInterface(stappler::db::sql::Driver::Handle,stappler::mempool::base::pool_t*) const",
			"::stappler::db::pq::Driver::connect(Map<stappler::StringView, stappler::StringView> const&) const",
			"::stappler::db::pq::Driver::finish(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::pq::Driver::getConnection(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::pq::Driver::isValid(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::pq::Driver::isValid(stappler::db::sql::Driver::Connection) const",
			"::stappler::db::pq::Driver::isIdle(stappler::db::sql::Driver::Connection) const",
			"::stappler::db::pq::Driver::listenForNotifications(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::pq::Driver::consumeNotifications(stappler::db::sql::Driver::Handle,Callback<void (stappler::StringView)> const&) const",
			"::stappler::db::pq::Driver::isNotificationsSupported() const",
			"::stappler::db::pq::Driver::getTransactionStatus(stappler::db::sql::Driver::Connection) const",
			"::stappler::db::pq::Driver::getStatus(stappler::db::sql::Driver::Result) const",
			"::stappler::db::pq::Driver::isBinaryFormat(stappler::db::sql::Driver::Result,size_t) const",
			"::stappler::db::pq::Driver::isNull(stappler::db::sql::Driver::Result,size_t,size_t) const",
			"::stappler::db::pq::Driver::getValue(stappler::db::sql::Driver::Result,size_t,size_t) const",
			"::stappler::db::pq::Driver::getLength(stappler::db::sql::Driver::Result,size_t,size_t) const",
			"::stappler::db::pq::Driver::getName(stappler::db::sql::Driver::Result,size_t) const",
			"::stappler::db::pq::Driver::getType(stappler::db::sql::Driver::Result,size_t) const",
			"::stappler::db::pq::Driver::getNTuples(stappler::db::sql::Driver::Result) const",
			"::stappler::db::pq::Driver::getNFields(stappler::db::sql::Driver::Result) const",
			"::stappler::db::pq::Driver::getCmdTuples(stappler::db::sql::Driver::Result) const",
			"::stappler::db::pq::Driver::getStatusMessage(stappler::db::pq::Driver::Status) const",
			"::stappler::db::pq::Driver::getResultErrorMessage(stappler::db::sql::Driver::Result) const",
			"::stappler::db::pq::Driver::clearResult(stappler::db::sql::Driver::Result) const",
			"::stappler::db::pq::Driver::exec(stappler::db::sql::Driver::Connection,char const*) const",
			"::stappler::db::pq::Driver::exec(stappler::db::sql::Driver::Connection,char const*,int,char const* const*,int const*,int const*,int) const",
			"::stappler::db::pq::Driver::operator bool() const",
			"::stappler::db::pq::Driver::getTypeById(uint32_t) const",
			"::stappler::db::pq::Driver::getTypeNameById(uint32_t) const",
			"::stappler::db::pq::Driver::Driver(stappler::StringView,void const*)",
			"::stappler::db::pq::Driver::doConnect(char const* const*,char const* const*,int) const",
			"::stappler::db::pq::Driver::_init",
			"::stappler::db::pq::Driver::_storageTypes",
			"::stappler::db::pq::Driver::_customTypes",
			"::stappler::db::pq::Driver::_handle",
			"::stappler::db::pq::Driver::_external",
			"::stappler::db::pq::ResultCursor",
			"::stappler::db::pq::ResultCursor::pgsql_is_success(Driver::Status)",
			"::stappler::db::pq::ResultCursor::ResultCursor(stappler::db::pq::Driver const*,Driver::Result)",
			"::stappler::db::pq::ResultCursor::~ResultCursor()",
			"::stappler::db::pq::ResultCursor::isBinaryFormat(size_t) const",
			"::stappler::db::pq::ResultCursor::isNull(size_t) const",
			"::stappler::db::pq::ResultCursor::toString(size_t) const",
			"::stappler::db::pq::ResultCursor::toBytes(size_t) const",
			"::stappler::db::pq::ResultCursor::toInteger(size_t) const",
			"::stappler::db::pq::ResultCursor::toDouble(size_t) const",
			"::stappler::db::pq::ResultCursor::toBool(size_t) const",
			"::stappler::db::pq::ResultCursor::toTypedData(size_t) const",
			"::stappler::db::pq::ResultCursor::toId() const",
			"::stappler::db::pq::ResultCursor::getFieldName(size_t) const",
			"::stappler::db::pq::ResultCursor::getInfo() const",
			"::stappler::db::pq::ResultCursor::clear()",
			"::stappler::db::pq::ResultCursor::getError() const",
			"::stappler::db::pq::ResultCursor::isSuccess() const",
			"::stappler::db::pq::ResultCursor::isEmpty() const",
			"::stappler::db::pq::ResultCursor::isEnded() const",
			"::stappler::db::pq::ResultCursor::getFieldsCount() const",
			"::stappler::db::pq::ResultCursor::getAffectedRows() const",
			"::stappler::db::pq::ResultCursor::getRowsHint() const",
			"::stappler::db::pq::ResultCursor::next()",
			"::stappler::db::pq::ResultCursor::reset()",
			"::stappler::db::pq::ResultCursor::driver",
			"::stappler::db::pq::ResultCursor::result",
			"::stappler::db::pq::ResultCursor::nrows",
			"::stappler::db::pq::ResultCursor::currentRow",
			"::stappler::db::pq::ResultCursor::err"
		],
		"STPqHandle.h":  [
			"STAPPLER_DB_PQ_STPGHANDLE_H_",
			"::stappler::db::pq::TransactionLevel",
			"::stappler::db::pq::Handle",
			"::stappler::db::pq::Handle::Handle(stappler::db::pq::Driver const*,Driver::Handle)",
			"::stappler::db::pq::Handle::Handle(stappler::db::pq::Handle const&)",
			"::stappler::db::pq::Handle::operator=(stappler::db::pq::Handle const&)",
			"::stappler::db::pq::Handle::Handle(stappler::db::pq::Handle&&)",
			"::stappler::db::pq::Handle::operator=(stappler::db::pq::Handle&&)",
			"::stappler::db::pq::Handle::operator bool() const",
			"::stappler::db::pq::Handle::getDriver() const",
			"::stappler::db::pq::Handle::getHandle() const",
			"::stappler::db::pq::Handle::getConnection() const",
			"::stappler::db::pq::Handle::isNotificationsSupported() const",
			"::stappler::db::pq::Handle::makeQuery(Callback<void (sql::SqlQuery &)> const&)",
			"::stappler::db::pq::Handle::selectQuery(db::sql::SqlQuery const&,Callback<bool (stappler::db::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::pq::Handle::performSimpleQuery(stappler::StringView const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::pq::Handle::performSimpleSelect(stappler::StringView const&,Callback<void (stappler::db::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::pq::Handle::isSuccess() const",
			"::stappler::db::pq::Handle::close()",
			"::stappler::db::pq::Handle::init(BackendInterface::Config const&,Map<stappler::StringView, const stappler::db::sql::SqlHandle::Scheme *> const&)",
			"::stappler::db::pq::Handle::beginTransaction()",
			"::stappler::db::pq::Handle::endTransaction()",
			"::stappler::db::pq::Handle::beginTransaction_pg(stappler::db::pq::TransactionLevel)",
			"::stappler::db::pq::Handle::cancelTransaction_pg()",
			"::stappler::db::pq::Handle::endTransaction_pg()",
			"::stappler::db::pq::Handle::ViewIdVec",
			"::stappler::db::pq::Handle::driver",
			"::stappler::db::pq::Handle::handle",
			"::stappler::db::pq::Handle::conn",
			"::stappler::db::pq::Handle::lastError",
			"::stappler::db::pq::Handle::lastErrorInfo",
			"::stappler::db::pq::Handle::level",
			"::stappler::db::pq::PgQueryInterface",
			"::stappler::db::pq::PgQueryInterface::Binder",
			"::stappler::db::pq::PgQueryInterface::push(stappler::mem_pool::String&&)",
			"::stappler::db::pq::PgQueryInterface::push(stappler::StringView const&)",
			"::stappler::db::pq::PgQueryInterface::push(stappler::mem_pool::Bytes&&)",
			"::stappler::db::pq::PgQueryInterface::push(stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&,bool,bool)",
			"::stappler::db::pq::PgQueryInterface::bindInt(db::Binder&,stappler::mem_pool::StringStream&,int64_t)",
			"::stappler::db::pq::PgQueryInterface::bindUInt(db::Binder&,stappler::mem_pool::StringStream&,uint64_t)",
			"::stappler::db::pq::PgQueryInterface::bindDouble(db::Binder&,stappler::mem_pool::StringStream&,double)",
			"::stappler::db::pq::PgQueryInterface::bindString(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::String const&)",
			"::stappler::db::pq::PgQueryInterface::bindMoveString(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::String&&)",
			"::stappler::db::pq::PgQueryInterface::bindStringView(db::Binder&,stappler::mem_pool::StringStream&,stappler::StringView const&)",
			"::stappler::db::pq::PgQueryInterface::bindBytes(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes const&)",
			"::stappler::db::pq::PgQueryInterface::bindMoveBytes(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes&&)",
			"::stappler::db::pq::PgQueryInterface::bindCoderSource(db::Binder&,stappler::mem_pool::StringStream&,stappler::CoderSource const&)",
			"::stappler::db::pq::PgQueryInterface::bindValue(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&)",
			"::stappler::db::pq::PgQueryInterface::bindDataField(db::Binder&,stappler::mem_pool::StringStream&,db::Binder::DataField const&)",
			"::stappler::db::pq::PgQueryInterface::bindTypeString(db::Binder&,stappler::mem_pool::StringStream&,db::Binder::TypeString const&)",
			"::stappler::db::pq::PgQueryInterface::bindFullText(db::Binder&,stappler::mem_pool::StringStream&,db::Binder::FullTextField const&)",
			"::stappler::db::pq::PgQueryInterface::bindFullTextRank(db::Binder&,stappler::mem_pool::StringStream&,db::Binder::FullTextRank const&)",
			"::stappler::db::pq::PgQueryInterface::bindFullTextData(db::Binder&,stappler::mem_pool::StringStream&,db::FullTextData const&)",
			"::stappler::db::pq::PgQueryInterface::bindIntVector(stappler::db::pq::PgQueryInterface::Binder&,stappler::mem_pool::StringStream&,Vector<int64_t> const&)",
			"::stappler::db::pq::PgQueryInterface::bindDoubleVector(stappler::db::pq::PgQueryInterface::Binder&,stappler::mem_pool::StringStream&,Vector<double> const&)",
			"::stappler::db::pq::PgQueryInterface::bindStringVector(stappler::db::pq::PgQueryInterface::Binder&,stappler::mem_pool::StringStream&,Vector<stappler::StringView> const&)",
			"::stappler::db::pq::PgQueryInterface::clear()",
			"::stappler::db::pq::PgQueryInterface::params",
			"::stappler::db::pq::PgQueryInterface::binary"
		],
		"STSqlDriver.h":  [
			"STAPPLER_DB_SQL_STSQLDRIVER_H_",
			"::stappler::db::sql::Driver",
			"::stappler::db::sql::Driver::Handle",
			"::stappler::db::sql::Driver::Result",
			"::stappler::db::sql::Driver::Connection",
			"::stappler::db::sql::Driver::open(stappler::mempool::base::pool_t*,stappler::StringView,void const*)",
			"::stappler::db::sql::Driver::~Driver()",
			"::stappler::db::sql::Driver::getDriverName() const",
			"::stappler::db::sql::Driver::init(stappler::db::sql::Driver::Handle,Vector<stappler::StringView> const&)",
			"::stappler::db::sql::Driver::performWithStorage(stappler::db::sql::Driver::Handle,Callback<void (const db::Adapter &)> const&) const",
			"::stappler::db::sql::Driver::acquireInterface(stappler::db::sql::Driver::Handle,stappler::mempool::base::pool_t*) const",
			"::stappler::db::sql::Driver::connect(Map<stappler::StringView, stappler::StringView> const&) const",
			"::stappler::db::sql::Driver::finish(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::sql::Driver::getConnection(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::sql::Driver::isValid(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::sql::Driver::isValid(stappler::db::sql::Driver::Connection) const",
			"::stappler::db::sql::Driver::isIdle(stappler::db::sql::Driver::Connection) const",
			"::stappler::db::sql::Driver::listenForNotifications(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::sql::Driver::consumeNotifications(stappler::db::sql::Driver::Handle,Callback<void (stappler::StringView)> const&) const",
			"::stappler::db::sql::Driver::isNotificationsSupported() const",
			"::stappler::db::sql::Driver::setDbCtrl(Function<void (bool)>&&)",
			"::stappler::db::sql::Driver::_driverPath",
			"::stappler::db::sql::Driver::_dbCtrl"
		],
		"STSqlHandle.h":  [
			"STAPPLER_DB_SQL_STSQLHANDLE_H_",
			"::stappler::db::sql::Result",
			"::stappler::db::sql::SqlHandle",
			"::stappler::db::sql::SqlHandle::Scheme",
			"::stappler::db::sql::SqlHandle::Worker",
			"::stappler::db::sql::SqlHandle::Field",
			"::stappler::db::sql::SqlHandle::Operator",
			"::stappler::db::sql::SqlHandle::Comparation",
			"::stappler::db::sql::SqlHandle::QueryList",
			"::stappler::db::sql::SqlHandle::getKeyValueSchemeName()",
			"::stappler::db::sql::SqlHandle::getNameForDelta(stappler::db::sql::SqlHandle::Scheme const&)",
			"::stappler::db::sql::SqlHandle::set(stappler::CoderSource const&,stappler::mem_pool::Value const&,stappler::TimeInterval)",
			"::stappler::db::sql::SqlHandle::get(stappler::CoderSource const&)",
			"::stappler::db::sql::SqlHandle::clear(stappler::CoderSource const&)",
			"::stappler::db::sql::SqlHandle::authorizeUser(db::Auth const&,stappler::StringView const&,stappler::StringView const&)",
			"::stappler::db::sql::SqlHandle::isNotificationsSupported() const",
			"::stappler::db::sql::SqlHandle::makeSessionsCleanup()",
			"::stappler::db::sql::SqlHandle::finalizeBroadcast()",
			"::stappler::db::sql::SqlHandle::processBroadcasts(Callback<void (stappler::BytesView)> const&,int64_t)",
			"::stappler::db::sql::SqlHandle::broadcast(stappler::mem_pool::Bytes const&)",
			"::stappler::db::sql::SqlHandle::getDeltaValue(stappler::db::sql::SqlHandle::Scheme const&)",
			"::stappler::db::sql::SqlHandle::getDeltaValue(stappler::db::sql::SqlHandle::Scheme const&,db::FieldView const&,uint64_t)",
			"::stappler::db::sql::SqlHandle::getHistory(stappler::db::sql::SqlHandle::Scheme const&,stappler::Time const&,bool)",
			"::stappler::db::sql::SqlHandle::getHistory(db::FieldView const&,stappler::db::sql::SqlHandle::Scheme const*,uint64_t,stappler::Time const&,bool)",
			"::stappler::db::sql::SqlHandle::getDeltaData(stappler::db::sql::SqlHandle::Scheme const&,stappler::Time const&)",
			"::stappler::db::sql::SqlHandle::getDeltaData(stappler::db::sql::SqlHandle::Scheme const&,db::FieldView const&,stappler::Time const&,uint64_t)",
			"::stappler::db::sql::SqlHandle::makeQuery(stappler::Callback<void (SqlQuery &)> const&)",
			"::stappler::db::sql::SqlHandle::selectQuery(stappler::db::sql::SqlQuery const&,Callback<bool (stappler::db::sql::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::sql::SqlHandle::performSimpleQuery(stappler::StringView const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::sql::SqlHandle::performSimpleSelect(stappler::StringView const&,Callback<void (stappler::db::sql::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::sql::SqlHandle::isSuccess() const",
			"::stappler::db::sql::SqlHandle::foreach(stappler::db::sql::SqlHandle::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&)",
			"::stappler::db::sql::SqlHandle::select(stappler::db::sql::SqlHandle::Worker&,db::Query const&)",
			"::stappler::db::sql::SqlHandle::create(stappler::db::sql::SqlHandle::Worker&,stappler::mem_pool::Value&)",
			"::stappler::db::sql::SqlHandle::save(stappler::db::sql::SqlHandle::Worker&,uint64_t,stappler::mem_pool::Value const&,Vector<stappler::mem_pool::String> const&)",
			"::stappler::db::sql::SqlHandle::patch(stappler::db::sql::SqlHandle::Worker&,uint64_t,stappler::mem_pool::Value const&)",
			"::stappler::db::sql::SqlHandle::remove(stappler::db::sql::SqlHandle::Worker&,uint64_t)",
			"::stappler::db::sql::SqlHandle::count(stappler::db::sql::SqlHandle::Worker&,db::Query const&)",
			"::stappler::db::sql::SqlHandle::field(db::Action,stappler::db::sql::SqlHandle::Worker&,uint64_t,stappler::db::sql::SqlHandle::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::sql::SqlHandle::field(db::Action,stappler::db::sql::SqlHandle::Worker&,stappler::mem_pool::Value const&,stappler::db::sql::SqlHandle::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::sql::SqlHandle::performQueryListForIds(stappler::db::sql::SqlHandle::QueryList const&,size_t)",
			"::stappler::db::sql::SqlHandle::performQueryList(stappler::db::sql::SqlHandle::QueryList const&,size_t,bool)",
			"::stappler::db::sql::SqlHandle::removeFromView(db::FieldView const&,stappler::db::sql::SqlHandle::Scheme const*,uint64_t)",
			"::stappler::db::sql::SqlHandle::addToView(db::FieldView const&,stappler::db::sql::SqlHandle::Scheme const*,uint64_t,stappler::mem_pool::Value const&)",
			"::stappler::db::sql::SqlHandle::getReferenceParents(stappler::db::sql::SqlHandle::Scheme const&,uint64_t,stappler::db::sql::SqlHandle::Scheme const*,stappler::db::sql::SqlHandle::Field const*)",
			"::stappler::db::sql::SqlHandle::selectQueryId(stappler::db::sql::SqlQuery const&)",
			"::stappler::db::sql::SqlHandle::performQuery(stappler::db::sql::SqlQuery const&)",
			"::stappler::db::sql::SqlHandle::selectValueQuery(stappler::db::sql::SqlHandle::Scheme const&,stappler::db::sql::SqlQuery const&,Vector<const stappler::db::sql::SqlHandle::Field *> const&)",
			"::stappler::db::sql::SqlHandle::selectValueQuery(stappler::db::sql::SqlHandle::Field const&,stappler::db::sql::SqlQuery const&,Vector<const stappler::db::sql::SqlHandle::Field *> const&)",
			"::stappler::db::sql::SqlHandle::selectValueQuery(stappler::mem_pool::Value&,stappler::db::FieldView const&,stappler::db::sql::SqlQuery const&)",
			"::stappler::db::sql::SqlHandle::getFileField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,uint64_t,stappler::db::sql::SqlHandle::Field const&)",
			"::stappler::db::sql::SqlHandle::getFileCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,uint64_t,stappler::db::sql::SqlHandle::Field const&)",
			"::stappler::db::sql::SqlHandle::getArrayField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&)",
			"::stappler::db::sql::SqlHandle::getArrayCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&)",
			"::stappler::db::sql::SqlHandle::getObjectField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,uint64_t,stappler::db::sql::SqlHandle::Field const&)",
			"::stappler::db::sql::SqlHandle::getObjectCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,uint64_t,stappler::db::sql::SqlHandle::Field const&)",
			"::stappler::db::sql::SqlHandle::getSetField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&,db::Query const&)",
			"::stappler::db::sql::SqlHandle::getSetCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&,db::Query const&)",
			"::stappler::db::sql::SqlHandle::getViewField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&,db::Query const&)",
			"::stappler::db::sql::SqlHandle::getViewCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&,db::Query const&)",
			"::stappler::db::sql::SqlHandle::getSimpleField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&)",
			"::stappler::db::sql::SqlHandle::getSimpleCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&)",
			"::stappler::db::sql::SqlHandle::insertIntoSet(stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,int64_t,db::FieldObject const&,stappler::db::sql::SqlHandle::Field const&,stappler::mem_pool::Value const&)",
			"::stappler::db::sql::SqlHandle::insertIntoArray(stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,int64_t,stappler::db::sql::SqlHandle::Field const&,stappler::mem_pool::Value&)",
			"::stappler::db::sql::SqlHandle::insertIntoRefSet(stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,int64_t,stappler::db::sql::SqlHandle::Field const&,Vector<int64_t> const&)",
			"::stappler::db::sql::SqlHandle::cleanupRefSet(stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,uint64_t,stappler::db::sql::SqlHandle::Field const&,Vector<int64_t> const&)",
			"::stappler::db::sql::SqlHandle::performPostUpdate(db::Transaction const&,stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,stappler::mem_pool::Value&,int64_t,stappler::mem_pool::Value const&,bool)",
			"::stappler::db::sql::SqlHandle::_bcasts"
		],
		"STSqlQuery.h":  [
			"STAPPLER_DB_SQL_STSQLQUERY_H_",
			"::stappler::db::sql::SqlQuery",
			"::stappler::db::sql::SqlQuery::Context",
			"::stappler::db::sql::SqlQuery::Context::Context(stappler::db::sql::SqlQuery&,stappler::db::Scheme const&,stappler::db::Worker const&,db::Query const&)",
			"::stappler::db::sql::SqlQuery::Context::_this",
			"::stappler::db::sql::SqlQuery::Context::hasAltLimit",
			"::stappler::db::sql::SqlQuery::Context::softLimitIsFts",
			"::stappler::db::sql::SqlQuery::Context::softLimitField",
			"::stappler::db::sql::SqlQuery::Context::getAlt(stappler::StringView)",
			"::stappler::db::sql::SqlQuery::TypeString",
			"::stappler::db::sql::SqlQuery::SqlQuery(db::QueryInterface*)",
			"::stappler::db::sql::SqlQuery::clear()",
			"::stappler::db::sql::SqlQuery::writeQuery(stappler::db::sql::SqlQuery::Context&)",
			"::stappler::db::sql::SqlQuery::writeQuery(stappler::db::sql::SqlQuery::Context&,db::Scheme const&,uint64_t,db::Field const&)",
			"::stappler::db::sql::SqlQuery::writeWhere(SqlQuery::SelectWhere&,db::Operator,db::Scheme const&,db::Query const&)",
			"::stappler::db::sql::SqlQuery::writeWhere(SqlQuery::WhereContinue&,db::Operator,db::Scheme const&,db::Query const&)",
			"::stappler::db::sql::SqlQuery::writeWhere(SqlQuery::WhereContinue&,db::Operator,db::Scheme const&,db::Query::Select const&)",
			"::stappler::db::sql::SqlQuery::writeWhere(SqlQuery::WhereContinue&,db::Operator,db::Scheme const&,db::Worker::ConditionData const&)",
			"::stappler::db::sql::SqlQuery::writeOrdering(SqlQuery::SelectFrom&,db::Scheme const&,db::Query const&,bool)",
			"::stappler::db::sql::SqlQuery::writeSelectFrom(stappler::sql::Query<stappler::db::Binder, stappler::memory::PoolInterface>::GenericQuery&,db::QueryList::Item const&,bool,stappler::StringView const&,stappler::StringView const&,bool)",
			"::stappler::db::sql::SqlQuery::writeSelectFrom(stappler::sql::Query<stappler::db::Binder, stappler::memory::PoolInterface>::Select&,stappler::db::sql::SqlQuery::Context&)",
			"::stappler::db::sql::SqlQuery::writeQueryReqest(SqlQuery::SelectFrom&,db::QueryList::Item const&)",
			"::stappler::db::sql::SqlQuery::writeQueryListItem(stappler::sql::Query<stappler::db::Binder, stappler::memory::PoolInterface>::GenericQuery&,db::QueryList const&,size_t,bool,db::Field const*,bool)",
			"::stappler::db::sql::SqlQuery::writeQueryList(db::QueryList const&,bool,size_t)",
			"::stappler::db::sql::SqlQuery::writeQueryFile(db::QueryList const&,db::Field const*)",
			"::stappler::db::sql::SqlQuery::writeQueryArray(db::QueryList const&,db::Field const*)",
			"::stappler::db::sql::SqlQuery::writeQueryDelta(db::Scheme const&,stappler::Time const&,Set<const db::Field *> const&,bool)",
			"::stappler::db::sql::SqlQuery::writeQueryViewDelta(db::QueryList const&,stappler::Time const&,Set<const db::Field *> const&,bool)",
			"::stappler::db::sql::SqlQuery::getQuery() const",
			"::stappler::db::sql::SqlQuery::getInterface() const",
			"::stappler::db::sql::SqlQuery::writeFullTextRank(stappler::sql::Query<stappler::db::Binder, stappler::memory::PoolInterface>::Select&,db::Scheme const&,db::Query const&)",
			"::stappler::db::sql::SqlQuery::getFullTextQuery(db::Scheme const&,db::Field const&,db::Query::Select const&)",
			"::stappler::db::sql::SqlQuery::_fulltextQueries"
		],
		"STSqliteDriver.h":  [
			"STAPPLER_DB_SQLITE_STSQLITEDRIVER_H_",
			"::stappler::db::sqlite::Driver",
			"::stappler::db::sqlite::Driver::open(stappler::StringView)",
			"::stappler::db::sqlite::Driver::~Driver()",
			"::stappler::db::sqlite::Driver::init(stappler::db::sql::Driver::Handle,Vector<stappler::StringView> const&)",
			"::stappler::db::sqlite::Driver::performWithStorage(stappler::db::sql::Driver::Handle,Callback<void (const db::Adapter &)> const&) const",
			"::stappler::db::sqlite::Driver::acquireInterface(stappler::db::sql::Driver::Handle,stappler::mempool::base::pool_t*) const",
			"::stappler::db::sqlite::Driver::connect(Map<stappler::StringView, stappler::StringView> const&) const",
			"::stappler::db::sqlite::Driver::finish(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::sqlite::Driver::getConnection(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::sqlite::Driver::isValid(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::sqlite::Driver::isValid(stappler::db::sql::Driver::Connection) const",
			"::stappler::db::sqlite::Driver::isIdle(stappler::db::sql::Driver::Connection) const",
			"::stappler::db::sqlite::Driver::isNotificationsSupported() const",
			"::stappler::db::sqlite::Driver::getDbName(stappler::db::sql::Driver::Handle) const",
			"::stappler::db::sqlite::Driver::getInfo(stappler::db::sql::Driver::Connection,int) const",
			"::stappler::db::sqlite::Driver::setUserId(stappler::db::sql::Driver::Handle,int64_t) const",
			"::stappler::db::sqlite::Driver::Driver(stappler::StringView)",
			"::stappler::db::sqlite::Driver::_init",
			"::stappler::db::sqlite::ResultCursor",
			"::stappler::db::sqlite::ResultCursor::statusIsSuccess(int)",
			"::stappler::db::sqlite::ResultCursor::ResultCursor(stappler::db::sqlite::Driver const*,Driver::Connection,Driver::Result,int)",
			"::stappler::db::sqlite::ResultCursor::~ResultCursor()",
			"::stappler::db::sqlite::ResultCursor::isBinaryFormat(size_t) const",
			"::stappler::db::sqlite::ResultCursor::getType(size_t) const",
			"::stappler::db::sqlite::ResultCursor::isNull(size_t) const",
			"::stappler::db::sqlite::ResultCursor::toString(size_t) const",
			"::stappler::db::sqlite::ResultCursor::toBytes(size_t) const",
			"::stappler::db::sqlite::ResultCursor::toInteger(size_t) const",
			"::stappler::db::sqlite::ResultCursor::toDouble(size_t) const",
			"::stappler::db::sqlite::ResultCursor::toBool(size_t) const",
			"::stappler::db::sqlite::ResultCursor::toTypedData(size_t) const",
			"::stappler::db::sqlite::ResultCursor::toId() const",
			"::stappler::db::sqlite::ResultCursor::getFieldName(size_t) const",
			"::stappler::db::sqlite::ResultCursor::isSuccess() const",
			"::stappler::db::sqlite::ResultCursor::isEmpty() const",
			"::stappler::db::sqlite::ResultCursor::isEnded() const",
			"::stappler::db::sqlite::ResultCursor::getFieldsCount() const",
			"::stappler::db::sqlite::ResultCursor::getAffectedRows() const",
			"::stappler::db::sqlite::ResultCursor::getRowsHint() const",
			"::stappler::db::sqlite::ResultCursor::getInfo() const",
			"::stappler::db::sqlite::ResultCursor::next()",
			"::stappler::db::sqlite::ResultCursor::reset()",
			"::stappler::db::sqlite::ResultCursor::clear()",
			"::stappler::db::sqlite::ResultCursor::getError() const",
			"::stappler::db::sqlite::ResultCursor::driver",
			"::stappler::db::sqlite::ResultCursor::conn",
			"::stappler::db::sqlite::ResultCursor::result",
			"::stappler::db::sqlite::ResultCursor::err"
		],
		"STSqliteHandle.h":  [
			"STAPPLER_DB_SQLITE_STSQLITEHANDLE_H_",
			"::stappler::db::sqlite::TransactionLevel",
			"::stappler::db::sqlite::Handle",
			"::stappler::db::sqlite::Handle::Handle(stappler::db::sqlite::Driver const*,Driver::Handle)",
			"::stappler::db::sqlite::Handle::Handle(stappler::db::sqlite::Handle const&)",
			"::stappler::db::sqlite::Handle::operator=(stappler::db::sqlite::Handle const&)",
			"::stappler::db::sqlite::Handle::Handle(stappler::db::sqlite::Handle&&)",
			"::stappler::db::sqlite::Handle::operator=(stappler::db::sqlite::Handle&&)",
			"::stappler::db::sqlite::Handle::operator bool() const",
			"::stappler::db::sqlite::Handle::getDriver() const",
			"::stappler::db::sqlite::Handle::getHandle() const",
			"::stappler::db::sqlite::Handle::getConnection() const",
			"::stappler::db::sqlite::Handle::makeQuery(Callback<void (sql::SqlQuery &)> const&)",
			"::stappler::db::sqlite::Handle::selectQuery(db::sql::SqlQuery const&,Callback<bool (sql::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::sqlite::Handle::performSimpleQuery(stappler::StringView const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::sqlite::Handle::performSimpleSelect(stappler::StringView const&,Callback<void (sql::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)",
			"::stappler::db::sqlite::Handle::isSuccess() const",
			"::stappler::db::sqlite::Handle::close()",
			"::stappler::db::sqlite::Handle::init(BackendInterface::Config const&,Map<stappler::StringView, const stappler::db::sql::SqlHandle::Scheme *> const&)",
			"::stappler::db::sqlite::Handle::beginTransaction()",
			"::stappler::db::sqlite::Handle::endTransaction()",
			"::stappler::db::sqlite::Handle::ViewIdVec",
			"::stappler::db::sqlite::Handle::driver",
			"::stappler::db::sqlite::Handle::handle",
			"::stappler::db::sqlite::Handle::conn",
			"::stappler::db::sqlite::Handle::lastError",
			"::stappler::db::sqlite::Handle::level",
			"::stappler::db::sqlite::Handle::_profile"
		],
		"STStorage.h":  [
			"STAPPLER_DB_STSTORAGE_H_",
			"::stappler::db::internals::RequestData",
			"::stappler::db::internals::RequestData::exists",
			"::stappler::db::internals::RequestData::address",
			"::stappler::db::internals::RequestData::hostname",
			"::stappler::db::internals::RequestData::uri",
			"::stappler::db::internals::RequestData::operator bool()",
			"::stappler::db::internals::getAdapterFromContext()",
			"::stappler::db::internals::scheduleAyncDbTask(Callback<Function<void (const stappler::db::Transaction &)> (memory::pool_t *)> const&)",
			"::stappler::db::internals::isAdministrative()",
			"::stappler::db::internals::getDocuemntRoot()",
			"::stappler::db::internals::getFileScheme()",
			"::stappler::db::internals::getUserScheme()",
			"::stappler::db::internals::getFileFromContext(int64_t)",
			"::stappler::db::internals::getRequestData()",
			"::stappler::db::internals::getUserIdFromContext()",
			"::stappler::db::messages::isDebugEnabled()",
			"::stappler::db::messages::setDebugEnabled(bool)",
			"::stappler::db::messages::_addErrorMessage(stappler::mem_pool::Value&&)",
			"::stappler::db::messages::_addDebugMessage(stappler::mem_pool::Value&&)",
			"::stappler::db::messages::broadcast(stappler::mem_pool::Value const&)",
			"::stappler::db::messages::broadcast(stappler::mem_pool::Bytes const&)",
			"::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&)",
			"::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
			"::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&)",
			"::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
			"::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&)",
			"::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
			"::stappler::db::messages::error<typename>(Args &&...)",
			"::stappler::db::messages::debug<typename>(Args &&...)",
			"::stappler::db::messages::local<typename>(Args &&...)",
			"::stappler::db::StorageRoot",
			"::stappler::db::StorageRoot::~StorageRoot()",
			"::stappler::db::StorageRoot::isDebugEnabled() const",
			"::stappler::db::StorageRoot::setDebugEnabled(bool)",
			"::stappler::db::StorageRoot::addErrorMessage(stappler::mem_pool::Value&&) const",
			"::stappler::db::StorageRoot::addDebugMessage(stappler::mem_pool::Value&&) const",
			"::stappler::db::StorageRoot::broadcast(stappler::mem_pool::Value const&)",
			"::stappler::db::StorageRoot::broadcast(stappler::mem_pool::Bytes const&)",
			"::stappler::db::StorageRoot::acquireTransaction(stappler::db::Adapter const&)",
			"::stappler::db::StorageRoot::getAdapterFromContext()",
			"::stappler::db::StorageRoot::scheduleAyncDbTask(Callback<Function<void (const stappler::db::Transaction &)> (stappler::mempool::base::pool_t *)> const&)",
			"::stappler::db::StorageRoot::isAdministrative() const",
			"::stappler::db::StorageRoot::getDocuemntRoot() const",
			"::stappler::db::StorageRoot::getFileScheme() const",
			"::stappler::db::StorageRoot::getUserScheme() const",
			"::stappler::db::StorageRoot::getFileFromContext(int64_t) const",
			"::stappler::db::StorageRoot::getRequestData() const",
			"::stappler::db::StorageRoot::getUserIdFromContext() const",
			"::stappler::db::StorageRoot::onLocalBroadcast(stappler::mem_pool::Value const&)",
			"::stappler::db::StorageRoot::onStorageTransaction(stappler::db::Transaction&)",
			"::stappler::db::StorageRoot::_debugMutex",
			"::stappler::db::StorageRoot::_debug",
			"::stappler::db::InputConfig",
			"::stappler::db::InputConfig::Require",
			"::stappler::db::InputConfig::InputConfig()",
			"::stappler::db::InputConfig::InputConfig(stappler::db::InputConfig const&)",
			"::stappler::db::InputConfig::operator=(stappler::db::InputConfig const&)",
			"::stappler::db::InputConfig::InputConfig(stappler::db::InputConfig&&)",
			"::stappler::db::InputConfig::operator=(stappler::db::InputConfig&&)",
			"::stappler::db::InputConfig::updateLimits(Map<stappler::mem_pool::String, stappler::db::Field> const&)",
			"::stappler::db::InputConfig::required",
			"::stappler::db::InputConfig::maxRequestSize",
			"::stappler::db::InputConfig::maxVarSize",
			"::stappler::db::InputConfig::maxFileSize",
			"::stappler::db::InputConfig::updateTime",
			"::stappler::db::InputConfig::updateFrequency",
			"::stappler::db::operator|(InputConfig::Require const&,InputConfig::Require const&)",
			"::stappler::db::operator&(InputConfig::Require const&,InputConfig::Require const&)",
			"::stappler::db::operator^(InputConfig::Require const&,InputConfig::Require const&)",
			"::stappler::db::operator|=(InputConfig::Require&,InputConfig::Require const&)",
			"::stappler::db::operator&=(InputConfig::Require&,InputConfig::Require const&)",
			"::stappler::db::operator^=(InputConfig::Require&,InputConfig::Require const&)",
			"::stappler::db::operator==(InputConfig::Require const&,std::underlying_type<InputConfig::Require>::type const&)",
			"::stappler::db::operator==(std::underlying_type<InputConfig::Require>::type const&,InputConfig::Require const&)",
			"::stappler::db::operator!=(InputConfig::Require const&,std::underlying_type<InputConfig::Require>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<InputConfig::Require>::type const&,InputConfig::Require const&)",
			"::stappler::db::operator~(InputConfig::Require const&)"
		],
		"STStorageAdapter.h":  [
			"STAPPLER_DB_STSTORAGEADAPTER_H_",
			"::stappler::db::Adapter",
			"::stappler::db::Adapter::FromContext()",
			"::stappler::db::Adapter::Adapter(stappler::db::BackendInterface*)",
			"::stappler::db::Adapter::Adapter(stappler::db::Adapter const&)",
			"::stappler::db::Adapter::operator=(stappler::db::Adapter const&)",
			"::stappler::db::Adapter::operator bool() const",
			"::stappler::db::Adapter::operator==(stappler::db::Adapter const&) const",
			"::stappler::db::Adapter::interface() const",
			"::stappler::db::Adapter::getTransactionKey() const",
			"::stappler::db::Adapter::set(stappler::CoderSource const&,stappler::mem_pool::Value const&,stappler::TimeInterval) const",
			"::stappler::db::Adapter::get(stappler::CoderSource const&) const",
			"::stappler::db::Adapter::clear(stappler::CoderSource const&) const",
			"::stappler::db::Adapter::init(BackendInterface::Config const&,Map<stappler::StringView, const stappler::db::Scheme *> const&) const",
			"::stappler::db::Adapter::makeSessionsCleanup() const",
			"::stappler::db::Adapter::authorizeUser(stappler::db::Auth const&,stappler::StringView const&,stappler::StringView const&) const",
			"::stappler::db::Adapter::broadcast(stappler::mem_pool::Bytes const&) const",
			"::stappler::db::Adapter::broadcast(stappler::mem_pool::Value const&) const",
			"::stappler::db::Adapter::broadcast(stappler::StringView,stappler::mem_pool::Value&&,bool) const",
			"::stappler::db::Adapter::performWithTransaction(Callback<bool (const db::Transaction &)> const&) const",
			"::stappler::db::Adapter::getReferenceParents(stappler::db::Scheme const&,uint64_t,stappler::db::Scheme const*,stappler::db::Field const*) const",
			"::stappler::db::Adapter::getDatabaseName() const",
			"::stappler::db::Adapter::getDeltaValue(stappler::db::Scheme const&)",
			"::stappler::db::Adapter::getDeltaValue(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t)",
			"::stappler::db::Adapter::performQueryListForIds(stappler::db::QueryList const&,size_t) const",
			"::stappler::db::Adapter::performQueryList(stappler::db::QueryList const&,size_t,bool) const",
			"::stappler::db::Adapter::foreach(stappler::db::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&) const",
			"::stappler::db::Adapter::select(stappler::db::Worker&,stappler::db::Query const&) const",
			"::stappler::db::Adapter::create(stappler::db::Worker&,stappler::mem_pool::Value&) const",
			"::stappler::db::Adapter::save(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&,Vector<stappler::mem_pool::String> const&) const",
			"::stappler::db::Adapter::patch(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&) const",
			"::stappler::db::Adapter::remove(stappler::db::Worker&,uint64_t) const",
			"::stappler::db::Adapter::count(stappler::db::Worker&,stappler::db::Query const&) const",
			"::stappler::db::Adapter::scheduleAutoField(stappler::db::Scheme const&,stappler::db::Field const&,uint64_t)",
			"::stappler::db::Adapter::field(stappler::db::Action,stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&) const",
			"::stappler::db::Adapter::field(stappler::db::Action,stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&) const",
			"::stappler::db::Adapter::addToView(stappler::db::FieldView const&,stappler::db::Scheme const*,uint64_t,stappler::mem_pool::Value const&) const",
			"::stappler::db::Adapter::removeFromView(stappler::db::FieldView const&,stappler::db::Scheme const*,uint64_t) const",
			"::stappler::db::Adapter::beginTransaction() const",
			"::stappler::db::Adapter::endTransaction() const",
			"::stappler::db::Adapter::cancelTransaction() const",
			"::stappler::db::Adapter::isInTransaction() const",
			"::stappler::db::Adapter::getTransactionStatus() const",
			"::stappler::db::Adapter::runAutoFields(stappler::db::Transaction const&,Vector<uint64_t> const&,stappler::db::Scheme const&,stappler::db::Field const&)",
			"::stappler::db::Adapter::_interface"
		],
		"STStorageAuth.h":  [
			"STAPPLER_DB_STSTORAGEAUTH_H_",
			"::stappler::db::Auth",
			"::stappler::db::Auth::NameFieldCallback",
			"::stappler::db::Auth::Auth(stappler::db::Scheme const&)",
			"::stappler::db::Auth::Auth(stappler::db::Scheme const&,stappler::StringView const&,stappler::StringView const&)",
			"::stappler::db::Auth::Auth(stappler::db::Scheme const&,stappler::db::Field const*,stappler::db::Field const*)",
			"::stappler::db::Auth::Auth(stappler::db::Scheme const&,stappler::db::Auth::NameFieldCallback const&,stappler::db::Field const*)",
			"::stappler::db::Auth::Auth(stappler::db::Scheme const&,stappler::db::Auth::NameFieldCallback const&,stappler::StringView const&)",
			"::stappler::db::Auth::getScheme() const",
			"::stappler::db::Auth::getNameField(stappler::StringView const&) const",
			"::stappler::db::Auth::getPasswordField() const",
			"::stappler::db::Auth::authorizeWithPassword(stappler::StringView const&,stappler::mem_pool::Bytes const&,size_t) const",
			"::stappler::db::Auth::detectPasswordField(stappler::db::Scheme const&)",
			"::stappler::db::Auth::_password",
			"::stappler::db::Auth::_name",
			"::stappler::db::Auth::_nameFieldCallback",
			"::stappler::db::Auth::_scheme"
		],
		"STStorageBackendInterface.h":  [
			"STAPPLER_DB_STSTORAGEINTERFACE_H_",
			"::stappler::db::DeltaAction",
			"::stappler::db::BackendInterface",
			"::stappler::db::BackendInterface::StorageType",
			"::stappler::db::BackendInterface::Config",
			"::stappler::db::BackendInterface::Config::name",
			"::stappler::db::BackendInterface::Config::fileScheme",
			"::stappler::db::BackendInterface::~BackendInterface()",
			"::stappler::db::BackendInterface::set(stappler::CoderSource const&,stappler::mem_pool::Value const&,stappler::TimeInterval)",
			"::stappler::db::BackendInterface::get(stappler::CoderSource const&)",
			"::stappler::db::BackendInterface::clear(stappler::CoderSource const&)",
			"::stappler::db::BackendInterface::performQueryListForIds(stappler::db::QueryList const&,size_t)",
			"::stappler::db::BackendInterface::performQueryList(stappler::db::QueryList const&,size_t,bool)",
			"::stappler::db::BackendInterface::init(stappler::db::BackendInterface::Config const&,Map<stappler::StringView, const stappler::db::Scheme *> const&)",
			"::stappler::db::BackendInterface::makeSessionsCleanup()",
			"::stappler::db::BackendInterface::processBroadcasts(Callback<void (stappler::BytesView)> const&,int64_t)",
			"::stappler::db::BackendInterface::foreach(stappler::db::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&)",
			"::stappler::db::BackendInterface::select(stappler::db::Worker&,stappler::db::Query const&)",
			"::stappler::db::BackendInterface::create(stappler::db::Worker&,stappler::mem_pool::Value&)",
			"::stappler::db::BackendInterface::save(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&,Vector<stappler::mem_pool::String> const&)",
			"::stappler::db::BackendInterface::patch(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&)",
			"::stappler::db::BackendInterface::remove(stappler::db::Worker&,uint64_t)",
			"::stappler::db::BackendInterface::count(stappler::db::Worker&,stappler::db::Query const&)",
			"::stappler::db::BackendInterface::field(stappler::db::Action,stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::BackendInterface::field(stappler::db::Action,stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::BackendInterface::addToView(stappler::db::FieldView const&,stappler::db::Scheme const*,uint64_t,stappler::mem_pool::Value const&)",
			"::stappler::db::BackendInterface::removeFromView(stappler::db::FieldView const&,stappler::db::Scheme const*,uint64_t)",
			"::stappler::db::BackendInterface::getReferenceParents(stappler::db::Scheme const&,uint64_t,stappler::db::Scheme const*,stappler::db::Field const*)",
			"::stappler::db::BackendInterface::beginTransaction()",
			"::stappler::db::BackendInterface::endTransaction()",
			"::stappler::db::BackendInterface::authorizeUser(stappler::db::Auth const&,stappler::StringView const&,stappler::StringView const&)",
			"::stappler::db::BackendInterface::broadcast(stappler::mem_pool::Bytes const&)",
			"::stappler::db::BackendInterface::getDeltaValue(stappler::db::Scheme const&)",
			"::stappler::db::BackendInterface::getDeltaValue(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t)",
			"::stappler::db::BackendInterface::cancelTransaction()",
			"::stappler::db::BackendInterface::isInTransaction() const",
			"::stappler::db::BackendInterface::getTransactionStatus() const",
			"::stappler::db::BackendInterface::getDatabaseName() const",
			"::stappler::db::BackendInterface::getTransactionKey() const",
			"::stappler::db::BackendInterface::dbName",
			"::stappler::db::BackendInterface::transactionStatus",
			"::stappler::db::Binder",
			"::stappler::db::Binder::DataField",
			"::stappler::db::Binder::DataField::field",
			"::stappler::db::Binder::DataField::data",
			"::stappler::db::Binder::DataField::force",
			"::stappler::db::Binder::DataField::compress",
			"::stappler::db::Binder::FullTextField",
			"::stappler::db::Binder::FullTextField::data",
			"::stappler::db::Binder::FullTextRank",
			"::stappler::db::Binder::FullTextRank::scheme",
			"::stappler::db::Binder::FullTextRank::field",
			"::stappler::db::Binder::FullTextRank::query",
			"::stappler::db::Binder::TypeString",
			"::stappler::db::Binder::TypeString::str",
			"::stappler::db::Binder::TypeString::type",
			"::stappler::db::Binder::TypeString::TypeString<typename,typename>(Str&&,Type&&)",
			"::stappler::db::Binder::setInterface(stappler::db::QueryInterface*)",
			"::stappler::db::Binder::getInterface() const",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,int64_t)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,uint64_t)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,double)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::Time)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::TimeInterval)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::String const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::String&&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::StringView const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes&&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::CoderSource const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::Binder::DataField const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::Binder::TypeString const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::Binder::FullTextField const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::Binder::FullTextRank const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::FullTextData const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::sql::PatternComparator<const Value &> const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::sql::PatternComparator<const StringView &> const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,Vector<int64_t> const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,Vector<double> const&)",
			"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,Vector<stappler::StringView> const&)",
			"::stappler::db::Binder::clear()",
			"::stappler::db::Binder::_iface",
			"::stappler::db::QueryInterface",
			"::stappler::db::QueryInterface::~QueryInterface()",
			"::stappler::db::QueryInterface::bindInt(stappler::db::Binder&,stappler::mem_pool::StringStream&,int64_t)",
			"::stappler::db::QueryInterface::bindUInt(stappler::db::Binder&,stappler::mem_pool::StringStream&,uint64_t)",
			"::stappler::db::QueryInterface::bindDouble(stappler::db::Binder&,stappler::mem_pool::StringStream&,double)",
			"::stappler::db::QueryInterface::bindString(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::String const&)",
			"::stappler::db::QueryInterface::bindMoveString(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::String&&)",
			"::stappler::db::QueryInterface::bindStringView(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::StringView const&)",
			"::stappler::db::QueryInterface::bindBytes(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes const&)",
			"::stappler::db::QueryInterface::bindMoveBytes(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes&&)",
			"::stappler::db::QueryInterface::bindCoderSource(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::CoderSource const&)",
			"::stappler::db::QueryInterface::bindValue(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&)",
			"::stappler::db::QueryInterface::bindDataField(stappler::db::Binder&,stappler::mem_pool::StringStream&,Binder::DataField const&)",
			"::stappler::db::QueryInterface::bindTypeString(stappler::db::Binder&,stappler::mem_pool::StringStream&,Binder::TypeString const&)",
			"::stappler::db::QueryInterface::bindFullText(stappler::db::Binder&,stappler::mem_pool::StringStream&,Binder::FullTextField const&)",
			"::stappler::db::QueryInterface::bindFullTextRank(stappler::db::Binder&,stappler::mem_pool::StringStream&,Binder::FullTextRank const&)",
			"::stappler::db::QueryInterface::bindFullTextData(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::db::FullTextData const&)",
			"::stappler::db::QueryInterface::bindIntVector(stappler::db::Binder&,stappler::mem_pool::StringStream&,Vector<int64_t> const&)",
			"::stappler::db::QueryInterface::bindDoubleVector(stappler::db::Binder&,stappler::mem_pool::StringStream&,Vector<double> const&)",
			"::stappler::db::QueryInterface::bindStringVector(stappler::db::Binder&,stappler::mem_pool::StringStream&,Vector<stappler::StringView> const&)",
			"::stappler::db::QueryInterface::clear()",
			"::stappler::db::ResultCursor",
			"::stappler::db::ResultCursor::~ResultCursor()",
			"::stappler::db::ResultCursor::isBinaryFormat(size_t) const",
			"::stappler::db::ResultCursor::isNull(size_t) const",
			"::stappler::db::ResultCursor::toString(size_t) const",
			"::stappler::db::ResultCursor::toBytes(size_t) const",
			"::stappler::db::ResultCursor::toInteger(size_t) const",
			"::stappler::db::ResultCursor::toDouble(size_t) const",
			"::stappler::db::ResultCursor::toBool(size_t) const",
			"::stappler::db::ResultCursor::toTypedData(size_t) const",
			"::stappler::db::ResultCursor::toId() const",
			"::stappler::db::ResultCursor::getFieldName(size_t) const",
			"::stappler::db::ResultCursor::isSuccess() const",
			"::stappler::db::ResultCursor::isEmpty() const",
			"::stappler::db::ResultCursor::isEnded() const",
			"::stappler::db::ResultCursor::getFieldsCount() const",
			"::stappler::db::ResultCursor::getAffectedRows() const",
			"::stappler::db::ResultCursor::getRowsHint() const",
			"::stappler::db::ResultCursor::getInfo() const",
			"::stappler::db::ResultCursor::next()",
			"::stappler::db::ResultCursor::reset()",
			"::stappler::db::ResultCursor::clear()",
			"::stappler::db::ResultRow",
			"::stappler::db::ResultRow::ResultRow(db::ResultCursor const*,size_t)",
			"::stappler::db::ResultRow::ResultRow(stappler::db::ResultRow const&)",
			"::stappler::db::ResultRow::operator=(stappler::db::ResultRow const&)",
			"::stappler::db::ResultRow::size() const",
			"::stappler::db::ResultRow::toData(db::Scheme const&,Map<stappler::mem_pool::String, db::Field> const&,Vector<const stappler::db::Field *> const&)",
			"::stappler::db::ResultRow::front() const",
			"::stappler::db::ResultRow::back() const",
			"::stappler::db::ResultRow::isNull(size_t) const",
			"::stappler::db::ResultRow::at(size_t) const",
			"::stappler::db::ResultRow::toString(size_t) const",
			"::stappler::db::ResultRow::toBytes(size_t) const",
			"::stappler::db::ResultRow::toInteger(size_t) const",
			"::stappler::db::ResultRow::toDouble(size_t) const",
			"::stappler::db::ResultRow::toBool(size_t) const",
			"::stappler::db::ResultRow::toTypedData(size_t) const",
			"::stappler::db::ResultRow::toData(size_t,db::Field const&)",
			"::stappler::db::ResultRow::result",
			"::stappler::db::ResultRow::row",
			"::stappler::db::Result",
			"::stappler::db::Result::Iter",
			"::stappler::db::Result::Iter::Iter()",
			"::stappler::db::Result::Iter::Iter(stappler::db::Result*,size_t)",
			"::stappler::db::Result::Iter::operator=(stappler::db::Result::Iter const&)",
			"::stappler::db::Result::Iter::operator==(stappler::db::Result::Iter const&) const",
			"::stappler::db::Result::Iter::operator!=(stappler::db::Result::Iter const&) const",
			"::stappler::db::Result::Iter::operator<(stappler::db::Result::Iter const&) const",
			"::stappler::db::Result::Iter::operator>(stappler::db::Result::Iter const&) const",
			"::stappler::db::Result::Iter::operator<=(stappler::db::Result::Iter const&) const",
			"::stappler::db::Result::Iter::operator>=(stappler::db::Result::Iter const&) const",
			"::stappler::db::Result::Iter::operator++()",
			"::stappler::db::Result::Iter::operator*() const",
			"::stappler::db::Result::Iter::result",
			"::stappler::db::Result::Iter::row",
			"::stappler::db::Result::Result()",
			"::stappler::db::Result::Result(db::ResultCursor*)",
			"::stappler::db::Result::~Result()",
			"::stappler::db::Result::Result(stappler::db::Result const&)",
			"::stappler::db::Result::operator=(stappler::db::Result const&)",
			"::stappler::db::Result::Result(stappler::db::Result&&)",
			"::stappler::db::Result::operator=(stappler::db::Result&&)",
			"::stappler::db::Result::operator bool() const",
			"::stappler::db::Result::success() const",
			"::stappler::db::Result::info() const",
			"::stappler::db::Result::empty() const",
			"::stappler::db::Result::nrows() const",
			"::stappler::db::Result::nfields() const",
			"::stappler::db::Result::getRowsHint() const",
			"::stappler::db::Result::getAffectedRows() const",
			"::stappler::db::Result::readId()",
			"::stappler::db::Result::clear()",
			"::stappler::db::Result::begin()",
			"::stappler::db::Result::end()",
			"::stappler::db::Result::current() const",
			"::stappler::db::Result::next()",
			"::stappler::db::Result::name(size_t) const",
			"::stappler::db::Result::decode(db::Scheme const&,Vector<const stappler::db::Field *> const&)",
			"::stappler::db::Result::decode(db::Field const&,Vector<const stappler::db::Field *> const&)",
			"::stappler::db::Result::decode(db::FieldView const&)",
			"::stappler::db::Result::_cursor",
			"::stappler::db::Result::_row",
			"::stappler::db::Result::_success",
			"::stappler::db::Result::_nfields"
		],
		"STStorageConfig.h":  [
			"STAPPLER_DB_STSTORAGECONFIG_H_",
			"::stappler::db::config::getMaxAuthTime()",
			"::stappler::db::config::getMaxLoginFailure()",
			"::stappler::db::config::getMaxVarSize()",
			"::stappler::db::config::getMaxRequestSize()",
			"::stappler::db::config::getMaxFileSize()",
			"::stappler::db::config::getInputUpdateTime()",
			"::stappler::db::config::getInputUpdateFrequency()",
			"::stappler::db::config::getMaxInputPostSize()",
			"::stappler::db::config::getMaxInputFileSize()",
			"::stappler::db::config::getMaxInputVarSize()",
			"::stappler::db::config::getMaxExtraFieldSize()",
			"::stappler::db::config::getDefaultTextMin()",
			"::stappler::db::config::getDefaultTextMax()",
			"::stappler::db::config::getDefaultPasswordSalt()",
			"::stappler::db::config::getKeyValueStorageTime()",
			"::stappler::db::config::getInternalsStorageTime()",
			"::stappler::db::config::getStorageInterfaceKey()",
			"::stappler::db::config::getTransactionPrefixKey()",
			"::stappler::db::config::getTransactionStackKey()",
			"::stappler::db::config::getUploadTmpFilePrefix()",
			"::stappler::db::config::getUploadTmpImagePrefix()",
			"::stappler::db::config::getStorageBroadcastChannelName()",
			"::stappler::db::config::getResourceResolverMaxDepth()",
			"::stappler::db::setStorageRoot(stappler::db::StorageRoot*)"
		],
		"STStorageField.h":  [
			"STAPPLER_DB_STSTORAGEFIELD_H_",
			"::stappler::db::Type",
			"::stappler::db::Flags",
			"::stappler::db::operator|(stappler::db::Flags const&,stappler::db::Flags const&)",
			"::stappler::db::operator&(stappler::db::Flags const&,stappler::db::Flags const&)",
			"::stappler::db::operator^(stappler::db::Flags const&,stappler::db::Flags const&)",
			"::stappler::db::operator|=(stappler::db::Flags&,stappler::db::Flags const&)",
			"::stappler::db::operator&=(stappler::db::Flags&,stappler::db::Flags const&)",
			"::stappler::db::operator^=(stappler::db::Flags&,stappler::db::Flags const&)",
			"::stappler::db::operator==(stappler::db::Flags const&,std::underlying_type<Flags>::type const&)",
			"::stappler::db::operator==(std::underlying_type<Flags>::type const&,stappler::db::Flags const&)",
			"::stappler::db::operator!=(stappler::db::Flags const&,std::underlying_type<Flags>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<Flags>::type const&,stappler::db::Flags const&)",
			"::stappler::db::operator~(stappler::db::Flags const&)",
			"::stappler::db::checkIfComparationIsValid(stappler::db::Type,stappler::db::Comparation,stappler::db::Flags)",
			"::stappler::db::Transform",
			"::stappler::db::ValidationLevel",
			"::stappler::db::Linkage",
			"::stappler::db::MinLength",
			"::stappler::db::MaxLength",
			"::stappler::db::PasswordSalt",
			"::stappler::db::ForeignLink",
			"::stappler::db::Documentation",
			"::stappler::db::ImagePolicy",
			"::stappler::db::MaxFileSize",
			"::stappler::db::MaxImageSize",
			"::stappler::db::MaxImageSize::width",
			"::stappler::db::MaxImageSize::height",
			"::stappler::db::MaxImageSize::policy",
			"::stappler::db::MaxImageSize::MaxImageSize()",
			"::stappler::db::MaxImageSize::MaxImageSize(size_t,size_t,stappler::db::ImagePolicy)",
			"::stappler::db::MinImageSize",
			"::stappler::db::MinImageSize::width",
			"::stappler::db::MinImageSize::height",
			"::stappler::db::MinImageSize::policy",
			"::stappler::db::MinImageSize::MinImageSize()",
			"::stappler::db::MinImageSize::MinImageSize(size_t,size_t,stappler::db::ImagePolicy)",
			"::stappler::db::Thumbnail",
			"::stappler::db::Thumbnail::width",
			"::stappler::db::Thumbnail::height",
			"::stappler::db::Thumbnail::name",
			"::stappler::db::Thumbnail::Thumbnail(stappler::mem_pool::String&&,size_t,size_t)",
			"::stappler::db::RemovePolicy",
			"::stappler::db::FilterFn",
			"::stappler::db::DefaultFn",
			"::stappler::db::ReadFilterFn",
			"::stappler::db::WriteFilterFn",
			"::stappler::db::ReplaceFilterFn",
			"::stappler::db::ViewLinkageFn",
			"::stappler::db::ViewFn",
			"::stappler::db::FullTextViewFn",
			"::stappler::db::FullTextQueryFn",
			"::stappler::db::VirtualReadFn",
			"::stappler::db::VirtualWriteFn",
			"::stappler::db::AutoFieldScheme",
			"::stappler::db::AutoFieldScheme::ReqVec",
			"::stappler::db::AutoFieldScheme::scheme",
			"::stappler::db::AutoFieldScheme::requiresForAuto",
			"::stappler::db::AutoFieldScheme::linkage",
			"::stappler::db::AutoFieldScheme::requiresForLinking",
			"::stappler::db::AutoFieldScheme::AutoFieldScheme(stappler::db::Scheme const&,stappler::db::AutoFieldScheme::ReqVec&&,stappler::db::ViewLinkageFn&&,stappler::db::AutoFieldScheme::ReqVec&&)",
			"::stappler::db::AutoFieldScheme::AutoFieldScheme(stappler::db::Scheme const&,stappler::db::AutoFieldScheme::ReqVec&&,stappler::db::AutoFieldScheme::ReqVec&&)",
			"::stappler::db::AutoFieldDef",
			"::stappler::db::AutoFieldDef::schemes",
			"::stappler::db::AutoFieldDef::defaultFn",
			"::stappler::db::AutoFieldDef::requireFields",
			"::stappler::db::UniqueConstraintDef",
			"::stappler::db::UniqueConstraintDef::name",
			"::stappler::db::UniqueConstraintDef::fields",
			"::stappler::db::Field",
			"::stappler::db::Field::Data<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Integer<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Float<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Boolean<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Text<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Bytes<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Password<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Extra<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Extra<typename>(stappler::mem_pool::String&&,stappler::InitializerList<Field>&&,Args &&...)",
			"::stappler::db::Field::File<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Image<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Object<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Set<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Array<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::View<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::FullTextView<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Virtual<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Custom<typename>(stappler::db::FieldCustom*)",
			"::stappler::db::Field::Slot",
			"::stappler::db::Field::Slot::~Slot()",
			"::stappler::db::Field::Slot::setOptions<typename,typename>(F&,T&&)",
			"::stappler::db::Field::Slot::setOptions<typename,typename,typename>(F&,T&&,Args &&...)",
			"::stappler::db::Field::Slot::init<typename>(F&)",
			"::stappler::db::Field::Slot::init<typename,typename>(F&,Args &&...)",
			"::stappler::db::Field::Slot::Slot(stappler::mem_pool::String&&,stappler::db::Type)",
			"::stappler::db::Field::Slot::getName() const",
			"::stappler::db::Field::Slot::hasFlag(stappler::db::Flags) const",
			"::stappler::db::Field::Slot::getType() const",
			"::stappler::db::Field::Slot::isProtected() const",
			"::stappler::db::Field::Slot::getTransform() const",
			"::stappler::db::Field::Slot::isSimpleLayout() const",
			"::stappler::db::Field::Slot::isDataLayout() const",
			"::stappler::db::Field::Slot::isIndexed() const",
			"::stappler::db::Field::Slot::isFile() const",
			"::stappler::db::Field::Slot::hasDefault() const",
			"::stappler::db::Field::Slot::getDefault(stappler::mem_pool::Value const&) const",
			"::stappler::db::Field::Slot::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::Field::Slot::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::Field::Slot::def",
			"::stappler::db::Field::Slot::name",
			"::stappler::db::Field::Slot::documentation",
			"::stappler::db::Field::Slot::flags",
			"::stappler::db::Field::Slot::type",
			"::stappler::db::Field::Slot::transform",
			"::stappler::db::Field::Slot::defaultFn",
			"::stappler::db::Field::Slot::readFilterFn",
			"::stappler::db::Field::Slot::writeFilterFn",
			"::stappler::db::Field::Slot::replaceFilterFn",
			"::stappler::db::Field::Slot::autoField",
			"::stappler::db::Field::Slot::owner",
			"::stappler::db::Field::Slot::root",
			"::stappler::db::Field::getName() const",
			"::stappler::db::Field::getType() const",
			"::stappler::db::Field::getFlags() const",
			"::stappler::db::Field::getTransform() const",
			"::stappler::db::Field::getDefault(stappler::mem_pool::Value const&) const",
			"::stappler::db::Field::hasFlag(stappler::db::Flags) const",
			"::stappler::db::Field::hasDefault() const",
			"::stappler::db::Field::isProtected() const",
			"::stappler::db::Field::isSimpleLayout() const",
			"::stappler::db::Field::isDataLayout() const",
			"::stappler::db::Field::isIndexed() const",
			"::stappler::db::Field::isFile() const",
			"::stappler::db::Field::isReference() const",
			"::stappler::db::Field::getForeignScheme() const",
			"::stappler::db::Field::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::Field::transform(stappler::db::Scheme const&,int64_t,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::Field::transform(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::Field::operator bool() const",
			"::stappler::db::Field::getSlot<typename>() const",
			"::stappler::db::Field::getTypeDesc() const",
			"::stappler::db::Field::Field(stappler::db::Field::Slot const*)",
			"::stappler::db::Field::Field(stappler::db::Field const&)",
			"::stappler::db::Field::operator=(stappler::db::Field const&)",
			"::stappler::db::Field::Field(stappler::db::Field&&)",
			"::stappler::db::Field::operator=(stappler::db::Field&&)",
			"::stappler::db::Field::slot",
			"::stappler::db::FieldText",
			"::stappler::db::FieldText::~FieldText()",
			"::stappler::db::FieldText::FieldText<typename>(stappler::mem_pool::String&&,stappler::db::Type,Args &&...)",
			"::stappler::db::FieldText::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldText::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::FieldText::minLength",
			"::stappler::db::FieldText::maxLength",
			"::stappler::db::FieldPassword",
			"::stappler::db::FieldPassword::~FieldPassword()",
			"::stappler::db::FieldPassword::FieldPassword<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldPassword::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldPassword::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::FieldPassword::minLength",
			"::stappler::db::FieldPassword::maxLength",
			"::stappler::db::FieldPassword::salt",
			"::stappler::db::FieldExtra",
			"::stappler::db::FieldExtra::~FieldExtra()",
			"::stappler::db::FieldExtra::FieldExtra<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldExtra::hasDefault() const",
			"::stappler::db::FieldExtra::getDefault(stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldExtra::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldExtra::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::FieldExtra::fields",
			"::stappler::db::FieldFile",
			"::stappler::db::FieldFile::~FieldFile()",
			"::stappler::db::FieldFile::FieldFile<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldFile::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::FieldFile::maxSize",
			"::stappler::db::FieldFile::allowedTypes",
			"::stappler::db::FieldImage",
			"::stappler::db::FieldImage::~FieldImage()",
			"::stappler::db::FieldImage::FieldImage<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldImage::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::FieldImage::maxSize",
			"::stappler::db::FieldImage::allowedTypes",
			"::stappler::db::FieldImage::maxImageSize",
			"::stappler::db::FieldImage::minImageSize",
			"::stappler::db::FieldImage::thumbnails",
			"::stappler::db::FieldImage::primary",
			"::stappler::db::FieldObject",
			"::stappler::db::FieldObject::~FieldObject()",
			"::stappler::db::FieldObject::FieldObject<typename>(stappler::mem_pool::String&&,stappler::db::Type,Args &&...)",
			"::stappler::db::FieldObject::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldObject::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::FieldObject::scheme",
			"::stappler::db::FieldObject::onRemove",
			"::stappler::db::FieldObject::linkage",
			"::stappler::db::FieldObject::link",
			"::stappler::db::FieldArray",
			"::stappler::db::FieldArray::~FieldArray()",
			"::stappler::db::FieldArray::FieldArray<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldArray::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldArray::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::FieldArray::tfield",
			"::stappler::db::FieldView",
			"::stappler::db::FieldView::DeltaOptions",
			"::stappler::db::FieldView::~FieldView()",
			"::stappler::db::FieldView::FieldView<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldView::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldView::scheme",
			"::stappler::db::FieldView::requireFields",
			"::stappler::db::FieldView::linkage",
			"::stappler::db::FieldView::viewFn",
			"::stappler::db::FieldView::delta",
			"::stappler::db::FieldFullTextView",
			"::stappler::db::FieldFullTextView::~FieldFullTextView()",
			"::stappler::db::FieldFullTextView::FieldFullTextView<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldFullTextView::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldFullTextView::parseQuery(stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldFullTextView::requireFields",
			"::stappler::db::FieldFullTextView::viewFn",
			"::stappler::db::FieldFullTextView::queryFn",
			"::stappler::db::FieldCustom",
			"::stappler::db::FieldCustom::~FieldCustom()",
			"::stappler::db::FieldCustom::FieldCustom<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldCustom::readFromStorage(stappler::db::ResultCursor const&,size_t) const",
			"::stappler::db::FieldCustom::writeToStorage(stappler::db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldCustom::getTypeName() const",
			"::stappler::db::FieldCustom::getIndexName() const",
			"::stappler::db::FieldCustom::getIndexField() const",
			"::stappler::db::FieldCustom::isComparationAllowed(stappler::db::Comparation) const",
			"::stappler::db::FieldCustom::writeQuery(stappler::db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const",
			"::stappler::db::FieldVirtual",
			"::stappler::db::FieldVirtual::~FieldVirtual()",
			"::stappler::db::FieldVirtual::FieldVirtual<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::FieldVirtual::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const",
			"::stappler::db::FieldVirtual::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const",
			"::stappler::db::FieldVirtual::requireFields",
			"::stappler::db::FieldVirtual::readFn",
			"::stappler::db::FieldVirtual::writeFn",
			"::stappler::db::Field::Data<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Integer<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Float<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Boolean<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Text<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Bytes<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Password<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Extra<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Extra<typename>(stappler::mem_pool::String&&,stappler::InitializerList<Field>&&,Args &&...)",
			"::stappler::db::Field::File<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Image<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Object<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Set<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Array<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::View<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::FullTextView<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Virtual<typename>(stappler::mem_pool::String&&,Args &&...)",
			"::stappler::db::Field::Custom<typename>(stappler::db::FieldCustom*)",
			"::stappler::db::FieldOption<F,Flags>::FieldOption<F,Flags>",
			"::stappler::db::FieldOption<F,Flags>::assign(F&,stappler::db::Flags)",
			"::stappler::db::FieldOption<F,FilterFn>::FieldOption<F,FilterFn>",
			"::stappler::db::FieldOption<F,FilterFn>::assign(F&,stappler::db::FilterFn const&)",
			"::stappler::db::FieldOption<F,WriteFilterFn>::FieldOption<F,WriteFilterFn>",
			"::stappler::db::FieldOption<F,WriteFilterFn>::assign(F&,stappler::db::WriteFilterFn const&)",
			"::stappler::db::FieldOption<F,ReadFilterFn>::FieldOption<F,ReadFilterFn>",
			"::stappler::db::FieldOption<F,ReadFilterFn>::assign(F&,stappler::db::ReadFilterFn const&)",
			"::stappler::db::FieldOption<F,ReplaceFilterFn>::FieldOption<F,ReplaceFilterFn>",
			"::stappler::db::FieldOption<F,ReplaceFilterFn>::assign(F&,stappler::db::ReplaceFilterFn const&)",
			"::stappler::db::FieldOption<F,DefaultFn>::FieldOption<F,DefaultFn>",
			"::stappler::db::FieldOption<F,DefaultFn>::assign(F&,stappler::db::DefaultFn const&)",
			"::stappler::db::FieldOption<F,Function<Value()>>::FieldOption<F,Function<Value()>>",
			"::stappler::db::FieldOption<F,Function<Value()>>::assign(F&,Function<stappler::mem_pool::Value ()> const&)",
			"::stappler::db::FieldOption<F,Transform>::FieldOption<F,Transform>",
			"::stappler::db::FieldOption<F,Transform>::assign(F&,stappler::db::Transform)",
			"::stappler::db::FieldOption<F,Documentation>::FieldOption<F,Documentation>",
			"::stappler::db::FieldOption<F,Documentation>::assign(F&,stappler::db::Documentation&&)",
			"::stappler::db::FieldOption<F,MinLength>::FieldOption<F,MinLength>",
			"::stappler::db::FieldOption<F,MinLength>::assign(F&,stappler::db::MinLength)",
			"::stappler::db::FieldOption<F,MaxLength>::FieldOption<F,MaxLength>",
			"::stappler::db::FieldOption<F,MaxLength>::assign(F&,stappler::db::MaxLength)",
			"::stappler::db::FieldOption<F,Value>::FieldOption<F,Value>",
			"::stappler::db::FieldOption<F,Value>::assign(F&,stappler::mem_pool::Value&&)",
			"::stappler::db::FieldOption<F,PasswordSalt>::FieldOption<F,PasswordSalt>",
			"::stappler::db::FieldOption<F,PasswordSalt>::assign(F&,stappler::db::PasswordSalt&&)",
			"::stappler::db::FieldOption<F,ForeignLink>::FieldOption<F,ForeignLink>",
			"::stappler::db::FieldOption<F,ForeignLink>::assign(F&,stappler::db::ForeignLink&&)",
			"::stappler::db::FieldOption<F,Vector<Field>>::FieldOption<F,Vector<Field>>",
			"::stappler::db::FieldOption<F,Vector<Field>>::assign(F&,Vector<stappler::db::Field>&&)",
			"::stappler::db::FieldOption<F,AutoFieldDef>::FieldOption<F,AutoFieldDef>",
			"::stappler::db::FieldOption<F,AutoFieldDef>::assign(F&,stappler::db::AutoFieldDef&&)",
			"::stappler::db::FieldOption<F,std::initializer_list<Field>>::FieldOption<F,std::initializer_list<Field>>",
			"::stappler::db::FieldOption<F,std::initializer_list<Field>>::assign(F&,std::initializer_list<Field>&&)",
			"::stappler::db::FieldOption<F,MaxFileSize>::FieldOption<F,MaxFileSize>",
			"::stappler::db::FieldOption<F,MaxFileSize>::assign(F&,stappler::db::MaxFileSize)",
			"::stappler::db::FieldOption<F,Vector<String>>::FieldOption<F,Vector<String>>",
			"::stappler::db::FieldOption<F,Vector<String>>::assign(F&,Vector<stappler::mem_pool::String>&&)",
			"::stappler::db::FieldOption<F,MaxImageSize>::FieldOption<F,MaxImageSize>",
			"::stappler::db::FieldOption<F,MaxImageSize>::assign(F&,stappler::db::MaxImageSize&&)",
			"::stappler::db::FieldOption<F,MinImageSize>::FieldOption<F,MinImageSize>",
			"::stappler::db::FieldOption<F,MinImageSize>::assign(F&,stappler::db::MinImageSize&&)",
			"::stappler::db::FieldOption<F,Vector<Thumbnail>>::FieldOption<F,Vector<Thumbnail>>",
			"::stappler::db::FieldOption<F,Vector<Thumbnail>>::assign(F&,Vector<stappler::db::Thumbnail>&&)",
			"::stappler::db::FieldOption<F,RemovePolicy>::FieldOption<F,RemovePolicy>",
			"::stappler::db::FieldOption<F,RemovePolicy>::assign(F&,stappler::db::RemovePolicy)",
			"::stappler::db::FieldOption<F,Linkage>::FieldOption<F,Linkage>",
			"::stappler::db::FieldOption<F,Linkage>::assign(F&,stappler::db::Linkage)",
			"::stappler::db::FieldOption<F,constScheme*>::FieldOption<F,constScheme*>",
			"::stappler::db::FieldOption<F,constScheme*>::assign(F&,stappler::db::Scheme const*)",
			"::stappler::db::FieldOption<F,Scheme>::FieldOption<F,Scheme>",
			"::stappler::db::FieldOption<F,Scheme>::assign(F&,stappler::db::Scheme const&)",
			"::stappler::db::FieldOption<F,constScheme>::FieldOption<F,constScheme>",
			"::stappler::db::FieldOption<F,constScheme>::assign(F&,stappler::db::Scheme const&)",
			"::stappler::db::FieldOption<F,Field>::FieldOption<F,Field>",
			"::stappler::db::FieldOption<F,Field>::assign(F&,stappler::db::Field&&)",
			"::stappler::db::FieldOption<FieldArray,Type>::FieldOption<FieldArray,Type>",
			"::stappler::db::FieldOption<FieldArray,Type>::assign(stappler::db::FieldArray&,stappler::db::Type)",
			"::stappler::db::FieldOption<FieldView,Vector<String>>::FieldOption<FieldView,Vector<String>>",
			"::stappler::db::FieldOption<FieldView,Vector<String>>::assign(stappler::db::FieldView&,Vector<stappler::mem_pool::String>&&)",
			"::stappler::db::FieldOption<FieldFullTextView,Vector<String>>::FieldOption<FieldFullTextView,Vector<String>>",
			"::stappler::db::FieldOption<FieldFullTextView,Vector<String>>::assign(stappler::db::FieldFullTextView&,Vector<stappler::mem_pool::String>&&)",
			"::stappler::db::FieldOption<F,ViewLinkageFn>::FieldOption<F,ViewLinkageFn>",
			"::stappler::db::FieldOption<F,ViewLinkageFn>::assign(F&,stappler::db::ViewLinkageFn&&)",
			"::stappler::db::FieldOption<F,ViewFn>::FieldOption<F,ViewFn>",
			"::stappler::db::FieldOption<F,ViewFn>::assign(F&,stappler::db::ViewFn&&)",
			"::stappler::db::FieldOption<F,FullTextViewFn>::FieldOption<F,FullTextViewFn>",
			"::stappler::db::FieldOption<F,FullTextViewFn>::assign(F&,stappler::db::FullTextViewFn&&)",
			"::stappler::db::FieldOption<F,FullTextQueryFn>::FieldOption<F,FullTextQueryFn>",
			"::stappler::db::FieldOption<F,FullTextQueryFn>::assign(F&,stappler::db::FullTextQueryFn&&)",
			"::stappler::db::FieldOption<F,FieldView::DeltaOptions>::FieldOption<F,FieldView::DeltaOptions>",
			"::stappler::db::FieldOption<F,FieldView::DeltaOptions>::assign(F&,FieldView::DeltaOptions)",
			"::stappler::db::FieldOption<FieldVirtual,Vector<String>>::FieldOption<FieldVirtual,Vector<String>>",
			"::stappler::db::FieldOption<FieldVirtual,Vector<String>>::assign(stappler::db::FieldVirtual&,Vector<stappler::mem_pool::String>&&)",
			"::stappler::db::FieldOption<FieldVirtual,VirtualReadFn>::FieldOption<FieldVirtual,VirtualReadFn>",
			"::stappler::db::FieldOption<FieldVirtual,VirtualReadFn>::assign(stappler::db::FieldVirtual&,stappler::db::VirtualReadFn&&)",
			"::stappler::db::FieldOption<FieldVirtual,VirtualWriteFn>::FieldOption<FieldVirtual,VirtualWriteFn>",
			"::stappler::db::FieldOption<FieldVirtual,VirtualWriteFn>::assign(stappler::db::FieldVirtual&,stappler::db::VirtualWriteFn&&)"
		],
		"STStorageFile.h":  [
			"STAPPLER_DB_STSTORAGEFILE_H_",
			"::stappler::db::File",
			"::stappler::db::File::getFilesystemPath(uint64_t)",
			"::stappler::db::File::validateFileField(stappler::db::Field const&,stappler::db::InputFile const&)",
			"::stappler::db::File::validateFileField(stappler::db::Field const&,stappler::StringView const&,stappler::BytesView const&)",
			"::stappler::db::File::createFile(stappler::db::Transaction const&,stappler::db::Field const&,stappler::db::InputFile&)",
			"::stappler::db::File::createFile(stappler::db::Transaction const&,stappler::StringView const&,stappler::StringView const&,int64_t)",
			"::stappler::db::File::createFile(stappler::db::Transaction const&,stappler::StringView const&,stappler::BytesView const&,int64_t)",
			"::stappler::db::File::createImage(stappler::db::Transaction const&,stappler::db::Field const&,stappler::db::InputFile&)",
			"::stappler::db::File::createImage(stappler::db::Transaction const&,stappler::db::Field const&,stappler::StringView const&,stappler::BytesView const&,int64_t)",
			"::stappler::db::File::getData(stappler::db::Transaction const&,uint64_t)",
			"::stappler::db::File::setData(stappler::db::Transaction const&,uint64_t,stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value const&)",
			"::stappler::db::File::removeFile(stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value const&)",
			"::stappler::db::File::removeFile(int64_t)",
			"::stappler::db::File::purgeFile(stappler::db::Transaction const&,stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value const&)",
			"::stappler::db::File::purgeFile(stappler::db::Transaction const&,int64_t)",
			"::stappler::db::File::getScheme()"
		],
		"STStorageObject.h":  [
			"STAPPLER_DB_STSTORAGEOBJECT_H_",
			"::stappler::db::Object",
			"::stappler::db::Object::Object(stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value&&,stappler::db::Scheme const&)",
			"::stappler::db::Object::getScheme() const",
			"::stappler::db::Object::getObjectId() const",
			"::stappler::db::Object::lockProperty(stappler::StringView const&)",
			"::stappler::db::Object::unlockProperty(stappler::StringView const&)",
			"::stappler::db::Object::isPropertyLocked(stappler::StringView const&) const",
			"::stappler::db::Object::isFieldProtected(stappler::StringView const&) const",
			"::stappler::db::Object::begin()",
			"::stappler::db::Object::end()",
			"::stappler::db::Object::begin() const",
			"::stappler::db::Object::end() const",
			"::stappler::db::Object::save(stappler::db::Adapter const&,bool)",
			"::stappler::db::Object::_oid",
			"::stappler::db::Object::_locked",
			"::stappler::db::Object::_scheme"
		],
		"STStorageQuery.h":  [
			"STAPPLER_DB_STSTORAGEQUERY_H_",
			"::stappler::db::Operator",
			"::stappler::db::Comparation",
			"::stappler::db::Ordering",
			"::stappler::db::Resolve",
			"::stappler::db::operator|(stappler::db::Resolve const&,stappler::db::Resolve const&)",
			"::stappler::db::operator&(stappler::db::Resolve const&,stappler::db::Resolve const&)",
			"::stappler::db::operator^(stappler::db::Resolve const&,stappler::db::Resolve const&)",
			"::stappler::db::operator|=(stappler::db::Resolve&,stappler::db::Resolve const&)",
			"::stappler::db::operator&=(stappler::db::Resolve&,stappler::db::Resolve const&)",
			"::stappler::db::operator^=(stappler::db::Resolve&,stappler::db::Resolve const&)",
			"::stappler::db::operator==(stappler::db::Resolve const&,std::underlying_type<Resolve>::type const&)",
			"::stappler::db::operator==(std::underlying_type<Resolve>::type const&,stappler::db::Resolve const&)",
			"::stappler::db::operator!=(stappler::db::Resolve const&,std::underlying_type<Resolve>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<Resolve>::type const&,stappler::db::Resolve const&)",
			"::stappler::db::operator~(stappler::db::Resolve const&)",
			"::stappler::db::Query",
			"::stappler::db::Query::Field",
			"::stappler::db::Query::Field::name",
			"::stappler::db::Query::Field::fields",
			"::stappler::db::Query::Field::Field(stappler::db::Query::Field&&)",
			"::stappler::db::Query::Field::Field(stappler::db::Query::Field const&)",
			"::stappler::db::Query::Field::operator=(stappler::db::Query::Field&&)",
			"::stappler::db::Query::Field::operator=(stappler::db::Query::Field const&)",
			"::stappler::db::Query::Field::Field<typename>(Str&&)",
			"::stappler::db::Query::Field::Field<typename>(Str&&,Vector<stappler::mem_pool::String>&&)",
			"::stappler::db::Query::Field::Field<typename>(Str&&,std::initializer_list<String>&&)",
			"::stappler::db::Query::Field::Field<typename>(Str&&,Vector<stappler::db::Query::Field>&&)",
			"::stappler::db::Query::Field::Field<typename>(Str&&,std::initializer_list<Field>&&)",
			"::stappler::db::Query::Field::setName(char const*)",
			"::stappler::db::Query::Field::setName(stappler::StringView const&)",
			"::stappler::db::Query::Field::setName(stappler::mem_pool::String const&)",
			"::stappler::db::Query::Field::setName(stappler::mem_pool::String&&)",
			"::stappler::db::Query::Field::setName(stappler::db::Query::Field const&)",
			"::stappler::db::Query::Field::setName(stappler::db::Query::Field&&)",
			"::stappler::db::Query::FieldsVec",
			"::stappler::db::Query::Select",
			"::stappler::db::Query::Select::compare",
			"::stappler::db::Query::Select::value1",
			"::stappler::db::Query::Select::value2",
			"::stappler::db::Query::Select::field",
			"::stappler::db::Query::Select::searchData",
			"::stappler::db::Query::Select::Select()",
			"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,stappler::mem_pool::Value&&,stappler::mem_pool::Value&&)",
			"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,int64_t,int64_t)",
			"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,stappler::mem_pool::String const&)",
			"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,stappler::StringView const&)",
			"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,Vector<stappler::search::SearchData>&&)",
			"::stappler::db::Query::SoftLimit",
			"::stappler::db::Query::SoftLimit::field",
			"::stappler::db::Query::SoftLimit::limit",
			"::stappler::db::Query::SoftLimit::offset",
			"::stappler::db::Query::all()",
			"::stappler::db::Query::field(int64_t,stappler::StringView const&)",
			"::stappler::db::Query::field(int64_t,stappler::StringView const&,stappler::db::Query const&)",
			"::stappler::db::Query::decodeResolve(stappler::StringView const&)",
			"::stappler::db::Query::encodeResolve(stappler::db::Resolve)",
			"::stappler::db::Query::select(stappler::StringView const&)",
			"::stappler::db::Query::select(int64_t)",
			"::stappler::db::Query::select(stappler::mem_pool::Value const&)",
			"::stappler::db::Query::select(Vector<int64_t>&&)",
			"::stappler::db::Query::select(SpanView<int64_t>)",
			"::stappler::db::Query::select(std::initializer_list<int64_t>&&)",
			"::stappler::db::Query::select(stappler::StringView const&,stappler::db::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&)",
			"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::Value const&)",
			"::stappler::db::Query::select(stappler::StringView const&,stappler::db::Comparation,int64_t)",
			"::stappler::db::Query::select(stappler::StringView const&,stappler::db::Comparation,int64_t,int64_t)",
			"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::String const&)",
			"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::String&&)",
			"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::Bytes const&)",
			"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::Bytes&&)",
			"::stappler::db::Query::select(stappler::StringView const&,Vector<stappler::search::SearchData>&&)",
			"::stappler::db::Query::select(stappler::db::Query::Select&&)",
			"::stappler::db::Query::order(stappler::StringView const&,stappler::db::Ordering,size_t,size_t)",
			"::stappler::db::Query::softLimit(stappler::StringView const&,stappler::db::Ordering,size_t,stappler::mem_pool::Value&&)",
			"::stappler::db::Query::first(stappler::StringView const&,size_t,size_t)",
			"::stappler::db::Query::last(stappler::StringView const&,size_t,size_t)",
			"::stappler::db::Query::limit(size_t,size_t)",
			"::stappler::db::Query::limit(size_t)",
			"::stappler::db::Query::offset(size_t)",
			"::stappler::db::Query::delta(uint64_t)",
			"::stappler::db::Query::delta(stappler::StringView const&)",
			"::stappler::db::Query::include<typename>(stappler::db::Query::Field&&,Args &&...)",
			"::stappler::db::Query::include(stappler::db::Query::Field&&)",
			"::stappler::db::Query::exclude(stappler::db::Query::Field&&)",
			"::stappler::db::Query::depth(uint16_t)",
			"::stappler::db::Query::forUpdate()",
			"::stappler::db::Query::clearFields()",
			"::stappler::db::Query::empty() const",
			"::stappler::db::Query::getQueryField() const",
			"::stappler::db::Query::getQueryId() const",
			"::stappler::db::Query::getSingleSelectId() const",
			"::stappler::db::Query::getSelectIds() const",
			"::stappler::db::Query::getSelectAlias() const",
			"::stappler::db::Query::getSelectList() const",
			"::stappler::db::Query::getOrderField() const",
			"::stappler::db::Query::getOrdering() const",
			"::stappler::db::Query::getLimitValue() const",
			"::stappler::db::Query::getOffsetValue() const",
			"::stappler::db::Query::getSoftLimitValue() const",
			"::stappler::db::Query::hasSelectName() const",
			"::stappler::db::Query::hasSelectList() const",
			"::stappler::db::Query::hasSelect() const",
			"::stappler::db::Query::hasOrder() const",
			"::stappler::db::Query::hasLimit() const",
			"::stappler::db::Query::hasOffset() const",
			"::stappler::db::Query::hasDelta() const",
			"::stappler::db::Query::hasFields() const",
			"::stappler::db::Query::isForUpdate() const",
			"::stappler::db::Query::isSoftLimit() const",
			"::stappler::db::Query::getDeltaToken() const",
			"::stappler::db::Query::getResolveDepth() const",
			"::stappler::db::Query::getIncludeFields() const",
			"::stappler::db::Query::getExcludeFields() const",
			"::stappler::db::Query::encode() const",
			"::stappler::db::Query::queryField",
			"::stappler::db::Query::queryId",
			"::stappler::db::Query::selectIds",
			"::stappler::db::Query::selectAlias",
			"::stappler::db::Query::selectList",
			"::stappler::db::Query::ordering",
			"::stappler::db::Query::orderField",
			"::stappler::db::Query::limitValue",
			"::stappler::db::Query::offsetValue",
			"::stappler::db::Query::softLimitValue",
			"::stappler::db::Query::deltaToken",
			"::stappler::db::Query::resolveDepth",
			"::stappler::db::Query::fieldsInclude",
			"::stappler::db::Query::fieldsExclude",
			"::stappler::db::Query::update",
			"::stappler::db::Query::_softLimit",
			"::stappler::db::Query::_selected",
			"::stappler::db::Field::Field<typename>(Str&&)",
			"::stappler::db::Field::Field<typename>(Str&&,Vector<stappler::mem_pool::String>&&)",
			"::stappler::db::Field::Field<typename>(Str&&,std::initializer_list<String>&&)",
			"::stappler::db::Field::Field<typename>(Str&&,Vector<stappler::db::Query::Field>&&)",
			"::stappler::db::Field::Field<typename>(Str&&,std::initializer_list<Field>&&)",
			"::stappler::db::Query::include<typename>(stappler::db::Query::Field&&,Args &&...)"
		],
		"STStorageQueryList.h":  [
			"STAPPLER_DB_STSTORAGEQUERYLIST_H_",
			"::stappler::db::Action",
			"::stappler::db::TransactionStatus",
			"::stappler::db::QueryFieldResolver",
			"::stappler::db::QueryFieldResolver::Meta",
			"::stappler::db::QueryFieldResolver::QueryFieldResolver()",
			"::stappler::db::QueryFieldResolver::QueryFieldResolver(stappler::db::Scheme const&,stappler::db::Query const&,Vector<stappler::mem_pool::String> const&)",
			"::stappler::db::QueryFieldResolver::getField(stappler::mem_pool::String const&) const",
			"::stappler::db::QueryFieldResolver::getScheme() const",
			"::stappler::db::QueryFieldResolver::getFields() const",
			"::stappler::db::QueryFieldResolver::getMeta() const",
			"::stappler::db::QueryFieldResolver::getResolves() const",
			"::stappler::db::QueryFieldResolver::getResolvesData() const",
			"::stappler::db::QueryFieldResolver::getIncludeVec() const",
			"::stappler::db::QueryFieldResolver::getExcludeVec() const",
			"::stappler::db::QueryFieldResolver::next(stappler::StringView const&) const",
			"::stappler::db::QueryFieldResolver::operator bool() const",
			"::stappler::db::QueryFieldResolver::Data",
			"::stappler::db::QueryFieldResolver::Data::scheme",
			"::stappler::db::QueryFieldResolver::Data::fields",
			"::stappler::db::QueryFieldResolver::Data::include",
			"::stappler::db::QueryFieldResolver::Data::exclude",
			"::stappler::db::QueryFieldResolver::Data::resolved",
			"::stappler::db::QueryFieldResolver::Data::resolvedData",
			"::stappler::db::QueryFieldResolver::Data::next",
			"::stappler::db::QueryFieldResolver::Data::meta",
			"::stappler::db::QueryFieldResolver::QueryFieldResolver(stappler::db::QueryFieldResolver::Data*)",
			"::stappler::db::QueryFieldResolver::doResolve(stappler::db::QueryFieldResolver::Data*,Vector<stappler::mem_pool::String> const&,uint16_t,uint16_t)",
			"::stappler::db::QueryFieldResolver::doResolveData(stappler::db::QueryFieldResolver::Data*,uint16_t,uint16_t)",
			"::stappler::db::QueryFieldResolver::root",
			"::stappler::db::operator|(QueryFieldResolver::Meta const&,QueryFieldResolver::Meta const&)",
			"::stappler::db::operator&(QueryFieldResolver::Meta const&,QueryFieldResolver::Meta const&)",
			"::stappler::db::operator^(QueryFieldResolver::Meta const&,QueryFieldResolver::Meta const&)",
			"::stappler::db::operator|=(QueryFieldResolver::Meta&,QueryFieldResolver::Meta const&)",
			"::stappler::db::operator&=(QueryFieldResolver::Meta&,QueryFieldResolver::Meta const&)",
			"::stappler::db::operator^=(QueryFieldResolver::Meta&,QueryFieldResolver::Meta const&)",
			"::stappler::db::operator==(QueryFieldResolver::Meta const&,std::underlying_type<QueryFieldResolver::Meta>::type const&)",
			"::stappler::db::operator==(std::underlying_type<QueryFieldResolver::Meta>::type const&,QueryFieldResolver::Meta const&)",
			"::stappler::db::operator!=(QueryFieldResolver::Meta const&,std::underlying_type<QueryFieldResolver::Meta>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<QueryFieldResolver::Meta>::type const&,QueryFieldResolver::Meta const&)",
			"::stappler::db::operator~(QueryFieldResolver::Meta const&)",
			"::stappler::db::FullTextData",
			"::stappler::db::QueryList",
			"::stappler::db::QueryList::FieldCallback",
			"::stappler::db::QueryList::DefaultSoftLimit",
			"::stappler::db::QueryList::MinSoftLimit",
			"::stappler::db::QueryList::MaxSoftLimit",
			"::stappler::db::QueryList::Flags",
			"::stappler::db::QueryList::Item",
			"::stappler::db::QueryList::Item::scheme",
			"::stappler::db::QueryList::Item::ref",
			"::stappler::db::QueryList::Item::field",
			"::stappler::db::QueryList::Item::all",
			"::stappler::db::QueryList::Item::resolved",
			"::stappler::db::QueryList::Item::query",
			"::stappler::db::QueryList::Item::fields",
			"::stappler::db::QueryList::Item::getQueryFields() const",
			"::stappler::db::QueryList::QueryList(stappler::db::Scheme const*)",
			"::stappler::db::QueryList::selectById(stappler::db::Scheme const*,uint64_t)",
			"::stappler::db::QueryList::selectByName(stappler::db::Scheme const*,stappler::StringView const&)",
			"::stappler::db::QueryList::selectByQuery(stappler::db::Scheme const*,Query::Select&&)",
			"::stappler::db::QueryList::order(stappler::db::Scheme const*,stappler::StringView const&,db::Ordering)",
			"::stappler::db::QueryList::first(stappler::db::Scheme const*,stappler::StringView const&,size_t)",
			"::stappler::db::QueryList::last(stappler::db::Scheme const*,stappler::StringView const&,size_t)",
			"::stappler::db::QueryList::limit(stappler::db::Scheme const*,size_t)",
			"::stappler::db::QueryList::offset(stappler::db::Scheme const*,size_t)",
			"::stappler::db::QueryList::setFullTextQuery(stappler::db::Field const*,Vector<stappler::db::FullTextData>&&)",
			"::stappler::db::QueryList::setAll()",
			"::stappler::db::QueryList::setField(stappler::db::Scheme const*,stappler::db::Field const*)",
			"::stappler::db::QueryList::setProperty(stappler::db::Field const*)",
			"::stappler::db::QueryList::setQueryAsMtime()",
			"::stappler::db::QueryList::clearFlags()",
			"::stappler::db::QueryList::addFlag(stappler::db::QueryList::Flags)",
			"::stappler::db::QueryList::hasFlag(stappler::db::QueryList::Flags) const",
			"::stappler::db::QueryList::isAll() const",
			"::stappler::db::QueryList::isRefSet() const",
			"::stappler::db::QueryList::isObject() const",
			"::stappler::db::QueryList::isView() const",
			"::stappler::db::QueryList::empty() const",
			"::stappler::db::QueryList::isDeltaApplicable() const",
			"::stappler::db::QueryList::apply(stappler::mem_pool::Value const&)",
			"::stappler::db::QueryList::resolve(Vector<stappler::mem_pool::String> const&)",
			"::stappler::db::QueryList::getResolveDepth() const",
			"::stappler::db::QueryList::setResolveDepth(uint16_t)",
			"::stappler::db::QueryList::setDelta(stappler::Time)",
			"::stappler::db::QueryList::getDelta() const",
			"::stappler::db::QueryList::size() const",
			"::stappler::db::QueryList::getPrimaryScheme() const",
			"::stappler::db::QueryList::getSourceScheme() const",
			"::stappler::db::QueryList::getScheme() const",
			"::stappler::db::QueryList::getField() const",
			"::stappler::db::QueryList::getTopQuery() const",
			"::stappler::db::QueryList::getItems() const",
			"::stappler::db::QueryList::getIncludeFields() const",
			"::stappler::db::QueryList::getExcludeFields() const",
			"::stappler::db::QueryList::getFields() const",
			"::stappler::db::QueryList::getExtraData() const",
			"::stappler::db::QueryList::getContinueToken() const",
			"::stappler::db::QueryList::decodeSelect(stappler::db::Scheme const&,stappler::db::Query&,stappler::mem_pool::Value const&)",
			"::stappler::db::QueryList::decodeOrder(stappler::db::Scheme const&,stappler::db::Query&,stappler::mem_pool::String const&,stappler::mem_pool::Value const&)",
			"::stappler::db::QueryList::_flags",
			"::stappler::db::QueryList::queries",
			"::stappler::db::QueryList::extraData",
			"::stappler::db::QueryList::token",
			"::stappler::db::QueryList::failed",
			"::stappler::db::operator|(QueryList::Flags const&,QueryList::Flags const&)",
			"::stappler::db::operator&(QueryList::Flags const&,QueryList::Flags const&)",
			"::stappler::db::operator^(QueryList::Flags const&,QueryList::Flags const&)",
			"::stappler::db::operator|=(QueryList::Flags&,QueryList::Flags const&)",
			"::stappler::db::operator&=(QueryList::Flags&,QueryList::Flags const&)",
			"::stappler::db::operator^=(QueryList::Flags&,QueryList::Flags const&)",
			"::stappler::db::operator==(QueryList::Flags const&,std::underlying_type<QueryList::Flags>::type const&)",
			"::stappler::db::operator==(std::underlying_type<QueryList::Flags>::type const&,QueryList::Flags const&)",
			"::stappler::db::operator!=(QueryList::Flags const&,std::underlying_type<QueryList::Flags>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<QueryList::Flags>::type const&,QueryList::Flags const&)",
			"::stappler::db::operator~(QueryList::Flags const&)"
		],
		"STStorageScheme.h":  [
			"STAPPLER_DB_STSTORAGESCHEME_H_",
			"::stappler::db::Scheme",
			"::stappler::db::Scheme::Options",
			"::stappler::db::Scheme::ViewScheme",
			"::stappler::db::Scheme::ViewScheme::scheme",
			"::stappler::db::Scheme::ViewScheme::viewField",
			"::stappler::db::Scheme::ViewScheme::fields",
			"::stappler::db::Scheme::ViewScheme::autoLink",
			"::stappler::db::Scheme::ViewScheme::autoField",
			"::stappler::db::Scheme::ViewScheme::ViewScheme(stappler::db::Scheme const*,stappler::db::Field const*,stappler::db::FieldView const&)",
			"::stappler::db::Scheme::ViewScheme::ViewScheme(stappler::db::Scheme const*,stappler::db::Field const*,stappler::db::AutoFieldScheme const&)",
			"::stappler::db::Scheme::ParentScheme",
			"::stappler::db::Scheme::ParentScheme::scheme",
			"::stappler::db::Scheme::ParentScheme::pointerField",
			"::stappler::db::Scheme::ParentScheme::backReference",
			"::stappler::db::Scheme::ParentScheme::ParentScheme(stappler::db::Scheme const*,stappler::db::Field const*)",
			"::stappler::db::Scheme::UniqueConstraint",
			"::stappler::db::Scheme::UniqueConstraint::name",
			"::stappler::db::Scheme::UniqueConstraint::fields",
			"::stappler::db::Scheme::UniqueConstraint::UniqueConstraint(stappler::StringView,Vector<const stappler::db::Field *>&&)",
			"::stappler::db::Scheme::TransformAction",
			"::stappler::db::Scheme::FieldVec",
			"::stappler::db::Scheme::AccessTable",
			"::stappler::db::Scheme::EmptyFieldList()",
			"::stappler::db::Scheme::initSchemes(Map<stappler::StringView, const stappler::db::Scheme *> const&)",
			"::stappler::db::Scheme::Scheme(stappler::StringView const&,bool)",
			"::stappler::db::Scheme::Scheme(stappler::StringView const&,stappler::db::Scheme::Options)",
			"::stappler::db::Scheme::Scheme(stappler::StringView const&,std::initializer_list<Field>,bool)",
			"::stappler::db::Scheme::Scheme(stappler::StringView const&,std::initializer_list<Field>,stappler::db::Scheme::Options)",
			"::stappler::db::Scheme::Scheme(stappler::db::Scheme const&)",
			"::stappler::db::Scheme::operator=(stappler::db::Scheme const&)",
			"::stappler::db::Scheme::Scheme(stappler::db::Scheme&&)",
			"::stappler::db::Scheme::operator=(stappler::db::Scheme&&)",
			"::stappler::db::Scheme::hasDelta() const",
			"::stappler::db::Scheme::isDetouched() const",
			"::stappler::db::Scheme::isCompressed() const",
			"::stappler::db::Scheme::define(std::initializer_list<Field>)",
			"::stappler::db::Scheme::define(Vector<stappler::db::Field>&&)",
			"::stappler::db::Scheme::define(stappler::db::AccessRole&&)",
			"::stappler::db::Scheme::define(stappler::db::UniqueConstraintDef&&)",
			"::stappler::db::Scheme::define(stappler::mem_pool::Bytes&&)",
			"::stappler::db::Scheme::define<typename,typename>(T&&,Args &&...)",
			"::stappler::db::Scheme::addFlags(stappler::db::Scheme::Options)",
			"::stappler::db::Scheme::cloneFrom(stappler::db::Scheme*)",
			"::stappler::db::Scheme::getName() const",
			"::stappler::db::Scheme::hasAliases() const",
			"::stappler::db::Scheme::isProtected(stappler::StringView const&) const",
			"::stappler::db::Scheme::save(stappler::db::Transaction const&,stappler::db::Object*) const",
			"::stappler::db::Scheme::hasFiles() const",
			"::stappler::db::Scheme::hasForceExclude() const",
			"::stappler::db::Scheme::hasAccessControl() const",
			"::stappler::db::Scheme::hasVirtuals() const",
			"::stappler::db::Scheme::getForceInclude() const",
			"::stappler::db::Scheme::getFields() const",
			"::stappler::db::Scheme::getField(stappler::StringView const&) const",
			"::stappler::db::Scheme::getUnique() const",
			"::stappler::db::Scheme::getCompressDict() const",
			"::stappler::db::Scheme::getForeignLink(stappler::db::FieldObject const*) const",
			"::stappler::db::Scheme::getForeignLink(stappler::db::Field const&) const",
			"::stappler::db::Scheme::getForeignLink(stappler::StringView const&) const",
			"::stappler::db::Scheme::setConfig(stappler::db::InputConfig)",
			"::stappler::db::Scheme::getConfig() const",
			"::stappler::db::Scheme::getMaxRequestSize() const",
			"::stappler::db::Scheme::getMaxVarSize() const",
			"::stappler::db::Scheme::getMaxFileSize() const",
			"::stappler::db::Scheme::isAtomicPatch(stappler::mem_pool::Value const&) const",
			"::stappler::db::Scheme::hash(stappler::db::ValidationLevel) const",
			"::stappler::db::Scheme::getViews() const",
			"::stappler::db::Scheme::getPatchFields(stappler::mem_pool::Value const&) const",
			"::stappler::db::Scheme::getAccessTable() const",
			"::stappler::db::Scheme::getAccessRole(stappler::db::AccessRoleId) const",
			"::stappler::db::Scheme::setAccessRole(stappler::db::AccessRoleId,stappler::db::AccessRole&&)",
			"::stappler::db::Scheme::transform(stappler::mem_pool::Value&,stappler::db::Scheme::TransformAction) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,stappler::StringView,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<StringView>&&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<const char *>&&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::foreach<typename>(T&&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::select<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::create<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::update<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::remove<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::count<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::touch<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::getProperty<typename,typename,typename>(_Storage&&,_Value&&,_Field&&,std::initializer_list<StringView>) const",
			"::stappler::db::Scheme::getProperty<typename,typename,typename>(_Storage&&,_Value&&,_Field&&,Set<const stappler::db::Field *> const&) const",
			"::stappler::db::Scheme::setProperty<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::appendProperty<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::clearProperty<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::countProperty<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::foreachWithWorker(stappler::db::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&) const",
			"::stappler::db::Scheme::selectWithWorker(stappler::db::Worker&,stappler::db::Query const&) const",
			"::stappler::db::Scheme::createWithWorker(stappler::db::Worker&,stappler::mem_pool::Value const&,bool) const",
			"::stappler::db::Scheme::updateWithWorker(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&,bool) const",
			"::stappler::db::Scheme::updateWithWorker(stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,bool) const",
			"::stappler::db::Scheme::removeWithWorker(stappler::db::Worker&,uint64_t) const",
			"::stappler::db::Scheme::countWithWorker(stappler::db::Worker&,stappler::db::Query const&) const",
			"::stappler::db::Scheme::touchWithWorker(stappler::db::Worker&,uint64_t) const",
			"::stappler::db::Scheme::touchWithWorker(stappler::db::Worker&,stappler::mem_pool::Value const&) const",
			"::stappler::db::Scheme::fieldWithWorker(stappler::db::Action,stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&) const",
			"::stappler::db::Scheme::fieldWithWorker(stappler::db::Action,stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&) const",
			"::stappler::db::Scheme::setFileWithWorker(stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::db::InputFile&) const",
			"::stappler::db::Scheme::initScheme()",
			"::stappler::db::Scheme::getFieldSet(stappler::db::Field const&,std::initializer_list<StringView>) const",
			"::stappler::db::Scheme::addView(stappler::db::Scheme const*,stappler::db::Field const*)",
			"::stappler::db::Scheme::addAutoField(stappler::db::Scheme const*,stappler::db::Field const*,stappler::db::AutoFieldScheme const&)",
			"::stappler::db::Scheme::addParent(stappler::db::Scheme const*,stappler::db::Field const*)",
			"::stappler::db::Scheme::createFilePatch(stappler::db::Transaction const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&) const",
			"::stappler::db::Scheme::purgeFilePatch(stappler::db::Transaction const&,stappler::mem_pool::Value const&) const",
			"::stappler::db::Scheme::mergeValues(stappler::db::Field const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,stappler::mem_pool::Value&) const",
			"::stappler::db::Scheme::prepareUpdate(stappler::mem_pool::Value const&,bool) const",
			"::stappler::db::Scheme::updateObject(stappler::db::Worker&,stappler::mem_pool::Value&&,stappler::mem_pool::Value&) const",
			"::stappler::db::Scheme::doPatch(stappler::db::Worker&,stappler::db::Transaction const&,uint64_t,stappler::mem_pool::Value&) const",
			"::stappler::db::Scheme::patchOrUpdate(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value&) const",
			"::stappler::db::Scheme::patchOrUpdate(stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&) const",
			"::stappler::db::Scheme::touchParents(stappler::db::Transaction const&,stappler::mem_pool::Value const&) const",
			"::stappler::db::Scheme::extractParents(Map<int64_t, const stappler::db::Scheme *>&,stappler::db::Transaction const&,stappler::mem_pool::Value const&,bool) const",
			"::stappler::db::Scheme::removeField(stappler::db::Transaction const&,stappler::mem_pool::Value&,stappler::db::Field const&,stappler::mem_pool::Value const&)",
			"::stappler::db::Scheme::finalizeField(stappler::db::Transaction const&,stappler::db::Field const&,stappler::mem_pool::Value const&)",
			"::stappler::db::Scheme::createFile(stappler::db::Transaction const&,stappler::db::Field const&,stappler::db::InputFile&) const",
			"::stappler::db::Scheme::createFile(stappler::db::Transaction const&,stappler::db::Field const&,stappler::BytesView const&,stappler::StringView const&,int64_t) const",
			"::stappler::db::Scheme::processFullTextFields(stappler::mem_pool::Value&,Vector<stappler::mem_pool::String>*) const",
			"::stappler::db::Scheme::makeObjectForPatch(stappler::db::Transaction const&,uint64_t,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const",
			"::stappler::db::Scheme::updateLimits()",
			"::stappler::db::Scheme::validateHint(uint64_t,stappler::mem_pool::Value const&)",
			"::stappler::db::Scheme::validateHint(stappler::mem_pool::String const&,stappler::mem_pool::Value const&)",
			"::stappler::db::Scheme::validateHint(stappler::mem_pool::Value const&)",
			"::stappler::db::Scheme::getLinkageForView(stappler::mem_pool::Value const&,stappler::db::Scheme::ViewScheme const&) const",
			"::stappler::db::Scheme::updateView(stappler::db::Transaction const&,stappler::mem_pool::Value const&,stappler::db::Scheme::ViewScheme const*,Vector<uint64_t> const&) const",
			"::stappler::db::Scheme::fields",
			"::stappler::db::Scheme::name",
			"::stappler::db::Scheme::flags",
			"::stappler::db::Scheme::config",
			"::stappler::db::Scheme::views",
			"::stappler::db::Scheme::parents",
			"::stappler::db::Scheme::forceInclude",
			"::stappler::db::Scheme::fullTextFields",
			"::stappler::db::Scheme::autoFieldReq",
			"::stappler::db::Scheme::_hasFiles",
			"::stappler::db::Scheme::_hasForceExclude",
			"::stappler::db::Scheme::_hasAccessControl",
			"::stappler::db::Scheme::_hasVirtuals",
			"::stappler::db::Scheme::roles",
			"::stappler::db::Scheme::oidField",
			"::stappler::db::Scheme::unique",
			"::stappler::db::Scheme::_compressDict",
			"::stappler::db::operator|(Scheme::Options const&,Scheme::Options const&)",
			"::stappler::db::operator&(Scheme::Options const&,Scheme::Options const&)",
			"::stappler::db::operator^(Scheme::Options const&,Scheme::Options const&)",
			"::stappler::db::operator|=(Scheme::Options&,Scheme::Options const&)",
			"::stappler::db::operator&=(Scheme::Options&,Scheme::Options const&)",
			"::stappler::db::operator^=(Scheme::Options&,Scheme::Options const&)",
			"::stappler::db::operator==(Scheme::Options const&,std::underlying_type<Scheme::Options>::type const&)",
			"::stappler::db::operator==(std::underlying_type<Scheme::Options>::type const&,Scheme::Options const&)",
			"::stappler::db::operator!=(Scheme::Options const&,std::underlying_type<Scheme::Options>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<Scheme::Options>::type const&,Scheme::Options const&)",
			"::stappler::db::operator~(Scheme::Options const&)",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,stappler::StringView,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<StringView>&&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<const char *>&&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::foreach<typename>(Storage&&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&,stappler::db::UpdateFlags) const",
			"::stappler::db::Scheme::select<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::create<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::update<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::remove<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::count<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::touch<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::getProperty<typename,typename,typename>(_Storage&&,_Value&&,_Field&&,std::initializer_list<StringView>) const",
			"::stappler::db::Scheme::getProperty<typename,typename,typename>(_Storage&&,_Value&&,_Field&&,Set<const stappler::db::Field *> const&) const",
			"::stappler::db::Scheme::setProperty<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::appendProperty<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::clearProperty<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::countProperty<typename,typename>(T&&,Args &&...) const",
			"::stappler::db::Scheme::define<typename,typename>(T&&,Args &&...)"
		],
		"STStorageTransaction.h":  [
			"STAPPLER_DB_STSTORAGETRANSACTION_H_",
			"::stappler::db::AccessRoleId",
			"::stappler::db::Transaction",
			"::stappler::db::Transaction::Op",
			"::stappler::db::Transaction::Data",
			"::stappler::db::Transaction::Data::adapter",
			"::stappler::db::Transaction::Data::pool",
			"::stappler::db::Transaction::Data::data",
			"::stappler::db::Transaction::Data::status",
			"::stappler::db::Transaction::Data::objects",
			"::stappler::db::Transaction::Data::role",
			"::stappler::db::Transaction::Data::Data(stappler::db::Adapter const&,memory::pool_t*)",
			"::stappler::db::Transaction::Stack",
			"::stappler::db::Transaction::Stack::stack",
			"::stappler::db::Transaction::getTransactionOp(stappler::db::Action)",
			"::stappler::db::Transaction::acquire(stappler::db::Adapter const&)",
			"::stappler::db::Transaction::acquire()",
			"::stappler::db::Transaction::acquireIfExists()",
			"::stappler::db::Transaction::acquireIfExists(memory::pool_t*)",
			"::stappler::db::Transaction::Transaction(stappler::nullptr_t)",
			"::stappler::db::Transaction::setRole(stappler::db::AccessRoleId) const",
			"::stappler::db::Transaction::getRole() const",
			"::stappler::db::Transaction::setStatus(int)",
			"::stappler::db::Transaction::getStatus() const",
			"::stappler::db::Transaction::setValue(stappler::StringView const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Transaction::getValue(stappler::StringView const&) const",
			"::stappler::db::Transaction::setObject(int64_t,stappler::mem_pool::Value&&) const",
			"::stappler::db::Transaction::getObject(int64_t) const",
			"::stappler::db::Transaction::setAdapter(stappler::db::Adapter const&)",
			"::stappler::db::Transaction::getAdapter() const",
			"::stappler::db::Transaction::operator bool() const",
			"::stappler::db::Transaction::acquireObject(stappler::db::Scheme const&,uint64_t) const",
			"::stappler::db::Transaction::perform(Callback<bool ()> const&) const",
			"::stappler::db::Transaction::performAsSystem(Callback<bool ()> const&) const",
			"::stappler::db::Transaction::isInTransaction() const",
			"::stappler::db::Transaction::getTransactionStatus() const",
			"::stappler::db::Transaction::foreach(stappler::db::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&) const",
			"::stappler::db::Transaction::select(stappler::db::Worker&,stappler::db::Query const&) const",
			"::stappler::db::Transaction::count(stappler::db::Worker&,stappler::db::Query const&) const",
			"::stappler::db::Transaction::remove(stappler::db::Worker&,uint64_t) const",
			"::stappler::db::Transaction::create(stappler::db::Worker&,stappler::mem_pool::Value&) const",
			"::stappler::db::Transaction::save(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&,Vector<stappler::mem_pool::String> const&) const",
			"::stappler::db::Transaction::patch(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value&) const",
			"::stappler::db::Transaction::field(stappler::db::Action,stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&) const",
			"::stappler::db::Transaction::field(stappler::db::Action,stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&) const",
			"::stappler::db::Transaction::removeFromView(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t,stappler::mem_pool::Value const&) const",
			"::stappler::db::Transaction::addToView(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const",
			"::stappler::db::Transaction::getDeltaValue(stappler::db::Scheme const&)",
			"::stappler::db::Transaction::getDeltaValue(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t)",
			"::stappler::db::Transaction::performQueryListForIds(stappler::db::QueryList const&,size_t) const",
			"::stappler::db::Transaction::performQueryList(stappler::db::QueryList const&,size_t,bool) const",
			"::stappler::db::Transaction::performQueryListField(stappler::db::QueryList const&,stappler::db::Field const&) const",
			"::stappler::db::Transaction::scheduleAutoField(stappler::db::Scheme const&,stappler::db::Field const&,uint64_t) const",
			"::stappler::db::Transaction::retain() const",
			"::stappler::db::Transaction::release() const",
			"::stappler::db::Transaction::TransactionGuard",
			"::stappler::db::Transaction::TransactionGuard::TransactionGuard(stappler::db::Transaction const&)",
			"::stappler::db::Transaction::TransactionGuard::~TransactionGuard()",
			"::stappler::db::Transaction::TransactionGuard::_t",
			"::stappler::db::Transaction::beginTransaction() const",
			"::stappler::db::Transaction::endTransaction() const",
			"::stappler::db::Transaction::cancelTransaction() const",
			"::stappler::db::Transaction::clearObjectStorage() const",
			"::stappler::db::Transaction::processReturnObject(stappler::db::Scheme const&,stappler::mem_pool::Value&) const",
			"::stappler::db::Transaction::processReturnField(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&) const",
			"::stappler::db::Transaction::isOpAllowed(stappler::db::Scheme const&,stappler::db::Transaction::Op,stappler::db::Field const*) const",
			"::stappler::db::Transaction::Transaction(stappler::db::Transaction::Data*)",
			"::stappler::db::Transaction::_data",
			"::stappler::db::Transaction::perform(Callback<bool ()> const&) const",
			"::stappler::db::Transaction::performAsSystem(Callback<bool ()> const&) const",
			"::stappler::db::AccessRole",
			"::stappler::db::AccessRole::OnSelect",
			"::stappler::db::AccessRole::OnCount",
			"::stappler::db::AccessRole::OnCreate",
			"::stappler::db::AccessRole::OnPatch",
			"::stappler::db::AccessRole::OnSave",
			"::stappler::db::AccessRole::OnRemove",
			"::stappler::db::AccessRole::OnField",
			"::stappler::db::AccessRole::OnReturn",
			"::stappler::db::AccessRole::OnReturnField",
			"::stappler::db::AccessRole::Empty<typename>(Args &&...)",
			"::stappler::db::AccessRole::Default<typename>(Args &&...)",
			"::stappler::db::AccessRole::Admin<typename>(Args &&...)",
			"::stappler::db::AccessRole::define<typename,typename>(T&&,Args &&...)",
			"::stappler::db::AccessRole::define()",
			"::stappler::db::AccessRole::define(stappler::db::AccessRoleId)",
			"::stappler::db::AccessRole::define(Transaction::Op)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnSelect&&)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnCount&&)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnCreate&&)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnPatch&&)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnSave&&)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnRemove&&)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnField&&)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnReturn&&)",
			"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnReturnField&&)",
			"::stappler::db::AccessRole::users",
			"::stappler::db::AccessRole::operations",
			"::stappler::db::AccessRole::onSelect",
			"::stappler::db::AccessRole::onCount",
			"::stappler::db::AccessRole::onCreate",
			"::stappler::db::AccessRole::onPatch",
			"::stappler::db::AccessRole::onSave",
			"::stappler::db::AccessRole::onRemove",
			"::stappler::db::AccessRole::onField",
			"::stappler::db::AccessRole::onReturn",
			"::stappler::db::AccessRole::onReturnField",
			"::stappler::db::AccessRole::define<typename,typename>(T&&,Args &&...)",
			"::stappler::db::AccessRole::Empty<typename>(Args &&...)",
			"::stappler::db::AccessRole::Default<typename>(Args &&...)",
			"::stappler::db::AccessRole::Admin<typename>(Args &&...)"
		],
		"STStorageUser.h":  [
			"STAPPLER_DB_STSTORAGEUSER_H_",
			"::stappler::db::User",
			"::stappler::db::User::create(stappler::db::Adapter const&,stappler::StringView const&,stappler::StringView const&)",
			"::stappler::db::User::setup(stappler::db::Adapter const&,stappler::StringView const&,stappler::StringView const&)",
			"::stappler::db::User::create(stappler::db::Adapter const&,stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value&&)",
			"::stappler::db::User::get(stappler::db::Adapter const&,stappler::StringView const&,stappler::StringView const&)",
			"::stappler::db::User::get(stappler::db::Adapter const&,stappler::db::Scheme const&,stappler::StringView const&,stappler::StringView const&)",
			"::stappler::db::User::get(stappler::db::Adapter const&,stappler::db::Scheme const&,stappler::BytesView const&)",
			"::stappler::db::User::get(stappler::db::Adapter const&,uint64_t)",
			"::stappler::db::User::get(stappler::db::Adapter const&,stappler::db::Scheme const&,uint64_t)",
			"::stappler::db::User::User(stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value&&,stappler::db::Scheme const&)",
			"::stappler::db::User::validatePassword(stappler::StringView const&) const",
			"::stappler::db::User::setPassword(stappler::StringView const&)",
			"::stappler::db::User::isAdmin() const",
			"::stappler::db::User::getName() const"
		],
		"STStorageWorker.h":  [
			"STAPPLER_DB_STSTORAGEWORKER_H_",
			"::stappler::db::UpdateFlags",
			"::stappler::db::operator|(stappler::db::UpdateFlags const&,stappler::db::UpdateFlags const&)",
			"::stappler::db::operator&(stappler::db::UpdateFlags const&,stappler::db::UpdateFlags const&)",
			"::stappler::db::operator^(stappler::db::UpdateFlags const&,stappler::db::UpdateFlags const&)",
			"::stappler::db::operator|=(stappler::db::UpdateFlags&,stappler::db::UpdateFlags const&)",
			"::stappler::db::operator&=(stappler::db::UpdateFlags&,stappler::db::UpdateFlags const&)",
			"::stappler::db::operator^=(stappler::db::UpdateFlags&,stappler::db::UpdateFlags const&)",
			"::stappler::db::operator==(stappler::db::UpdateFlags const&,std::underlying_type<UpdateFlags>::type const&)",
			"::stappler::db::operator==(std::underlying_type<UpdateFlags>::type const&,stappler::db::UpdateFlags const&)",
			"::stappler::db::operator!=(stappler::db::UpdateFlags const&,std::underlying_type<UpdateFlags>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<UpdateFlags>::type const&,stappler::db::UpdateFlags const&)",
			"::stappler::db::operator~(stappler::db::UpdateFlags const&)",
			"::stappler::db::Conflict",
			"::stappler::db::Conflict::Flags",
			"::stappler::db::Conflict::update(stappler::StringView)",
			"::stappler::db::Conflict::field",
			"::stappler::db::Conflict::condition",
			"::stappler::db::Conflict::mask",
			"::stappler::db::Conflict::flags",
			"::stappler::db::Conflict::Conflict(Conflict::Flags)",
			"::stappler::db::Conflict::Conflict(stappler::StringView,Query::Select&&,stappler::db::Conflict::Flags)",
			"::stappler::db::Conflict::Conflict(stappler::StringView,Query::Select&&,Vector<stappler::mem_pool::String>&&)",
			"::stappler::db::Conflict::setFlags(stappler::db::Conflict::Flags)",
			"::stappler::db::operator|(Conflict::Flags const&,Conflict::Flags const&)",
			"::stappler::db::operator&(Conflict::Flags const&,Conflict::Flags const&)",
			"::stappler::db::operator^(Conflict::Flags const&,Conflict::Flags const&)",
			"::stappler::db::operator|=(Conflict::Flags&,Conflict::Flags const&)",
			"::stappler::db::operator&=(Conflict::Flags&,Conflict::Flags const&)",
			"::stappler::db::operator^=(Conflict::Flags&,Conflict::Flags const&)",
			"::stappler::db::operator==(Conflict::Flags const&,std::underlying_type<Conflict::Flags>::type const&)",
			"::stappler::db::operator==(std::underlying_type<Conflict::Flags>::type const&,Conflict::Flags const&)",
			"::stappler::db::operator!=(Conflict::Flags const&,std::underlying_type<Conflict::Flags>::type const&)",
			"::stappler::db::operator!=(std::underlying_type<Conflict::Flags>::type const&,Conflict::Flags const&)",
			"::stappler::db::operator~(Conflict::Flags const&)",
			"::stappler::db::Worker",
			"::stappler::db::Worker::FieldCallback",
			"::stappler::db::Worker::RequiredFields",
			"::stappler::db::Worker::RequiredFields::scheme",
			"::stappler::db::Worker::RequiredFields::includeFields",
			"::stappler::db::Worker::RequiredFields::excludeFields",
			"::stappler::db::Worker::RequiredFields::includeNone",
			"::stappler::db::Worker::RequiredFields::includeAll",
			"::stappler::db::Worker::RequiredFields::clear()",
			"::stappler::db::Worker::RequiredFields::reset(stappler::db::Scheme const&)",
			"::stappler::db::Worker::RequiredFields::include(std::initializer_list<StringView>)",
			"::stappler::db::Worker::RequiredFields::include(Set<const stappler::db::Field *> const&)",
			"::stappler::db::Worker::RequiredFields::include(stappler::StringView const&)",
			"::stappler::db::Worker::RequiredFields::include(stappler::db::Field const*)",
			"::stappler::db::Worker::RequiredFields::exclude(std::initializer_list<StringView>)",
			"::stappler::db::Worker::RequiredFields::exclude(Set<const stappler::db::Field *> const&)",
			"::stappler::db::Worker::RequiredFields::exclude(stappler::StringView const&)",
			"::stappler::db::Worker::RequiredFields::exclude(stappler::db::Field const*)",
			"::stappler::db::Worker::ConditionData",
			"::stappler::db::Worker::ConditionData::compare",
			"::stappler::db::Worker::ConditionData::value1",
			"::stappler::db::Worker::ConditionData::value2",
			"::stappler::db::Worker::ConditionData::field",
			"::stappler::db::Worker::ConditionData::ConditionData()",
			"::stappler::db::Worker::ConditionData::ConditionData(Query::Select const&,stappler::db::Field const*)",
			"::stappler::db::Worker::ConditionData::ConditionData(Query::Select&&,stappler::db::Field const*)",
			"::stappler::db::Worker::ConditionData::set(Query::Select&&,stappler::db::Field const*)",
			"::stappler::db::Worker::ConditionData::set(Query::Select const&,stappler::db::Field const*)",
			"::stappler::db::Worker::ConflictData",
			"::stappler::db::Worker::ConflictData::field",
			"::stappler::db::Worker::ConflictData::condition",
			"::stappler::db::Worker::ConflictData::mask",
			"::stappler::db::Worker::ConflictData::flags",
			"::stappler::db::Worker::ConflictData::isDoNothing() const",
			"::stappler::db::Worker::ConflictData::hasCondition() const",
			"::stappler::db::Worker::Worker(stappler::db::Scheme const&)",
			"::stappler::db::Worker::Worker(stappler::db::Scheme const&,stappler::db::Adapter const&)",
			"::stappler::db::Worker::Worker(stappler::db::Scheme const&,stappler::db::Transaction const&)",
			"::stappler::db::Worker::Worker(stappler::db::Worker const&)",
			"::stappler::db::Worker::Worker(stappler::db::Worker&&)",
			"::stappler::db::Worker::operator=(stappler::db::Worker&&)",
			"::stappler::db::Worker::operator=(stappler::db::Worker const&)",
			"::stappler::db::Worker::~Worker()",
			"::stappler::db::Worker::perform<typename>(Callback const&) const",
			"::stappler::db::Worker::transaction() const",
			"::stappler::db::Worker::scheme() const",
			"::stappler::db::Worker::includeNone()",
			"::stappler::db::Worker::include<typename>(T&&)",
			"::stappler::db::Worker::exclude<typename>(T&&)",
			"::stappler::db::Worker::clearRequiredFields()",
			"::stappler::db::Worker::shouldIncludeNone() const",
			"::stappler::db::Worker::shouldIncludeAll() const",
			"::stappler::db::Worker::asSystem()",
			"::stappler::db::Worker::isSystem() const",
			"::stappler::db::Worker::getRequiredFields() const",
			"::stappler::db::Worker::getConflicts() const",
			"::stappler::db::Worker::getConditions() const",
			"::stappler::db::Worker::get(uint64_t,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::StringView const&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::mem_pool::Value const&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(uint64_t,stappler::StringView,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::StringView const&,stappler::StringView,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::mem_pool::Value const&,stappler::StringView,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(uint64_t,std::initializer_list<StringView>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::StringView const&,std::initializer_list<StringView>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::mem_pool::Value const&,std::initializer_list<StringView>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(uint64_t,std::initializer_list<const char *>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::StringView const&,std::initializer_list<const char *>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::mem_pool::Value const&,std::initializer_list<const char *>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(uint64_t,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::StringView const&,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::mem_pool::Value const&,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(uint64_t,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::StringView const&,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::get(stappler::mem_pool::Value const&,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::foreach(stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::select(stappler::db::Query const&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::create(stappler::mem_pool::Value const&,bool)",
			"::stappler::db::Worker::create(stappler::mem_pool::Value const&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::create(stappler::mem_pool::Value const&,stappler::db::UpdateFlags,stappler::db::Conflict const&)",
			"::stappler::db::Worker::create(stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Vector<stappler::db::Conflict> const&)",
			"::stappler::db::Worker::create(stappler::mem_pool::Value const&,Conflict::Flags)",
			"::stappler::db::Worker::create(stappler::mem_pool::Value const&,stappler::db::Conflict const&)",
			"::stappler::db::Worker::create(stappler::mem_pool::Value const&,Vector<stappler::db::Conflict> const&)",
			"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,bool)",
			"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,bool)",
			"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,stappler::db::UpdateFlags)",
			"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Query::Select const&)",
			"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Query::Select const&)",
			"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Vector<Query::Select> const&)",
			"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Vector<Query::Select> const&)",
			"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,Query::Select const&)",
			"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,Query::Select const&)",
			"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,Vector<Query::Select> const&)",
			"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,Vector<Query::Select> const&)",
			"::stappler::db::Worker::remove(uint64_t)",
			"::stappler::db::Worker::remove(stappler::mem_pool::Value const&)",
			"::stappler::db::Worker::count()",
			"::stappler::db::Worker::count(stappler::db::Query const&)",
			"::stappler::db::Worker::touch(uint64_t)",
			"::stappler::db::Worker::touch(stappler::mem_pool::Value const&)",
			"::stappler::db::Worker::getField(uint64_t,stappler::StringView const&,std::initializer_list<StringView>)",
			"::stappler::db::Worker::getField(stappler::mem_pool::Value const&,stappler::StringView const&,std::initializer_list<StringView>)",
			"::stappler::db::Worker::getField(uint64_t,stappler::StringView const&,Set<const stappler::db::Field *> const&)",
			"::stappler::db::Worker::getField(stappler::mem_pool::Value const&,stappler::StringView const&,Set<const stappler::db::Field *> const&)",
			"::stappler::db::Worker::setField(uint64_t,stappler::StringView const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::setField(stappler::mem_pool::Value const&,stappler::StringView const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::setField(uint64_t,stappler::StringView const&,stappler::db::InputFile&)",
			"::stappler::db::Worker::setField(stappler::mem_pool::Value const&,stappler::StringView const&,stappler::db::InputFile&)",
			"::stappler::db::Worker::clearField(uint64_t,stappler::StringView const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::clearField(stappler::mem_pool::Value const&,stappler::StringView const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::appendField(uint64_t,stappler::StringView const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::appendField(stappler::mem_pool::Value const&,stappler::StringView const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::countField(uint64_t,stappler::StringView const&)",
			"::stappler::db::Worker::countField(stappler::mem_pool::Value const&,stappler::StringView const&)",
			"::stappler::db::Worker::getField(uint64_t,stappler::db::Field const&,std::initializer_list<StringView>)",
			"::stappler::db::Worker::getField(stappler::mem_pool::Value const&,stappler::db::Field const&,std::initializer_list<StringView>)",
			"::stappler::db::Worker::getField(uint64_t,stappler::db::Field const&,Set<const stappler::db::Field *> const&)",
			"::stappler::db::Worker::getField(stappler::mem_pool::Value const&,stappler::db::Field const&,Set<const stappler::db::Field *> const&)",
			"::stappler::db::Worker::setField(uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::setField(stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::setField(uint64_t,stappler::db::Field const&,stappler::db::InputFile&)",
			"::stappler::db::Worker::setField(stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::db::InputFile&)",
			"::stappler::db::Worker::clearField(uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::clearField(stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::appendField(uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::appendField(stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&)",
			"::stappler::db::Worker::countField(uint64_t,stappler::db::Field const&)",
			"::stappler::db::Worker::countField(stappler::mem_pool::Value const&,stappler::db::Field const&)",
			"::stappler::db::Worker::getFieldSet(stappler::db::Field const&,std::initializer_list<StringView>) const",
			"::stappler::db::Worker::addConflict(stappler::db::Conflict const&)",
			"::stappler::db::Worker::addConflict(Vector<stappler::db::Conflict> const&)",
			"::stappler::db::Worker::addCondition(Query::Select const&)",
			"::stappler::db::Worker::addCondition(Vector<Query::Select> const&)",
			"::stappler::db::Worker::reduceGetQuery(stappler::db::Query const&,bool)",
			"::stappler::db::Worker::_conflict",
			"::stappler::db::Worker::_conditions",
			"::stappler::db::Worker::_required",
			"::stappler::db::Worker::_scheme",
			"::stappler::db::Worker::_transaction",
			"::stappler::db::Worker::_isSystem",
			"::stappler::db::FieldResolver",
			"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,stappler::db::Worker const&,stappler::db::Query const&)",
			"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,stappler::db::Worker const&)",
			"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,stappler::db::Query const&)",
			"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,stappler::db::Query const&,Set<const stappler::db::Field *> const&)",
			"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&)",
			"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,Set<const stappler::db::Field *> const&)",
			"::stappler::db::FieldResolver::shouldResolveFields() const",
			"::stappler::db::FieldResolver::hasIncludesOrExcludes() const",
			"::stappler::db::FieldResolver::shouldIncludeAll() const",
			"::stappler::db::FieldResolver::shouldIncludeField(stappler::db::Field const&) const",
			"::stappler::db::FieldResolver::shouldExcludeField(stappler::db::Field const&) const",
			"::stappler::db::FieldResolver::isFieldRequired(stappler::db::Field const&) const",
			"::stappler::db::FieldResolver::getVirtuals() const",
			"::stappler::db::FieldResolver::readFields(Worker::FieldCallback const&,bool)",
			"::stappler::db::FieldResolver::include(stappler::StringView)",
			"::stappler::db::FieldResolver::scheme",
			"::stappler::db::FieldResolver::required",
			"::stappler::db::FieldResolver::query",
			"::stappler::db::FieldResolver::requiredFields",
			"::stappler::db::Worker::perform<typename>(Callback const&) const"
		],
		"XLAction.h":  [
			"XENOLITH_SCENE_ACTIONS_XLACTION_H_",
			"::stappler::xenolith::Action",
			"::stappler::xenolith::Action::INVALID_TAG",
			"::stappler::xenolith::Action::~Action()",
			"::stappler::xenolith::Action::Action()",
			"::stappler::xenolith::Action::isDone() const",
			"::stappler::xenolith::Action::invalidate()",
			"::stappler::xenolith::Action::stop()",
			"::stappler::xenolith::Action::step(float)",
			"::stappler::xenolith::Action::update(float)",
			"::stappler::xenolith::Action::getContainer() const",
			"::stappler::xenolith::Action::getTarget() const",
			"::stappler::xenolith::Action::getTag() const",
			"::stappler::xenolith::Action::setTag(uint32_t)",
			"::stappler::xenolith::Action::getDuration() const",
			"::stappler::xenolith::Action::setDuration(float)",
			"::stappler::xenolith::Action::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::Action::setContainer(stappler::xenolith::Node*)",
			"::stappler::xenolith::Action::setTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::Action::_container",
			"::stappler::xenolith::Action::_target",
			"::stappler::xenolith::Action::_tag",
			"::stappler::xenolith::Action::_duration",
			"::stappler::xenolith::ActionInstant",
			"::stappler::xenolith::ActionInstant::~ActionInstant()",
			"::stappler::xenolith::ActionInstant::init(bool)",
			"::stappler::xenolith::ActionInstant::step(float)",
			"::stappler::xenolith::ActionInstant::_runOnce",
			"::stappler::xenolith::ActionInstant::_performed",
			"::stappler::xenolith::Show",
			"::stappler::xenolith::Show::~Show()",
			"::stappler::xenolith::Show::update(float)",
			"::stappler::xenolith::Hide",
			"::stappler::xenolith::Hide::~Hide()",
			"::stappler::xenolith::Hide::update(float)",
			"::stappler::xenolith::ToggleVisibility",
			"::stappler::xenolith::ToggleVisibility::~ToggleVisibility()",
			"::stappler::xenolith::ToggleVisibility::update(float)",
			"::stappler::xenolith::RemoveSelf",
			"::stappler::xenolith::RemoveSelf::~RemoveSelf()",
			"::stappler::xenolith::RemoveSelf::init(bool,bool)",
			"::stappler::xenolith::RemoveSelf::update(float)",
			"::stappler::xenolith::RemoveSelf::_isNeedCleanUp",
			"::stappler::xenolith::Place",
			"::stappler::xenolith::Place::~Place()",
			"::stappler::xenolith::Place::init(stappler::xenolith::Vec2 const&,bool)",
			"::stappler::xenolith::Place::update(float)",
			"::stappler::xenolith::Place::_position",
			"::stappler::xenolith::CallFunc",
			"::stappler::xenolith::CallFunc::~CallFunc()",
			"::stappler::xenolith::CallFunc::init(Function<void ()>&&,bool)",
			"::stappler::xenolith::CallFunc::update(float)",
			"::stappler::xenolith::CallFunc::_callback",
			"::stappler::xenolith::ActionInterval",
			"::stappler::xenolith::ActionInterval::~ActionInterval()",
			"::stappler::xenolith::ActionInterval::init(float)",
			"::stappler::xenolith::ActionInterval::getElapsed()",
			"::stappler::xenolith::ActionInterval::isDone() const",
			"::stappler::xenolith::ActionInterval::step(float)",
			"::stappler::xenolith::ActionInterval::setDuration(float)",
			"::stappler::xenolith::ActionInterval::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::ActionInterval::_elapsed",
			"::stappler::xenolith::ActionInterval::_firstTick",
			"::stappler::xenolith::Speed",
			"::stappler::xenolith::Speed::~Speed()",
			"::stappler::xenolith::Speed::Speed()",
			"::stappler::xenolith::Speed::init(stappler::xenolith::ActionInterval*,float)",
			"::stappler::xenolith::Speed::getSpeed() const",
			"::stappler::xenolith::Speed::setSpeed(float)",
			"::stappler::xenolith::Speed::getInnerAction() const",
			"::stappler::xenolith::Speed::setInnerAction(stappler::xenolith::ActionInterval*)",
			"::stappler::xenolith::Speed::stop()",
			"::stappler::xenolith::Speed::step(float)",
			"::stappler::xenolith::Speed::isDone() const",
			"::stappler::xenolith::Speed::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::Speed::_speed",
			"::stappler::xenolith::Speed::_innerAction",
			"::stappler::xenolith::Sequence",
			"::stappler::xenolith::Sequence::~Sequence()",
			"::stappler::xenolith::Sequence::init<typename>(Args &&...)",
			"::stappler::xenolith::Sequence::stop()",
			"::stappler::xenolith::Sequence::update(float)",
			"::stappler::xenolith::Sequence::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::Sequence::reserve(size_t)",
			"::stappler::xenolith::Sequence::addAction(Function<void ()>&&)",
			"::stappler::xenolith::Sequence::addAction(float)",
			"::stappler::xenolith::Sequence::addAction<typename>(Rc<T> const&)",
			"::stappler::xenolith::Sequence::addAction(stappler::xenolith::Action*)",
			"::stappler::xenolith::Sequence::initWithActions<typename,typename>(T&&,Args &&...)",
			"::stappler::xenolith::Sequence::initWithActions<typename>(T&&)",
			"::stappler::xenolith::Sequence::ActionData",
			"::stappler::xenolith::Sequence::ActionData::action",
			"::stappler::xenolith::Sequence::ActionData::minThreshold",
			"::stappler::xenolith::Sequence::ActionData::maxThreshold",
			"::stappler::xenolith::Sequence::ActionData::threshold",
			"::stappler::xenolith::Sequence::_actions",
			"::stappler::xenolith::Sequence::_prevTime",
			"::stappler::xenolith::Sequence::_currentIdx",
			"::stappler::xenolith::Spawn",
			"::stappler::xenolith::Spawn::~Spawn()",
			"::stappler::xenolith::Spawn::init<typename>(Args &&...)",
			"::stappler::xenolith::Spawn::stop()",
			"::stappler::xenolith::Spawn::update(float)",
			"::stappler::xenolith::Spawn::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::Spawn::reserve(size_t)",
			"::stappler::xenolith::Spawn::addAction(Function<void ()>&&)",
			"::stappler::xenolith::Spawn::addAction(float)",
			"::stappler::xenolith::Spawn::addAction<typename>(Rc<T> const&)",
			"::stappler::xenolith::Spawn::addAction(stappler::xenolith::Action*)",
			"::stappler::xenolith::Spawn::initWithActions<typename,typename>(T&&,Args &&...)",
			"::stappler::xenolith::Spawn::initWithActions<typename>(T&&)",
			"::stappler::xenolith::Spawn::ActionData",
			"::stappler::xenolith::Spawn::ActionData::action",
			"::stappler::xenolith::Spawn::ActionData::threshold",
			"::stappler::xenolith::Spawn::_actions",
			"::stappler::xenolith::Spawn::_prevTime",
			"::stappler::xenolith::Spawn::_currentIdx",
			"::stappler::xenolith::DelayTime",
			"::stappler::xenolith::DelayTime::~DelayTime()",
			"::stappler::xenolith::DelayTime::update(float)",
			"::stappler::xenolith::TintTo",
			"::stappler::xenolith::TintTo::~TintTo()",
			"::stappler::xenolith::TintTo::init(float,stappler::xenolith::Color4F const&,stappler::xenolith::ColorMask)",
			"::stappler::xenolith::TintTo::update(float)",
			"::stappler::xenolith::TintTo::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::TintTo::_mask",
			"::stappler::xenolith::TintTo::_to",
			"::stappler::xenolith::TintTo::_from",
			"::stappler::xenolith::ActionProgress",
			"::stappler::xenolith::ActionProgress::StartCallback",
			"::stappler::xenolith::ActionProgress::UpdateCallback",
			"::stappler::xenolith::ActionProgress::StopCallback",
			"::stappler::xenolith::ActionProgress::~ActionProgress()",
			"::stappler::xenolith::ActionProgress::init(float,stappler::xenolith::ActionProgress::UpdateCallback&&,stappler::xenolith::ActionProgress::StartCallback&&,stappler::xenolith::ActionProgress::StopCallback&&)",
			"::stappler::xenolith::ActionProgress::init(float,float,stappler::xenolith::ActionProgress::UpdateCallback&&,stappler::xenolith::ActionProgress::StartCallback&&,stappler::xenolith::ActionProgress::StopCallback&&)",
			"::stappler::xenolith::ActionProgress::init(float,float,float,stappler::xenolith::ActionProgress::UpdateCallback&&,stappler::xenolith::ActionProgress::StartCallback&&,stappler::xenolith::ActionProgress::StopCallback&&)",
			"::stappler::xenolith::ActionProgress::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::ActionProgress::update(float)",
			"::stappler::xenolith::ActionProgress::stop()",
			"::stappler::xenolith::ActionProgress::setSourceProgress(float)",
			"::stappler::xenolith::ActionProgress::getSourceProgress() const",
			"::stappler::xenolith::ActionProgress::setTargetProgress(float)",
			"::stappler::xenolith::ActionProgress::getTargetProgress() const",
			"::stappler::xenolith::ActionProgress::setStartCallback(stappler::xenolith::ActionProgress::StartCallback&&)",
			"::stappler::xenolith::ActionProgress::setUpdateCallback(stappler::xenolith::ActionProgress::UpdateCallback&&)",
			"::stappler::xenolith::ActionProgress::setStopCallback(stappler::xenolith::ActionProgress::StopCallback&&)",
			"::stappler::xenolith::ActionProgress::_stopped",
			"::stappler::xenolith::ActionProgress::_sourceProgress",
			"::stappler::xenolith::ActionProgress::_targetProgress",
			"::stappler::xenolith::ActionProgress::_onStart",
			"::stappler::xenolith::ActionProgress::_onUpdate",
			"::stappler::xenolith::ActionProgress::_onStop",
			"::stappler::xenolith::MoveTo",
			"::stappler::xenolith::MoveTo::~MoveTo()",
			"::stappler::xenolith::MoveTo::init(float,stappler::xenolith::Vec2 const&)",
			"::stappler::xenolith::MoveTo::init(float,stappler::xenolith::Vec3 const&)",
			"::stappler::xenolith::MoveTo::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::MoveTo::update(float)",
			"::stappler::xenolith::MoveTo::_startPosition",
			"::stappler::xenolith::MoveTo::_endPosition",
			"::stappler::xenolith::ScaleTo",
			"::stappler::xenolith::ScaleTo::~ScaleTo()",
			"::stappler::xenolith::ScaleTo::init(float,float)",
			"::stappler::xenolith::ScaleTo::init(float,stappler::xenolith::Vec3 const&)",
			"::stappler::xenolith::ScaleTo::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::ScaleTo::update(float)",
			"::stappler::xenolith::ScaleTo::_startScale",
			"::stappler::xenolith::ScaleTo::_endScale",
			"::stappler::xenolith::ResizeTo",
			"::stappler::xenolith::ResizeTo::~ResizeTo()",
			"::stappler::xenolith::ResizeTo::init(float,stappler::xenolith::Size2 const&)",
			"::stappler::xenolith::ResizeTo::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::ResizeTo::update(float)",
			"::stappler::xenolith::ResizeTo::_startSize",
			"::stappler::xenolith::ResizeTo::_endSize",
			"::stappler::xenolith::FadeTo",
			"::stappler::xenolith::FadeTo::~FadeTo()",
			"::stappler::xenolith::FadeTo::init(float,float)",
			"::stappler::xenolith::FadeTo::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::FadeTo::update(float)",
			"::stappler::xenolith::FadeTo::_startOpacity",
			"::stappler::xenolith::FadeTo::_endOpacity"
		],
		"XLActionEase.h":  [
			"XENOLITH_SCENE_ACTIONS_XLACTIONEASE_H_",
			"::stappler::xenolith::interpolation::Type",
			"::stappler::xenolith::interpolation::interpolateTo(float,stappler::xenolith::interpolation::Type,float*)",
			"::stappler::xenolith::interpolation::linear(float)",
			"::stappler::xenolith::interpolation::easeIn(float,float)",
			"::stappler::xenolith::interpolation::easeOut(float,float)",
			"::stappler::xenolith::interpolation::easeInOut(float,float)",
			"::stappler::xenolith::interpolation::bezieratFunction(float,float,float,float,float)",
			"::stappler::xenolith::interpolation::quadraticIn(float)",
			"::stappler::xenolith::interpolation::quadraticOut(float)",
			"::stappler::xenolith::interpolation::quadraticInOut(float)",
			"::stappler::xenolith::interpolation::sineEaseIn(float)",
			"::stappler::xenolith::interpolation::sineEaseOut(float)",
			"::stappler::xenolith::interpolation::sineEaseInOut(float)",
			"::stappler::xenolith::interpolation::quadEaseIn(float)",
			"::stappler::xenolith::interpolation::quadEaseOut(float)",
			"::stappler::xenolith::interpolation::quadEaseInOut(float)",
			"::stappler::xenolith::interpolation::cubicEaseIn(float)",
			"::stappler::xenolith::interpolation::cubicEaseOut(float)",
			"::stappler::xenolith::interpolation::cubicEaseInOut(float)",
			"::stappler::xenolith::interpolation::quartEaseIn(float)",
			"::stappler::xenolith::interpolation::quartEaseOut(float)",
			"::stappler::xenolith::interpolation::quartEaseInOut(float)",
			"::stappler::xenolith::interpolation::quintEaseIn(float)",
			"::stappler::xenolith::interpolation::quintEaseOut(float)",
			"::stappler::xenolith::interpolation::quintEaseInOut(float)",
			"::stappler::xenolith::interpolation::expoEaseIn(float)",
			"::stappler::xenolith::interpolation::expoEaseOut(float)",
			"::stappler::xenolith::interpolation::expoEaseInOut(float)",
			"::stappler::xenolith::interpolation::circEaseIn(float)",
			"::stappler::xenolith::interpolation::circEaseOut(float)",
			"::stappler::xenolith::interpolation::circEaseInOut(float)",
			"::stappler::xenolith::interpolation::elasticEaseIn(float,float)",
			"::stappler::xenolith::interpolation::elasticEaseOut(float,float)",
			"::stappler::xenolith::interpolation::elasticEaseInOut(float,float)",
			"::stappler::xenolith::interpolation::backEaseIn(float)",
			"::stappler::xenolith::interpolation::backEaseOut(float)",
			"::stappler::xenolith::interpolation::backEaseInOut(float)",
			"::stappler::xenolith::interpolation::bounceEaseIn(float)",
			"::stappler::xenolith::interpolation::bounceEaseOut(float)",
			"::stappler::xenolith::interpolation::bounceEaseInOut(float)",
			"::stappler::xenolith::interpolation::customEase(float,float*)",
			"::stappler::xenolith::ActionEase",
			"::stappler::xenolith::ActionEase::~ActionEase()",
			"::stappler::xenolith::ActionEase::init(stappler::xenolith::ActionInterval*)",
			"::stappler::xenolith::ActionEase::startWithTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::ActionEase::stop()",
			"::stappler::xenolith::ActionEase::update(float)",
			"::stappler::xenolith::ActionEase::_inner",
			"::stappler::xenolith::EaseRateAction",
			"::stappler::xenolith::EaseRateAction::~EaseRateAction()",
			"::stappler::xenolith::EaseRateAction::init(stappler::xenolith::ActionInterval*,float)",
			"::stappler::xenolith::EaseRateAction::setRate(float)",
			"::stappler::xenolith::EaseRateAction::getRate() const",
			"::stappler::xenolith::EaseRateAction::_rate",
			"::stappler::xenolith::EaseIn",
			"::stappler::xenolith::EaseIn::~EaseIn()",
			"::stappler::xenolith::EaseIn::update(float)",
			"::stappler::xenolith::EaseOut",
			"::stappler::xenolith::EaseOut::~EaseOut()",
			"::stappler::xenolith::EaseOut::update(float)",
			"::stappler::xenolith::EaseInOut",
			"::stappler::xenolith::EaseInOut::~EaseInOut()",
			"::stappler::xenolith::EaseInOut::update(float)",
			"::stappler::xenolith::EaseExponentialIn",
			"::stappler::xenolith::EaseExponentialIn::~EaseExponentialIn()",
			"::stappler::xenolith::EaseExponentialIn::update(float)",
			"::stappler::xenolith::EaseExponentialOut",
			"::stappler::xenolith::EaseExponentialOut::~EaseExponentialOut()",
			"::stappler::xenolith::EaseExponentialOut::update(float)",
			"::stappler::xenolith::EaseExponentialInOut",
			"::stappler::xenolith::EaseExponentialInOut::~EaseExponentialInOut()",
			"::stappler::xenolith::EaseExponentialInOut::update(float)",
			"::stappler::xenolith::EaseSineIn",
			"::stappler::xenolith::EaseSineIn::~EaseSineIn()",
			"::stappler::xenolith::EaseSineIn::update(float)",
			"::stappler::xenolith::EaseSineOut",
			"::stappler::xenolith::EaseSineOut::~EaseSineOut()",
			"::stappler::xenolith::EaseSineOut::update(float)",
			"::stappler::xenolith::EaseSineInOut",
			"::stappler::xenolith::EaseSineInOut::~EaseSineInOut()",
			"::stappler::xenolith::EaseSineInOut::update(float)",
			"::stappler::xenolith::EaseElastic",
			"::stappler::xenolith::EaseElastic::~EaseElastic()",
			"::stappler::xenolith::EaseElastic::init(stappler::xenolith::ActionInterval*,float)",
			"::stappler::xenolith::EaseElastic::getPeriod() const",
			"::stappler::xenolith::EaseElastic::setPeriod(float)",
			"::stappler::xenolith::EaseElastic::_period",
			"::stappler::xenolith::EaseElasticIn",
			"::stappler::xenolith::EaseElasticIn::~EaseElasticIn()",
			"::stappler::xenolith::EaseElasticIn::update(float)",
			"::stappler::xenolith::EaseElasticOut",
			"::stappler::xenolith::EaseElasticOut::~EaseElasticOut()",
			"::stappler::xenolith::EaseElasticOut::update(float)",
			"::stappler::xenolith::EaseElasticInOut",
			"::stappler::xenolith::EaseElasticInOut::~EaseElasticInOut()",
			"::stappler::xenolith::EaseElasticInOut::update(float)",
			"::stappler::xenolith::EaseBounceIn",
			"::stappler::xenolith::EaseBounceIn::~EaseBounceIn()",
			"::stappler::xenolith::EaseBounceIn::update(float)",
			"::stappler::xenolith::EaseBounceOut",
			"::stappler::xenolith::EaseBounceOut::~EaseBounceOut()",
			"::stappler::xenolith::EaseBounceOut::update(float)",
			"::stappler::xenolith::EaseBounceInOut",
			"::stappler::xenolith::EaseBounceInOut::~EaseBounceInOut()",
			"::stappler::xenolith::EaseBounceInOut::update(float)",
			"::stappler::xenolith::EaseBackIn",
			"::stappler::xenolith::EaseBackIn::~EaseBackIn()",
			"::stappler::xenolith::EaseBackIn::update(float)",
			"::stappler::xenolith::EaseBackOut",
			"::stappler::xenolith::EaseBackOut::~EaseBackOut()",
			"::stappler::xenolith::EaseBackOut::update(float)",
			"::stappler::xenolith::EaseBackInOut",
			"::stappler::xenolith::EaseBackInOut::~EaseBackInOut()",
			"::stappler::xenolith::EaseBackInOut::update(float)",
			"::stappler::xenolith::EaseBezierAction",
			"::stappler::xenolith::EaseBezierAction::~EaseBezierAction()",
			"::stappler::xenolith::EaseBezierAction::init(stappler::xenolith::ActionInterval*,float,float,float,float)",
			"::stappler::xenolith::EaseBezierAction::update(float)",
			"::stappler::xenolith::EaseBezierAction::_p0",
			"::stappler::xenolith::EaseBezierAction::_p1",
			"::stappler::xenolith::EaseBezierAction::_p2",
			"::stappler::xenolith::EaseBezierAction::_p3",
			"::stappler::xenolith::EaseQuadraticActionIn",
			"::stappler::xenolith::EaseQuadraticActionIn::~EaseQuadraticActionIn()",
			"::stappler::xenolith::EaseQuadraticActionIn::update(float)",
			"::stappler::xenolith::EaseQuadraticActionOut",
			"::stappler::xenolith::EaseQuadraticActionOut::~EaseQuadraticActionOut()",
			"::stappler::xenolith::EaseQuadraticActionOut::update(float)",
			"::stappler::xenolith::EaseQuadraticActionInOut",
			"::stappler::xenolith::EaseQuadraticActionInOut::~EaseQuadraticActionInOut()",
			"::stappler::xenolith::EaseQuadraticActionInOut::update(float)",
			"::stappler::xenolith::EaseQuarticActionIn",
			"::stappler::xenolith::EaseQuarticActionIn::~EaseQuarticActionIn()",
			"::stappler::xenolith::EaseQuarticActionIn::update(float)",
			"::stappler::xenolith::EaseQuarticActionOut",
			"::stappler::xenolith::EaseQuarticActionOut::~EaseQuarticActionOut()",
			"::stappler::xenolith::EaseQuarticActionOut::update(float)",
			"::stappler::xenolith::EaseQuarticActionInOut",
			"::stappler::xenolith::EaseQuarticActionInOut::~EaseQuarticActionInOut()",
			"::stappler::xenolith::EaseQuarticActionInOut::update(float)",
			"::stappler::xenolith::EaseQuinticActionIn",
			"::stappler::xenolith::EaseQuinticActionIn::~EaseQuinticActionIn()",
			"::stappler::xenolith::EaseQuinticActionIn::update(float)",
			"::stappler::xenolith::EaseQuinticActionOut",
			"::stappler::xenolith::EaseQuinticActionOut::~EaseQuinticActionOut()",
			"::stappler::xenolith::EaseQuinticActionOut::update(float)",
			"::stappler::xenolith::EaseQuinticActionInOut",
			"::stappler::xenolith::EaseQuinticActionInOut::~EaseQuinticActionInOut()",
			"::stappler::xenolith::EaseQuinticActionInOut::update(float)",
			"::stappler::xenolith::EaseCircleActionIn",
			"::stappler::xenolith::EaseCircleActionIn::~EaseCircleActionIn()",
			"::stappler::xenolith::EaseCircleActionIn::update(float)",
			"::stappler::xenolith::EaseCircleActionOut",
			"::stappler::xenolith::EaseCircleActionOut::~EaseCircleActionOut()",
			"::stappler::xenolith::EaseCircleActionOut::update(float)",
			"::stappler::xenolith::EaseCircleActionInOut",
			"::stappler::xenolith::EaseCircleActionInOut::~EaseCircleActionInOut()",
			"::stappler::xenolith::EaseCircleActionInOut::update(float)",
			"::stappler::xenolith::EaseCubicActionIn",
			"::stappler::xenolith::EaseCubicActionIn::~EaseCubicActionIn()",
			"::stappler::xenolith::EaseCubicActionIn::update(float)",
			"::stappler::xenolith::EaseCubicActionOut",
			"::stappler::xenolith::EaseCubicActionOut::~EaseCubicActionOut()",
			"::stappler::xenolith::EaseCubicActionOut::update(float)",
			"::stappler::xenolith::EaseCubicActionInOut",
			"::stappler::xenolith::EaseCubicActionInOut::~EaseCubicActionInOut()",
			"::stappler::xenolith::EaseCubicActionInOut::update(float)"
		],
		"XLActionManager.h":  [
			"XENOLITH_SCENE_ACTIONS_XLACTIONMANAGER_H_",
			"::stappler::xenolith::ActionContainer",
			"::stappler::xenolith::ActionContainer::target",
			"::stappler::xenolith::ActionContainer::paused",
			"::stappler::xenolith::ActionContainer::~ActionContainer()",
			"::stappler::xenolith::ActionContainer::ActionContainer(stappler::xenolith::Node*)",
			"::stappler::xenolith::HashTraitActionContainer",
			"::stappler::xenolith::HashTraitActionContainer::hash(uint32_t,stappler::xenolith::ActionContainer const&)",
			"::stappler::xenolith::HashTraitActionContainer::hash(uint32_t,stappler::xenolith::Node const*)",
			"::stappler::xenolith::HashTraitActionContainer::equal(stappler::xenolith::ActionContainer const&,stappler::xenolith::ActionContainer const&)",
			"::stappler::xenolith::HashTraitActionContainer::equal(stappler::xenolith::ActionContainer const&,stappler::xenolith::Node const*)",
			"::stappler::HashTraitDiscovery<xenolith::ActionContainer>::HashTraitDiscovery<xenolith::ActionContainer>",
			"::stappler::HashTraitDiscovery<xenolith::ActionContainer>::type",
			"::stappler::xenolith::ActionManager",
			"::stappler::xenolith::ActionManager::~ActionManager()",
			"::stappler::xenolith::ActionManager::ActionManager()",
			"::stappler::xenolith::ActionManager::init()",
			"::stappler::xenolith::ActionManager::addAction(stappler::xenolith::Action*,stappler::xenolith::Node*,bool)",
			"::stappler::xenolith::ActionManager::removeAllActions()",
			"::stappler::xenolith::ActionManager::removeAllActionsFromTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::ActionManager::removeAction(stappler::xenolith::Action*)",
			"::stappler::xenolith::ActionManager::removeActionByTag(uint32_t,stappler::xenolith::Node*)",
			"::stappler::xenolith::ActionManager::removeAllActionsByTag(uint32_t,stappler::xenolith::Node*)",
			"::stappler::xenolith::ActionManager::getActionByTag(uint32_t,stappler::xenolith::Node const*) const",
			"::stappler::xenolith::ActionManager::getNumberOfRunningActionsInTarget(stappler::xenolith::Node const*) const",
			"::stappler::xenolith::ActionManager::pauseTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::ActionManager::resumeTarget(stappler::xenolith::Node*)",
			"::stappler::xenolith::ActionManager::pauseAllRunningActions()",
			"::stappler::xenolith::ActionManager::resumeTargets(Vector<stappler::xenolith::Node *> const&)",
			"::stappler::xenolith::ActionManager::update(stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::ActionManager::empty() const",
			"::stappler::xenolith::ActionManager::PendingAction",
			"::stappler::xenolith::ActionManager::PendingAction::action",
			"::stappler::xenolith::ActionManager::PendingAction::target",
			"::stappler::xenolith::ActionManager::PendingAction::paused",
			"::stappler::xenolith::ActionManager::_current",
			"::stappler::xenolith::ActionManager::_actions",
			"::stappler::xenolith::ActionManager::_pending"
		],
		"XLApplication.h":  [
			"XENOLITH_APPLICATION_XLAPPLICATION_H_",
			"::stappler::xenolith::Application",
			"::stappler::xenolith::Application::onMessageToken",
			"::stappler::xenolith::Application::onRemoteNotification",
			"::stappler::xenolith::Application::CommonInfo",
			"::stappler::xenolith::Application::CommonInfo::bundleName",
			"::stappler::xenolith::Application::CommonInfo::applicationName",
			"::stappler::xenolith::Application::CommonInfo::applicationVersion",
			"::stappler::xenolith::Application::CommonInfo::userAgent",
			"::stappler::xenolith::Application::CommonInfo::locale",
			"::stappler::xenolith::Application::CommonInfo::applicationVersionCode",
			"::stappler::xenolith::Application::CommonInfo::nativeHandle",
			"::stappler::xenolith::Application::CallbackInfo",
			"::stappler::xenolith::Application::CallbackInfo::initCallback",
			"::stappler::xenolith::Application::CallbackInfo::updateCallback",
			"::stappler::xenolith::Application::CallbackInfo::finalizeCallback",
			"::stappler::xenolith::Application::Task",
			"::stappler::xenolith::Application::ExecuteCallback",
			"::stappler::xenolith::Application::CompleteCallback",
			"::stappler::xenolith::Application::getInstance()",
			"::stappler::xenolith::Application::~Application()",
			"::stappler::xenolith::Application::init(stappler::xenolith::Application::CommonInfo&&,Rc<core::Instance>&&)",
			"::stappler::xenolith::Application::run(stappler::xenolith::Application::CallbackInfo const&,core::LoopInfo&&,uint32_t,stappler::TimeInterval)",
			"::stappler::xenolith::Application::end()",
			"::stappler::xenolith::Application::wakeup()",
			"::stappler::xenolith::Application::isOnMainThread() const",
			"::stappler::xenolith::Application::performOnGlThread(Function<void ()>&&,stappler::thread::TaskQueue::Ref*,bool) const",
			"::stappler::xenolith::Application::performOnMainThread(Function<void ()>&&,stappler::thread::TaskQueue::Ref*,bool)",
			"::stappler::xenolith::Application::performOnMainThread(Rc<stappler::xenolith::Application::Task>&&,bool)",
			"::stappler::xenolith::Application::perform(stappler::xenolith::Application::ExecuteCallback&&,stappler::xenolith::Application::CompleteCallback&&,stappler::thread::TaskQueue::Ref*)",
			"::stappler::xenolith::Application::perform(Rc<stappler::xenolith::Application::Task>&&)",
			"::stappler::xenolith::Application::perform(Rc<stappler::xenolith::Application::Task>&&,bool)",
			"::stappler::xenolith::Application::addEventListener(stappler::xenolith::EventHandlerNode const*)",
			"::stappler::xenolith::Application::removeEventListner(stappler::xenolith::EventHandlerNode const*)",
			"::stappler::xenolith::Application::removeAllEventListeners()",
			"::stappler::xenolith::Application::dispatchEvent(stappler::xenolith::Event const&)",
			"::stappler::xenolith::Application::getClock() const",
			"::stappler::xenolith::Application::getResourceCache() const",
			"::stappler::xenolith::Application::getGlLoop() const",
			"::stappler::xenolith::Application::getQueue()",
			"::stappler::xenolith::Application::addExtension<typename>(Rc<T>&&)",
			"::stappler::xenolith::Application::getExtension<typename>()",
			"::stappler::xenolith::Application::getInfo() const",
			"::stappler::xenolith::Application::openUrl(stappler::StringView) const",
			"::stappler::xenolith::Application::update(stappler::xenolith::Application::CallbackInfo const&,stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::Application::handleDeviceStarted(core::Loop const&,core::Device const&)",
			"::stappler::xenolith::Application::handleDeviceFinalized(core::Loop const&,core::Device const&)",
			"::stappler::xenolith::Application::handleMessageToken(stappler::mem_std::String&&)",
			"::stappler::xenolith::Application::handleRemoteNotification(stappler::mem_std::Value&&)",
			"::stappler::xenolith::Application::nativeInit()",
			"::stappler::xenolith::Application::nativeDispose()",
			"::stappler::xenolith::Application::_time",
			"::stappler::xenolith::Application::_threadId",
			"::stappler::xenolith::Application::_updatePool",
			"::stappler::xenolith::Application::_started",
			"::stappler::xenolith::Application::_immediateUpdate",
			"::stappler::xenolith::Application::_shouldQuit",
			"::stappler::xenolith::Application::_eventListeners",
			"::stappler::xenolith::Application::_resourceCache",
			"::stappler::xenolith::Application::_glLoop",
			"::stappler::xenolith::Application::_instance",
			"::stappler::xenolith::Application::_device",
			"::stappler::xenolith::Application::_extensions",
			"::stappler::xenolith::Application::_messageToken",
			"::stappler::xenolith::Application::_info",
			"::stappler::xenolith::Application::WaitCallbackInfo",
			"::stappler::xenolith::Application::WaitCallbackInfo::func",
			"::stappler::xenolith::Application::WaitCallbackInfo::target",
			"::stappler::xenolith::Application::WaitCallbackInfo::immediate",
			"::stappler::xenolith::Application::_glWaitCallback",
			"::stappler::xenolith::Application::addView(stappler::xenolith::ViewInfo&&)",
			"::stappler::xenolith::Application::_tmpViews",
			"::stappler::xenolith::Application::_activeViews",
			"::stappler::xenolith::Application::addExtension<typename>(Rc<T>&&)",
			"::stappler::xenolith::Application::getExtension<typename>()"
		],
		"XLApplicationExtension.h":  [
			"XENOLITH_APPLICATION_XLAPPLICATIONEXTENSION_H_",
			"::stappler::xenolith::ApplicationExtension",
			"::stappler::xenolith::ApplicationExtension::~ApplicationExtension()",
			"::stappler::xenolith::ApplicationExtension::initialize(stappler::xenolith::Application*)",
			"::stappler::xenolith::ApplicationExtension::invalidate(stappler::xenolith::Application*)",
			"::stappler::xenolith::ApplicationExtension::update(stappler::xenolith::Application*,stappler::xenolith::UpdateTime const&)"
		],
		"XLApplicationInfo.h":  [
			"XENOLITH_APPLICATION_XLAPPLICATIONINFO_H_",
			"::stappler::xenolith::OpacityValue",
			"::stappler::xenolith::ZOrder",
			"::stappler::xenolith::UpdateTime",
			"::stappler::xenolith::UpdateTime::global",
			"::stappler::xenolith::UpdateTime::app",
			"::stappler::xenolith::UpdateTime::delta",
			"::stappler::xenolith::UpdateTime::dt"
		],
		"XLAsset.h":  [
			"XENOLITH_RESOURCES_ASSETS_XLASSET_H_",
			"::stappler::xenolith::storage::AssetVersionData",
			"::stappler::xenolith::storage::AssetVersionData::complete",
			"::stappler::xenolith::storage::AssetVersionData::download",
			"::stappler::xenolith::storage::AssetVersionData::locked",
			"::stappler::xenolith::storage::AssetVersionData::id",
			"::stappler::xenolith::storage::AssetVersionData::ctime",
			"::stappler::xenolith::storage::AssetVersionData::mtime",
			"::stappler::xenolith::storage::AssetVersionData::size",
			"::stappler::xenolith::storage::AssetVersionData::progress",
			"::stappler::xenolith::storage::AssetVersionData::path",
			"::stappler::xenolith::storage::AssetVersionData::contentType",
			"::stappler::xenolith::storage::AssetVersionData::etag",
			"::stappler::xenolith::storage::AssetLock",
			"::stappler::xenolith::storage::AssetLock::VersionData",
			"::stappler::xenolith::storage::AssetLock::~AssetLock()",
			"::stappler::xenolith::storage::AssetLock::getId() const",
			"::stappler::xenolith::storage::AssetLock::getCTime() const",
			"::stappler::xenolith::storage::AssetLock::getMTime() const",
			"::stappler::xenolith::storage::AssetLock::getSize() const",
			"::stappler::xenolith::storage::AssetLock::getPath() const",
			"::stappler::xenolith::storage::AssetLock::getContentType() const",
			"::stappler::xenolith::storage::AssetLock::getEtag() const",
			"::stappler::xenolith::storage::AssetLock::getCachePath() const",
			"::stappler::xenolith::storage::AssetLock::getAsset() const",
			"::stappler::xenolith::storage::AssetLock::AssetLock(Rc<stappler::xenolith::storage::Asset>&&,stappler::xenolith::storage::AssetLock::VersionData const&,Function<void (const stappler::xenolith::storage::AssetLock::VersionData &)>&&)",
			"::stappler::xenolith::storage::AssetLock::_lockedVersion",
			"::stappler::xenolith::storage::AssetLock::_releaseFunction",
			"::stappler::xenolith::storage::AssetLock::_asset",
			"::stappler::xenolith::storage::Asset",
			"::stappler::xenolith::storage::Asset::VersionData",
			"::stappler::xenolith::storage::Asset::Update",
			"::stappler::xenolith::storage::Asset::Asset(stappler::xenolith::storage::AssetLibrary*,db::Value const&)",
			"::stappler::xenolith::storage::Asset::~Asset()",
			"::stappler::xenolith::storage::Asset::getReadableVersion() const",
			"::stappler::xenolith::storage::Asset::lockVersion(int64_t)",
			"::stappler::xenolith::storage::Asset::getId() const",
			"::stappler::xenolith::storage::Asset::getUrl() const",
			"::stappler::xenolith::storage::Asset::getCachePath() const",
			"::stappler::xenolith::storage::Asset::getTouch() const",
			"::stappler::xenolith::storage::Asset::getTtl() const",
			"::stappler::xenolith::storage::Asset::download()",
			"::stappler::xenolith::storage::Asset::touch(stappler::Time)",
			"::stappler::xenolith::storage::Asset::clear()",
			"::stappler::xenolith::storage::Asset::isDownloadInProgress() const",
			"::stappler::xenolith::storage::Asset::getProgress() const",
			"::stappler::xenolith::storage::Asset::isStorageDirty() const",
			"::stappler::xenolith::storage::Asset::setStorageDirty(bool)",
			"::stappler::xenolith::storage::Asset::setData(stappler::mem_std::Value const&)",
			"::stappler::xenolith::storage::Asset::setData(stappler::mem_std::Value&&)",
			"::stappler::xenolith::storage::Asset::getData() const",
			"::stappler::xenolith::storage::Asset::encode() const",
			"::stappler::xenolith::storage::Asset::update(stappler::xenolith::storage::Asset::Update)",
			"::stappler::xenolith::storage::Asset::parseVersions(db::Value const&)",
			"::stappler::xenolith::storage::Asset::startNewDownload(stappler::Time,stappler::StringView)",
			"::stappler::xenolith::storage::Asset::resumeDownload(stappler::xenolith::storage::Asset::VersionData&)",
			"::stappler::xenolith::storage::Asset::setDownloadProgress(int64_t,float)",
			"::stappler::xenolith::storage::Asset::setDownloadComplete(stappler::xenolith::storage::Asset::VersionData&,bool)",
			"::stappler::xenolith::storage::Asset::setFileValidated(bool)",
			"::stappler::xenolith::storage::Asset::replaceVersion(stappler::xenolith::storage::Asset::VersionData&)",
			"::stappler::xenolith::storage::Asset::addVersion(stappler::xenolith::storage::AssetDownloadData*)",
			"::stappler::xenolith::storage::Asset::dropVersion(stappler::xenolith::storage::Asset::VersionData const&)",
			"::stappler::xenolith::storage::Asset::releaseLock(stappler::xenolith::storage::Asset::VersionData const&)",
			"::stappler::xenolith::storage::Asset::_path",
			"::stappler::xenolith::storage::Asset::_cache",
			"::stappler::xenolith::storage::Asset::_url",
			"::stappler::xenolith::storage::Asset::_ttl",
			"::stappler::xenolith::storage::Asset::_touch",
			"::stappler::xenolith::storage::Asset::_mtime",
			"::stappler::xenolith::storage::Asset::_id",
			"::stappler::xenolith::storage::Asset::_downloadId",
			"::stappler::xenolith::storage::Asset::_versions",
			"::stappler::xenolith::storage::Asset::_data",
			"::stappler::xenolith::storage::Asset::_library",
			"::stappler::xenolith::storage::Asset::_download",
			"::stappler::xenolith::storage::Asset::_dirty"
		],
		"XLAssetLibrary.h":  [
			"XENOLITH_RESOURCES_ASSETS_XLASSETLIBRARY_H_",
			"::stappler::xenolith::storage::AssetComponentContainer",
			"::stappler::xenolith::storage::AssetComponentContainer::~AssetComponentContainer()",
			"::stappler::xenolith::storage::AssetComponentContainer::init(stappler::StringView,stappler::xenolith::storage::AssetLibrary*)",
			"::stappler::xenolith::storage::AssetComponentContainer::handleStorageInit(storage::ComponentLoader&)",
			"::stappler::xenolith::storage::AssetComponentContainer::handleStorageDisposed(db::Transaction const&)",
			"::stappler::xenolith::storage::AssetComponentContainer::getLibrary() const",
			"::stappler::xenolith::storage::AssetComponentContainer::getComponent() const",
			"::stappler::xenolith::storage::AssetComponentContainer::_library",
			"::stappler::xenolith::storage::AssetComponentContainer::_component",
			"::stappler::xenolith::storage::AssetLibrary",
			"::stappler::xenolith::storage::AssetLibrary::onLoaded",
			"::stappler::xenolith::storage::AssetLibrary::AssetCallback",
			"::stappler::xenolith::storage::AssetLibrary::AssetVecCallback",
			"::stappler::xenolith::storage::AssetLibrary::TaskCallback",
			"::stappler::xenolith::storage::AssetLibrary::AssetRequest",
			"::stappler::xenolith::storage::AssetLibrary::AssetRequest::url",
			"::stappler::xenolith::storage::AssetLibrary::AssetRequest::callback",
			"::stappler::xenolith::storage::AssetLibrary::AssetRequest::ttl",
			"::stappler::xenolith::storage::AssetLibrary::AssetRequest::ref",
			"::stappler::xenolith::storage::AssetLibrary::AssetRequest::AssetRequest(stappler::StringView,stappler::xenolith::storage::AssetLibrary::AssetCallback&&,stappler::TimeInterval,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest",
			"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest::vec",
			"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest::callback",
			"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest::ref",
			"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest::AssetMultiRequest(Vector<stappler::xenolith::storage::AssetLibrary::AssetRequest>&&,stappler::xenolith::storage::AssetLibrary::AssetVecCallback&&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::storage::AssetLibrary::getAssetPath(int64_t)",
			"::stappler::xenolith::storage::AssetLibrary::getAssetUrl(stappler::StringView)",
			"::stappler::xenolith::storage::AssetLibrary::~AssetLibrary()",
			"::stappler::xenolith::storage::AssetLibrary::init(stappler::xenolith::Application*,network::Controller*,stappler::mem_std::Value const&)",
			"::stappler::xenolith::storage::AssetLibrary::initialize(stappler::xenolith::Application*)",
			"::stappler::xenolith::storage::AssetLibrary::invalidate(stappler::xenolith::Application*)",
			"::stappler::xenolith::storage::AssetLibrary::update(stappler::xenolith::Application*,stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::storage::AssetLibrary::acquireAsset(stappler::StringView,stappler::xenolith::storage::AssetLibrary::AssetCallback&&,stappler::TimeInterval,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::storage::AssetLibrary::acquireAssets(SpanView<stappler::xenolith::storage::AssetLibrary::AssetRequest>,stappler::xenolith::storage::AssetLibrary::AssetVecCallback&&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::storage::AssetLibrary::getLiveAsset(stappler::StringView) const",
			"::stappler::xenolith::storage::AssetLibrary::getLiveAsset(int64_t) const",
			"::stappler::xenolith::storage::AssetLibrary::perform(stappler::xenolith::storage::AssetLibrary::TaskCallback&&,stappler::mem_std::Ref*) const",
			"::stappler::xenolith::storage::AssetLibrary::getApplication() const",
			"::stappler::xenolith::storage::AssetLibrary::getController() const",
			"::stappler::xenolith::storage::AssetLibrary::addVersion(db::Transaction const&,int64_t,Asset::VersionData const&)",
			"::stappler::xenolith::storage::AssetLibrary::eraseVersion(int64_t)",
			"::stappler::xenolith::storage::AssetLibrary::setAssetDownload(int64_t,bool)",
			"::stappler::xenolith::storage::AssetLibrary::setVersionComplete(int64_t,bool)",
			"::stappler::xenolith::storage::AssetLibrary::removeAsset(stappler::xenolith::storage::Asset*)",
			"::stappler::xenolith::storage::AssetLibrary::downloadAsset(stappler::xenolith::storage::Asset*)",
			"::stappler::xenolith::storage::AssetLibrary::cleanup()",
			"::stappler::xenolith::storage::AssetLibrary::handleLibraryLoaded(Vector<Rc<stappler::xenolith::storage::Asset>>&&)",
			"::stappler::xenolith::storage::AssetLibrary::handleAssetLoaded(Rc<stappler::xenolith::storage::Asset>&&)",
			"::stappler::xenolith::storage::AssetLibrary::_container",
			"::stappler::xenolith::storage::AssetLibrary::_loaded",
			"::stappler::xenolith::storage::AssetLibrary::_callbacks",
			"::stappler::xenolith::storage::AssetLibrary::_liveAssets",
			"::stappler::xenolith::storage::AssetLibrary::_assetsByUrl",
			"::stappler::xenolith::storage::AssetLibrary::_assetsById",
			"::stappler::xenolith::storage::AssetLibrary::_application",
			"::stappler::xenolith::storage::AssetLibrary::_controller",
			"::stappler::xenolith::storage::AssetLibrary::_server",
			"::stappler::xenolith::storage::AssetLibrary::_tmpRequests",
			"::stappler::xenolith::storage::AssetLibrary::_tmpMultiRequest"
		],
		"XLCommon.h":  [
			"XENOLITH_CORE_XLCOMMON_H_"
		],
		"XLComponent.h":  [
			"XENOLITH_SCENE_NODES_XLCOMPONENT_H_",
			"::stappler::xenolith::Component",
			"::stappler::xenolith::Component::GetNextComponentId()",
			"::stappler::xenolith::Component::Component()",
			"::stappler::xenolith::Component::~Component()",
			"::stappler::xenolith::Component::init()",
			"::stappler::xenolith::Component::onAdded(stappler::xenolith::Node*)",
			"::stappler::xenolith::Component::onRemoved()",
			"::stappler::xenolith::Component::onEnter(stappler::xenolith::Scene*)",
			"::stappler::xenolith::Component::onExit()",
			"::stappler::xenolith::Component::visit(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)",
			"::stappler::xenolith::Component::onContentSizeDirty()",
			"::stappler::xenolith::Component::onTransformDirty(stappler::xenolith::Mat4 const&)",
			"::stappler::xenolith::Component::onReorderChildDirty()",
			"::stappler::xenolith::Component::isRunning() const",
			"::stappler::xenolith::Component::isEnabled() const",
			"::stappler::xenolith::Component::setEnabled(bool)",
			"::stappler::xenolith::Component::getOwner() const",
			"::stappler::xenolith::Component::setFrameTag(uint64_t)",
			"::stappler::xenolith::Component::getFrameTag() const",
			"::stappler::xenolith::Component::_owner",
			"::stappler::xenolith::Component::_enabled",
			"::stappler::xenolith::Component::_running",
			"::stappler::xenolith::Component::_frameTag"
		],
		"XLCore.h":  [
			"XENOLITH_CORE_XLCORE_H_",
			"XL_ASSERT",
			"XLASSERT",
			"::stappler::xenolith::Vec2",
			"::stappler::xenolith::Vec3",
			"::stappler::xenolith::Vec4",
			"::stappler::xenolith::Mat4",
			"::stappler::xenolith::Size2",
			"::stappler::xenolith::Size3",
			"::stappler::xenolith::Extent2",
			"::stappler::xenolith::Extent3",
			"::stappler::xenolith::Rect",
			"::stappler::xenolith::URect",
			"::stappler::xenolith::UVec2",
			"::stappler::xenolith::Quaternion",
			"::stappler::xenolith::Color",
			"::stappler::xenolith::Color3B",
			"::stappler::xenolith::Color4B",
			"::stappler::xenolith::Color4F",
			"::stappler::xenolith::ColorMask",
			"::stappler::xenolith::Padding",
			"::stappler::xenolith::Anchor",
			"::stappler::xenolith::XL_MAKE_API_VERSION(uint32_t,uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::XL_MAKE_API_VERSION(stappler::StringView)",
			"::stappler::xenolith::getVersionDescription(uint32_t)",
			"::stappler::xenolith::PoolRef",
			"::stappler::xenolith::PoolRef::~PoolRef()",
			"::stappler::xenolith::PoolRef::PoolRef(memory::pool_t*)",
			"::stappler::xenolith::PoolRef::PoolRef(stappler::xenolith::PoolRef*)",
			"::stappler::xenolith::PoolRef::getPool() const",
			"::stappler::xenolith::PoolRef::palloc(size_t)",
			"::stappler::xenolith::PoolRef::perform<typename>(Callable const&)",
			"::stappler::xenolith::PoolRef::_pool",
			"::stappler::xenolith::profiling::ProfileData",
			"::stappler::xenolith::profiling::ProfileData::timestamp",
			"::stappler::xenolith::profiling::ProfileData::tag",
			"::stappler::xenolith::profiling::ProfileData::variant",
			"::stappler::xenolith::profiling::ProfileData::limit",
			"::stappler::xenolith::profiling::begin(stappler::StringView,stappler::StringView,uint64_t)",
			"::stappler::xenolith::profiling::end(stappler::xenolith::profiling::ProfileData&)",
			"::stappler::xenolith::profiling::store(stappler::xenolith::profiling::ProfileData&)",
			"XL_PROFILE_DEBUG",
			"XL_PROFILE_BEGIN",
			"XL_PROFILE_END"
		],
		"XLCoreAttachment.h":  [
			"XENOLITH_CORE_XLCOREATTACHMENT_H_",
			"::stappler::xenolith::core::DependencyEvent",
			"::stappler::xenolith::core::DependencyEvent::QueueSet",
			"::stappler::xenolith::core::DependencyEvent::GetNextId()",
			"::stappler::xenolith::core::DependencyEvent::~DependencyEvent()",
			"::stappler::xenolith::core::DependencyEvent::DependencyEvent(stappler::xenolith::core::DependencyEvent::QueueSet&&)",
			"::stappler::xenolith::core::DependencyEvent::DependencyEvent(InitializerList<Rc<stappler::xenolith::core::Queue>>&&)",
			"::stappler::xenolith::core::DependencyEvent::getId() const",
			"::stappler::xenolith::core::DependencyEvent::signal(stappler::xenolith::core::Queue*,bool)",
			"::stappler::xenolith::core::DependencyEvent::isSignaled() const",
			"::stappler::xenolith::core::DependencyEvent::isSuccessful() const",
			"::stappler::xenolith::core::DependencyEvent::addQueue(Rc<stappler::xenolith::core::Queue>&&)",
			"::stappler::xenolith::core::DependencyEvent::_id",
			"::stappler::xenolith::core::DependencyEvent::_tag",
			"::stappler::xenolith::core::DependencyEvent::_clock",
			"::stappler::xenolith::core::DependencyEvent::_queues",
			"::stappler::xenolith::core::DependencyEvent::_success",
			"::stappler::xenolith::core::AttachmentInputData",
			"::stappler::xenolith::core::AttachmentInputData::~AttachmentInputData()",
			"::stappler::xenolith::core::AttachmentInputData::waitDependencies",
			"::stappler::xenolith::core::Attachment",
			"::stappler::xenolith::core::Attachment::FrameQueue",
			"::stappler::xenolith::core::Attachment::RenderQueue",
			"::stappler::xenolith::core::Attachment::PassData",
			"::stappler::xenolith::core::Attachment::AttachmentData",
			"::stappler::xenolith::core::Attachment::AttachmentHandle",
			"::stappler::xenolith::core::Attachment::AttachmentBuilder",
			"::stappler::xenolith::core::Attachment::InputCallback",
			"::stappler::xenolith::core::Attachment::~Attachment()",
			"::stappler::xenolith::core::Attachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&)",
			"::stappler::xenolith::core::Attachment::clear()",
			"::stappler::xenolith::core::Attachment::getName() const",
			"::stappler::xenolith::core::Attachment::getId() const",
			"::stappler::xenolith::core::Attachment::getUsage() const",
			"::stappler::xenolith::core::Attachment::isTransient() const",
			"::stappler::xenolith::core::Attachment::setInputCallback(stappler::xenolith::core::Attachment::InputCallback&&)",
			"::stappler::xenolith::core::Attachment::acquireInput(stappler::xenolith::core::Attachment::FrameQueue&,Rc<stappler::xenolith::core::Attachment::AttachmentHandle> const&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::Attachment::validateInput(Rc<stappler::xenolith::core::AttachmentInputData> const&) const",
			"::stappler::xenolith::core::Attachment::isCompatible(stappler::xenolith::core::ImageInfo const&) const",
			"::stappler::xenolith::core::Attachment::sortDescriptors(stappler::xenolith::core::Queue&,stappler::xenolith::core::Device&)",
			"::stappler::xenolith::core::Attachment::makeFrameHandle(stappler::xenolith::core::Attachment::FrameQueue const&)",
			"::stappler::xenolith::core::Attachment::getRenderPasses() const",
			"::stappler::xenolith::core::Attachment::getFirstRenderPass() const",
			"::stappler::xenolith::core::Attachment::getLastRenderPass() const",
			"::stappler::xenolith::core::Attachment::getNextRenderPass(stappler::xenolith::core::Attachment::PassData const*) const",
			"::stappler::xenolith::core::Attachment::getPrevRenderPass(stappler::xenolith::core::Attachment::PassData const*) const",
			"::stappler::xenolith::core::Attachment::getData() const",
			"::stappler::xenolith::core::Attachment::_data",
			"::stappler::xenolith::core::Attachment::_inputCallback",
			"::stappler::xenolith::core::BufferAttachment",
			"::stappler::xenolith::core::BufferAttachment::~BufferAttachment()",
			"::stappler::xenolith::core::BufferAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&,stappler::xenolith::core::BufferInfo const&)",
			"::stappler::xenolith::core::BufferAttachment::clear()",
			"::stappler::xenolith::core::BufferAttachment::getInfo() const",
			"::stappler::xenolith::core::BufferAttachment::_info",
			"::stappler::xenolith::core::ImageAttachment",
			"::stappler::xenolith::core::ImageAttachment::~ImageAttachment()",
			"::stappler::xenolith::core::ImageAttachment::AttachmentInfo",
			"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::initialLayout",
			"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::finalLayout",
			"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::clearOnLoad",
			"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::clearColor",
			"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::colorMode",
			"::stappler::xenolith::core::ImageAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&,stappler::xenolith::core::ImageInfo const&,stappler::xenolith::core::ImageAttachment::AttachmentInfo&&)",
			"::stappler::xenolith::core::ImageAttachment::getImageInfo() const",
			"::stappler::xenolith::core::ImageAttachment::shouldClearOnLoad() const",
			"::stappler::xenolith::core::ImageAttachment::getClearColor() const",
			"::stappler::xenolith::core::ImageAttachment::getColorMode() const",
			"::stappler::xenolith::core::ImageAttachment::getInitialLayout() const",
			"::stappler::xenolith::core::ImageAttachment::getFinalLayout() const",
			"::stappler::xenolith::core::ImageAttachment::addImageUsage(stappler::xenolith::core::ImageUsage)",
			"::stappler::xenolith::core::ImageAttachment::isCompatible(stappler::xenolith::core::ImageInfo const&) const",
			"::stappler::xenolith::core::ImageAttachment::getImageViewInfo(stappler::xenolith::core::ImageInfoData const&,stappler::xenolith::core::AttachmentPassData const&) const",
			"::stappler::xenolith::core::ImageAttachment::getImageViews(stappler::xenolith::core::ImageInfoData const&) const",
			"::stappler::xenolith::core::ImageAttachment::_imageInfo",
			"::stappler::xenolith::core::ImageAttachment::_attachmentInfo",
			"::stappler::xenolith::core::GenericAttachment",
			"::stappler::xenolith::core::GenericAttachment::~GenericAttachment()",
			"::stappler::xenolith::core::GenericAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&)",
			"::stappler::xenolith::core::GenericAttachment::makeFrameHandle(stappler::xenolith::core::Attachment::FrameQueue const&)",
			"::stappler::xenolith::core::AttachmentHandle",
			"::stappler::xenolith::core::AttachmentHandle::PassHandle",
			"::stappler::xenolith::core::AttachmentHandle::FrameQueue",
			"::stappler::xenolith::core::AttachmentHandle::FrameHandle",
			"::stappler::xenolith::core::AttachmentHandle::Attachment",
			"::stappler::xenolith::core::AttachmentHandle::~AttachmentHandle()",
			"::stappler::xenolith::core::AttachmentHandle::init(Rc<stappler::xenolith::core::AttachmentHandle::Attachment> const&,stappler::xenolith::core::AttachmentHandle::FrameQueue const&)",
			"::stappler::xenolith::core::AttachmentHandle::setQueueData(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::AttachmentHandle::getQueueData() const",
			"::stappler::xenolith::core::AttachmentHandle::isAvailable(stappler::xenolith::core::AttachmentHandle::FrameQueue const&) const",
			"::stappler::xenolith::core::AttachmentHandle::setup(stappler::xenolith::core::AttachmentHandle::FrameQueue&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::AttachmentHandle::finalize(stappler::xenolith::core::AttachmentHandle::FrameQueue&,bool)",
			"::stappler::xenolith::core::AttachmentHandle::isInput() const",
			"::stappler::xenolith::core::AttachmentHandle::isOutput() const",
			"::stappler::xenolith::core::AttachmentHandle::getAttachment() const",
			"::stappler::xenolith::core::AttachmentHandle::getName() const",
			"::stappler::xenolith::core::AttachmentHandle::submitInput(stappler::xenolith::core::AttachmentHandle::FrameQueue&,Rc<stappler::xenolith::core::AttachmentInputData>&&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::AttachmentHandle::getDescriptorArraySize(stappler::xenolith::core::AttachmentHandle::PassHandle const&,stappler::xenolith::core::PipelineDescriptor const&,bool) const",
			"::stappler::xenolith::core::AttachmentHandle::isDescriptorDirty(stappler::xenolith::core::AttachmentHandle::PassHandle const&,stappler::xenolith::core::PipelineDescriptor const&,uint32_t,bool) const",
			"::stappler::xenolith::core::AttachmentHandle::_attachment",
			"::stappler::xenolith::core::AttachmentHandle::_queueData"
		],
		"XLCoreConfig.h":  [
			"XENOLITH_CORE_XLCORECONFIG_H_",
			"::stappler::xenolith::config::FrameIntervalSafeOffset",
			"::stappler::xenolith::config::PresentationSchedulerInterval"
		],
		"XLCoreDevice.h":  [
			"XENOLITH_CORE_XLCOREDEVICE_H_",
			"::stappler::xenolith::core::Device",
			"::stappler::xenolith::core::Device::DescriptorType",
			"::stappler::xenolith::core::Device::ImageStorage",
			"::stappler::xenolith::core::Device::Device()",
			"::stappler::xenolith::core::Device::~Device()",
			"::stappler::xenolith::core::Device::init(stappler::xenolith::core::Instance const*)",
			"::stappler::xenolith::core::Device::end()",
			"::stappler::xenolith::core::Device::getProgram(stappler::StringView)",
			"::stappler::xenolith::core::Device::addProgram(Rc<stappler::xenolith::core::Shader>)",
			"::stappler::xenolith::core::Device::addObject(stappler::xenolith::core::ObjectInterface*)",
			"::stappler::xenolith::core::Device::removeObject(stappler::xenolith::core::ObjectInterface*)",
			"::stappler::xenolith::core::Device::getSamplersCount() const",
			"::stappler::xenolith::core::Device::isSamplersCompiled() const",
			"::stappler::xenolith::core::Device::getTextureLayoutImagesCount() const",
			"::stappler::xenolith::core::Device::getTextureLayoutBuffersCount() const",
			"::stappler::xenolith::core::Device::getSupportedDepthStencilFormat() const",
			"::stappler::xenolith::core::Device::getSupportedColorFormat() const",
			"::stappler::xenolith::core::Device::onLoopStarted(stappler::xenolith::core::Loop&)",
			"::stappler::xenolith::core::Device::onLoopEnded(stappler::xenolith::core::Loop&)",
			"::stappler::xenolith::core::Device::supportsUpdateAfterBind(stappler::xenolith::core::Device::DescriptorType) const",
			"::stappler::xenolith::core::Device::getEmptyImageObject() const",
			"::stappler::xenolith::core::Device::getSolidImageObject() const",
			"::stappler::xenolith::core::Device::makeFramebuffer(stappler::xenolith::core::QueuePassData const*,SpanView<Rc<stappler::xenolith::core::ImageView>>)",
			"::stappler::xenolith::core::Device::makeImage(stappler::xenolith::core::ImageInfoData const&)",
			"::stappler::xenolith::core::Device::makeSemaphore()",
			"::stappler::xenolith::core::Device::makeImageView(Rc<stappler::xenolith::core::ImageObject> const&,stappler::xenolith::core::ImageViewInfo const&)",
			"::stappler::xenolith::core::Device::getPresentatonMask() const",
			"::stappler::xenolith::core::Device::waitIdle() const",
			"::stappler::xenolith::core::Device::clearShaders()",
			"::stappler::xenolith::core::Device::invalidateObjects()",
			"::stappler::xenolith::core::Device::_started",
			"::stappler::xenolith::core::Device::_glInstance",
			"::stappler::xenolith::core::Device::_shaderMutex",
			"::stappler::xenolith::core::Device::_objectMutex",
			"::stappler::xenolith::core::Device::_shaders",
			"::stappler::xenolith::core::Device::_objects",
			"::stappler::xenolith::core::Device::_samplersInfo",
			"::stappler::xenolith::core::Device::_depthFormats",
			"::stappler::xenolith::core::Device::_colorFormats",
			"::stappler::xenolith::core::Device::_samplersCount",
			"::stappler::xenolith::core::Device::_samplersCompiled",
			"::stappler::xenolith::core::Device::_textureLayoutImagesCount",
			"::stappler::xenolith::core::Device::_textureLayoutBuffersCount",
			"::stappler::xenolith::core::Device::_loopThreadId",
			"::stappler::xenolith::core::Device::_presentMask"
		],
		"XLCoreDynamicImage.h":  [
			"XENOLITH_CORE_XLCOREDYNAMICIMAGE_H_",
			"::stappler::xenolith::core::DynamicImageInstance",
			"::stappler::xenolith::core::DynamicImageInstance::~DynamicImageInstance()",
			"::stappler::xenolith::core::DynamicImageInstance::data",
			"::stappler::xenolith::core::DynamicImageInstance::userdata",
			"::stappler::xenolith::core::DynamicImageInstance::image",
			"::stappler::xenolith::core::DynamicImageInstance::gen",
			"::stappler::xenolith::core::DynamicImage",
			"::stappler::xenolith::core::DynamicImage::~DynamicImage()",
			"::stappler::xenolith::core::DynamicImage::init(Callback<bool (stappler::xenolith::core::DynamicImage::Builder &)> const&)",
			"::stappler::xenolith::core::DynamicImage::finalize()",
			"::stappler::xenolith::core::DynamicImage::getInstance()",
			"::stappler::xenolith::core::DynamicImage::updateInstance(stappler::xenolith::core::Loop&,Rc<stappler::xenolith::core::ImageObject> const&,Rc<stappler::xenolith::core::DataAtlas>&&,Rc<stappler::mem_std::Ref>&&,Vector<Rc<stappler::xenolith::core::DependencyEvent>> const&)",
			"::stappler::xenolith::core::DynamicImage::addTracker(stappler::xenolith::core::MaterialAttachment const*)",
			"::stappler::xenolith::core::DynamicImage::removeTracker(stappler::xenolith::core::MaterialAttachment const*)",
			"::stappler::xenolith::core::DynamicImage::getInfo() const",
			"::stappler::xenolith::core::DynamicImage::getExtent() const",
			"::stappler::xenolith::core::DynamicImage::setImage(Rc<stappler::xenolith::core::ImageObject> const&)",
			"::stappler::xenolith::core::DynamicImage::acquireData(Callback<void (stappler::BytesView)> const&)",
			"::stappler::xenolith::core::DynamicImage::_mutex",
			"::stappler::xenolith::core::DynamicImage::_keyData",
			"::stappler::xenolith::core::DynamicImage::_imageData",
			"::stappler::xenolith::core::DynamicImage::_data",
			"::stappler::xenolith::core::DynamicImage::_instance",
			"::stappler::xenolith::core::DynamicImage::_materialTrackers",
			"::stappler::xenolith::core::Builder",
			"::stappler::xenolith::core::Builder::setImageByRef(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::BytesView,Rc<stappler::xenolith::core::DataAtlas>&&)",
			"::stappler::xenolith::core::Builder::setImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::FilePath,Rc<stappler::xenolith::core::DataAtlas>&&)",
			"::stappler::xenolith::core::Builder::setImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::BytesView,Rc<stappler::xenolith::core::DataAtlas>&&)",
			"::stappler::xenolith::core::Builder::setImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,Function<void (uint8_t *, uint64_t, const ImageData::DataCallback &)>&&,Rc<stappler::xenolith::core::DataAtlas>&&)",
			"::stappler::xenolith::core::Builder::Builder(stappler::xenolith::core::DynamicImage*)",
			"::stappler::xenolith::core::Builder::_data"
		],
		"XLCoreEnum.h":  [
			"XENOLITH_CORE_XLCOREENUM_H_",
			"::stappler::xenolith::core::FrameRenderPassState",
			"::stappler::xenolith::core::FrameAttachmentState",
			"::stappler::xenolith::core::AttachmentType",
			"::stappler::xenolith::core::PipelineStage",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::PipelineStage const&,stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::PipelineStage const&,stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::PipelineStage const&,stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::PipelineStage&,stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::PipelineStage&,stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::PipelineStage&,stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::PipelineStage const&,std::underlying_type<PipelineStage>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<PipelineStage>::type const&,stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::PipelineStage const&,std::underlying_type<PipelineStage>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<PipelineStage>::type const&,stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::PipelineStage const&)",
			"::stappler::xenolith::core::AccessType",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::AccessType const&,stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::AccessType const&,stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::AccessType const&,stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::AccessType&,stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::AccessType&,stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::AccessType&,stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::AccessType const&,std::underlying_type<AccessType>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<AccessType>::type const&,stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::AccessType const&,std::underlying_type<AccessType>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<AccessType>::type const&,stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::AccessType const&)",
			"::stappler::xenolith::core::AttachmentOps",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::AttachmentOps const&,stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::AttachmentOps const&,stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::AttachmentOps const&,stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::AttachmentOps&,stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::AttachmentOps&,stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::AttachmentOps&,stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::AttachmentOps const&,std::underlying_type<AttachmentOps>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<AttachmentOps>::type const&,stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::AttachmentOps const&,std::underlying_type<AttachmentOps>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<AttachmentOps>::type const&,stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::AttachmentOps const&)",
			"::stappler::xenolith::core::AttachmentLoadOp",
			"::stappler::xenolith::core::AttachmentStoreOp",
			"::stappler::xenolith::core::AttachmentUsage",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::AttachmentUsage const&,stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::AttachmentUsage const&,stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::AttachmentUsage const&,stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::AttachmentUsage&,stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::AttachmentUsage&,stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::AttachmentUsage&,stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::AttachmentUsage const&,std::underlying_type<AttachmentUsage>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<AttachmentUsage>::type const&,stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::AttachmentUsage const&,std::underlying_type<AttachmentUsage>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<AttachmentUsage>::type const&,stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::AttachmentUsage const&)",
			"::stappler::xenolith::core::DescriptorType",
			"::stappler::xenolith::core::ProgramStage",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::ProgramStage const&,stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::ProgramStage const&,stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::ProgramStage const&,stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ProgramStage&,stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ProgramStage&,stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ProgramStage&,stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::ProgramStage const&,std::underlying_type<ProgramStage>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<ProgramStage>::type const&,stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ProgramStage const&,std::underlying_type<ProgramStage>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<ProgramStage>::type const&,stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::ProgramStage const&)",
			"::stappler::xenolith::core::AttachmentLayout",
			"::stappler::xenolith::core::PassType",
			"::stappler::xenolith::core::PredefinedConstant",
			"::stappler::xenolith::core::DynamicState",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::DynamicState const&,stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::DynamicState const&,stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::DynamicState const&,stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::DynamicState&,stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::DynamicState&,stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::DynamicState&,stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::DynamicState const&,std::underlying_type<DynamicState>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<DynamicState>::type const&,stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::DynamicState const&,std::underlying_type<DynamicState>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<DynamicState>::type const&,stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::DynamicState const&)",
			"::stappler::xenolith::core::BufferFlags",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::BufferFlags const&,stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::BufferFlags const&,stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::BufferFlags const&,stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::BufferFlags&,stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::BufferFlags&,stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::BufferFlags&,stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::BufferFlags const&,std::underlying_type<BufferFlags>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<BufferFlags>::type const&,stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::BufferFlags const&,std::underlying_type<BufferFlags>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<BufferFlags>::type const&,stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::BufferFlags const&)",
			"::stappler::xenolith::core::BufferUsage",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::BufferUsage const&,stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::BufferUsage const&,stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::BufferUsage const&,stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::BufferUsage&,stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::BufferUsage&,stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::BufferUsage&,stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::BufferUsage const&,std::underlying_type<BufferUsage>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<BufferUsage>::type const&,stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::BufferUsage const&,std::underlying_type<BufferUsage>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<BufferUsage>::type const&,stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::BufferUsage const&)",
			"::stappler::xenolith::core::ImageFlags",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::ImageFlags const&,stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::ImageFlags const&,stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::ImageFlags const&,stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ImageFlags&,stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ImageFlags&,stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ImageFlags&,stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::ImageFlags const&,std::underlying_type<ImageFlags>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<ImageFlags>::type const&,stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ImageFlags const&,std::underlying_type<ImageFlags>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<ImageFlags>::type const&,stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::ImageFlags const&)",
			"::stappler::xenolith::core::SampleCount",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::SampleCount const&,stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::SampleCount const&,stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::SampleCount const&,stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::SampleCount&,stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::SampleCount&,stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::SampleCount&,stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::SampleCount const&,std::underlying_type<SampleCount>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<SampleCount>::type const&,stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::SampleCount const&,std::underlying_type<SampleCount>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<SampleCount>::type const&,stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::SampleCount const&)",
			"::stappler::xenolith::core::ImageType",
			"::stappler::xenolith::core::ImageViewType",
			"::stappler::xenolith::core::ImageFormat",
			"::stappler::xenolith::core::ColorSpace",
			"::stappler::xenolith::core::CompositeAlphaFlags",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::CompositeAlphaFlags const&,stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::CompositeAlphaFlags const&,stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::CompositeAlphaFlags const&,stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::CompositeAlphaFlags&,stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::CompositeAlphaFlags&,stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::CompositeAlphaFlags&,stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::CompositeAlphaFlags const&,std::underlying_type<CompositeAlphaFlags>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<CompositeAlphaFlags>::type const&,stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::CompositeAlphaFlags const&,std::underlying_type<CompositeAlphaFlags>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<CompositeAlphaFlags>::type const&,stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::CompositeAlphaFlags const&)",
			"::stappler::xenolith::core::ImageTiling",
			"::stappler::xenolith::core::ImageUsage",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::ImageUsage const&,stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::ImageUsage const&,stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::ImageUsage const&,stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ImageUsage&,stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ImageUsage&,stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ImageUsage&,stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::ImageUsage const&,std::underlying_type<ImageUsage>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<ImageUsage>::type const&,stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ImageUsage const&,std::underlying_type<ImageUsage>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<ImageUsage>::type const&,stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::ImageUsage const&)",
			"::stappler::xenolith::core::PresentMode",
			"::stappler::xenolith::core::AttachmentStorageType",
			"::stappler::xenolith::core::ImageHints",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::ImageHints const&,stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::ImageHints const&,stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::ImageHints const&,stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ImageHints&,stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ImageHints&,stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ImageHints&,stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::ImageHints const&,std::underlying_type<ImageHints>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<ImageHints>::type const&,stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ImageHints const&,std::underlying_type<ImageHints>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<ImageHints>::type const&,stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::ImageHints const&)",
			"::stappler::xenolith::core::ComponentMapping",
			"::stappler::xenolith::core::Filter",
			"::stappler::xenolith::core::SamplerMipmapMode",
			"::stappler::xenolith::core::SamplerAddressMode",
			"::stappler::xenolith::core::CompareOp",
			"::stappler::xenolith::core::BlendFactor",
			"::stappler::xenolith::core::BlendOp",
			"::stappler::xenolith::core::ColorComponentFlags",
			"::stappler::xenolith::core::StencilOp",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::ColorComponentFlags const&,stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::ColorComponentFlags const&,stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::ColorComponentFlags const&,stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ColorComponentFlags&,stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ColorComponentFlags&,stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ColorComponentFlags&,stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::ColorComponentFlags const&,std::underlying_type<ColorComponentFlags>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<ColorComponentFlags>::type const&,stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ColorComponentFlags const&,std::underlying_type<ColorComponentFlags>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<ColorComponentFlags>::type const&,stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::ColorComponentFlags const&)",
			"::stappler::xenolith::core::SurfaceTransformFlags",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::SurfaceTransformFlags const&,stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::SurfaceTransformFlags const&,stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::SurfaceTransformFlags const&,stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::SurfaceTransformFlags&,stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::SurfaceTransformFlags&,stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::SurfaceTransformFlags&,stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::SurfaceTransformFlags const&,std::underlying_type<SurfaceTransformFlags>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<SurfaceTransformFlags>::type const&,stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::SurfaceTransformFlags const&,std::underlying_type<SurfaceTransformFlags>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<SurfaceTransformFlags>::type const&,stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::SurfaceTransformFlags const&)",
			"::stappler::xenolith::core::getPureTransform(stappler::xenolith::core::SurfaceTransformFlags)",
			"::stappler::xenolith::core::RenderingLevel",
			"::stappler::xenolith::core::ObjectType",
			"::stappler::xenolith::core::PixelFormat",
			"::stappler::xenolith::core::ClockType"
		],
		"XLCoreFrameCache.h":  [
			"XENOLITH_CORE_XLCOREFRAMECACHE_H_",
			"::stappler::xenolith::core::FrameCacheFramebuffer",
			"::stappler::xenolith::core::FrameCacheFramebuffer::framebuffers",
			"::stappler::xenolith::core::FrameCacheFramebuffer::extent",
			"::stappler::xenolith::core::FrameCacheImageAttachment",
			"::stappler::xenolith::core::FrameCacheImageAttachment::refCount",
			"::stappler::xenolith::core::FrameCacheImageAttachment::images",
			"::stappler::xenolith::core::FrameCache",
			"::stappler::xenolith::core::FrameCache::~FrameCache()",
			"::stappler::xenolith::core::FrameCache::init(stappler::xenolith::core::Loop&,stappler::xenolith::core::Device&)",
			"::stappler::xenolith::core::FrameCache::invalidate()",
			"::stappler::xenolith::core::FrameCache::acquireFramebuffer(stappler::xenolith::core::QueuePassData const*,SpanView<Rc<stappler::xenolith::core::ImageView>>)",
			"::stappler::xenolith::core::FrameCache::releaseFramebuffer(Rc<stappler::xenolith::core::Framebuffer>&&)",
			"::stappler::xenolith::core::FrameCache::acquireImage(uint64_t,stappler::xenolith::core::ImageInfoData const&,SpanView<stappler::xenolith::core::ImageViewInfo>)",
			"::stappler::xenolith::core::FrameCache::releaseImage(Rc<stappler::xenolith::core::ImageStorage>&&)",
			"::stappler::xenolith::core::FrameCache::addImageView(uint64_t)",
			"::stappler::xenolith::core::FrameCache::removeImageView(uint64_t)",
			"::stappler::xenolith::core::FrameCache::addRenderPass(uint64_t)",
			"::stappler::xenolith::core::FrameCache::removeRenderPass(uint64_t)",
			"::stappler::xenolith::core::FrameCache::addAttachment(uint64_t)",
			"::stappler::xenolith::core::FrameCache::removeAttachment(uint64_t)",
			"::stappler::xenolith::core::FrameCache::removeUnreachableFramebuffers()",
			"::stappler::xenolith::core::FrameCache::getFramebuffersCount() const",
			"::stappler::xenolith::core::FrameCache::getImagesCount() const",
			"::stappler::xenolith::core::FrameCache::getImageViewsCount() const",
			"::stappler::xenolith::core::FrameCache::clear()",
			"::stappler::xenolith::core::FrameCache::freeze()",
			"::stappler::xenolith::core::FrameCache::unfreeze()",
			"::stappler::xenolith::core::FrameCache::isReachable(SpanView<uint64_t>) const",
			"::stappler::xenolith::core::FrameCache::isReachable(stappler::xenolith::core::ImageInfoData const&) const",
			"::stappler::xenolith::core::FrameCache::addImage(stappler::xenolith::core::ImageInfoData const&)",
			"::stappler::xenolith::core::FrameCache::removeImage(stappler::xenolith::core::ImageInfoData const&)",
			"::stappler::xenolith::core::FrameCache::makeViews(Rc<stappler::xenolith::core::ImageStorage> const&,SpanView<stappler::xenolith::core::ImageViewInfo>)",
			"::stappler::xenolith::core::FrameCache::_loop",
			"::stappler::xenolith::core::FrameCache::_device",
			"::stappler::xenolith::core::FrameCache::_images",
			"::stappler::xenolith::core::FrameCache::_framebuffers",
			"::stappler::xenolith::core::FrameCache::_imageViews",
			"::stappler::xenolith::core::FrameCache::_renderPasses",
			"::stappler::xenolith::core::FrameCache::_attachments",
			"::stappler::xenolith::core::FrameCache::_freezed",
			"::stappler::xenolith::core::FrameCache::_autorelease"
		],
		"XLCoreFrameEmitter.h":  [
			"XENOLITH_CORE_XLCOREFRAMEEMITTER_H_",
			"::stappler::xenolith::core::FrameEmitter",
			"::stappler::xenolith::core::FrameEmitter::~FrameEmitter()",
			"::stappler::xenolith::core::FrameEmitter::init(Rc<stappler::xenolith::core::Loop> const&,uint64_t)",
			"::stappler::xenolith::core::FrameEmitter::invalidate()",
			"::stappler::xenolith::core::FrameEmitter::setFrameSubmitted(stappler::xenolith::core::FrameHandle&)",
			"::stappler::xenolith::core::FrameEmitter::isFrameValid(stappler::xenolith::core::FrameHandle const&)",
			"::stappler::xenolith::core::FrameEmitter::acquireNextFrame()",
			"::stappler::xenolith::core::FrameEmitter::dropFrameTimeout()",
			"::stappler::xenolith::core::FrameEmitter::dropFrames()",
			"::stappler::xenolith::core::FrameEmitter::isValid() const",
			"::stappler::xenolith::core::FrameEmitter::setFrameTime(uint64_t)",
			"::stappler::xenolith::core::FrameEmitter::getFrameTime() const",
			"::stappler::xenolith::core::FrameEmitter::setFrameInterval(uint64_t)",
			"::stappler::xenolith::core::FrameEmitter::getFrameInterval() const",
			"::stappler::xenolith::core::FrameEmitter::getLoop() const",
			"::stappler::xenolith::core::FrameEmitter::getLastFrameTime() const",
			"::stappler::xenolith::core::FrameEmitter::getAvgFrameTime() const",
			"::stappler::xenolith::core::FrameEmitter::getAvgFenceTime() const",
			"::stappler::xenolith::core::FrameEmitter::isReadyForSubmit() const",
			"::stappler::xenolith::core::FrameEmitter::setEnableBarrier(bool)",
			"::stappler::xenolith::core::FrameEmitter::makeRequest(stappler::xenolith::core::FrameContraints const&)",
			"::stappler::xenolith::core::FrameEmitter::submitNextFrame(Rc<stappler::xenolith::core::FrameRequest>&&)",
			"::stappler::xenolith::core::FrameEmitter::onFrameEmitted(stappler::xenolith::core::FrameHandle&)",
			"::stappler::xenolith::core::FrameEmitter::onFrameSubmitted(stappler::xenolith::core::FrameHandle&)",
			"::stappler::xenolith::core::FrameEmitter::onFrameComplete(stappler::xenolith::core::FrameHandle&)",
			"::stappler::xenolith::core::FrameEmitter::onFrameTimeout(uint64_t)",
			"::stappler::xenolith::core::FrameEmitter::onFrameRequest(bool)",
			"::stappler::xenolith::core::FrameEmitter::makeFrame(Rc<stappler::xenolith::core::FrameRequest>&&,bool)",
			"::stappler::xenolith::core::FrameEmitter::canStartFrame() const",
			"::stappler::xenolith::core::FrameEmitter::scheduleNextFrame(Rc<stappler::xenolith::core::FrameRequest>&&)",
			"::stappler::xenolith::core::FrameEmitter::scheduleFrameTimeout()",
			"::stappler::xenolith::core::FrameEmitter::_submitted",
			"::stappler::xenolith::core::FrameEmitter::_order",
			"::stappler::xenolith::core::FrameEmitter::_gen",
			"::stappler::xenolith::core::FrameEmitter::_valid",
			"::stappler::xenolith::core::FrameEmitter::_frame",
			"::stappler::xenolith::core::FrameEmitter::_frameInterval",
			"::stappler::xenolith::core::FrameEmitter::_suboptimal",
			"::stappler::xenolith::core::FrameEmitter::_frameTimeoutPassed",
			"::stappler::xenolith::core::FrameEmitter::_nextFrameAcquired",
			"::stappler::xenolith::core::FrameEmitter::_onDemand",
			"::stappler::xenolith::core::FrameEmitter::_enableBarrier",
			"::stappler::xenolith::core::FrameEmitter::_nextFrameRequest",
			"::stappler::xenolith::core::FrameEmitter::_frames",
			"::stappler::xenolith::core::FrameEmitter::_framesPending",
			"::stappler::xenolith::core::FrameEmitter::_loop",
			"::stappler::xenolith::core::FrameEmitter::_lastSubmit",
			"::stappler::xenolith::core::FrameEmitter::_lastFrameTime",
			"::stappler::xenolith::core::FrameEmitter::_avgFrameTime",
			"::stappler::xenolith::core::FrameEmitter::_avgFrameTimeValue",
			"::stappler::xenolith::core::FrameEmitter::_avgFenceInterval",
			"::stappler::xenolith::core::FrameEmitter::_avgFenceIntervalValue",
			"::stappler::xenolith::core::FrameEmitter::_lastTotalFrameTime"
		],
		"XLCoreFrameHandle.h":  [
			"XENOLITH_CORE_XLCOREFRAMEHANDLE_H_",
			"::stappler::xenolith::core::FrameHandle",
			"::stappler::xenolith::core::FrameHandle::FrameRequest",
			"::stappler::xenolith::core::FrameHandle::GetActiveFramesCount()",
			"::stappler::xenolith::core::FrameHandle::DescribeActiveFrames()",
			"::stappler::xenolith::core::FrameHandle::~FrameHandle()",
			"::stappler::xenolith::core::FrameHandle::init(stappler::xenolith::core::Loop&,stappler::xenolith::core::Device&,Rc<stappler::xenolith::core::FrameHandle::FrameRequest>&&,uint64_t)",
			"::stappler::xenolith::core::FrameHandle::update(bool)",
			"::stappler::xenolith::core::FrameHandle::getTimeStart() const",
			"::stappler::xenolith::core::FrameHandle::getTimeEnd() const",
			"::stappler::xenolith::core::FrameHandle::getOrder() const",
			"::stappler::xenolith::core::FrameHandle::getGen() const",
			"::stappler::xenolith::core::FrameHandle::getSubmissionTime() const",
			"::stappler::xenolith::core::FrameHandle::getLoop() const",
			"::stappler::xenolith::core::FrameHandle::getDevice() const",
			"::stappler::xenolith::core::FrameHandle::getEmitter() const",
			"::stappler::xenolith::core::FrameHandle::getQueue() const",
			"::stappler::xenolith::core::FrameHandle::getFrameConstraints() const",
			"::stappler::xenolith::core::FrameHandle::getPool() const",
			"::stappler::xenolith::core::FrameHandle::getRequest() const",
			"::stappler::xenolith::core::FrameHandle::getImageSpecialization(stappler::xenolith::core::ImageAttachment const*) const",
			"::stappler::xenolith::core::FrameHandle::getOutputBinding(stappler::xenolith::core::Attachment const*) const",
			"::stappler::xenolith::core::FrameHandle::getOutputBinding(stappler::xenolith::core::AttachmentData const*) const",
			"::stappler::xenolith::core::FrameHandle::getRenderTarget(stappler::xenolith::core::Attachment const*) const",
			"::stappler::xenolith::core::FrameHandle::getRenderTarget(stappler::xenolith::core::AttachmentData const*) const",
			"::stappler::xenolith::core::FrameHandle::getSignalDependencies() const",
			"::stappler::xenolith::core::FrameHandle::getFrameQueues() const",
			"::stappler::xenolith::core::FrameHandle::schedule(Function<bool (stappler::xenolith::core::FrameHandle &)>&&,stappler::StringView)",
			"::stappler::xenolith::core::FrameHandle::performInQueue(Function<void (stappler::xenolith::core::FrameHandle &)>&&,stappler::mem_std::Ref*,stappler::StringView)",
			"::stappler::xenolith::core::FrameHandle::performInQueue(Function<bool (stappler::xenolith::core::FrameHandle &)>&&,Function<void (stappler::xenolith::core::FrameHandle &, bool)>&&,stappler::mem_std::Ref*,stappler::StringView)",
			"::stappler::xenolith::core::FrameHandle::performOnGlThread(Function<void (stappler::xenolith::core::FrameHandle &)>&&,stappler::mem_std::Ref*,bool,stappler::StringView)",
			"::stappler::xenolith::core::FrameHandle::performRequiredTask(Function<bool (stappler::xenolith::core::FrameHandle &)>&&,stappler::mem_std::Ref*,stappler::StringView)",
			"::stappler::xenolith::core::FrameHandle::performRequiredTask(Function<bool (stappler::xenolith::core::FrameHandle &)>&&,Function<void (stappler::xenolith::core::FrameHandle &, bool)>&&,stappler::mem_std::Ref*,stappler::StringView)",
			"::stappler::xenolith::core::FrameHandle::isSubmitted() const",
			"::stappler::xenolith::core::FrameHandle::isValid() const",
			"::stappler::xenolith::core::FrameHandle::isValidFlag() const",
			"::stappler::xenolith::core::FrameHandle::isPersistentMapping() const",
			"::stappler::xenolith::core::FrameHandle::getInputData(stappler::xenolith::core::AttachmentData const*)",
			"::stappler::xenolith::core::FrameHandle::isReadyForSubmit() const",
			"::stappler::xenolith::core::FrameHandle::setReadyForSubmit(bool)",
			"::stappler::xenolith::core::FrameHandle::invalidate()",
			"::stappler::xenolith::core::FrameHandle::setCompleteCallback(Function<void (stappler::xenolith::core::FrameHandle &)>&&)",
			"::stappler::xenolith::core::FrameHandle::onQueueSubmitted(stappler::xenolith::core::FrameQueue&)",
			"::stappler::xenolith::core::FrameHandle::onQueueComplete(stappler::xenolith::core::FrameQueue&)",
			"::stappler::xenolith::core::FrameHandle::onQueueInvalidated(stappler::xenolith::core::FrameQueue&)",
			"::stappler::xenolith::core::FrameHandle::onOutputAttachment(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameHandle::onOutputAttachmentInvalidated(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameHandle::waitForDependencies(Vector<Rc<stappler::xenolith::core::DependencyEvent>> const&,Function<void (stappler::xenolith::core::FrameHandle &, bool)>&&)",
			"::stappler::xenolith::core::FrameHandle::waitForInput(stappler::xenolith::core::FrameQueue&,Rc<stappler::xenolith::core::AttachmentHandle> const&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::FrameHandle::signalDependencies(bool)",
			"::stappler::xenolith::core::FrameHandle::setup()",
			"::stappler::xenolith::core::FrameHandle::onRequiredTaskCompleted(stappler::StringView)",
			"::stappler::xenolith::core::FrameHandle::tryComplete()",
			"::stappler::xenolith::core::FrameHandle::onComplete()",
			"::stappler::xenolith::core::FrameHandle::_loop",
			"::stappler::xenolith::core::FrameHandle::_device",
			"::stappler::xenolith::core::FrameHandle::_pool",
			"::stappler::xenolith::core::FrameHandle::_request",
			"::stappler::xenolith::core::FrameHandle::_timeStart",
			"::stappler::xenolith::core::FrameHandle::_timeEnd",
			"::stappler::xenolith::core::FrameHandle::_gen",
			"::stappler::xenolith::core::FrameHandle::_order",
			"::stappler::xenolith::core::FrameHandle::_submissionTime",
			"::stappler::xenolith::core::FrameHandle::_tasksRequired",
			"::stappler::xenolith::core::FrameHandle::_tasksCompleted",
			"::stappler::xenolith::core::FrameHandle::_queuesSubmitted",
			"::stappler::xenolith::core::FrameHandle::_queuesCompleted",
			"::stappler::xenolith::core::FrameHandle::_submitted",
			"::stappler::xenolith::core::FrameHandle::_completed",
			"::stappler::xenolith::core::FrameHandle::_valid",
			"::stappler::xenolith::core::FrameHandle::_queues",
			"::stappler::xenolith::core::FrameHandle::_complete"
		],
		"XLCoreFrameQueue.h":  [
			"XENOLITH_CORE_XLCOREFRAMEQUEUE_H_",
			"::stappler::xenolith::core::FramePassDataRequired",
			"::stappler::xenolith::core::FramePassDataRequired::data",
			"::stappler::xenolith::core::FramePassDataRequired::requiredState",
			"::stappler::xenolith::core::FramePassDataRequired::lockedState",
			"::stappler::xenolith::core::FramePassDataRequired::FramePassDataRequired()",
			"::stappler::xenolith::core::FramePassDataRequired::FramePassDataRequired(stappler::xenolith::core::FramePassData*,stappler::xenolith::core::FrameRenderPassState,stappler::xenolith::core::FrameRenderPassState)",
			"::stappler::xenolith::core::FramePassData",
			"::stappler::xenolith::core::FramePassData::state",
			"::stappler::xenolith::core::FramePassData::handle",
			"::stappler::xenolith::core::FramePassData::attachments",
			"::stappler::xenolith::core::FramePassData::attachmentMap",
			"::stappler::xenolith::core::FramePassData::required",
			"::stappler::xenolith::core::FramePassData::waiters",
			"::stappler::xenolith::core::FramePassData::framebuffer",
			"::stappler::xenolith::core::FramePassData::waitForResult",
			"::stappler::xenolith::core::FramePassData::submitTime",
			"::stappler::xenolith::core::FrameAttachmentData",
			"::stappler::xenolith::core::FrameAttachmentData::state",
			"::stappler::xenolith::core::FrameAttachmentData::handle",
			"::stappler::xenolith::core::FrameAttachmentData::info",
			"::stappler::xenolith::core::FrameAttachmentData::passes",
			"::stappler::xenolith::core::FrameAttachmentData::final",
			"::stappler::xenolith::core::FrameAttachmentData::image",
			"::stappler::xenolith::core::FrameAttachmentData::waitForResult",
			"::stappler::xenolith::core::FrameSyncAttachment",
			"::stappler::xenolith::core::FrameSyncAttachment::attachment",
			"::stappler::xenolith::core::FrameSyncAttachment::semaphore",
			"::stappler::xenolith::core::FrameSyncAttachment::image",
			"::stappler::xenolith::core::FrameSyncAttachment::stages",
			"::stappler::xenolith::core::FrameSyncImage",
			"::stappler::xenolith::core::FrameSyncImage::attachment",
			"::stappler::xenolith::core::FrameSyncImage::image",
			"::stappler::xenolith::core::FrameSyncImage::newLayout",
			"::stappler::xenolith::core::FrameSync",
			"::stappler::xenolith::core::FrameSync::waitAttachments",
			"::stappler::xenolith::core::FrameSync::signalAttachments",
			"::stappler::xenolith::core::FrameSync::images",
			"::stappler::xenolith::core::FrameQueue",
			"::stappler::xenolith::core::FrameQueue::~FrameQueue()",
			"::stappler::xenolith::core::FrameQueue::init(Rc<stappler::xenolith::PoolRef> const&,Rc<stappler::xenolith::core::Queue> const&,stappler::xenolith::core::FrameHandle&)",
			"::stappler::xenolith::core::FrameQueue::setup()",
			"::stappler::xenolith::core::FrameQueue::update()",
			"::stappler::xenolith::core::FrameQueue::invalidate()",
			"::stappler::xenolith::core::FrameQueue::isFinalized() const",
			"::stappler::xenolith::core::FrameQueue::getFrame() const",
			"::stappler::xenolith::core::FrameQueue::getPool() const",
			"::stappler::xenolith::core::FrameQueue::getQueue() const",
			"::stappler::xenolith::core::FrameQueue::getLoop() const",
			"::stappler::xenolith::core::FrameQueue::getRenderPasses() const",
			"::stappler::xenolith::core::FrameQueue::getAttachments() const",
			"::stappler::xenolith::core::FrameQueue::getSubmissionTime() const",
			"::stappler::xenolith::core::FrameQueue::getAttachment(stappler::xenolith::core::AttachmentData const*) const",
			"::stappler::xenolith::core::FrameQueue::getRenderPass(stappler::xenolith::core::QueuePassData const*) const",
			"::stappler::xenolith::core::FrameQueue::addRequiredPass(stappler::xenolith::core::FramePassData&,stappler::xenolith::core::FramePassData const&,stappler::xenolith::core::FrameAttachmentData const&,stappler::xenolith::core::AttachmentPassData const&)",
			"::stappler::xenolith::core::FrameQueue::isResourcePending(stappler::xenolith::core::FrameAttachmentData const&)",
			"::stappler::xenolith::core::FrameQueue::waitForResource(stappler::xenolith::core::FrameAttachmentData const&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::FrameQueue::isResourcePending(stappler::xenolith::core::FramePassData const&)",
			"::stappler::xenolith::core::FrameQueue::waitForResource(stappler::xenolith::core::FramePassData const&,Function<void ()>&&)",
			"::stappler::xenolith::core::FrameQueue::onAttachmentSetupComplete(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameQueue::onAttachmentInput(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameQueue::onAttachmentAcquire(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameQueue::onAttachmentRelease(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameQueue::isRenderPassReady(stappler::xenolith::core::FramePassData const&) const",
			"::stappler::xenolith::core::FrameQueue::isRenderPassReadyForState(stappler::xenolith::core::FramePassData const&,stappler::xenolith::core::FrameRenderPassState) const",
			"::stappler::xenolith::core::FrameQueue::updateRenderPassState(stappler::xenolith::core::FramePassData&,stappler::xenolith::core::FrameRenderPassState)",
			"::stappler::xenolith::core::FrameQueue::onRenderPassReady(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::FrameQueue::onRenderPassOwned(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::FrameQueue::onRenderPassResourcesAcquired(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::FrameQueue::onRenderPassPrepared(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::FrameQueue::onRenderPassSubmission(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::FrameQueue::onRenderPassSubmitted(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::FrameQueue::onRenderPassComplete(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::FrameQueue::makeRenderPassSync(stappler::xenolith::core::FramePassData&) const",
			"::stappler::xenolith::core::FrameQueue::getWaitStageForAttachment(stappler::xenolith::core::FramePassData&,stappler::xenolith::core::AttachmentHandle const*) const",
			"::stappler::xenolith::core::FrameQueue::onComplete()",
			"::stappler::xenolith::core::FrameQueue::onFinalized()",
			"::stappler::xenolith::core::FrameQueue::invalidate(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameQueue::invalidate(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::FrameQueue::tryReleaseFrame()",
			"::stappler::xenolith::core::FrameQueue::finalizeAttachment(stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameQueue::_pool",
			"::stappler::xenolith::core::FrameQueue::_queue",
			"::stappler::xenolith::core::FrameQueue::_frame",
			"::stappler::xenolith::core::FrameQueue::_loop",
			"::stappler::xenolith::core::FrameQueue::_order",
			"::stappler::xenolith::core::FrameQueue::_finalized",
			"::stappler::xenolith::core::FrameQueue::_success",
			"::stappler::xenolith::core::FrameQueue::_renderPasses",
			"::stappler::xenolith::core::FrameQueue::_attachments",
			"::stappler::xenolith::core::FrameQueue::_renderPassesInitial",
			"::stappler::xenolith::core::FrameQueue::_renderPassesPrepared",
			"::stappler::xenolith::core::FrameQueue::_attachmentsInitial",
			"::stappler::xenolith::core::FrameQueue::_autorelease",
			"::stappler::xenolith::core::FrameQueue::_renderPassSubmitted",
			"::stappler::xenolith::core::FrameQueue::_renderPassCompleted",
			"::stappler::xenolith::core::FrameQueue::_finalizedObjects",
			"::stappler::xenolith::core::FrameQueue::_submissionTime",
			"::stappler::xenolith::core::FrameQueue::_awaitPasses"
		],
		"XLCoreFrameRequest.h":  [
			"XENOLITH_CORE_XLCOREFRAMEREQUEST_H_",
			"::stappler::xenolith::core::FrameOutputBinding",
			"::stappler::xenolith::core::FrameOutputBinding::CompleteCallback",
			"::stappler::xenolith::core::FrameOutputBinding::attachment",
			"::stappler::xenolith::core::FrameOutputBinding::callback",
			"::stappler::xenolith::core::FrameOutputBinding::handle",
			"::stappler::xenolith::core::FrameOutputBinding::FrameOutputBinding(stappler::xenolith::core::AttachmentData const*,stappler::xenolith::core::FrameOutputBinding::CompleteCallback&&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::core::FrameOutputBinding::~FrameOutputBinding()",
			"::stappler::xenolith::core::FrameOutputBinding::handleReady(stappler::xenolith::core::FrameAttachmentData&,bool)",
			"::stappler::xenolith::core::FrameRequest",
			"::stappler::xenolith::core::FrameRequest::CompleteCallback",
			"::stappler::xenolith::core::FrameRequest::~FrameRequest()",
			"::stappler::xenolith::core::FrameRequest::init(Rc<stappler::xenolith::core::FrameEmitter> const&,stappler::xenolith::core::FrameContraints const&)",
			"::stappler::xenolith::core::FrameRequest::init(Rc<stappler::xenolith::core::Queue> const&)",
			"::stappler::xenolith::core::FrameRequest::init(Rc<stappler::xenolith::core::Queue> const&,stappler::xenolith::core::FrameContraints const&)",
			"::stappler::xenolith::core::FrameRequest::init(Rc<stappler::xenolith::core::Queue> const&,Rc<stappler::xenolith::core::FrameEmitter> const&,stappler::xenolith::core::FrameContraints const&)",
			"::stappler::xenolith::core::FrameRequest::addSignalDependency(Rc<stappler::xenolith::core::DependencyEvent>&&)",
			"::stappler::xenolith::core::FrameRequest::addSignalDependencies(Vector<Rc<stappler::xenolith::core::DependencyEvent>>&&)",
			"::stappler::xenolith::core::FrameRequest::addImageSpecialization(stappler::xenolith::core::ImageAttachment const*,stappler::xenolith::core::ImageInfoData&&)",
			"::stappler::xenolith::core::FrameRequest::getImageSpecialization(stappler::xenolith::core::ImageAttachment const*) const",
			"::stappler::xenolith::core::FrameRequest::addInput(stappler::xenolith::core::Attachment const*,Rc<stappler::xenolith::core::AttachmentInputData>&&)",
			"::stappler::xenolith::core::FrameRequest::addInput(stappler::xenolith::core::AttachmentData const*,Rc<stappler::xenolith::core::AttachmentInputData>&&)",
			"::stappler::xenolith::core::FrameRequest::setQueue(Rc<stappler::xenolith::core::Queue> const&)",
			"::stappler::xenolith::core::FrameRequest::setOutput(Rc<stappler::xenolith::core::FrameOutputBinding>&&)",
			"::stappler::xenolith::core::FrameRequest::setOutput(stappler::xenolith::core::AttachmentData const*,stappler::xenolith::core::FrameRequest::CompleteCallback&&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::core::FrameRequest::setOutput(stappler::xenolith::core::Attachment const*,stappler::xenolith::core::FrameRequest::CompleteCallback&&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::core::FrameRequest::setRenderTarget(stappler::xenolith::core::AttachmentData const*,Rc<stappler::xenolith::core::ImageStorage>&&)",
			"::stappler::xenolith::core::FrameRequest::onOutputReady(stappler::xenolith::core::Loop&,stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameRequest::onOutputInvalidated(stappler::xenolith::core::Loop&,stappler::xenolith::core::FrameAttachmentData&)",
			"::stappler::xenolith::core::FrameRequest::finalize(stappler::xenolith::core::Loop&,HashMap<const stappler::xenolith::core::AttachmentData *, stappler::xenolith::core::FrameAttachmentData *>&,bool)",
			"::stappler::xenolith::core::FrameRequest::signalDependencies(stappler::xenolith::core::Loop&,stappler::xenolith::core::Queue*,bool)",
			"::stappler::xenolith::core::FrameRequest::getInputData(stappler::xenolith::core::AttachmentData const*)",
			"::stappler::xenolith::core::FrameRequest::getPool() const",
			"::stappler::xenolith::core::FrameRequest::getRenderTarget(stappler::xenolith::core::AttachmentData const*)",
			"::stappler::xenolith::core::FrameRequest::getEmitter() const",
			"::stappler::xenolith::core::FrameRequest::getQueue() const",
			"::stappler::xenolith::core::FrameRequest::getQueueList() const",
			"::stappler::xenolith::core::FrameRequest::getFrameConstraints() const",
			"::stappler::xenolith::core::FrameRequest::setReadyForSubmit(bool)",
			"::stappler::xenolith::core::FrameRequest::isReadyForSubmit() const",
			"::stappler::xenolith::core::FrameRequest::isPersistentMapping() const",
			"::stappler::xenolith::core::FrameRequest::setSceneId(uint64_t)",
			"::stappler::xenolith::core::FrameRequest::getSceneId() const",
			"::stappler::xenolith::core::FrameRequest::getSignalDependencies() const",
			"::stappler::xenolith::core::FrameRequest::FrameRequest()",
			"::stappler::xenolith::core::FrameRequest::waitForInput(stappler::xenolith::core::FrameQueue&,Rc<stappler::xenolith::core::AttachmentHandle> const&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::FrameRequest::getOutputBinding(stappler::xenolith::core::AttachmentData const*) const",
			"::stappler::xenolith::core::FrameRequest::FrameRequest(stappler::xenolith::core::FrameRequest const&)",
			"::stappler::xenolith::core::FrameRequest::operator=(stappler::xenolith::core::FrameRequest const&)",
			"::stappler::xenolith::core::FrameRequest::_pool",
			"::stappler::xenolith::core::FrameRequest::_emitter",
			"::stappler::xenolith::core::FrameRequest::_queue",
			"::stappler::xenolith::core::FrameRequest::_constraints",
			"::stappler::xenolith::core::FrameRequest::_input",
			"::stappler::xenolith::core::FrameRequest::_readyForSubmit",
			"::stappler::xenolith::core::FrameRequest::_persistentMappings",
			"::stappler::xenolith::core::FrameRequest::_sceneId",
			"::stappler::xenolith::core::FrameRequest::_imageSpecialization",
			"::stappler::xenolith::core::FrameRequest::_output",
			"::stappler::xenolith::core::FrameRequest::_renderTargets",
			"::stappler::xenolith::core::FrameRequest::_signalDependencies",
			"::stappler::xenolith::core::FrameRequest::WaitInputData",
			"::stappler::xenolith::core::FrameRequest::WaitInputData::queue",
			"::stappler::xenolith::core::FrameRequest::WaitInputData::handle",
			"::stappler::xenolith::core::FrameRequest::WaitInputData::callback",
			"::stappler::xenolith::core::FrameRequest::_waitForInputs"
		],
		"XLCoreImageStorage.h":  [
			"XENOLITH_CORE_XLCOREIMAGESTORAGE_H_",
			"::stappler::xenolith::core::ImageStorage",
			"::stappler::xenolith::core::ImageStorage::~ImageStorage()",
			"::stappler::xenolith::core::ImageStorage::init(Rc<stappler::xenolith::core::ImageObject>&&)",
			"::stappler::xenolith::core::ImageStorage::isCacheable() const",
			"::stappler::xenolith::core::ImageStorage::isSwapchainImage() const",
			"::stappler::xenolith::core::ImageStorage::cleanup()",
			"::stappler::xenolith::core::ImageStorage::rearmSemaphores(stappler::xenolith::core::Loop&)",
			"::stappler::xenolith::core::ImageStorage::releaseSemaphore(stappler::xenolith::core::Semaphore*)",
			"::stappler::xenolith::core::ImageStorage::invalidate()",
			"::stappler::xenolith::core::ImageStorage::isReady() const",
			"::stappler::xenolith::core::ImageStorage::setReady(bool)",
			"::stappler::xenolith::core::ImageStorage::waitReady(Function<void (bool)>&&)",
			"::stappler::xenolith::core::ImageStorage::isSemaphorePersistent() const",
			"::stappler::xenolith::core::ImageStorage::getWaitSem() const",
			"::stappler::xenolith::core::ImageStorage::getSignalSem() const",
			"::stappler::xenolith::core::ImageStorage::getImageIndex() const",
			"::stappler::xenolith::core::ImageStorage::getInfo() const",
			"::stappler::xenolith::core::ImageStorage::getImage() const",
			"::stappler::xenolith::core::ImageStorage::addView(stappler::xenolith::core::ImageViewInfo const&,Rc<stappler::xenolith::core::ImageView>&&)",
			"::stappler::xenolith::core::ImageStorage::getView(stappler::xenolith::core::ImageViewInfo const&) const",
			"::stappler::xenolith::core::ImageStorage::makeView(stappler::xenolith::core::ImageViewInfo const&)",
			"::stappler::xenolith::core::ImageStorage::setLayout(stappler::xenolith::core::AttachmentLayout)",
			"::stappler::xenolith::core::ImageStorage::getLayout() const",
			"::stappler::xenolith::core::ImageStorage::getViews() const",
			"::stappler::xenolith::core::ImageStorage::setAcquisitionTime(uint64_t)",
			"::stappler::xenolith::core::ImageStorage::getAcquisitionTime() const",
			"::stappler::xenolith::core::ImageStorage::setFrameIndex(uint64_t)",
			"::stappler::xenolith::core::ImageStorage::getFrameIndex() const",
			"::stappler::xenolith::core::ImageStorage::notifyReady()",
			"::stappler::xenolith::core::ImageStorage::_acquisitionTime",
			"::stappler::xenolith::core::ImageStorage::_frameIndex",
			"::stappler::xenolith::core::ImageStorage::_image",
			"::stappler::xenolith::core::ImageStorage::_waitSem",
			"::stappler::xenolith::core::ImageStorage::_signalSem",
			"::stappler::xenolith::core::ImageStorage::_views",
			"::stappler::xenolith::core::ImageStorage::_ready",
			"::stappler::xenolith::core::ImageStorage::_invalid",
			"::stappler::xenolith::core::ImageStorage::_isSwapchainImage",
			"::stappler::xenolith::core::ImageStorage::_layout",
			"::stappler::xenolith::core::ImageStorage::_waitReady"
		],
		"XLCoreInfo.h":  [
			"XENOLITH_CORE_XLCOREINFO_H_",
			"::stappler::xenolith::core::MipLevels",
			"::stappler::xenolith::core::ArrayLayers",
			"::stappler::xenolith::core::Extent1",
			"::stappler::xenolith::core::BaseArrayLayer",
			"::stappler::xenolith::core::SamplerInfo",
			"::stappler::xenolith::core::SamplerInfo::magFilter",
			"::stappler::xenolith::core::SamplerInfo::minFilter",
			"::stappler::xenolith::core::SamplerInfo::mipmapMode",
			"::stappler::xenolith::core::SamplerInfo::addressModeU",
			"::stappler::xenolith::core::SamplerInfo::addressModeV",
			"::stappler::xenolith::core::SamplerInfo::addressModeW",
			"::stappler::xenolith::core::SamplerInfo::mipLodBias",
			"::stappler::xenolith::core::SamplerInfo::anisotropyEnable",
			"::stappler::xenolith::core::SamplerInfo::maxAnisotropy",
			"::stappler::xenolith::core::SamplerInfo::compareEnable",
			"::stappler::xenolith::core::SamplerInfo::compareOp",
			"::stappler::xenolith::core::SamplerInfo::minLod",
			"::stappler::xenolith::core::SamplerInfo::maxLod",
			"::stappler::xenolith::core::SamplerInfo::operator==(stappler::xenolith::core::SamplerInfo const&) const",
			"::stappler::xenolith::core::SamplerInfo::operator!=(stappler::xenolith::core::SamplerInfo const&) const",
			"::stappler::xenolith::core::SamplerInfo::operator<=>(stappler::xenolith::core::SamplerInfo const&) const",
			"::stappler::xenolith::core::ForceBufferFlags",
			"::stappler::xenolith::core::ForceBufferUsage",
			"::stappler::xenolith::core::BufferPersistent",
			"::stappler::xenolith::core::BufferInfo",
			"::stappler::xenolith::core::BufferInfo::flags",
			"::stappler::xenolith::core::BufferInfo::usage",
			"::stappler::xenolith::core::BufferInfo::type",
			"::stappler::xenolith::core::BufferInfo::size",
			"::stappler::xenolith::core::BufferInfo::persistent",
			"::stappler::xenolith::core::BufferInfo::BufferInfo()",
			"::stappler::xenolith::core::BufferInfo::BufferInfo<typename>(Args &&...)",
			"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::BufferInfo const&)",
			"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::BufferFlags)",
			"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::ForceBufferFlags)",
			"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::BufferUsage)",
			"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::ForceBufferUsage)",
			"::stappler::xenolith::core::BufferInfo::setup(uint64_t)",
			"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::BufferPersistent)",
			"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::PassType)",
			"::stappler::xenolith::core::BufferInfo::define<typename>(T&&)",
			"::stappler::xenolith::core::BufferInfo::define<typename,typename>(T&&,Args &&...)",
			"::stappler::xenolith::core::BufferInfo::description() const",
			"::stappler::xenolith::core::BufferData",
			"::stappler::xenolith::core::BufferData::DataCallback",
			"::stappler::xenolith::core::BufferData::data",
			"::stappler::xenolith::core::BufferData::callback",
			"::stappler::xenolith::core::BufferData::buffer",
			"::stappler::xenolith::core::BufferData::atlas",
			"::stappler::xenolith::core::BufferData::resource",
			"::stappler::xenolith::core::ForceImageFlags",
			"::stappler::xenolith::core::ForceImageUsage",
			"::stappler::xenolith::core::ImageInfoData",
			"::stappler::xenolith::core::ImageInfoData::format",
			"::stappler::xenolith::core::ImageInfoData::flags",
			"::stappler::xenolith::core::ImageInfoData::imageType",
			"::stappler::xenolith::core::ImageInfoData::extent",
			"::stappler::xenolith::core::ImageInfoData::mipLevels",
			"::stappler::xenolith::core::ImageInfoData::arrayLayers",
			"::stappler::xenolith::core::ImageInfoData::samples",
			"::stappler::xenolith::core::ImageInfoData::tiling",
			"::stappler::xenolith::core::ImageInfoData::usage",
			"::stappler::xenolith::core::ImageInfoData::type",
			"::stappler::xenolith::core::ImageInfoData::hints",
			"::stappler::xenolith::core::ImageInfoData::getViewInfo(stappler::xenolith::core::ImageViewInfo const&) const",
			"::stappler::xenolith::core::ImageInfoData::operator==(stappler::xenolith::core::ImageInfoData const&) const",
			"::stappler::xenolith::core::ImageInfoData::operator!=(stappler::xenolith::core::ImageInfoData const&) const",
			"::stappler::xenolith::core::ImageInfoData::operator<=>(stappler::xenolith::core::ImageInfoData const&) const",
			"::stappler::xenolith::core::ImageInfo",
			"::stappler::xenolith::core::ImageInfo::ImageInfo()",
			"::stappler::xenolith::core::ImageInfo::ImageInfo<typename>(Args &&...)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::Extent1)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::Extent2)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::Extent3)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageFlags)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ForceImageFlags)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageType)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::MipLevels)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ArrayLayers)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::SampleCount)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageTiling)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageUsage)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ForceImageUsage)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageFormat)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::PassType)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageHints)",
			"::stappler::xenolith::core::ImageInfo::setup(stappler::StringView)",
			"::stappler::xenolith::core::ImageInfo::define<typename>(T&&)",
			"::stappler::xenolith::core::ImageInfo::define<typename,typename>(T&&,Args &&...)",
			"::stappler::xenolith::core::ImageInfo::isCompatible(stappler::xenolith::core::ImageInfo const&) const",
			"::stappler::xenolith::core::ImageInfo::description() const",
			"::stappler::xenolith::core::ImageData",
			"::stappler::xenolith::core::ImageData::DataCallback",
			"::stappler::xenolith::core::ImageData::data",
			"::stappler::xenolith::core::ImageData::memCallback",
			"::stappler::xenolith::core::ImageData::stdCallback",
			"::stappler::xenolith::core::ImageData::image",
			"::stappler::xenolith::core::ImageData::atlas",
			"::stappler::xenolith::core::ImageData::resource",
			"::stappler::xenolith::core::ComponentMappingR",
			"::stappler::xenolith::core::ComponentMappingG",
			"::stappler::xenolith::core::ComponentMappingB",
			"::stappler::xenolith::core::ComponentMappingA",
			"::stappler::xenolith::core::ImageViewInfo",
			"::stappler::xenolith::core::ImageViewInfo::format",
			"::stappler::xenolith::core::ImageViewInfo::type",
			"::stappler::xenolith::core::ImageViewInfo::r",
			"::stappler::xenolith::core::ImageViewInfo::g",
			"::stappler::xenolith::core::ImageViewInfo::b",
			"::stappler::xenolith::core::ImageViewInfo::a",
			"::stappler::xenolith::core::ImageViewInfo::baseArrayLayer",
			"::stappler::xenolith::core::ImageViewInfo::layerCount",
			"::stappler::xenolith::core::ImageViewInfo::ImageViewInfo()",
			"::stappler::xenolith::core::ImageViewInfo::ImageViewInfo(stappler::xenolith::core::ImageViewInfo const&)",
			"::stappler::xenolith::core::ImageViewInfo::ImageViewInfo(stappler::xenolith::core::ImageViewInfo&&)",
			"::stappler::xenolith::core::ImageViewInfo::operator=(stappler::xenolith::core::ImageViewInfo const&)",
			"::stappler::xenolith::core::ImageViewInfo::operator=(stappler::xenolith::core::ImageViewInfo&&)",
			"::stappler::xenolith::core::ImageViewInfo::ImageViewInfo<typename>(Args &&...)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageViewInfo const&)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageInfoData const&)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageViewType)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageFormat)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ArrayLayers)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::BaseArrayLayer)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ComponentMappingR)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ComponentMappingG)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ComponentMappingB)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ComponentMappingA)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ColorMode,bool)",
			"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageType,stappler::xenolith::core::ArrayLayers)",
			"::stappler::xenolith::core::ImageViewInfo::getColorMode() const",
			"::stappler::xenolith::core::ImageViewInfo::define<typename>(T&&)",
			"::stappler::xenolith::core::ImageViewInfo::define<typename,typename>(T&&,Args &&...)",
			"::stappler::xenolith::core::ImageViewInfo::isCompatible(stappler::xenolith::core::ImageInfo const&) const",
			"::stappler::xenolith::core::ImageViewInfo::description() const",
			"::stappler::xenolith::core::ImageViewInfo::operator==(stappler::xenolith::core::ImageViewInfo const&) const",
			"::stappler::xenolith::core::ImageViewInfo::operator!=(stappler::xenolith::core::ImageViewInfo const&) const",
			"::stappler::xenolith::core::ImageViewInfo::operator<=>(stappler::xenolith::core::ImageViewInfo const&) const",
			"::stappler::xenolith::core::FrameContraints",
			"::stappler::xenolith::core::FrameContraints::extent",
			"::stappler::xenolith::core::FrameContraints::contentPadding",
			"::stappler::xenolith::core::FrameContraints::transform",
			"::stappler::xenolith::core::FrameContraints::density",
			"::stappler::xenolith::core::FrameContraints::getScreenSize() const",
			"::stappler::xenolith::core::FrameContraints::getRotatedPadding() const",
			"::stappler::xenolith::core::FrameContraints::operator==(stappler::xenolith::core::FrameContraints const&) const",
			"::stappler::xenolith::core::SwapchainConfig",
			"::stappler::xenolith::core::SwapchainConfig::presentMode",
			"::stappler::xenolith::core::SwapchainConfig::presentModeFast",
			"::stappler::xenolith::core::SwapchainConfig::imageFormat",
			"::stappler::xenolith::core::SwapchainConfig::colorSpace",
			"::stappler::xenolith::core::SwapchainConfig::alpha",
			"::stappler::xenolith::core::SwapchainConfig::transform",
			"::stappler::xenolith::core::SwapchainConfig::imageCount",
			"::stappler::xenolith::core::SwapchainConfig::extent",
			"::stappler::xenolith::core::SwapchainConfig::clipped",
			"::stappler::xenolith::core::SwapchainConfig::transfer",
			"::stappler::xenolith::core::SwapchainConfig::description() const",
			"::stappler::xenolith::core::SurfaceInfo",
			"::stappler::xenolith::core::SurfaceInfo::minImageCount",
			"::stappler::xenolith::core::SurfaceInfo::maxImageCount",
			"::stappler::xenolith::core::SurfaceInfo::currentExtent",
			"::stappler::xenolith::core::SurfaceInfo::minImageExtent",
			"::stappler::xenolith::core::SurfaceInfo::maxImageExtent",
			"::stappler::xenolith::core::SurfaceInfo::maxImageArrayLayers",
			"::stappler::xenolith::core::SurfaceInfo::supportedCompositeAlpha",
			"::stappler::xenolith::core::SurfaceInfo::supportedTransforms",
			"::stappler::xenolith::core::SurfaceInfo::currentTransform",
			"::stappler::xenolith::core::SurfaceInfo::supportedUsageFlags",
			"::stappler::xenolith::core::SurfaceInfo::formats",
			"::stappler::xenolith::core::SurfaceInfo::presentModes",
			"::stappler::xenolith::core::SurfaceInfo::surfaceDensity",
			"::stappler::xenolith::core::SurfaceInfo::isSupported(stappler::xenolith::core::SwapchainConfig const&) const",
			"::stappler::xenolith::core::SurfaceInfo::description() const",
			"::stappler::xenolith::core::getBufferFlagsDescription(stappler::xenolith::core::BufferFlags)",
			"::stappler::xenolith::core::getBufferUsageDescription(stappler::xenolith::core::BufferUsage)",
			"::stappler::xenolith::core::getImageFlagsDescription(stappler::xenolith::core::ImageFlags)",
			"::stappler::xenolith::core::getSampleCountDescription(stappler::xenolith::core::SampleCount)",
			"::stappler::xenolith::core::getImageTypeName(stappler::xenolith::core::ImageType)",
			"::stappler::xenolith::core::getImageViewTypeName(stappler::xenolith::core::ImageViewType)",
			"::stappler::xenolith::core::getImageFormatName(stappler::xenolith::core::ImageFormat)",
			"::stappler::xenolith::core::getImageTilingName(stappler::xenolith::core::ImageTiling)",
			"::stappler::xenolith::core::getComponentMappingName(stappler::xenolith::core::ComponentMapping)",
			"::stappler::xenolith::core::getPresentModeName(stappler::xenolith::core::PresentMode)",
			"::stappler::xenolith::core::getColorSpaceName(stappler::xenolith::core::ColorSpace)",
			"::stappler::xenolith::core::getCompositeAlphaFlagsDescription(stappler::xenolith::core::CompositeAlphaFlags)",
			"::stappler::xenolith::core::getSurfaceTransformFlagsDescription(stappler::xenolith::core::SurfaceTransformFlags)",
			"::stappler::xenolith::core::getImageUsageDescription(stappler::xenolith::core::ImageUsage)",
			"::stappler::xenolith::core::getFormatBlockSize(stappler::xenolith::core::ImageFormat)",
			"::stappler::xenolith::core::getImagePixelFormat(stappler::xenolith::core::ImageFormat)",
			"::stappler::xenolith::core::isStencilFormat(stappler::xenolith::core::ImageFormat)",
			"::stappler::xenolith::core::isDepthFormat(stappler::xenolith::core::ImageFormat)",
			"::stappler::xenolith::core::operator<<(std::ostream&,stappler::xenolith::core::ImageInfoData const&)"
		],
		"XLCoreInput.h":  [
			"XENOLITH_CORE_XLCOREINPUT_H_",
			"::stappler::xenolith::core::InputFlags",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::InputFlags const&,stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::InputFlags const&,stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::InputFlags const&,stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::InputFlags&,stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::InputFlags&,stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::InputFlags&,stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::InputFlags const&,std::underlying_type<InputFlags>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<InputFlags>::type const&,stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::InputFlags const&,std::underlying_type<InputFlags>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<InputFlags>::type const&,stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::InputFlags const&)",
			"::stappler::xenolith::core::InputMouseButton",
			"::stappler::xenolith::core::InputModifier",
			"::stappler::xenolith::core::operator|(stappler::xenolith::core::InputModifier const&,stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::operator&(stappler::xenolith::core::InputModifier const&,stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::operator^(stappler::xenolith::core::InputModifier const&,stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::operator|=(stappler::xenolith::core::InputModifier&,stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::operator&=(stappler::xenolith::core::InputModifier&,stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::operator^=(stappler::xenolith::core::InputModifier&,stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::InputModifier const&,std::underlying_type<InputModifier>::type const&)",
			"::stappler::xenolith::core::operator==(std::underlying_type<InputModifier>::type const&,stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::InputModifier const&,std::underlying_type<InputModifier>::type const&)",
			"::stappler::xenolith::core::operator!=(std::underlying_type<InputModifier>::type const&,stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::operator~(stappler::xenolith::core::InputModifier const&)",
			"::stappler::xenolith::core::InputKeyCode",
			"::stappler::xenolith::core::InputKeyComposeState",
			"::stappler::xenolith::core::InputEventName",
			"::stappler::xenolith::core::InputEventData",
			"::stappler::xenolith::core::InputEventData::BoolEvent(stappler::xenolith::core::InputEventName,bool)",
			"::stappler::xenolith::core::InputEventData::BoolEvent(stappler::xenolith::core::InputEventName,bool,stappler::xenolith::Vec2 const&)",
			"::stappler::xenolith::core::InputEventData::id",
			"::stappler::xenolith::core::InputEventData::event",
			"::stappler::xenolith::core::InputEventData::button",
			"::stappler::xenolith::core::InputEventData::modifiers",
			"::stappler::xenolith::core::InputEventData::x",
			"::stappler::xenolith::core::InputEventData::y",
			"::stappler::xenolith::core::InputEventData::",
			"::stappler::xenolith::core::InputEventData::",
			"::stappler::xenolith::core::InputEventData::valueX",
			"::stappler::xenolith::core::InputEventData::valueY",
			"::stappler::xenolith::core::InputEventData::density",
			"::stappler::xenolith::core::InputEventData::point",
			"::stappler::xenolith::core::InputEventData::",
			"::stappler::xenolith::core::InputEventData::keycode",
			"::stappler::xenolith::core::InputEventData::compose",
			"::stappler::xenolith::core::InputEventData::keysym",
			"::stappler::xenolith::core::InputEventData::keychar",
			"::stappler::xenolith::core::InputEventData::key",
			"::stappler::xenolith::core::InputEventData::operator==(uint32_t const&) const",
			"::stappler::xenolith::core::InputEventData::operator!=(uint32_t const&) const",
			"::stappler::xenolith::core::InputEventData::getValue() const",
			"::stappler::xenolith::core::InputEventData::hasLocation() const",
			"::stappler::xenolith::core::InputEventData::isPointEvent() const",
			"::stappler::xenolith::core::InputEventData::isKeyEvent() const",
			"::stappler::xenolith::core::InputEventData::operator<=>(stappler::xenolith::core::InputEventData const&)",
			"::stappler::xenolith::core::getInputKeyCodeName(stappler::xenolith::core::InputKeyCode)",
			"::stappler::xenolith::core::getInputKeyCodeKeyName(stappler::xenolith::core::InputKeyCode)",
			"::stappler::xenolith::core::getInputEventName(stappler::xenolith::core::InputEventName)",
			"::std::operator<<(std::ostream&,stappler::xenolith::core::InputKeyCode)",
			"::std::operator<<(std::ostream&,stappler::xenolith::core::InputEventName)"
		],
		"XLCoreInstance.h":  [
			"XENOLITH_CORE_XLCOREINSTANCE_H_",
			"::stappler::xenolith::core::DeviceProperties",
			"::stappler::xenolith::core::DeviceProperties::deviceName",
			"::stappler::xenolith::core::DeviceProperties::apiVersion",
			"::stappler::xenolith::core::DeviceProperties::driverVersion",
			"::stappler::xenolith::core::DeviceProperties::supportsPresentation",
			"::stappler::xenolith::core::Instance",
			"::stappler::xenolith::core::Instance::TerminateCallback",
			"::stappler::xenolith::core::Instance::DefaultDevice",
			"::stappler::xenolith::core::Instance::Instance(stappler::xenolith::core::Instance::TerminateCallback&&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::core::Instance::~Instance()",
			"::stappler::xenolith::core::Instance::getAvailableDevices() const",
			"::stappler::xenolith::core::Instance::makeLoop(stappler::xenolith::core::LoopInfo&&) const",
			"::stappler::xenolith::core::Instance::getUserdata() const",
			"::stappler::xenolith::core::Instance::makeView(stappler::xenolith::Application&,stappler::xenolith::core::Device const&,stappler::xenolith::ViewInfo&&) const",
			"::stappler::xenolith::core::Instance::_terminate",
			"::stappler::xenolith::core::Instance::_userdata",
			"::stappler::xenolith::core::Instance::_availableDevices"
		],
		"XLCoreLoop.h":  [
			"XENOLITH_CORE_XLCORELOOP_H_",
			"::stappler::xenolith::core::LoopInfo",
			"::stappler::xenolith::core::LoopInfo::deviceIdx",
			"::stappler::xenolith::core::LoopInfo::threadsCount",
			"::stappler::xenolith::core::LoopInfo::onDeviceStarted",
			"::stappler::xenolith::core::LoopInfo::onDeviceFinalized",
			"::stappler::xenolith::core::LoopInfo::platformData",
			"::stappler::xenolith::core::Loop",
			"::stappler::xenolith::core::Loop::FrameCache",
			"::stappler::xenolith::core::Loop::FrameRequest",
			"::stappler::xenolith::core::Loop::ImageStorage",
			"::stappler::xenolith::core::Loop::Queue",
			"::stappler::xenolith::core::Loop::FrameHandle",
			"::stappler::xenolith::core::Loop::PassData",
			"::stappler::xenolith::core::Loop::ImageAttachment",
			"::stappler::xenolith::core::Loop::AttachmentHandle",
			"::stappler::xenolith::core::Loop::DependencyEvent",
			"::stappler::xenolith::core::Loop::LoopInfo",
			"::stappler::xenolith::core::Loop::LoopThreadId",
			"::stappler::xenolith::core::Loop::~Loop()",
			"::stappler::xenolith::core::Loop::Loop()",
			"::stappler::xenolith::core::Loop::init(stappler::xenolith::core::Instance*,stappler::xenolith::core::Loop::LoopInfo&&)",
			"::stappler::xenolith::core::Loop::waitRinning()",
			"::stappler::xenolith::core::Loop::cancel()",
			"::stappler::xenolith::core::Loop::isRunning() const",
			"::stappler::xenolith::core::Loop::getGlInstance() const",
			"::stappler::xenolith::core::Loop::getFrameCache() const",
			"::stappler::xenolith::core::Loop::compileResource(Rc<stappler::xenolith::core::Resource>&&,Function<void (bool)>&&,bool) const",
			"::stappler::xenolith::core::Loop::compileQueue(Rc<stappler::xenolith::core::Loop::Queue> const&,Function<void (bool)>&&) const",
			"::stappler::xenolith::core::Loop::compileMaterials(Rc<stappler::xenolith::core::MaterialInputData>&&,Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&) const",
			"::stappler::xenolith::core::Loop::compileImage(Rc<stappler::xenolith::core::DynamicImage> const&,Function<void (bool)>&&) const",
			"::stappler::xenolith::core::Loop::runRenderQueue(Rc<stappler::xenolith::core::Loop::FrameRequest>&&,uint64_t,Function<void (bool)>&&)",
			"::stappler::xenolith::core::Loop::schedule(Function<bool (stappler::xenolith::core::Loop &)>&&,stappler::StringView)",
			"::stappler::xenolith::core::Loop::schedule(Function<bool (stappler::xenolith::core::Loop &)>&&,uint64_t,stappler::StringView)",
			"::stappler::xenolith::core::Loop::performInQueue(Rc<thread::Task>&&) const",
			"::stappler::xenolith::core::Loop::performInQueue(Function<void ()>&&,stappler::mem_std::Ref*) const",
			"::stappler::xenolith::core::Loop::performOnGlThread(Function<void ()>&&,stappler::mem_std::Ref*,bool) const",
			"::stappler::xenolith::core::Loop::isOnGlThread() const",
			"::stappler::xenolith::core::Loop::makeFrame(Rc<stappler::xenolith::core::Loop::FrameRequest>&&,uint64_t)",
			"::stappler::xenolith::core::Loop::acquireFramebuffer(stappler::xenolith::core::Loop::PassData const*,SpanView<Rc<stappler::xenolith::core::ImageView>>)",
			"::stappler::xenolith::core::Loop::releaseFramebuffer(Rc<stappler::xenolith::core::Framebuffer>&&)",
			"::stappler::xenolith::core::Loop::acquireImage(stappler::xenolith::core::Loop::ImageAttachment const*,stappler::xenolith::core::Loop::AttachmentHandle const*,stappler::xenolith::core::ImageInfoData const&)",
			"::stappler::xenolith::core::Loop::releaseImage(Rc<stappler::xenolith::core::Loop::ImageStorage>&&)",
			"::stappler::xenolith::core::Loop::makeSemaphore()",
			"::stappler::xenolith::core::Loop::getSupportedDepthStencilFormat() const",
			"::stappler::xenolith::core::Loop::signalDependencies(Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&,stappler::xenolith::core::Loop::Queue*,bool)",
			"::stappler::xenolith::core::Loop::waitForDependencies(Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::Loop::wakeup()",
			"::stappler::xenolith::core::Loop::waitIdle()",
			"::stappler::xenolith::core::Loop::captureImage(Function<void (const stappler::xenolith::core::ImageInfoData &, stappler::BytesView)>&&,Rc<stappler::xenolith::core::ImageObject> const&,stappler::xenolith::core::AttachmentLayout)",
			"::stappler::xenolith::core::Loop::_shouldExit",
			"::stappler::xenolith::core::Loop::_glInstance",
			"::stappler::xenolith::core::Loop::_frameCache",
			"::stappler::xenolith::core::Loop::_info"
		],
		"XLCoreMaterial.h":  [
			"XENOLITH_CORE_XLCOREMATERIAL_H_",
			"::stappler::xenolith::core::MaterialId",
			"::stappler::xenolith::core::MaterialInputData",
			"::stappler::xenolith::core::MaterialInputData::attachment",
			"::stappler::xenolith::core::MaterialInputData::materialsToAddOrUpdate",
			"::stappler::xenolith::core::MaterialInputData::materialsToRemove",
			"::stappler::xenolith::core::MaterialInputData::dynamicMaterialsToUpdate",
			"::stappler::xenolith::core::MaterialInputData::callback",
			"::stappler::xenolith::core::MaterialImage",
			"::stappler::xenolith::core::MaterialImage::image",
			"::stappler::xenolith::core::MaterialImage::dynamic",
			"::stappler::xenolith::core::MaterialImage::info",
			"::stappler::xenolith::core::MaterialImage::view",
			"::stappler::xenolith::core::MaterialImage::sampler",
			"::stappler::xenolith::core::MaterialImage::set",
			"::stappler::xenolith::core::MaterialImage::descriptor",
			"::stappler::xenolith::core::MaterialImage::canAlias(stappler::xenolith::core::MaterialImage const&) const",
			"::stappler::xenolith::core::MaterialSet",
			"::stappler::xenolith::core::MaterialSet::ImageSlot",
			"::stappler::xenolith::core::MaterialSet::EncodeCallback",
			"::stappler::xenolith::core::MaterialSet::~MaterialSet()",
			"::stappler::xenolith::core::MaterialSet::init(stappler::xenolith::core::BufferInfo const&,stappler::xenolith::core::MaterialSet::EncodeCallback const&,uint32_t,uint32_t,uint32_t,stappler::xenolith::core::MaterialAttachment const*)",
			"::stappler::xenolith::core::MaterialSet::init(Rc<stappler::xenolith::core::MaterialSet> const&)",
			"::stappler::xenolith::core::MaterialSet::encode(uint8_t*,stappler::xenolith::core::Material const*)",
			"::stappler::xenolith::core::MaterialSet::clear()",
			"::stappler::xenolith::core::MaterialSet::updateMaterials(Rc<stappler::xenolith::core::MaterialInputData> const&,Callback<Rc<stappler::xenolith::core::ImageView> (const stappler::xenolith::core::MaterialImage &)> const&)",
			"::stappler::xenolith::core::MaterialSet::updateMaterials(Vector<Rc<stappler::xenolith::core::Material>> const&,SpanView<stappler::xenolith::core::MaterialId>,SpanView<stappler::xenolith::core::MaterialId>,Callback<Rc<stappler::xenolith::core::ImageView> (const stappler::xenolith::core::MaterialImage &)> const&)",
			"::stappler::xenolith::core::MaterialSet::getInfo() const",
			"::stappler::xenolith::core::MaterialSet::getObjectSize() const",
			"::stappler::xenolith::core::MaterialSet::getImagesInSet() const",
			"::stappler::xenolith::core::MaterialSet::getGeneration() const",
			"::stappler::xenolith::core::MaterialSet::getMaterials() const",
			"::stappler::xenolith::core::MaterialSet::setBuffer(Rc<stappler::xenolith::core::BufferObject>&&,HashMap<stappler::xenolith::core::MaterialId, uint32_t>&&)",
			"::stappler::xenolith::core::MaterialSet::getBuffer() const",
			"::stappler::xenolith::core::MaterialSet::getOrdering() const",
			"::stappler::xenolith::core::MaterialSet::getLayouts()",
			"::stappler::xenolith::core::MaterialSet::getLayout(uint32_t) const",
			"::stappler::xenolith::core::MaterialSet::getMaterialById(stappler::xenolith::core::MaterialId) const",
			"::stappler::xenolith::core::MaterialSet::getMaterialOrder(stappler::xenolith::core::MaterialId) const",
			"::stappler::xenolith::core::MaterialSet::removeMaterial(stappler::xenolith::core::Material*)",
			"::stappler::xenolith::core::MaterialSet::emplaceMaterialImages(stappler::xenolith::core::Material*,stappler::xenolith::core::Material*,Callback<Rc<stappler::xenolith::core::ImageView> (const stappler::xenolith::core::MaterialImage &)> const&)",
			"::stappler::xenolith::core::MaterialSet::_info",
			"::stappler::xenolith::core::MaterialSet::_encodeCallback",
			"::stappler::xenolith::core::MaterialSet::_objectSize",
			"::stappler::xenolith::core::MaterialSet::_imagesInSet",
			"::stappler::xenolith::core::MaterialSet::_buffersInSet",
			"::stappler::xenolith::core::MaterialSet::_generation",
			"::stappler::xenolith::core::MaterialSet::_materials",
			"::stappler::xenolith::core::MaterialSet::_ordering",
			"::stappler::xenolith::core::MaterialSet::_layouts",
			"::stappler::xenolith::core::MaterialSet::_buffer",
			"::stappler::xenolith::core::MaterialSet::_owner",
			"::stappler::xenolith::core::Material",
			"::stappler::xenolith::core::Material::MaterialIdInitial",
			"::stappler::xenolith::core::Material::PipelineData",
			"::stappler::xenolith::core::Material::~Material()",
			"::stappler::xenolith::core::Material::init(stappler::xenolith::core::MaterialId,stappler::xenolith::core::Material::PipelineData const*,Vector<stappler::xenolith::core::MaterialImage>&&,stappler::mem_std::Bytes&&)",
			"::stappler::xenolith::core::Material::init(stappler::xenolith::core::MaterialId,stappler::xenolith::core::Material::PipelineData const*,Rc<stappler::xenolith::core::DynamicImageInstance> const&,stappler::mem_std::Bytes&&)",
			"::stappler::xenolith::core::Material::init(stappler::xenolith::core::MaterialId,stappler::xenolith::core::Material::PipelineData const*,stappler::xenolith::core::ImageData const*,stappler::mem_std::Bytes&&,bool)",
			"::stappler::xenolith::core::Material::init(stappler::xenolith::core::MaterialId,stappler::xenolith::core::Material::PipelineData const*,stappler::xenolith::core::ImageData const*,stappler::xenolith::core::ColorMode,stappler::mem_std::Bytes&&,bool)",
			"::stappler::xenolith::core::Material::init(stappler::xenolith::core::Material const*,Rc<stappler::xenolith::core::ImageObject>&&,Rc<stappler::xenolith::core::DataAtlas>&&,stappler::mem_std::Bytes&&)",
			"::stappler::xenolith::core::Material::init(stappler::xenolith::core::Material const*,Vector<stappler::xenolith::core::MaterialImage>&&)",
			"::stappler::xenolith::core::Material::getId() const",
			"::stappler::xenolith::core::Material::getPipeline() const",
			"::stappler::xenolith::core::Material::getImages() const",
			"::stappler::xenolith::core::Material::getData() const",
			"::stappler::xenolith::core::Material::getLayoutIndex() const",
			"::stappler::xenolith::core::Material::setLayoutIndex(uint32_t)",
			"::stappler::xenolith::core::Material::getAtlas() const",
			"::stappler::xenolith::core::Material::getOwnedData() const",
			"::stappler::xenolith::core::Material::_dirty",
			"::stappler::xenolith::core::Material::_id",
			"::stappler::xenolith::core::Material::_layoutIndex",
			"::stappler::xenolith::core::Material::_pipeline",
			"::stappler::xenolith::core::Material::_images",
			"::stappler::xenolith::core::Material::_atlas",
			"::stappler::xenolith::core::Material::_data",
			"::stappler::xenolith::core::Material::_ownedData",
			"::stappler::xenolith::core::MaterialAttachment",
			"::stappler::xenolith::core::MaterialAttachment::~MaterialAttachment()",
			"::stappler::xenolith::core::MaterialAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&,stappler::xenolith::core::BufferInfo const&,MaterialSet::EncodeCallback&&,uint32_t)",
			"::stappler::xenolith::core::MaterialAttachment::addPredefinedMaterials(Vector<Rc<stappler::xenolith::core::Material>>&&)",
			"::stappler::xenolith::core::MaterialAttachment::getMaterials() const",
			"::stappler::xenolith::core::MaterialAttachment::setMaterials(Rc<stappler::xenolith::core::MaterialSet> const&) const",
			"::stappler::xenolith::core::MaterialAttachment::getPredefinedMaterials() const",
			"::stappler::xenolith::core::MaterialAttachment::allocateSet(stappler::xenolith::core::Device const&) const",
			"::stappler::xenolith::core::MaterialAttachment::cloneSet(Rc<stappler::xenolith::core::MaterialSet> const&) const",
			"::stappler::xenolith::core::MaterialAttachment::sortDescriptors(stappler::xenolith::core::Attachment::RenderQueue&,stappler::xenolith::core::Device&)",
			"::stappler::xenolith::core::MaterialAttachment::addDynamicTracker(stappler::xenolith::core::MaterialId,Rc<stappler::xenolith::core::DynamicImage> const&) const",
			"::stappler::xenolith::core::MaterialAttachment::removeDynamicTracker(stappler::xenolith::core::MaterialId,Rc<stappler::xenolith::core::DynamicImage> const&) const",
			"::stappler::xenolith::core::MaterialAttachment::updateDynamicImage(stappler::xenolith::core::Loop&,stappler::xenolith::core::DynamicImage const*,Vector<Rc<stappler::xenolith::core::DependencyEvent>> const&) const",
			"::stappler::xenolith::core::MaterialAttachment::getNextMaterialId() const",
			"::stappler::xenolith::core::MaterialAttachment::setCompiler(stappler::xenolith::core::Queue*)",
			"::stappler::xenolith::core::MaterialAttachment::getCompiler() const",
			"::stappler::xenolith::core::MaterialAttachment::DynamicImageTracker",
			"::stappler::xenolith::core::MaterialAttachment::DynamicImageTracker::refCount",
			"::stappler::xenolith::core::MaterialAttachment::DynamicImageTracker::materials",
			"::stappler::xenolith::core::MaterialAttachment::_compiler",
			"::stappler::xenolith::core::MaterialAttachment::_attachmentMaterialId",
			"::stappler::xenolith::core::MaterialAttachment::_materialObjectSize",
			"::stappler::xenolith::core::MaterialAttachment::_encodeCallback",
			"::stappler::xenolith::core::MaterialAttachment::_data",
			"::stappler::xenolith::core::MaterialAttachment::_predefinedMaterials",
			"::stappler::xenolith::core::MaterialAttachment::_dynamicMutex",
			"::stappler::xenolith::core::MaterialAttachment::_dynamicTrackers"
		],
		"XLCoreMesh.h":  [
			"XENOLITH_CORE_XLCOREMESH_H_",
			"::stappler::xenolith::core::MeshInputData",
			"::stappler::xenolith::core::MeshInputData::attachment",
			"::stappler::xenolith::core::MeshInputData::meshesToAdd",
			"::stappler::xenolith::core::MeshInputData::meshesToRemove",
			"::stappler::xenolith::core::MeshSet",
			"::stappler::xenolith::core::MeshSet::Index",
			"::stappler::xenolith::core::MeshSet::Index::indexOffset",
			"::stappler::xenolith::core::MeshSet::Index::vertexOffset",
			"::stappler::xenolith::core::MeshSet::Index::index",
			"::stappler::xenolith::core::MeshSet::~MeshSet()",
			"::stappler::xenolith::core::MeshSet::init(Vector<stappler::xenolith::core::MeshSet::Index>&&,stappler::xenolith::core::BufferObject*,stappler::xenolith::core::BufferObject*)",
			"::stappler::xenolith::core::MeshSet::getIndexes() const",
			"::stappler::xenolith::core::MeshSet::getVertexBuffer() const",
			"::stappler::xenolith::core::MeshSet::getIndexBuffer() const",
			"::stappler::xenolith::core::MeshSet::clear()",
			"::stappler::xenolith::core::MeshSet::_indexes",
			"::stappler::xenolith::core::MeshSet::_vertexBuffer",
			"::stappler::xenolith::core::MeshSet::_indexBuffer",
			"::stappler::xenolith::core::MeshIndex",
			"::stappler::xenolith::core::MeshIndex::DataCallback",
			"::stappler::xenolith::core::MeshIndex::BufferCallback",
			"::stappler::xenolith::core::MeshIndex::MeshBufferInfo",
			"::stappler::xenolith::core::MeshIndex::MeshBufferInfo::indexBufferSize",
			"::stappler::xenolith::core::MeshIndex::MeshBufferInfo::indexBufferCallback",
			"::stappler::xenolith::core::MeshIndex::MeshBufferInfo::vertexBufferSize",
			"::stappler::xenolith::core::MeshIndex::MeshBufferInfo::vertexBufferCallback",
			"::stappler::xenolith::core::MeshIndex::~MeshIndex()",
			"::stappler::xenolith::core::MeshIndex::init(stappler::StringView,Rc<stappler::xenolith::core::DataAtlas>&&,stappler::xenolith::core::MeshIndex::MeshBufferInfo&&)",
			"::stappler::xenolith::core::MeshIndex::getVertexBufferData() const",
			"::stappler::xenolith::core::MeshIndex::getIndexBufferData() const",
			"::stappler::xenolith::core::MeshIndex::getAtlas() const",
			"::stappler::xenolith::core::MeshIndex::_atlas",
			"::stappler::xenolith::core::MeshIndex::_vertexBuffer",
			"::stappler::xenolith::core::MeshIndex::_indexBuffer",
			"::stappler::xenolith::core::MeshAttachment",
			"::stappler::xenolith::core::MeshAttachment::~MeshAttachment()",
			"::stappler::xenolith::core::MeshAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&,stappler::xenolith::core::BufferInfo const&,Vector<Rc<stappler::xenolith::core::MeshIndex>>&&)",
			"::stappler::xenolith::core::MeshAttachment::getMeshes() const",
			"::stappler::xenolith::core::MeshAttachment::setMeshes(Rc<stappler::xenolith::core::MeshSet> const&) const",
			"::stappler::xenolith::core::MeshAttachment::_data",
			"::stappler::xenolith::core::MeshAttachment::_initials"
		],
		"XLCoreObject.h":  [
			"XENOLITH_CORE_XLCOREOBJECT_H_",
			"XL_USE_64_BIT_PTR_DEFINES",
			"::stappler::xenolith::core::ObjectHandle",
			"::stappler::xenolith::core::ObjectInterface",
			"::stappler::xenolith::core::ObjectInterface::ObjectHandle",
			"::stappler::xenolith::core::ObjectInterface::ClearCallback",
			"::stappler::xenolith::core::ObjectInterface::~ObjectInterface()",
			"::stappler::xenolith::core::ObjectInterface::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle)",
			"::stappler::xenolith::core::ObjectInterface::invalidate()",
			"::stappler::xenolith::core::ObjectInterface::getType() const",
			"::stappler::xenolith::core::ObjectInterface::getObject() const",
			"::stappler::xenolith::core::ObjectInterface::_type",
			"::stappler::xenolith::core::ObjectInterface::_device",
			"::stappler::xenolith::core::ObjectInterface::_callback",
			"::stappler::xenolith::core::ObjectInterface::_handle",
			"::stappler::xenolith::core::NamedObject",
			"::stappler::xenolith::core::NamedObject::~NamedObject()",
			"::stappler::xenolith::core::Object",
			"::stappler::xenolith::core::Object::~Object()",
			"::stappler::xenolith::core::GraphicPipeline",
			"::stappler::xenolith::core::GraphicPipeline::PipelineInfo",
			"::stappler::xenolith::core::GraphicPipeline::PipelineData",
			"::stappler::xenolith::core::GraphicPipeline::SubpassData",
			"::stappler::xenolith::core::GraphicPipeline::RenderQueue",
			"::stappler::xenolith::core::GraphicPipeline::~GraphicPipeline()",
			"::stappler::xenolith::core::GraphicPipeline::getName() const",
			"::stappler::xenolith::core::GraphicPipeline::_name",
			"::stappler::xenolith::core::ComputePipeline",
			"::stappler::xenolith::core::ComputePipeline::PipelineInfo",
			"::stappler::xenolith::core::ComputePipeline::PipelineData",
			"::stappler::xenolith::core::ComputePipeline::SubpassData",
			"::stappler::xenolith::core::ComputePipeline::RenderQueue",
			"::stappler::xenolith::core::ComputePipeline::~ComputePipeline()",
			"::stappler::xenolith::core::ComputePipeline::getName() const",
			"::stappler::xenolith::core::ComputePipeline::_name",
			"::stappler::xenolith::core::Shader",
			"::stappler::xenolith::core::Shader::ProgramData",
			"::stappler::xenolith::core::Shader::DescriptorType",
			"::stappler::xenolith::core::Shader::inspectShader(SpanView<uint32_t>)",
			"::stappler::xenolith::core::Shader::~Shader()",
			"::stappler::xenolith::core::Shader::getName() const",
			"::stappler::xenolith::core::Shader::getStage() const",
			"::stappler::xenolith::core::Shader::inspect(SpanView<uint32_t>)",
			"::stappler::xenolith::core::Shader::_name",
			"::stappler::xenolith::core::Shader::_stage",
			"::stappler::xenolith::core::RenderPass",
			"::stappler::xenolith::core::RenderPass::QueuePassData",
			"::stappler::xenolith::core::RenderPass::Attachment",
			"::stappler::xenolith::core::RenderPass::PipelineDescriptor",
			"::stappler::xenolith::core::RenderPass::DescriptorType",
			"::stappler::xenolith::core::RenderPass::~RenderPass()",
			"::stappler::xenolith::core::RenderPass::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle)",
			"::stappler::xenolith::core::RenderPass::getName() const",
			"::stappler::xenolith::core::RenderPass::getIndex() const",
			"::stappler::xenolith::core::RenderPass::getType() const",
			"::stappler::xenolith::core::RenderPass::_name",
			"::stappler::xenolith::core::RenderPass::_index",
			"::stappler::xenolith::core::RenderPass::_type",
			"::stappler::xenolith::core::Framebuffer",
			"::stappler::xenolith::core::Framebuffer::getViewHash(SpanView<Rc<stappler::xenolith::core::ImageView>>)",
			"::stappler::xenolith::core::Framebuffer::getViewHash(SpanView<uint64_t>)",
			"::stappler::xenolith::core::Framebuffer::~Framebuffer()",
			"::stappler::xenolith::core::Framebuffer::getExtent() const",
			"::stappler::xenolith::core::Framebuffer::getLayerCount() const",
			"::stappler::xenolith::core::Framebuffer::getFramebufferExtent() const",
			"::stappler::xenolith::core::Framebuffer::getViewIds() const",
			"::stappler::xenolith::core::Framebuffer::getRenderPass() const",
			"::stappler::xenolith::core::Framebuffer::getHash() const",
			"::stappler::xenolith::core::Framebuffer::_extent",
			"::stappler::xenolith::core::Framebuffer::_layerCount",
			"::stappler::xenolith::core::Framebuffer::_viewIds",
			"::stappler::xenolith::core::Framebuffer::_renderPass",
			"::stappler::xenolith::core::Framebuffer::_imageViews",
			"::stappler::xenolith::core::DataAtlas",
			"::stappler::xenolith::core::DataAtlas::Type",
			"::stappler::xenolith::core::DataAtlas::~DataAtlas()",
			"::stappler::xenolith::core::DataAtlas::init(stappler::xenolith::core::DataAtlas::Type,uint32_t,uint32_t,stappler::xenolith::Extent2)",
			"::stappler::xenolith::core::DataAtlas::compile()",
			"::stappler::xenolith::core::DataAtlas::getObjectByName(uint32_t) const",
			"::stappler::xenolith::core::DataAtlas::getObjectByName(stappler::StringView) const",
			"::stappler::xenolith::core::DataAtlas::getObjectByOrder(uint32_t) const",
			"::stappler::xenolith::core::DataAtlas::addObject(uint32_t,void*)",
			"::stappler::xenolith::core::DataAtlas::addObject(stappler::StringView,void*)",
			"::stappler::xenolith::core::DataAtlas::getType() const",
			"::stappler::xenolith::core::DataAtlas::getObjectSize() const",
			"::stappler::xenolith::core::DataAtlas::getImageExtent() const",
			"::stappler::xenolith::core::DataAtlas::getObjectsCount() const",
			"::stappler::xenolith::core::DataAtlas::getData() const",
			"::stappler::xenolith::core::DataAtlas::getIndexData() const",
			"::stappler::xenolith::core::DataAtlas::setIndexBuffer(Rc<stappler::xenolith::core::BufferObject>&&)",
			"::stappler::xenolith::core::DataAtlas::getIndexBuffer() const",
			"::stappler::xenolith::core::DataAtlas::setDataBuffer(Rc<stappler::xenolith::core::BufferObject>&&)",
			"::stappler::xenolith::core::DataAtlas::getDataBuffer() const",
			"::stappler::xenolith::core::DataAtlas::makeHashIndex()",
			"::stappler::xenolith::core::DataAtlas::_type",
			"::stappler::xenolith::core::DataAtlas::_objectSize",
			"::stappler::xenolith::core::DataAtlas::_imageExtent",
			"::stappler::xenolith::core::DataAtlas::_intNames",
			"::stappler::xenolith::core::DataAtlas::_stringNames",
			"::stappler::xenolith::core::DataAtlas::_data",
			"::stappler::xenolith::core::DataAtlas::_dataIndex",
			"::stappler::xenolith::core::DataAtlas::_indexBuffer",
			"::stappler::xenolith::core::DataAtlas::_dataBuffer",
			"::stappler::xenolith::core::ImageObject",
			"::stappler::xenolith::core::ImageObject::~ImageObject()",
			"::stappler::xenolith::core::ImageObject::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle)",
			"::stappler::xenolith::core::ImageObject::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle,uint64_t)",
			"::stappler::xenolith::core::ImageObject::getInfo() const",
			"::stappler::xenolith::core::ImageObject::getIndex() const",
			"::stappler::xenolith::core::ImageObject::getAtlas() const",
			"::stappler::xenolith::core::ImageObject::getViewInfo(stappler::xenolith::core::ImageViewInfo const&) const",
			"::stappler::xenolith::core::ImageObject::_info",
			"::stappler::xenolith::core::ImageObject::_atlas",
			"::stappler::xenolith::core::ImageObject::_index",
			"::stappler::xenolith::core::ImageView",
			"::stappler::xenolith::core::ImageView::~ImageView()",
			"::stappler::xenolith::core::ImageView::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle)",
			"::stappler::xenolith::core::ImageView::invalidate()",
			"::stappler::xenolith::core::ImageView::setReleaseCallback(Function<void ()>&&)",
			"::stappler::xenolith::core::ImageView::runReleaseCallback()",
			"::stappler::xenolith::core::ImageView::getImage() const",
			"::stappler::xenolith::core::ImageView::getInfo() const",
			"::stappler::xenolith::core::ImageView::setLocation(uint32_t,uint32_t)",
			"::stappler::xenolith::core::ImageView::getSet() const",
			"::stappler::xenolith::core::ImageView::getDescriptor() const",
			"::stappler::xenolith::core::ImageView::getIndex() const",
			"::stappler::xenolith::core::ImageView::getExtent() const",
			"::stappler::xenolith::core::ImageView::getLayerCount() const",
			"::stappler::xenolith::core::ImageView::getFramebufferExtent() const",
			"::stappler::xenolith::core::ImageView::_info",
			"::stappler::xenolith::core::ImageView::_image",
			"::stappler::xenolith::core::ImageView::_set",
			"::stappler::xenolith::core::ImageView::_descriptor",
			"::stappler::xenolith::core::ImageView::_index",
			"::stappler::xenolith::core::ImageView::_releaseCallback",
			"::stappler::xenolith::core::BufferObject",
			"::stappler::xenolith::core::BufferObject::~BufferObject()",
			"::stappler::xenolith::core::BufferObject::getInfo() const",
			"::stappler::xenolith::core::BufferObject::getSize() const",
			"::stappler::xenolith::core::BufferObject::setLocation(uint32_t,uint32_t)",
			"::stappler::xenolith::core::BufferObject::getSet() const",
			"::stappler::xenolith::core::BufferObject::getDescriptor() const",
			"::stappler::xenolith::core::BufferObject::_info",
			"::stappler::xenolith::core::BufferObject::_set",
			"::stappler::xenolith::core::BufferObject::_descriptor",
			"::stappler::xenolith::core::Sampler",
			"::stappler::xenolith::core::Sampler::~Sampler()",
			"::stappler::xenolith::core::Sampler::getInfo() const",
			"::stappler::xenolith::core::Sampler::setIndex(uint32_t)",
			"::stappler::xenolith::core::Sampler::getIndex() const",
			"::stappler::xenolith::core::Sampler::_index",
			"::stappler::xenolith::core::Sampler::_info",
			"::stappler::xenolith::core::MaterialImageSlot",
			"::stappler::xenolith::core::MaterialImageSlot::image",
			"::stappler::xenolith::core::MaterialImageSlot::refCount",
			"::stappler::xenolith::core::MaterialBufferSlot",
			"::stappler::xenolith::core::MaterialBufferSlot::buffer",
			"::stappler::xenolith::core::MaterialBufferSlot::refCount",
			"::stappler::xenolith::core::MaterialLayout",
			"::stappler::xenolith::core::MaterialLayout::imageSlots",
			"::stappler::xenolith::core::MaterialLayout::usedImageSlots",
			"::stappler::xenolith::core::MaterialLayout::bufferSlots",
			"::stappler::xenolith::core::MaterialLayout::usedBufferSlots",
			"::stappler::xenolith::core::MaterialLayout::set",
			"::stappler::xenolith::core::TextureSet",
			"::stappler::xenolith::core::TextureSet::~TextureSet()",
			"::stappler::xenolith::core::TextureSet::write(stappler::xenolith::core::MaterialLayout const&)",
			"::stappler::xenolith::core::TextureSet::_count",
			"::stappler::xenolith::core::TextureSet::_layoutIndexes",
			"::stappler::xenolith::core::TextureSet::_layoutBuffers",
			"::stappler::xenolith::core::Semaphore",
			"::stappler::xenolith::core::Semaphore::~Semaphore()",
			"::stappler::xenolith::core::Semaphore::setSignaled(bool)",
			"::stappler::xenolith::core::Semaphore::isSignaled() const",
			"::stappler::xenolith::core::Semaphore::setWaited(bool)",
			"::stappler::xenolith::core::Semaphore::isWaited() const",
			"::stappler::xenolith::core::Semaphore::setInUse(bool,uint64_t)",
			"::stappler::xenolith::core::Semaphore::isInUse() const",
			"::stappler::xenolith::core::Semaphore::getTimeline() const",
			"::stappler::xenolith::core::Semaphore::reset()",
			"::stappler::xenolith::core::Semaphore::_timeline",
			"::stappler::xenolith::core::Semaphore::_signaled",
			"::stappler::xenolith::core::Semaphore::_waited",
			"::stappler::xenolith::core::Semaphore::_inUse"
		],
		"XLCorePipelineInfo.h":  [
			"XENOLITH_CORE_XLCOREPIPELINEINFO_H_",
			"::stappler::xenolith::core::EmptyTextureName",
			"::stappler::xenolith::core::SolidTextureName",
			"::stappler::xenolith::core::ColorMode",
			"::stappler::xenolith::core::ColorMode::SolidColor",
			"::stappler::xenolith::core::ColorMode::IntensityChannel",
			"::stappler::xenolith::core::ColorMode::AlphaChannel",
			"::stappler::xenolith::core::ColorMode::Mode",
			"::stappler::xenolith::core::ColorMode::mode",
			"::stappler::xenolith::core::ColorMode::r",
			"::stappler::xenolith::core::ColorMode::g",
			"::stappler::xenolith::core::ColorMode::b",
			"::stappler::xenolith::core::ColorMode::a",
			"::stappler::xenolith::core::ColorMode::ColorMode()",
			"::stappler::xenolith::core::ColorMode::ColorMode(stappler::xenolith::core::ComponentMapping,stappler::xenolith::core::ComponentMapping,stappler::xenolith::core::ComponentMapping,stappler::xenolith::core::ComponentMapping)",
			"::stappler::xenolith::core::ColorMode::ColorMode(stappler::xenolith::core::ComponentMapping,stappler::xenolith::core::ComponentMapping)",
			"::stappler::xenolith::core::ColorMode::ColorMode(stappler::xenolith::core::ColorMode const&)",
			"::stappler::xenolith::core::ColorMode::ColorMode(stappler::xenolith::core::ColorMode&&)",
			"::stappler::xenolith::core::ColorMode::operator=(stappler::xenolith::core::ColorMode const&)",
			"::stappler::xenolith::core::ColorMode::operator=(stappler::xenolith::core::ColorMode&&)",
			"::stappler::xenolith::core::ColorMode::operator==(stappler::xenolith::core::ColorMode const&) const",
			"::stappler::xenolith::core::ColorMode::operator!=(stappler::xenolith::core::ColorMode const&) const",
			"::stappler::xenolith::core::ColorMode::getMode() const",
			"::stappler::xenolith::core::ColorMode::getR() const",
			"::stappler::xenolith::core::ColorMode::getG() const",
			"::stappler::xenolith::core::ColorMode::getB() const",
			"::stappler::xenolith::core::ColorMode::getA() const",
			"::stappler::xenolith::core::ColorMode::toInt() const",
			"::stappler::xenolith::core::ColorMode::operator uint32_t() const",
			"::stappler::xenolith::core::BlendInfo",
			"::stappler::xenolith::core::BlendInfo::enabled",
			"::stappler::xenolith::core::BlendInfo::srcColor",
			"::stappler::xenolith::core::BlendInfo::dstColor",
			"::stappler::xenolith::core::BlendInfo::opColor",
			"::stappler::xenolith::core::BlendInfo::srcAlpha",
			"::stappler::xenolith::core::BlendInfo::dstAlpha",
			"::stappler::xenolith::core::BlendInfo::opAlpha",
			"::stappler::xenolith::core::BlendInfo::writeMask",
			"::stappler::xenolith::core::BlendInfo::BlendInfo()",
			"::stappler::xenolith::core::BlendInfo::BlendInfo(stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendOp,stappler::xenolith::core::ColorComponentFlags)",
			"::stappler::xenolith::core::BlendInfo::BlendInfo(stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendOp,stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendOp,stappler::xenolith::core::ColorComponentFlags)",
			"::stappler::xenolith::core::BlendInfo::operator==(stappler::xenolith::core::BlendInfo const&) const",
			"::stappler::xenolith::core::BlendInfo::operator!=(stappler::xenolith::core::BlendInfo const&) const",
			"::stappler::xenolith::core::BlendInfo::isEnabled() const",
			"::stappler::xenolith::core::DepthInfo",
			"::stappler::xenolith::core::DepthInfo::writeEnabled",
			"::stappler::xenolith::core::DepthInfo::testEnabled",
			"::stappler::xenolith::core::DepthInfo::compare",
			"::stappler::xenolith::core::DepthInfo::DepthInfo()",
			"::stappler::xenolith::core::DepthInfo::DepthInfo(bool,bool,stappler::xenolith::core::CompareOp)",
			"::stappler::xenolith::core::DepthInfo::operator==(stappler::xenolith::core::DepthInfo const&) const",
			"::stappler::xenolith::core::DepthInfo::operator!=(stappler::xenolith::core::DepthInfo const&) const",
			"::stappler::xenolith::core::DepthBounds",
			"::stappler::xenolith::core::DepthBounds::enabled",
			"::stappler::xenolith::core::DepthBounds::min",
			"::stappler::xenolith::core::DepthBounds::max",
			"::stappler::xenolith::core::DepthBounds::operator==(stappler::xenolith::core::DepthBounds const&) const",
			"::stappler::xenolith::core::DepthBounds::operator!=(stappler::xenolith::core::DepthBounds const&) const",
			"::stappler::xenolith::core::StencilInfo",
			"::stappler::xenolith::core::StencilInfo::fail",
			"::stappler::xenolith::core::StencilInfo::pass",
			"::stappler::xenolith::core::StencilInfo::depthFail",
			"::stappler::xenolith::core::StencilInfo::compare",
			"::stappler::xenolith::core::StencilInfo::compareMask",
			"::stappler::xenolith::core::StencilInfo::writeMask",
			"::stappler::xenolith::core::StencilInfo::reference",
			"::stappler::xenolith::core::LineWidth",
			"::stappler::xenolith::core::PipelineMaterialInfo",
			"::stappler::xenolith::core::PipelineMaterialInfo::PipelineMaterialInfo()",
			"::stappler::xenolith::core::PipelineMaterialInfo::PipelineMaterialInfo(stappler::xenolith::core::PipelineMaterialInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::operator=(stappler::xenolith::core::PipelineMaterialInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::PipelineMaterialInfo<typename,typename,typename>(T&&,Args &&...)",
			"::stappler::xenolith::core::PipelineMaterialInfo::setBlendInfo(stappler::xenolith::core::BlendInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::setDepthInfo(stappler::xenolith::core::DepthInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::setDepthBounds(stappler::xenolith::core::DepthBounds const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::enableStencil(stappler::xenolith::core::StencilInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::enableStencil(stappler::xenolith::core::StencilInfo const&,stappler::xenolith::core::StencilInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::disableStancil()",
			"::stappler::xenolith::core::PipelineMaterialInfo::setLineWidth(float)",
			"::stappler::xenolith::core::PipelineMaterialInfo::getBlendInfo() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::getDepthInfo() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::getDepthBounds() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::isStancilEnabled() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::getStencilInfoFront() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::getStencilInfoBack() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::getLineWidth() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::operator==(stappler::xenolith::core::PipelineMaterialInfo const&) const",
			"::stappler::xenolith::core::PipelineMaterialInfo::operator!=(stappler::xenolith::core::PipelineMaterialInfo const&) const",
			"::stappler::xenolith::core::PipelineMaterialInfo::hash() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::data() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::description() const",
			"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::BlendInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::DepthInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::DepthBounds const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::StencilInfo const&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::LineWidth)",
			"::stappler::xenolith::core::PipelineMaterialInfo::setup<typename>(T&&)",
			"::stappler::xenolith::core::PipelineMaterialInfo::setup<typename,typename>(T&&,Args &&...)",
			"::stappler::xenolith::core::PipelineMaterialInfo::setup()",
			"::stappler::xenolith::core::PipelineMaterialInfo::blend",
			"::stappler::xenolith::core::PipelineMaterialInfo::depth",
			"::stappler::xenolith::core::PipelineMaterialInfo::bounds",
			"::stappler::xenolith::core::PipelineMaterialInfo::front",
			"::stappler::xenolith::core::PipelineMaterialInfo::back",
			"::stappler::xenolith::core::PipelineMaterialInfo::stencil",
			"::stappler::xenolith::core::PipelineMaterialInfo::lineWidth"
		],
		"XLCorePlatform.h":  [
			"XENOLITH_CORE_XLCOREPLATFORM_H_",
			"::stappler::xenolith::platform::name()",
			"::stappler::xenolith::platform::version()",
			"::stappler::xenolith::platform::clock(core::ClockType)",
			"::stappler::xenolith::platform::sleep(uint64_t)"
		],
		"XLCoreQueue.h":  [
			"XENOLITH_CORE_XLCOREQUEUE_H_",
			"::stappler::xenolith::core::Queue",
			"::stappler::xenolith::core::Queue::FrameRequest",
			"::stappler::xenolith::core::Queue::FrameQueue",
			"::stappler::xenolith::core::Queue::AttachmentHandle",
			"::stappler::xenolith::core::Queue::FrameHandle",
			"::stappler::xenolith::core::Queue::AttachmentData",
			"::stappler::xenolith::core::Queue::AttachmentBuilder",
			"::stappler::xenolith::core::Queue::Queue()",
			"::stappler::xenolith::core::Queue::~Queue()",
			"::stappler::xenolith::core::Queue::init(stappler::xenolith::core::Queue::Builder&&)",
			"::stappler::xenolith::core::Queue::isCompiled() const",
			"::stappler::xenolith::core::Queue::setCompiled(bool,Function<void ()>&&)",
			"::stappler::xenolith::core::Queue::isCompatible(stappler::xenolith::core::ImageInfo const&) const",
			"::stappler::xenolith::core::Queue::getName() const",
			"::stappler::xenolith::core::Queue::getPrograms() const",
			"::stappler::xenolith::core::Queue::getPasses() const",
			"::stappler::xenolith::core::Queue::getGraphicPipelines() const",
			"::stappler::xenolith::core::Queue::getComputePipelines() const",
			"::stappler::xenolith::core::Queue::getAttachments() const",
			"::stappler::xenolith::core::Queue::getLinkedResources() const",
			"::stappler::xenolith::core::Queue::getInternalResource() const",
			"::stappler::xenolith::core::Queue::getInputAttachments() const",
			"::stappler::xenolith::core::Queue::getOutputAttachments() const",
			"::stappler::xenolith::core::Queue::getInputAttachment<typename>() const",
			"::stappler::xenolith::core::Queue::getOutputAttachment<typename>() const",
			"::stappler::xenolith::core::Queue::getInputAttachment(std::type_index) const",
			"::stappler::xenolith::core::Queue::getOutputAttachment(std::type_index) const",
			"::stappler::xenolith::core::Queue::getPass(stappler::StringView) const",
			"::stappler::xenolith::core::Queue::getProgram(stappler::StringView) const",
			"::stappler::xenolith::core::Queue::getGraphicPipeline(stappler::StringView) const",
			"::stappler::xenolith::core::Queue::getComputePipeline(stappler::StringView) const",
			"::stappler::xenolith::core::Queue::getAttachment(stappler::StringView) const",
			"::stappler::xenolith::core::Queue::getOutput() const",
			"::stappler::xenolith::core::Queue::getOutput(stappler::xenolith::core::AttachmentType) const",
			"::stappler::xenolith::core::Queue::getPresentImageOutput() const",
			"::stappler::xenolith::core::Queue::getTransferImageOutput() const",
			"::stappler::xenolith::core::Queue::incrementOrder()",
			"::stappler::xenolith::core::Queue::prepare(stappler::xenolith::core::Device&)",
			"::stappler::xenolith::core::Queue::beginFrame(stappler::xenolith::core::Queue::FrameRequest&)",
			"::stappler::xenolith::core::Queue::endFrame(stappler::xenolith::core::Queue::FrameRequest&)",
			"::stappler::xenolith::core::Queue::_data",
			"::stappler::xenolith::core::AttachmentBuilder",
			"::stappler::xenolith::core::AttachmentBuilder::setType(stappler::xenolith::core::AttachmentType)",
			"::stappler::xenolith::core::AttachmentBuilder::defineAsInput(stappler::xenolith::core::AttachmentOps)",
			"::stappler::xenolith::core::AttachmentBuilder::defineAsOutput(stappler::xenolith::core::AttachmentOps)",
			"::stappler::xenolith::core::AttachmentBuilder::getAttachmentData() const",
			"::stappler::xenolith::core::AttachmentBuilder::AttachmentBuilder(stappler::xenolith::core::AttachmentData*)",
			"::stappler::xenolith::core::AttachmentBuilder::_data",
			"::stappler::xenolith::core::AttachmentPassBuilder",
			"::stappler::xenolith::core::AttachmentPassBuilder::setAttachmentOps(stappler::xenolith::core::AttachmentOps)",
			"::stappler::xenolith::core::AttachmentPassBuilder::setInitialLayout(stappler::xenolith::core::AttachmentLayout)",
			"::stappler::xenolith::core::AttachmentPassBuilder::setFinalLayout(stappler::xenolith::core::AttachmentLayout)",
			"::stappler::xenolith::core::AttachmentPassBuilder::setLoadOp(stappler::xenolith::core::AttachmentLoadOp)",
			"::stappler::xenolith::core::AttachmentPassBuilder::setStoreOp(stappler::xenolith::core::AttachmentStoreOp)",
			"::stappler::xenolith::core::AttachmentPassBuilder::setStencilLoadOp(stappler::xenolith::core::AttachmentLoadOp)",
			"::stappler::xenolith::core::AttachmentPassBuilder::setStencilStoreOp(stappler::xenolith::core::AttachmentStoreOp)",
			"::stappler::xenolith::core::AttachmentPassBuilder::setColorMode(stappler::xenolith::core::ColorMode const&)",
			"::stappler::xenolith::core::AttachmentPassBuilder::setDependency(stappler::xenolith::core::AttachmentDependencyInfo const&)",
			"::stappler::xenolith::core::AttachmentPassBuilder::AttachmentPassBuilder(stappler::xenolith::core::AttachmentPassData*)",
			"::stappler::xenolith::core::AttachmentPassBuilder::_data",
			"::stappler::xenolith::core::DescriptorSetBuilder",
			"::stappler::xenolith::core::DescriptorSetBuilder::addDescriptor(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::DescriptorType,stappler::xenolith::core::AttachmentLayout)",
			"::stappler::xenolith::core::DescriptorSetBuilder::DescriptorSetBuilder(stappler::xenolith::core::DescriptorSetData*)",
			"::stappler::xenolith::core::DescriptorSetBuilder::_data",
			"::stappler::xenolith::core::PipelineLayoutBuilder",
			"::stappler::xenolith::core::PipelineLayoutBuilder::addSet(Callback<void (stappler::xenolith::core::DescriptorSetBuilder &)> const&)",
			"::stappler::xenolith::core::PipelineLayoutBuilder::setUsesTextureSet(bool)",
			"::stappler::xenolith::core::PipelineLayoutBuilder::PipelineLayoutBuilder(stappler::xenolith::core::PipelineLayoutData*)",
			"::stappler::xenolith::core::PipelineLayoutBuilder::_data",
			"::stappler::xenolith::core::SubpassBuilder",
			"::stappler::xenolith::core::SubpassBuilder::addColor(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentDependencyInfo,stappler::xenolith::core::AttachmentLayout,stappler::xenolith::core::AttachmentOps)",
			"::stappler::xenolith::core::SubpassBuilder::addInput(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentDependencyInfo,stappler::xenolith::core::AttachmentLayout,stappler::xenolith::core::AttachmentOps)",
			"::stappler::xenolith::core::SubpassBuilder::addResolve(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentDependencyInfo,stappler::xenolith::core::AttachmentDependencyInfo)",
			"::stappler::xenolith::core::SubpassBuilder::setDepthStencil(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentDependencyInfo,stappler::xenolith::core::AttachmentLayout,stappler::xenolith::core::AttachmentOps)",
			"::stappler::xenolith::core::SubpassBuilder::addGraphicPipeline<typename>(stappler::StringView,stappler::xenolith::core::PipelineLayoutData const*,Args &&...)",
			"::stappler::xenolith::core::SubpassBuilder::addComputePipeline(stappler::StringView,stappler::xenolith::core::PipelineLayoutData const*,stappler::xenolith::core::SpecializationInfo&&)",
			"::stappler::xenolith::core::SubpassBuilder::emplacePipeline(stappler::StringView,stappler::xenolith::core::PipelineLayoutData const*)",
			"::stappler::xenolith::core::SubpassBuilder::finalizePipeline(stappler::xenolith::core::GraphicPipelineData*)",
			"::stappler::xenolith::core::SubpassBuilder::erasePipeline(stappler::xenolith::core::GraphicPipelineData*)",
			"::stappler::xenolith::core::SubpassBuilder::setPipelineOption(stappler::xenolith::core::GraphicPipelineData&,stappler::xenolith::core::DynamicState)",
			"::stappler::xenolith::core::SubpassBuilder::setPipelineOption(stappler::xenolith::core::GraphicPipelineData&,Vector<stappler::xenolith::core::SpecializationInfo> const&)",
			"::stappler::xenolith::core::SubpassBuilder::setPipelineOption(stappler::xenolith::core::GraphicPipelineData&,stappler::xenolith::core::PipelineMaterialInfo const&)",
			"::stappler::xenolith::core::SubpassBuilder::setPipelineOptions<typename>(stappler::xenolith::core::GraphicPipelineData&,T&&)",
			"::stappler::xenolith::core::SubpassBuilder::setPipelineOptions<typename,typename>(stappler::xenolith::core::GraphicPipelineData&,T&&,Args &&...)",
			"::stappler::xenolith::core::SubpassBuilder::SubpassBuilder(stappler::xenolith::core::SubpassData*)",
			"::stappler::xenolith::core::SubpassBuilder::_data",
			"::stappler::xenolith::core::QueuePassBuilder",
			"::stappler::xenolith::core::QueuePassBuilder::addDescriptorLayout(Callback<void (stappler::xenolith::core::PipelineLayoutBuilder &)> const&)",
			"::stappler::xenolith::core::QueuePassBuilder::addSubpass(Callback<void (stappler::xenolith::core::SubpassBuilder &)> const&)",
			"::stappler::xenolith::core::QueuePassBuilder::addSubpassDependency(stappler::xenolith::core::SubpassData const*,stappler::xenolith::core::PipelineStage,stappler::xenolith::core::AccessType,stappler::xenolith::core::SubpassData const*,stappler::xenolith::core::PipelineStage,stappler::xenolith::core::AccessType,bool)",
			"::stappler::xenolith::core::QueuePassBuilder::addAttachment(stappler::xenolith::core::AttachmentData const*)",
			"::stappler::xenolith::core::QueuePassBuilder::addAttachment(stappler::xenolith::core::AttachmentData const*,Callback<void (stappler::xenolith::core::AttachmentPassBuilder &)> const&)",
			"::stappler::xenolith::core::QueuePassBuilder::getData() const",
			"::stappler::xenolith::core::QueuePassBuilder::QueuePassBuilder(stappler::xenolith::core::QueuePassData*)",
			"::stappler::xenolith::core::QueuePassBuilder::_data",
			"::stappler::xenolith::core::Builder",
			"::stappler::xenolith::core::Builder::Builder(stappler::StringView)",
			"::stappler::xenolith::core::Builder::~Builder()",
			"::stappler::xenolith::core::Builder::addAttachemnt(stappler::StringView,Callback<Rc<stappler::xenolith::core::Attachment> (stappler::xenolith::core::Queue::AttachmentBuilder &)> const&)",
			"::stappler::xenolith::core::Builder::addPass(stappler::StringView,stappler::xenolith::core::PassType,stappler::xenolith::core::RenderOrdering,Callback<Rc<stappler::xenolith::core::QueuePass> (stappler::xenolith::core::QueuePassBuilder &)> const&)",
			"::stappler::xenolith::core::Builder::addProgram(stappler::StringView,SpanView<uint32_t>,stappler::xenolith::core::ProgramInfo const*)",
			"::stappler::xenolith::core::Builder::addProgramByRef(stappler::StringView,SpanView<uint32_t>,stappler::xenolith::core::ProgramInfo const*)",
			"::stappler::xenolith::core::Builder::addProgram(stappler::StringView,memory::function<void (const ProgramData::DataCallback &)> const&,stappler::xenolith::core::ProgramInfo const*)",
			"::stappler::xenolith::core::Builder::setInternalResource(Rc<stappler::xenolith::core::Resource>&&)",
			"::stappler::xenolith::core::Builder::addLinkedResource(Rc<stappler::xenolith::core::Resource> const&)",
			"::stappler::xenolith::core::Builder::setBeginCallback(Function<void (stappler::xenolith::core::Queue::FrameRequest &)>&&)",
			"::stappler::xenolith::core::Builder::setEndCallback(Function<void (stappler::xenolith::core::Queue::FrameRequest &)>&&)",
			"::stappler::xenolith::core::Builder::getPool() const",
			"::stappler::xenolith::core::Builder::getPassData(Rc<stappler::xenolith::core::QueuePass> const&) const",
			"::stappler::xenolith::core::Builder::getSubpassData(Rc<stappler::xenolith::core::QueuePass> const&,uint32_t) const",
			"::stappler::xenolith::core::Builder::_data",
			"::stappler::xenolith::core::Queue::getInputAttachment<typename>() const",
			"::stappler::xenolith::core::Queue::getOutputAttachment<typename>() const"
		],
		"XLCoreQueueData.h":  [
			"XENOLITH_CORE_XLCOREQUEUEDATA_H_",
			"::stappler::xenolith::core::ProgramDescriptorBinding",
			"::stappler::xenolith::core::ProgramDescriptorBinding::set",
			"::stappler::xenolith::core::ProgramDescriptorBinding::descriptor",
			"::stappler::xenolith::core::ProgramDescriptorBinding::type",
			"::stappler::xenolith::core::ProgramDescriptorBinding::count",
			"::stappler::xenolith::core::ProgramPushConstantBlock",
			"::stappler::xenolith::core::ProgramPushConstantBlock::offset",
			"::stappler::xenolith::core::ProgramPushConstantBlock::size",
			"::stappler::xenolith::core::ProgramEntryPointBlock",
			"::stappler::xenolith::core::ProgramEntryPointBlock::id",
			"::stappler::xenolith::core::ProgramEntryPointBlock::name",
			"::stappler::xenolith::core::ProgramEntryPointBlock::localX",
			"::stappler::xenolith::core::ProgramEntryPointBlock::localY",
			"::stappler::xenolith::core::ProgramEntryPointBlock::localZ",
			"::stappler::xenolith::core::ProgramInfo",
			"::stappler::xenolith::core::ProgramInfo::stage",
			"::stappler::xenolith::core::ProgramInfo::bindings",
			"::stappler::xenolith::core::ProgramInfo::constants",
			"::stappler::xenolith::core::ProgramInfo::entryPoints",
			"::stappler::xenolith::core::ProgramData",
			"::stappler::xenolith::core::ProgramData::DataCallback",
			"::stappler::xenolith::core::ProgramData::data",
			"::stappler::xenolith::core::ProgramData::callback",
			"::stappler::xenolith::core::ProgramData::program",
			"::stappler::xenolith::core::ProgramData::inspect(SpanView<uint32_t>)",
			"::stappler::xenolith::core::SpecializationInfo",
			"::stappler::xenolith::core::SpecializationInfo::data",
			"::stappler::xenolith::core::SpecializationInfo::constants",
			"::stappler::xenolith::core::SpecializationInfo::SpecializationInfo()",
			"::stappler::xenolith::core::SpecializationInfo::SpecializationInfo(stappler::xenolith::core::ProgramData const*)",
			"::stappler::xenolith::core::SpecializationInfo::SpecializationInfo(stappler::xenolith::core::ProgramData const*,SpanView<stappler::xenolith::core::PredefinedConstant>)",
			"::stappler::xenolith::core::GraphicPipelineInfo",
			"::stappler::xenolith::core::GraphicPipelineInfo::shaders",
			"::stappler::xenolith::core::GraphicPipelineInfo::dynamicState",
			"::stappler::xenolith::core::GraphicPipelineInfo::material",
			"::stappler::xenolith::core::GraphicPipelineInfo::isSolid() const",
			"::stappler::xenolith::core::GraphicPipelineData",
			"::stappler::xenolith::core::GraphicPipelineData::subpass",
			"::stappler::xenolith::core::GraphicPipelineData::layout",
			"::stappler::xenolith::core::GraphicPipelineData::pipeline",
			"::stappler::xenolith::core::ComputePipelineInfo",
			"::stappler::xenolith::core::ComputePipelineInfo::shader",
			"::stappler::xenolith::core::ComputePipelineData",
			"::stappler::xenolith::core::ComputePipelineData::subpass",
			"::stappler::xenolith::core::ComputePipelineData::layout",
			"::stappler::xenolith::core::ComputePipelineData::pipeline",
			"::stappler::xenolith::core::PipelineDescriptor",
			"::stappler::xenolith::core::PipelineDescriptor::set",
			"::stappler::xenolith::core::PipelineDescriptor::attachment",
			"::stappler::xenolith::core::PipelineDescriptor::type",
			"::stappler::xenolith::core::PipelineDescriptor::stages",
			"::stappler::xenolith::core::PipelineDescriptor::layout",
			"::stappler::xenolith::core::PipelineDescriptor::count",
			"::stappler::xenolith::core::PipelineDescriptor::index",
			"::stappler::xenolith::core::PipelineDescriptor::updateAfterBind",
			"::stappler::xenolith::core::PipelineDescriptor::boundGeneration",
			"::stappler::xenolith::core::SubpassDependency",
			"::stappler::xenolith::core::SubpassDependency::External",
			"::stappler::xenolith::core::SubpassDependency::srcSubpass",
			"::stappler::xenolith::core::SubpassDependency::srcStage",
			"::stappler::xenolith::core::SubpassDependency::srcAccess",
			"::stappler::xenolith::core::SubpassDependency::dstSubpass",
			"::stappler::xenolith::core::SubpassDependency::dstStage",
			"::stappler::xenolith::core::SubpassDependency::dstAccess",
			"::stappler::xenolith::core::SubpassDependency::byRegion",
			"::stappler::xenolith::core::SubpassDependency::value() const",
			"::stappler::xenolith::core::operator<(stappler::xenolith::core::SubpassDependency const&,stappler::xenolith::core::SubpassDependency const&)",
			"::stappler::xenolith::core::operator==(stappler::xenolith::core::SubpassDependency const&,stappler::xenolith::core::SubpassDependency const&)",
			"::stappler::xenolith::core::operator!=(stappler::xenolith::core::SubpassDependency const&,stappler::xenolith::core::SubpassDependency const&)",
			"::stappler::xenolith::core::AttachmentDependencyInfo",
			"::stappler::xenolith::core::AttachmentDependencyInfo::initialUsageStage",
			"::stappler::xenolith::core::AttachmentDependencyInfo::initialAccessMask",
			"::stappler::xenolith::core::AttachmentDependencyInfo::finalUsageStage",
			"::stappler::xenolith::core::AttachmentDependencyInfo::finalAccessMask",
			"::stappler::xenolith::core::AttachmentDependencyInfo::requiredRenderPassState",
			"::stappler::xenolith::core::AttachmentDependencyInfo::lockedRenderPassState",
			"::stappler::xenolith::core::AttachmentSubpassData",
			"::stappler::xenolith::core::AttachmentSubpassData::pass",
			"::stappler::xenolith::core::AttachmentSubpassData::subpass",
			"::stappler::xenolith::core::AttachmentSubpassData::layout",
			"::stappler::xenolith::core::AttachmentSubpassData::usage",
			"::stappler::xenolith::core::AttachmentSubpassData::ops",
			"::stappler::xenolith::core::AttachmentSubpassData::dependency",
			"::stappler::xenolith::core::AttachmentPassData",
			"::stappler::xenolith::core::AttachmentPassData::attachment",
			"::stappler::xenolith::core::AttachmentPassData::pass",
			"::stappler::xenolith::core::AttachmentPassData::index",
			"::stappler::xenolith::core::AttachmentPassData::ops",
			"::stappler::xenolith::core::AttachmentPassData::initialLayout",
			"::stappler::xenolith::core::AttachmentPassData::finalLayout",
			"::stappler::xenolith::core::AttachmentPassData::loadOp",
			"::stappler::xenolith::core::AttachmentPassData::storeOp",
			"::stappler::xenolith::core::AttachmentPassData::stencilLoadOp",
			"::stappler::xenolith::core::AttachmentPassData::stencilStoreOp",
			"::stappler::xenolith::core::AttachmentPassData::colorMode",
			"::stappler::xenolith::core::AttachmentPassData::dependency",
			"::stappler::xenolith::core::AttachmentPassData::descriptors",
			"::stappler::xenolith::core::AttachmentPassData::subpasses",
			"::stappler::xenolith::core::AttachmentData",
			"::stappler::xenolith::core::AttachmentData::queue",
			"::stappler::xenolith::core::AttachmentData::id",
			"::stappler::xenolith::core::AttachmentData::ops",
			"::stappler::xenolith::core::AttachmentData::type",
			"::stappler::xenolith::core::AttachmentData::usage",
			"::stappler::xenolith::core::AttachmentData::passes",
			"::stappler::xenolith::core::AttachmentData::attachment",
			"::stappler::xenolith::core::AttachmentData::transient",
			"::stappler::xenolith::core::DescriptorSetData",
			"::stappler::xenolith::core::DescriptorSetData::layout",
			"::stappler::xenolith::core::DescriptorSetData::index",
			"::stappler::xenolith::core::DescriptorSetData::descriptors",
			"::stappler::xenolith::core::PipelineLayoutData",
			"::stappler::xenolith::core::PipelineLayoutData::pass",
			"::stappler::xenolith::core::PipelineLayoutData::index",
			"::stappler::xenolith::core::PipelineLayoutData::usesTextureSet",
			"::stappler::xenolith::core::PipelineLayoutData::sets",
			"::stappler::xenolith::core::PipelineLayoutData::graphicPipelines",
			"::stappler::xenolith::core::PipelineLayoutData::computePipelines",
			"::stappler::xenolith::core::SubpassData",
			"::stappler::xenolith::core::SubpassData::SubpassData()",
			"::stappler::xenolith::core::SubpassData::SubpassData(stappler::xenolith::core::SubpassData const&)",
			"::stappler::xenolith::core::SubpassData::SubpassData(stappler::xenolith::core::SubpassData&&)",
			"::stappler::xenolith::core::SubpassData::operator=(stappler::xenolith::core::SubpassData const&)",
			"::stappler::xenolith::core::SubpassData::operator=(stappler::xenolith::core::SubpassData&&)",
			"::stappler::xenolith::core::SubpassData::pass",
			"::stappler::xenolith::core::SubpassData::index",
			"::stappler::xenolith::core::SubpassData::graphicPipelines",
			"::stappler::xenolith::core::SubpassData::computePipelines",
			"::stappler::xenolith::core::SubpassData::inputImages",
			"::stappler::xenolith::core::SubpassData::outputImages",
			"::stappler::xenolith::core::SubpassData::resolveImages",
			"::stappler::xenolith::core::SubpassData::depthStencil",
			"::stappler::xenolith::core::SubpassData::preserve",
			"::stappler::xenolith::core::RenderOrdering",
			"::stappler::xenolith::core::RenderOrderingLowest",
			"::stappler::xenolith::core::RenderOrderingHighest",
			"::stappler::xenolith::core::QueuePassData",
			"::stappler::xenolith::core::QueuePassData::QueuePassData()",
			"::stappler::xenolith::core::QueuePassData::QueuePassData(stappler::xenolith::core::QueuePassData const&)",
			"::stappler::xenolith::core::QueuePassData::QueuePassData(stappler::xenolith::core::QueuePassData&&)",
			"::stappler::xenolith::core::QueuePassData::operator=(stappler::xenolith::core::QueuePassData const&)",
			"::stappler::xenolith::core::QueuePassData::operator=(stappler::xenolith::core::QueuePassData&&)",
			"::stappler::xenolith::core::QueuePassData::queue",
			"::stappler::xenolith::core::QueuePassData::attachments",
			"::stappler::xenolith::core::QueuePassData::subpasses",
			"::stappler::xenolith::core::QueuePassData::pipelineLayouts",
			"::stappler::xenolith::core::QueuePassData::dependencies",
			"::stappler::xenolith::core::QueuePassData::type",
			"::stappler::xenolith::core::QueuePassData::ordering",
			"::stappler::xenolith::core::QueuePassData::hasUpdateAfterBind",
			"::stappler::xenolith::core::QueuePassData::pass",
			"::stappler::xenolith::core::QueuePassData::impl",
			"::stappler::xenolith::core::QueueData",
			"::stappler::xenolith::core::QueueData::pool",
			"::stappler::xenolith::core::QueueData::input",
			"::stappler::xenolith::core::QueueData::output",
			"::stappler::xenolith::core::QueueData::attachments",
			"::stappler::xenolith::core::QueueData::passes",
			"::stappler::xenolith::core::QueueData::programs",
			"::stappler::xenolith::core::QueueData::graphicPipelines",
			"::stappler::xenolith::core::QueueData::computePipelines",
			"::stappler::xenolith::core::QueueData::linked",
			"::stappler::xenolith::core::QueueData::beginCallback",
			"::stappler::xenolith::core::QueueData::endCallback",
			"::stappler::xenolith::core::QueueData::releaseCallback",
			"::stappler::xenolith::core::QueueData::resource",
			"::stappler::xenolith::core::QueueData::compiled",
			"::stappler::xenolith::core::QueueData::order",
			"::stappler::xenolith::core::QueueData::queue",
			"::stappler::xenolith::core::QueueData::typedInput",
			"::stappler::xenolith::core::QueueData::typedOutput",
			"::stappler::xenolith::core::QueueData::clear()",
			"::stappler::xenolith::core::getDescriptorTypeName(stappler::xenolith::core::DescriptorType)",
			"::stappler::xenolith::core::getProgramStageDescription(stappler::xenolith::core::ProgramStage)"
		],
		"XLCoreQueuePass.h":  [
			"XENOLITH_CORE_XLCOREQUEUEPASS_H_",
			"::stappler::xenolith::core::QueuePass",
			"::stappler::xenolith::core::QueuePass::Queue",
			"::stappler::xenolith::core::QueuePass::FrameQueue",
			"::stappler::xenolith::core::QueuePass::RenderOrdering",
			"::stappler::xenolith::core::QueuePass::QueuePassBuilder",
			"::stappler::xenolith::core::QueuePass::QueuePassHandle",
			"::stappler::xenolith::core::QueuePass::PassType",
			"::stappler::xenolith::core::QueuePass::AttachmentData",
			"::stappler::xenolith::core::QueuePass::~QueuePass()",
			"::stappler::xenolith::core::QueuePass::init(stappler::xenolith::core::QueuePass::QueuePassBuilder&)",
			"::stappler::xenolith::core::QueuePass::invalidate()",
			"::stappler::xenolith::core::QueuePass::getName() const",
			"::stappler::xenolith::core::QueuePass::getOrdering() const",
			"::stappler::xenolith::core::QueuePass::getSubpassCount() const",
			"::stappler::xenolith::core::QueuePass::getType() const",
			"::stappler::xenolith::core::QueuePass::makeFrameHandle(stappler::xenolith::core::QueuePass::FrameQueue const&)",
			"::stappler::xenolith::core::QueuePass::getOwner() const",
			"::stappler::xenolith::core::QueuePass::acquireForFrame(stappler::xenolith::core::QueuePass::FrameQueue&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::QueuePass::releaseForFrame(stappler::xenolith::core::QueuePass::FrameQueue&)",
			"::stappler::xenolith::core::QueuePass::getData() const",
			"::stappler::xenolith::core::QueuePass::prepare(stappler::xenolith::core::Device&)",
			"::stappler::xenolith::core::QueuePass::FrameQueueWaiter",
			"::stappler::xenolith::core::QueuePass::FrameQueueWaiter::queue",
			"::stappler::xenolith::core::QueuePass::FrameQueueWaiter::acquired",
			"::stappler::xenolith::core::QueuePass::_owner",
			"::stappler::xenolith::core::QueuePass::_next",
			"::stappler::xenolith::core::QueuePass::_frameSizeCallback",
			"::stappler::xenolith::core::QueuePass::_data",
			"::stappler::xenolith::core::QueuePassHandle",
			"::stappler::xenolith::core::QueuePassHandle::QueuePass",
			"::stappler::xenolith::core::QueuePassHandle::FrameHandle",
			"::stappler::xenolith::core::QueuePassHandle::FrameQueue",
			"::stappler::xenolith::core::QueuePassHandle::FrameSync",
			"::stappler::xenolith::core::QueuePassHandle::RenderOrdering",
			"::stappler::xenolith::core::QueuePassHandle::~QueuePassHandle()",
			"::stappler::xenolith::core::QueuePassHandle::init(stappler::xenolith::core::QueuePassHandle::QueuePass&,stappler::xenolith::core::QueuePassHandle::FrameQueue const&)",
			"::stappler::xenolith::core::QueuePassHandle::setQueueData(stappler::xenolith::core::FramePassData&)",
			"::stappler::xenolith::core::QueuePassHandle::getName() const",
			"::stappler::xenolith::core::QueuePassHandle::getData() const",
			"::stappler::xenolith::core::QueuePassHandle::getQueuePass() const",
			"::stappler::xenolith::core::QueuePassHandle::getFramebuffer() const",
			"::stappler::xenolith::core::QueuePassHandle::isAvailable(stappler::xenolith::core::QueuePassHandle::FrameQueue const&) const",
			"::stappler::xenolith::core::QueuePassHandle::isAsync() const",
			"::stappler::xenolith::core::QueuePassHandle::isSubmitted() const",
			"::stappler::xenolith::core::QueuePassHandle::isCompleted() const",
			"::stappler::xenolith::core::QueuePassHandle::isFramebufferRequired() const",
			"::stappler::xenolith::core::QueuePassHandle::prepare(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::QueuePassHandle::submit(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Rc<stappler::xenolith::core::QueuePassHandle::FrameSync>&&,Function<void (bool)>&&,Function<void (bool)>&&)",
			"::stappler::xenolith::core::QueuePassHandle::finalize(stappler::xenolith::core::QueuePassHandle::FrameQueue&,bool)",
			"::stappler::xenolith::core::QueuePassHandle::getAttachmentHandle(stappler::xenolith::core::AttachmentData const*) const",
			"::stappler::xenolith::core::QueuePassHandle::autorelease(stappler::mem_std::Ref*) const",
			"::stappler::xenolith::core::QueuePassHandle::getAttachemntData(stappler::xenolith::core::AttachmentData const*) const",
			"::stappler::xenolith::core::QueuePassHandle::_isAsync",
			"::stappler::xenolith::core::QueuePassHandle::_queuePass",
			"::stappler::xenolith::core::QueuePassHandle::_data",
			"::stappler::xenolith::core::QueuePassHandle::_queueData",
			"::stappler::xenolith::core::QueuePassHandle::_autoreleaseMutex",
			"::stappler::xenolith::core::QueuePassHandle::_autorelease"
		],
		"XLCoreResource.h":  [
			"XENOLITH_CORE_XLCORERESOURCE_H_",
			"::stappler::xenolith::core::Resource",
			"::stappler::xenolith::core::Resource::loadImageFileData(uint8_t*,uint64_t,stappler::StringView,stappler::xenolith::core::ImageFormat,ImageData::DataCallback const&)",
			"::stappler::xenolith::core::Resource::Resource()",
			"::stappler::xenolith::core::Resource::~Resource()",
			"::stappler::xenolith::core::Resource::init(stappler::xenolith::core::Resource::Builder&&)",
			"::stappler::xenolith::core::Resource::clear()",
			"::stappler::xenolith::core::Resource::isCompiled() const",
			"::stappler::xenolith::core::Resource::setCompiled(bool)",
			"::stappler::xenolith::core::Resource::getOwner() const",
			"::stappler::xenolith::core::Resource::setOwner(stappler::xenolith::core::Queue const*)",
			"::stappler::xenolith::core::Resource::getName() const",
			"::stappler::xenolith::core::Resource::getPool() const",
			"::stappler::xenolith::core::Resource::getBuffers() const",
			"::stappler::xenolith::core::Resource::getImages() const",
			"::stappler::xenolith::core::Resource::getBuffer(stappler::StringView) const",
			"::stappler::xenolith::core::Resource::getImage(stappler::StringView) const",
			"::stappler::xenolith::core::Resource::_data",
			"::stappler::xenolith::core::Builder",
			"::stappler::xenolith::core::Builder::Builder(stappler::StringView)",
			"::stappler::xenolith::core::Builder::~Builder()",
			"::stappler::xenolith::core::Builder::addBufferByRef(stappler::StringView,stappler::xenolith::core::BufferInfo&&,stappler::BytesView,Rc<stappler::xenolith::core::DataAtlas>&&)",
			"::stappler::xenolith::core::Builder::addBuffer(stappler::StringView,stappler::xenolith::core::BufferInfo&&,stappler::FilePath,Rc<stappler::xenolith::core::DataAtlas>&&)",
			"::stappler::xenolith::core::Builder::addBuffer(stappler::StringView,stappler::xenolith::core::BufferInfo&&,stappler::BytesView,Rc<stappler::xenolith::core::DataAtlas>&&)",
			"::stappler::xenolith::core::Builder::addBuffer(stappler::StringView,stappler::xenolith::core::BufferInfo&&,memory::function<void (uint8_t *, uint64_t, const BufferData::DataCallback &)> const&,Rc<stappler::xenolith::core::DataAtlas>&&)",
			"::stappler::xenolith::core::Builder::addImageByRef(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::BytesView)",
			"::stappler::xenolith::core::Builder::addImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::FilePath)",
			"::stappler::xenolith::core::Builder::addImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::BytesView)",
			"::stappler::xenolith::core::Builder::addImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,memory::function<void (uint8_t *, uint64_t, const ImageData::DataCallback &)> const&)",
			"::stappler::xenolith::core::Builder::_data"
		],
		"XLDirector.h":  [
			"XENOLITH_SCENE_DIRECTOR_XLDIRECTOR_H_",
			"::stappler::xenolith::Director",
			"::stappler::xenolith::Director::FrameRequest",
			"::stappler::xenolith::Director::~Director()",
			"::stappler::xenolith::Director::Director()",
			"::stappler::xenolith::Director::init(stappler::xenolith::Application*,core::FrameContraints const&,stappler::xenolith::View*)",
			"::stappler::xenolith::Director::runScene(Rc<stappler::xenolith::Scene>&&)",
			"::stappler::xenolith::Director::acquireFrame(Rc<stappler::xenolith::Director::FrameRequest> const&)",
			"::stappler::xenolith::Director::update(uint64_t)",
			"::stappler::xenolith::Director::end()",
			"::stappler::xenolith::Director::getApplication() const",
			"::stappler::xenolith::Director::getGlLoop() const",
			"::stappler::xenolith::Director::getView() const",
			"::stappler::xenolith::Director::getScheduler() const",
			"::stappler::xenolith::Director::getActionManager() const",
			"::stappler::xenolith::Director::getInputDispatcher() const",
			"::stappler::xenolith::Director::getTextInputManager() const",
			"::stappler::xenolith::Director::getScene() const",
			"::stappler::xenolith::Director::getResourceCache() const",
			"::stappler::xenolith::Director::getGeneralProjection() const",
			"::stappler::xenolith::Director::getFrameConstraints() const",
			"::stappler::xenolith::Director::pushDrawStat(stappler::xenolith::DrawStat const&)",
			"::stappler::xenolith::Director::getDrawStat() const",
			"::stappler::xenolith::Director::getFps() const",
			"::stappler::xenolith::Director::getAvgFps() const",
			"::stappler::xenolith::Director::getSpf() const",
			"::stappler::xenolith::Director::getLocalFrameTime() const",
			"::stappler::xenolith::Director::getDirectorFrameTime() const",
			"::stappler::xenolith::Director::autorelease(stappler::mem_std::Ref*)",
			"::stappler::xenolith::Director::invalidate()",
			"::stappler::xenolith::Director::updateGeneralTransform()",
			"::stappler::xenolith::Director::hasActiveInteractions()",
			"::stappler::xenolith::Director::_mainLoop",
			"::stappler::xenolith::Director::_view",
			"::stappler::xenolith::Director::_constraints",
			"::stappler::xenolith::Director::_startTime",
			"::stappler::xenolith::Director::_time",
			"::stappler::xenolith::Director::_drawStat",
			"::stappler::xenolith::Director::_scene",
			"::stappler::xenolith::Director::_nextScene",
			"::stappler::xenolith::Director::_generalProjection",
			"::stappler::xenolith::Director::_pool",
			"::stappler::xenolith::Director::_scheduler",
			"::stappler::xenolith::Director::_actionManager",
			"::stappler::xenolith::Director::_inputDispatcher",
			"::stappler::xenolith::Director::_autorelease",
			"::stappler::xenolith::Director::_avgFrameTime",
			"::stappler::xenolith::Director::_avgFrameTimeValue"
		],
		"XLDynamicStateNode.h":  [
			"XENOLITH_SCENE_NODES_XLDYNAMICSTATENODE_H_",
			"::stappler::xenolith::DynamicStateNode",
			"::stappler::xenolith::DynamicStateNode::StateApplyMode",
			"::stappler::xenolith::DynamicStateNode::init()",
			"::stappler::xenolith::DynamicStateNode::getStateApplyMode() const",
			"::stappler::xenolith::DynamicStateNode::setStateApplyMode(stappler::xenolith::DynamicStateNode::StateApplyMode)",
			"::stappler::xenolith::DynamicStateNode::visitDraw(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)",
			"::stappler::xenolith::DynamicStateNode::enableScissor(stappler::xenolith::Padding)",
			"::stappler::xenolith::DynamicStateNode::disableScissor()",
			"::stappler::xenolith::DynamicStateNode::isScissorEnabled() const",
			"::stappler::xenolith::DynamicStateNode::setScissorOutlone(stappler::xenolith::Padding)",
			"::stappler::xenolith::DynamicStateNode::getScissorOutline() const",
			"::stappler::xenolith::DynamicStateNode::updateDynamicState(stappler::xenolith::DrawStateValues const&) const",
			"::stappler::xenolith::DynamicStateNode::_applyMode",
			"::stappler::xenolith::DynamicStateNode::_scissorEnabled",
			"::stappler::xenolith::DynamicStateNode::_scissorOutline"
		],
		"XLEvent.h":  [
			"XENOLITH_APPLICATION_XLEVENT_H_",
			"::stappler::xenolith::Event",
			"::stappler::xenolith::Event::Type",
			"::stappler::xenolith::Event::getObject() const",
			"::stappler::xenolith::Event::getHeader() const",
			"::stappler::xenolith::Event::getCategory() const",
			"::stappler::xenolith::Event::getEventID() const",
			"::stappler::xenolith::Event::is(stappler::xenolith::EventHeader const&) const",
			"::stappler::xenolith::Event::operator==(stappler::xenolith::EventHeader const&) const",
			"::stappler::xenolith::Event::getTarget<class>() const",
			"::stappler::xenolith::Event::valueIsVoid() const",
			"::stappler::xenolith::Event::valueIsBool() const",
			"::stappler::xenolith::Event::valueIsInt() const",
			"::stappler::xenolith::Event::valueIsFloat() const",
			"::stappler::xenolith::Event::valueIsObject() const",
			"::stappler::xenolith::Event::valueIsString() const",
			"::stappler::xenolith::Event::valueIsData() const",
			"::stappler::xenolith::Event::getIntValue() const",
			"::stappler::xenolith::Event::getFloatValue() const",
			"::stappler::xenolith::Event::getBoolValue() const",
			"::stappler::xenolith::Event::getObjValueImpl<class>(std::true_type const&) const",
			"::stappler::xenolith::Event::getObjValueImpl<class>(std::false_type const&) const",
			"::stappler::xenolith::Event::getObjectValue<class>() const",
			"::stappler::xenolith::Event::getStringValue() const",
			"::stappler::xenolith::Event::getDataValue() const",
			"::stappler::xenolith::Event::EventValue",
			"::stappler::xenolith::Event::EventValue::intValue",
			"::stappler::xenolith::Event::EventValue::floatValue",
			"::stappler::xenolith::Event::EventValue::boolValue",
			"::stappler::xenolith::Event::EventValue::objValue",
			"::stappler::xenolith::Event::EventValue::strValue",
			"::stappler::xenolith::Event::EventValue::dataValue",
			"::stappler::xenolith::Event::Event(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::Event::EventValue,stappler::xenolith::Event::Type)",
			"::stappler::xenolith::Event::Event(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::Event::EventValue,stappler::xenolith::Event::Type)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,int64_t)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,double)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,bool)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::mem_std::Ref*)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,char const*)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::mem_std::String const&)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::StringView const&)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::mem_std::Value const&)",
			"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*)",
			"::stappler::xenolith::Event::dispatch() const",
			"::stappler::xenolith::Event::_header",
			"::stappler::xenolith::Event::_type",
			"::stappler::xenolith::Event::_object",
			"::stappler::xenolith::Event::_value",
			"::stappler::xenolith::Event::ZERO_STRING"
		],
		"XLEventHandler.h":  [
			"XENOLITH_APPLICATION_XLEVENTHANDLER_H_",
			"::stappler::xenolith::EventHandler",
			"::stappler::xenolith::EventHandler::Callback",
			"::stappler::xenolith::EventHandler::EventHandler()",
			"::stappler::xenolith::EventHandler::~EventHandler()",
			"::stappler::xenolith::EventHandler::addHandlerNode(stappler::xenolith::EventHandlerNode*)",
			"::stappler::xenolith::EventHandler::removeHandlerNode(stappler::xenolith::EventHandlerNode*)",
			"::stappler::xenolith::EventHandler::setEventHandler(stappler::xenolith::EventHeader const&,stappler::xenolith::EventHandler::Callback&&,bool)",
			"::stappler::xenolith::EventHandler::setEventHandlerForObject(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::EventHandler::Callback&&,bool)",
			"::stappler::xenolith::EventHandler::getInterface() const",
			"::stappler::xenolith::EventHandler::clearEvents()",
			"::stappler::xenolith::EventHandler::_handlers",
			"::stappler::xenolith::EventHandlerNode",
			"::stappler::xenolith::EventHandlerNode::Callback",
			"::stappler::xenolith::EventHandlerNode::onEvent(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::EventHandlerNode::Callback&&,stappler::xenolith::EventHandler*,bool)",
			"::stappler::xenolith::EventHandlerNode::EventHandlerNode(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::EventHandlerNode::Callback&&,stappler::xenolith::EventHandler*,bool)",
			"::stappler::xenolith::EventHandlerNode::~EventHandlerNode()",
			"::stappler::xenolith::EventHandlerNode::setSupport(stappler::xenolith::EventHandler*)",
			"::stappler::xenolith::EventHandlerNode::shouldRecieveEventWithObject(EventHeader::EventID,stappler::mem_std::Ref*) const",
			"::stappler::xenolith::EventHandlerNode::getEventID() const",
			"::stappler::xenolith::EventHandlerNode::onEventRecieved(stappler::xenolith::Event const&) const",
			"::stappler::xenolith::EventHandlerNode::_destroyAfterEvent",
			"::stappler::xenolith::EventHandlerNode::_eventID",
			"::stappler::xenolith::EventHandlerNode::_callback",
			"::stappler::xenolith::EventHandlerNode::_obj",
			"::stappler::xenolith::EventHandlerNode::_support"
		],
		"XLEventHeader.h":  [
			"XENOLITH_APPLICATION_XLEVENTHEADER_H_",
			"XL_DECLARE_EVENT_CLASS",
			"XL_DECLARE_EVENT",
			"::stappler::xenolith::EventHeader",
			"::stappler::xenolith::EventHeader::Category",
			"::stappler::xenolith::EventHeader::EventID",
			"::stappler::xenolith::EventHeader::getCategoryForName(stappler::StringView)",
			"::stappler::xenolith::EventHeader::EventHeader()",
			"::stappler::xenolith::EventHeader::EventHeader(stappler::StringView,stappler::StringView)",
			"::stappler::xenolith::EventHeader::EventHeader(stappler::xenolith::EventHeader::Category,stappler::StringView)",
			"::stappler::xenolith::EventHeader::~EventHeader()",
			"::stappler::xenolith::EventHeader::EventHeader(stappler::xenolith::EventHeader const&)",
			"::stappler::xenolith::EventHeader::EventHeader(stappler::xenolith::EventHeader&&)",
			"::stappler::xenolith::EventHeader::operator=(stappler::xenolith::EventHeader const&)",
			"::stappler::xenolith::EventHeader::operator=(stappler::xenolith::EventHeader&&)",
			"::stappler::xenolith::EventHeader::getCategory() const",
			"::stappler::xenolith::EventHeader::getEventID() const",
			"::stappler::xenolith::EventHeader::getName() const",
			"::stappler::xenolith::EventHeader::isInCategory(stappler::xenolith::EventHeader::Category) const",
			"::stappler::xenolith::EventHeader::operator int()",
			"::stappler::xenolith::EventHeader::operator==(stappler::xenolith::Event const&) const",
			"::stappler::xenolith::EventHeader::operator()<typename>(stappler::mem_std::Ref*,T const&) const",
			"::stappler::xenolith::EventHeader::operator()(stappler::mem_std::Ref*) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,int64_t) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,double) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,bool) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,stappler::mem_std::Ref*) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,char const*) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,stappler::mem_std::String const&) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,stappler::StringView const&) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,stappler::mem_std::Value const&) const",
			"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*) const",
			"::stappler::xenolith::EventHeader::_category",
			"::stappler::xenolith::EventHeader::_id",
			"::stappler::xenolith::EventHeader::_name"
		],
		"XLEventListener.h":  [
			"XENOLITH_SCENE_NODES_XLEVENTLISTENER_H_",
			"::stappler::xenolith::EventListener",
			"::stappler::xenolith::EventListener::EventCallback",
			"::stappler::xenolith::EventListener::~EventListener()",
			"::stappler::xenolith::EventListener::init()",
			"::stappler::xenolith::EventListener::onEventRecieved(stappler::xenolith::Event const&,stappler::xenolith::EventListener::EventCallback const&)",
			"::stappler::xenolith::EventListener::onEvent(stappler::xenolith::EventHeader const&,stappler::xenolith::EventListener::EventCallback&&,bool)",
			"::stappler::xenolith::EventListener::onEventWithObject(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::EventListener::EventCallback&&,bool)",
			"::stappler::xenolith::EventListener::clear()"
		],
		"XLFrameContext.h":  [
			"XENOLITH_SCENE_DIRECTOR_XLFRAMECONTEXT_H_",
			"::stappler::xenolith::FrameContext",
			"::stappler::xenolith::FrameContext::~FrameContext()",
			"::stappler::xenolith::FrameContext::init()",
			"::stappler::xenolith::FrameContext::onEnter(stappler::xenolith::Scene*)",
			"::stappler::xenolith::FrameContext::onExit()",
			"::stappler::xenolith::FrameContext::makeHandle(stappler::xenolith::FrameInfo&)",
			"::stappler::xenolith::FrameContext::submitHandle(stappler::xenolith::FrameInfo&,stappler::xenolith::FrameContextHandle*)",
			"::stappler::xenolith::FrameContext::getMaterial(stappler::xenolith::MaterialInfo const&) const",
			"::stappler::xenolith::FrameContext::acquireMaterial(stappler::xenolith::MaterialInfo const&,Vector<core::MaterialImage>&&,bool)",
			"::stappler::xenolith::FrameContext::revokeImages(SpanView<uint64_t>)",
			"::stappler::xenolith::FrameContext::PipelineLayoutData",
			"::stappler::xenolith::FrameContext::PipelineLayoutData::layout",
			"::stappler::xenolith::FrameContext::PipelineLayoutData::pipelines",
			"::stappler::xenolith::FrameContext::ContextMaterialInfo",
			"::stappler::xenolith::FrameContext::ContextMaterialInfo::info",
			"::stappler::xenolith::FrameContext::ContextMaterialInfo::id",
			"::stappler::xenolith::FrameContext::ContextMaterialInfo::revokable",
			"::stappler::xenolith::FrameContext::readMaterials(core::MaterialAttachment*)",
			"::stappler::xenolith::FrameContext::getMaterialInfo(Rc<core::Material> const&) const",
			"::stappler::xenolith::FrameContext::addPendingMaterial(Rc<core::Material>&&)",
			"::stappler::xenolith::FrameContext::addMaterial(stappler::xenolith::MaterialInfo const&,core::MaterialId,bool)",
			"::stappler::xenolith::FrameContext::listMaterials() const",
			"::stappler::xenolith::FrameContext::getImageViewForMaterial(stappler::xenolith::MaterialInfo const&,uint32_t,core::ImageData const*) const",
			"::stappler::xenolith::FrameContext::getDataForMaterial(stappler::xenolith::MaterialInfo const&) const",
			"::stappler::xenolith::FrameContext::getPipelineForMaterial(stappler::xenolith::MaterialInfo const&) const",
			"::stappler::xenolith::FrameContext::isPipelineMatch(core::GraphicPipelineData const*,stappler::xenolith::MaterialInfo const&) const",
			"::stappler::xenolith::FrameContext::submitMaterials(stappler::xenolith::FrameInfo const&)",
			"::stappler::xenolith::FrameContext::_scene",
			"::stappler::xenolith::FrameContext::_queue",
			"::stappler::xenolith::FrameContext::_materialAttachment",
			"::stappler::xenolith::FrameContext::_layouts",
			"::stappler::xenolith::FrameContext::_materials",
			"::stappler::xenolith::FrameContext::_pendingMaterialsToAdd",
			"::stappler::xenolith::FrameContext::_pendingMaterialsToRemove",
			"::stappler::xenolith::FrameContext::_materialDependency",
			"::stappler::xenolith::FrameContext::_revokedIds",
			"::stappler::xenolith::FrameContextHandle",
			"::stappler::xenolith::FrameContextHandle::director",
			"::stappler::xenolith::FrameContextHandle::context",
			"::stappler::xenolith::FrameContextHandle::stateStack",
			"::stappler::xenolith::FrameContextHandle::states",
			"::stappler::xenolith::FrameContextHandle::addState(stappler::xenolith::DrawStateValues)",
			"::stappler::xenolith::FrameContextHandle::getState(stappler::xenolith::StateId) const",
			"::stappler::xenolith::FrameContextHandle::getCurrentState() const"
		],
		"XLFrameInfo.h":  [
			"XENOLITH_SCENE_DIRECTOR_XLFRAMEINFO_H_",
			"::stappler::xenolith::FrameInfo",
			"::stappler::xenolith::FrameInfo::pool",
			"::stappler::xenolith::FrameInfo::request",
			"::stappler::xenolith::FrameInfo::director",
			"::stappler::xenolith::FrameInfo::scene",
			"::stappler::xenolith::FrameInfo::input",
			"::stappler::xenolith::FrameInfo::zPath",
			"::stappler::xenolith::FrameInfo::viewProjectionStack",
			"::stappler::xenolith::FrameInfo::modelTransformStack",
			"::stappler::xenolith::FrameInfo::depthStack",
			"::stappler::xenolith::FrameInfo::contextStack",
			"::stappler::xenolith::FrameInfo::componentsStack",
			"::stappler::xenolith::FrameInfo::resolvedInputs",
			"::stappler::xenolith::FrameInfo::currentContext",
			"::stappler::xenolith::FrameInfo::pushComponent(Rc<stappler::xenolith::Component> const&)",
			"::stappler::xenolith::FrameInfo::popComponent(memory::vector<Rc<Component>>*)",
			"::stappler::xenolith::FrameInfo::getComponent<typename>(uint64_t) const",
			"::stappler::xenolith::FrameInfo::pushContext(stappler::xenolith::FrameContext*)",
			"::stappler::xenolith::FrameInfo::popContext()"
		],
		"XLGestureRecognizer.h":  [
			"XENOLITH_SCENE_INPUT_XLGESTURERECOGNIZER_H_",
			"::stappler::xenolith::TapDistanceAllowed",
			"::stappler::xenolith::TapDistanceAllowedMulti",
			"::stappler::xenolith::TapIntervalAllowed",
			"::stappler::xenolith::GestureEvent",
			"::stappler::xenolith::GestureData",
			"::stappler::xenolith::GestureData::event",
			"::stappler::xenolith::GestureData::input",
			"::stappler::xenolith::GestureData::location() const",
			"::stappler::xenolith::GestureData::getId() const",
			"::stappler::xenolith::GestureScroll",
			"::stappler::xenolith::GestureScroll::pos",
			"::stappler::xenolith::GestureScroll::amount",
			"::stappler::xenolith::GestureScroll::location() const",
			"::stappler::xenolith::GestureScroll::cleanup()",
			"::stappler::xenolith::GestureTap",
			"::stappler::xenolith::GestureTap::pos",
			"::stappler::xenolith::GestureTap::id",
			"::stappler::xenolith::GestureTap::count",
			"::stappler::xenolith::GestureTap::time",
			"::stappler::xenolith::GestureTap::cleanup()",
			"::stappler::xenolith::GesturePress",
			"::stappler::xenolith::GesturePress::pos",
			"::stappler::xenolith::GesturePress::id",
			"::stappler::xenolith::GesturePress::limit",
			"::stappler::xenolith::GesturePress::time",
			"::stappler::xenolith::GesturePress::tickCount",
			"::stappler::xenolith::GesturePress::cleanup()",
			"::stappler::xenolith::GestureSwipe",
			"::stappler::xenolith::GestureSwipe::firstTouch",
			"::stappler::xenolith::GestureSwipe::secondTouch",
			"::stappler::xenolith::GestureSwipe::midpoint",
			"::stappler::xenolith::GestureSwipe::delta",
			"::stappler::xenolith::GestureSwipe::velocity",
			"::stappler::xenolith::GestureSwipe::density",
			"::stappler::xenolith::GestureSwipe::cleanup()",
			"::stappler::xenolith::GesturePinch",
			"::stappler::xenolith::GesturePinch::first",
			"::stappler::xenolith::GesturePinch::second",
			"::stappler::xenolith::GesturePinch::center",
			"::stappler::xenolith::GesturePinch::startDistance",
			"::stappler::xenolith::GesturePinch::prevDistance",
			"::stappler::xenolith::GesturePinch::distance",
			"::stappler::xenolith::GesturePinch::scale",
			"::stappler::xenolith::GesturePinch::velocity",
			"::stappler::xenolith::GesturePinch::density",
			"::stappler::xenolith::GesturePinch::cleanup()",
			"::stappler::xenolith::GestureRecognizer",
			"::stappler::xenolith::GestureRecognizer::EventMask",
			"::stappler::xenolith::GestureRecognizer::ButtonMask",
			"::stappler::xenolith::GestureRecognizer::~GestureRecognizer()",
			"::stappler::xenolith::GestureRecognizer::init()",
			"::stappler::xenolith::GestureRecognizer::canHandleEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::GestureRecognizer::handleInputEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureRecognizer::onEnter(stappler::xenolith::InputListener*)",
			"::stappler::xenolith::GestureRecognizer::onExit()",
			"::stappler::xenolith::GestureRecognizer::getEventCount() const",
			"::stappler::xenolith::GestureRecognizer::hasEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::GestureRecognizer::getEventMask() const",
			"::stappler::xenolith::GestureRecognizer::update(uint64_t)",
			"::stappler::xenolith::GestureRecognizer::getLocation() const",
			"::stappler::xenolith::GestureRecognizer::cancel()",
			"::stappler::xenolith::GestureRecognizer::setMaxEvents(size_t)",
			"::stappler::xenolith::GestureRecognizer::getMaxEvents() const",
			"::stappler::xenolith::GestureRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)",
			"::stappler::xenolith::GestureRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureRecognizer::getTouchById(uint32_t,uint32_t*)",
			"::stappler::xenolith::GestureRecognizer::_events",
			"::stappler::xenolith::GestureRecognizer::_maxEvents",
			"::stappler::xenolith::GestureRecognizer::_eventMask",
			"::stappler::xenolith::GestureRecognizer::_buttonMask",
			"::stappler::xenolith::GestureRecognizer::_density",
			"::stappler::xenolith::GestureTouchRecognizer",
			"::stappler::xenolith::GestureTouchRecognizer::InputCallback",
			"::stappler::xenolith::GestureTouchRecognizer::~GestureTouchRecognizer()",
			"::stappler::xenolith::GestureTouchRecognizer::init(stappler::xenolith::GestureTouchRecognizer::InputCallback&&,stappler::xenolith::GestureRecognizer::ButtonMask&&)",
			"::stappler::xenolith::GestureTouchRecognizer::canHandleEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::GestureTouchRecognizer::removeRecognizedEvent(uint32_t)",
			"::stappler::xenolith::GestureTouchRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureTouchRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)",
			"::stappler::xenolith::GestureTouchRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureTouchRecognizer::_event",
			"::stappler::xenolith::GestureTouchRecognizer::_callback",
			"::stappler::xenolith::GestureTapRecognizer",
			"::stappler::xenolith::GestureTapRecognizer::InputCallback",
			"::stappler::xenolith::GestureTapRecognizer::ButtonMask",
			"::stappler::xenolith::GestureTapRecognizer::~GestureTapRecognizer()",
			"::stappler::xenolith::GestureTapRecognizer::init(stappler::xenolith::GestureTapRecognizer::InputCallback&&,stappler::xenolith::GestureTapRecognizer::ButtonMask&&,uint32_t)",
			"::stappler::xenolith::GestureTapRecognizer::update(uint64_t)",
			"::stappler::xenolith::GestureTapRecognizer::cancel()",
			"::stappler::xenolith::GestureTapRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureTapRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)",
			"::stappler::xenolith::GestureTapRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureTapRecognizer::registerTap()",
			"::stappler::xenolith::GestureTapRecognizer::_gesture",
			"::stappler::xenolith::GestureTapRecognizer::_callback",
			"::stappler::xenolith::GestureTapRecognizer::_maxTapCount",
			"::stappler::xenolith::GesturePressRecognizer",
			"::stappler::xenolith::GesturePressRecognizer::InputCallback",
			"::stappler::xenolith::GesturePressRecognizer::~GesturePressRecognizer()",
			"::stappler::xenolith::GesturePressRecognizer::init(stappler::xenolith::GesturePressRecognizer::InputCallback&&,stappler::TimeInterval,bool,stappler::xenolith::GestureRecognizer::ButtonMask&&)",
			"::stappler::xenolith::GesturePressRecognizer::update(uint64_t)",
			"::stappler::xenolith::GesturePressRecognizer::cancel()",
			"::stappler::xenolith::GesturePressRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GesturePressRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)",
			"::stappler::xenolith::GesturePressRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GesturePressRecognizer::_lastTime",
			"::stappler::xenolith::GesturePressRecognizer::_notified",
			"::stappler::xenolith::GesturePressRecognizer::_gesture",
			"::stappler::xenolith::GesturePressRecognizer::_callback",
			"::stappler::xenolith::GesturePressRecognizer::_interval",
			"::stappler::xenolith::GesturePressRecognizer::_continuous",
			"::stappler::xenolith::GestureSwipeRecognizer",
			"::stappler::xenolith::GestureSwipeRecognizer::InputCallback",
			"::stappler::xenolith::GestureSwipeRecognizer::~GestureSwipeRecognizer()",
			"::stappler::xenolith::GestureSwipeRecognizer::init(stappler::xenolith::GestureSwipeRecognizer::InputCallback&&,float,bool,stappler::xenolith::GestureRecognizer::ButtonMask&&)",
			"::stappler::xenolith::GestureSwipeRecognizer::cancel()",
			"::stappler::xenolith::GestureSwipeRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureSwipeRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)",
			"::stappler::xenolith::GestureSwipeRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureSwipeRecognizer::_lastTime",
			"::stappler::xenolith::GestureSwipeRecognizer::_velocityX",
			"::stappler::xenolith::GestureSwipeRecognizer::_velocityY",
			"::stappler::xenolith::GestureSwipeRecognizer::_swipeBegin",
			"::stappler::xenolith::GestureSwipeRecognizer::_currentTouch",
			"::stappler::xenolith::GestureSwipeRecognizer::_gesture",
			"::stappler::xenolith::GestureSwipeRecognizer::_callback",
			"::stappler::xenolith::GestureSwipeRecognizer::_threshold",
			"::stappler::xenolith::GestureSwipeRecognizer::_includeThreshold",
			"::stappler::xenolith::GesturePinchRecognizer",
			"::stappler::xenolith::GesturePinchRecognizer::InputCallback",
			"::stappler::xenolith::GesturePinchRecognizer::~GesturePinchRecognizer()",
			"::stappler::xenolith::GesturePinchRecognizer::init(stappler::xenolith::GesturePinchRecognizer::InputCallback&&,stappler::xenolith::GestureRecognizer::ButtonMask&&)",
			"::stappler::xenolith::GesturePinchRecognizer::cancel()",
			"::stappler::xenolith::GesturePinchRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GesturePinchRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)",
			"::stappler::xenolith::GesturePinchRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GesturePinchRecognizer::_lastTime",
			"::stappler::xenolith::GesturePinchRecognizer::_velocity",
			"::stappler::xenolith::GesturePinchRecognizer::_gesture",
			"::stappler::xenolith::GesturePinchRecognizer::_callback",
			"::stappler::xenolith::GestureScrollRecognizer",
			"::stappler::xenolith::GestureScrollRecognizer::InputCallback",
			"::stappler::xenolith::GestureScrollRecognizer::~GestureScrollRecognizer()",
			"::stappler::xenolith::GestureScrollRecognizer::init(stappler::xenolith::GestureScrollRecognizer::InputCallback&&)",
			"::stappler::xenolith::GestureScrollRecognizer::handleInputEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureScrollRecognizer::_gesture",
			"::stappler::xenolith::GestureScrollRecognizer::_callback",
			"::stappler::xenolith::GestureMoveRecognizer",
			"::stappler::xenolith::GestureMoveRecognizer::InputCallback",
			"::stappler::xenolith::GestureMoveRecognizer::~GestureMoveRecognizer()",
			"::stappler::xenolith::GestureMoveRecognizer::init(stappler::xenolith::GestureMoveRecognizer::InputCallback&&,bool)",
			"::stappler::xenolith::GestureMoveRecognizer::canHandleEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::GestureMoveRecognizer::handleInputEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureMoveRecognizer::onEnter(stappler::xenolith::InputListener*)",
			"::stappler::xenolith::GestureMoveRecognizer::onExit()",
			"::stappler::xenolith::GestureMoveRecognizer::_event",
			"::stappler::xenolith::GestureMoveRecognizer::_callback",
			"::stappler::xenolith::GestureMoveRecognizer::_listener",
			"::stappler::xenolith::GestureMoveRecognizer::_onlyWithinNode",
			"::stappler::xenolith::GestureKeyRecognizer",
			"::stappler::xenolith::GestureKeyRecognizer::InputCallback",
			"::stappler::xenolith::GestureKeyRecognizer::KeyMask",
			"::stappler::xenolith::GestureKeyRecognizer::~GestureKeyRecognizer()",
			"::stappler::xenolith::GestureKeyRecognizer::init(stappler::xenolith::GestureKeyRecognizer::InputCallback&&,stappler::xenolith::GestureKeyRecognizer::KeyMask&&)",
			"::stappler::xenolith::GestureKeyRecognizer::canHandleEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::GestureKeyRecognizer::isKeyPressed(stappler::xenolith::InputKeyCode) const",
			"::stappler::xenolith::GestureKeyRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureKeyRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)",
			"::stappler::xenolith::GestureKeyRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureKeyRecognizer::_keyMask",
			"::stappler::xenolith::GestureKeyRecognizer::_pressedKeys",
			"::stappler::xenolith::GestureKeyRecognizer::_callback",
			"::stappler::xenolith::GestureMouseOverRecognizer",
			"::stappler::xenolith::GestureMouseOverRecognizer::InputCallback",
			"::stappler::xenolith::GestureMouseOverRecognizer::~GestureMouseOverRecognizer()",
			"::stappler::xenolith::GestureMouseOverRecognizer::init(stappler::xenolith::GestureMouseOverRecognizer::InputCallback&&,float)",
			"::stappler::xenolith::GestureMouseOverRecognizer::handleInputEvent(stappler::xenolith::InputEvent const&,float)",
			"::stappler::xenolith::GestureMouseOverRecognizer::onEnter(stappler::xenolith::InputListener*)",
			"::stappler::xenolith::GestureMouseOverRecognizer::onExit()",
			"::stappler::xenolith::GestureMouseOverRecognizer::updateState(stappler::xenolith::InputEvent const&)",
			"::stappler::xenolith::GestureMouseOverRecognizer::_event",
			"::stappler::xenolith::GestureMouseOverRecognizer::_viewHasPointer",
			"::stappler::xenolith::GestureMouseOverRecognizer::_viewHasFocus",
			"::stappler::xenolith::GestureMouseOverRecognizer::_hasMouseOver",
			"::stappler::xenolith::GestureMouseOverRecognizer::_value",
			"::stappler::xenolith::GestureMouseOverRecognizer::_padding",
			"::stappler::xenolith::GestureMouseOverRecognizer::_callback",
			"::stappler::xenolith::GestureMouseOverRecognizer::_listener",
			"::stappler::xenolith::operator<<(std::ostream&,stappler::xenolith::GestureEvent)"
		],
		"XLInput.h":  [
			"XENOLITH_SCENE_INPUT_XLINPUT_H_",
			"::stappler::xenolith::InputFlags",
			"::stappler::xenolith::InputMouseButton",
			"::stappler::xenolith::InputModifier",
			"::stappler::xenolith::InputKeyCode",
			"::stappler::xenolith::InputKeyComposeState",
			"::stappler::xenolith::InputEventName",
			"::stappler::xenolith::InputEventData",
			"::stappler::xenolith::InputEvent",
			"::stappler::xenolith::InputEvent::data",
			"::stappler::xenolith::InputEvent::originalLocation",
			"::stappler::xenolith::InputEvent::currentLocation",
			"::stappler::xenolith::InputEvent::previousLocation",
			"::stappler::xenolith::InputEvent::originalTime",
			"::stappler::xenolith::InputEvent::currentTime",
			"::stappler::xenolith::InputEvent::previousTime",
			"::stappler::xenolith::InputEvent::originalModifiers",
			"::stappler::xenolith::InputEvent::previousModifiers",
			"::stappler::xenolith::TextCursorPosition",
			"::stappler::xenolith::TextCursorLength",
			"::stappler::xenolith::TextInputType",
			"::stappler::xenolith::operator|(stappler::xenolith::TextInputType const&,stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::operator&(stappler::xenolith::TextInputType const&,stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::operator^(stappler::xenolith::TextInputType const&,stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::operator|=(stappler::xenolith::TextInputType&,stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::operator&=(stappler::xenolith::TextInputType&,stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::operator^=(stappler::xenolith::TextInputType&,stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::operator==(stappler::xenolith::TextInputType const&,std::underlying_type<TextInputType>::type const&)",
			"::stappler::xenolith::operator==(std::underlying_type<TextInputType>::type const&,stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::operator!=(stappler::xenolith::TextInputType const&,std::underlying_type<TextInputType>::type const&)",
			"::stappler::xenolith::operator!=(std::underlying_type<TextInputType>::type const&,stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::operator~(stappler::xenolith::TextInputType const&)",
			"::stappler::xenolith::TextCursor",
			"::stappler::xenolith::TextCursor::InvalidCursor",
			"::stappler::xenolith::TextCursor::start",
			"::stappler::xenolith::TextCursor::length",
			"::stappler::xenolith::TextCursor::TextCursor()",
			"::stappler::xenolith::TextCursor::TextCursor(uint32_t)",
			"::stappler::xenolith::TextCursor::TextCursor(uint32_t,uint32_t)",
			"::stappler::xenolith::TextCursor::TextCursor(stappler::xenolith::TextCursorPosition)",
			"::stappler::xenolith::TextCursor::TextCursor(stappler::xenolith::TextCursorPosition,stappler::xenolith::TextCursorLength)",
			"::stappler::xenolith::TextCursor::TextCursor(stappler::xenolith::TextCursorPosition,stappler::xenolith::TextCursorPosition)",
			"::stappler::xenolith::TextCursor::operator==(stappler::xenolith::TextCursor const&) const",
			"::stappler::xenolith::TextInputViewInterface",
			"::stappler::xenolith::TextInputViewInterface::~TextInputViewInterface()",
			"::stappler::xenolith::TextInputViewInterface::updateTextCursor(uint32_t,uint32_t)",
			"::stappler::xenolith::TextInputViewInterface::updateTextInput(stappler::WideStringView,uint32_t,uint32_t,stappler::xenolith::TextInputType)",
			"::stappler::xenolith::TextInputViewInterface::runTextInput(stappler::WideStringView,uint32_t,uint32_t,stappler::xenolith::TextInputType)",
			"::stappler::xenolith::TextInputViewInterface::cancelTextInput()",
			"::stappler::xenolith::TextCursor::InvalidCursor",
			"::std::hash<stappler::xenolith::InputEventData>::hash<stappler::xenolith::InputEventData>",
			"::std::hash<stappler::xenolith::InputEventData>::operator()(stappler::xenolith::InputEventData const&) const"
		],
		"XLInputDispatcher.h":  [
			"XENOLITH_SCENE_INPUT_XLINPUTDISPATCHER_H_",
			"::stappler::xenolith::InputListenerStorage",
			"::stappler::xenolith::InputListenerStorage::~InputListenerStorage()",
			"::stappler::xenolith::InputListenerStorage::InputListenerStorage(stappler::xenolith::PoolRef*)",
			"::stappler::xenolith::InputListenerStorage::clear()",
			"::stappler::xenolith::InputListenerStorage::reserve(stappler::xenolith::InputListenerStorage const*)",
			"::stappler::xenolith::InputListenerStorage::addListener(stappler::xenolith::InputListener*)",
			"::stappler::xenolith::InputListenerStorage::foreach<typename>(Callback const&)",
			"::stappler::xenolith::InputListenerStorage::_preSceneEvents",
			"::stappler::xenolith::InputListenerStorage::_sceneEvents",
			"::stappler::xenolith::InputListenerStorage::_postSceneEvents",
			"::stappler::xenolith::InputDispatcher",
			"::stappler::xenolith::InputDispatcher::~InputDispatcher()",
			"::stappler::xenolith::InputDispatcher::init(stappler::xenolith::PoolRef*,stappler::xenolith::TextInputViewInterface*)",
			"::stappler::xenolith::InputDispatcher::update(stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::InputDispatcher::acquireNewStorage()",
			"::stappler::xenolith::InputDispatcher::commitStorage(Rc<stappler::xenolith::InputListenerStorage>&&)",
			"::stappler::xenolith::InputDispatcher::handleInputEvent(stappler::xenolith::InputEventData const&)",
			"::stappler::xenolith::InputDispatcher::getActiveEvents() const",
			"::stappler::xenolith::InputDispatcher::setListenerExclusive(stappler::xenolith::InputListener const*)",
			"::stappler::xenolith::InputDispatcher::setListenerExclusiveForTouch(stappler::xenolith::InputListener const*,uint32_t)",
			"::stappler::xenolith::InputDispatcher::setListenerExclusiveForKey(stappler::xenolith::InputListener const*,stappler::xenolith::InputKeyCode)",
			"::stappler::xenolith::InputDispatcher::getTextInputManager() const",
			"::stappler::xenolith::InputDispatcher::isInBackground() const",
			"::stappler::xenolith::InputDispatcher::hasFocus() const",
			"::stappler::xenolith::InputDispatcher::isPointerWithinWindow() const",
			"::stappler::xenolith::InputDispatcher::getEventInfo(stappler::xenolith::InputEventData const&) const",
			"::stappler::xenolith::InputDispatcher::updateEventInfo(stappler::xenolith::InputEvent&,stappler::xenolith::InputEventData const&) const",
			"::stappler::xenolith::InputDispatcher::EventHandlersInfo",
			"::stappler::xenolith::InputDispatcher::EventHandlersInfo::event",
			"::stappler::xenolith::InputDispatcher::EventHandlersInfo::listeners",
			"::stappler::xenolith::InputDispatcher::EventHandlersInfo::exclusive",
			"::stappler::xenolith::InputDispatcher::EventHandlersInfo::processed",
			"::stappler::xenolith::InputDispatcher::EventHandlersInfo::handle(bool)",
			"::stappler::xenolith::InputDispatcher::EventHandlersInfo::clear(bool)",
			"::stappler::xenolith::InputDispatcher::EventHandlersInfo::setExclusive(stappler::xenolith::InputListener const*)",
			"::stappler::xenolith::InputDispatcher::setListenerExclusive(stappler::xenolith::InputDispatcher::EventHandlersInfo&,stappler::xenolith::InputListener const*) const",
			"::stappler::xenolith::InputDispatcher::clearKey(stappler::xenolith::InputEventData const&)",
			"::stappler::xenolith::InputDispatcher::resetKey(stappler::xenolith::InputEventData const&)",
			"::stappler::xenolith::InputDispatcher::handleKey(stappler::xenolith::InputEventData const&,bool)",
			"::stappler::xenolith::InputDispatcher::_currentTime",
			"::stappler::xenolith::InputDispatcher::_activeEvents",
			"::stappler::xenolith::InputDispatcher::_activeKeys",
			"::stappler::xenolith::InputDispatcher::_activeKeySyms",
			"::stappler::xenolith::InputDispatcher::_events",
			"::stappler::xenolith::InputDispatcher::_tmpEvents",
			"::stappler::xenolith::InputDispatcher::_textInput",
			"::stappler::xenolith::InputDispatcher::_pool",
			"::stappler::xenolith::InputDispatcher::_pointerLocation",
			"::stappler::xenolith::InputDispatcher::_inBackground",
			"::stappler::xenolith::InputDispatcher::_hasFocus",
			"::stappler::xenolith::InputDispatcher::_pointerInWindow",
			"::stappler::xenolith::InputListenerStorage::foreach<typename>(Callback const&)"
		],
		"XLInputListener.h":  [
			"XENOLITH_SCENE_INPUT_XLINPUTLISTENER_H_",
			"::stappler::xenolith::InputListener",
			"::stappler::xenolith::InputListener::EventMask",
			"::stappler::xenolith::InputListener::ButtonMask",
			"::stappler::xenolith::InputListener::KeyMask",
			"::stappler::xenolith::InputListener::InputCallback<typename>",
			"::stappler::xenolith::InputListener::DefaultEventFilter",
			"::stappler::xenolith::InputListener::EventFilter",
			"::stappler::xenolith::InputListener::EventMaskTouch",
			"::stappler::xenolith::InputListener::EventMaskKeyboard",
			"::stappler::xenolith::InputListener::makeButtonMask(std::initializer_list<InputMouseButton>&&)",
			"::stappler::xenolith::InputListener::makeEventMask(std::initializer_list<InputEventName>&&)",
			"::stappler::xenolith::InputListener::makeKeyMask(std::initializer_list<InputKeyCode>&&)",
			"::stappler::xenolith::InputListener::InputListener()",
			"::stappler::xenolith::InputListener::~InputListener()",
			"::stappler::xenolith::InputListener::init(int32_t)",
			"::stappler::xenolith::InputListener::onEnter(stappler::xenolith::Scene*)",
			"::stappler::xenolith::InputListener::onExit()",
			"::stappler::xenolith::InputListener::update(stappler::xenolith::UpdateTime)",
			"::stappler::xenolith::InputListener::isRunning() const",
			"::stappler::xenolith::InputListener::setEnabled(bool)",
			"::stappler::xenolith::InputListener::isEnabled() const",
			"::stappler::xenolith::InputListener::setOwner(stappler::xenolith::Node*)",
			"::stappler::xenolith::InputListener::getOwner() const",
			"::stappler::xenolith::InputListener::setPriority(int32_t)",
			"::stappler::xenolith::InputListener::getPriority() const",
			"::stappler::xenolith::InputListener::setOpacityFilter(float)",
			"::stappler::xenolith::InputListener::getOpacityFilter() const",
			"::stappler::xenolith::InputListener::setTouchPadding(float)",
			"::stappler::xenolith::InputListener::getTouchPadding() const",
			"::stappler::xenolith::InputListener::setDensity(float)",
			"::stappler::xenolith::InputListener::getDensity() const",
			"::stappler::xenolith::InputListener::setExclusive()",
			"::stappler::xenolith::InputListener::setExclusiveForTouch(uint32_t)",
			"::stappler::xenolith::InputListener::setSwallowEvents(stappler::xenolith::InputListener::EventMask&&)",
			"::stappler::xenolith::InputListener::setSwallowEvents(stappler::xenolith::InputListener::EventMask const&)",
			"::stappler::xenolith::InputListener::setSwallowAllEvents()",
			"::stappler::xenolith::InputListener::setSwallowEvent(stappler::xenolith::InputEventName)",
			"::stappler::xenolith::InputListener::clearSwallowAllEvents()",
			"::stappler::xenolith::InputListener::clearSwallowEvent(stappler::xenolith::InputEventName)",
			"::stappler::xenolith::InputListener::clearSwallowEvents(stappler::xenolith::InputListener::EventMask const&)",
			"::stappler::xenolith::InputListener::isSwallowAllEvents() const",
			"::stappler::xenolith::InputListener::isSwallowAllEvents(stappler::xenolith::InputListener::EventMask const&) const",
			"::stappler::xenolith::InputListener::isSwallowAnyEvents(stappler::xenolith::InputListener::EventMask const&) const",
			"::stappler::xenolith::InputListener::isSwallowEvent(stappler::xenolith::InputEventName) const",
			"::stappler::xenolith::InputListener::setTouchFilter(stappler::xenolith::InputListener::EventFilter const&)",
			"::stappler::xenolith::InputListener::shouldSwallowEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::InputListener::canHandleEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::InputListener::handleEvent(stappler::xenolith::InputEvent const&)",
			"::stappler::xenolith::InputListener::addTouchRecognizer(InputCallback<stappler::xenolith::GestureData>&&,stappler::xenolith::InputListener::ButtonMask&&)",
			"::stappler::xenolith::InputListener::addTapRecognizer(InputCallback<stappler::xenolith::GestureTap>&&,stappler::xenolith::InputListener::ButtonMask&&,uint32_t)",
			"::stappler::xenolith::InputListener::addPressRecognizer(InputCallback<stappler::xenolith::GesturePress>&&,stappler::TimeInterval,bool,stappler::xenolith::InputListener::ButtonMask&&)",
			"::stappler::xenolith::InputListener::addSwipeRecognizer(InputCallback<stappler::xenolith::GestureSwipe>&&,float,bool,stappler::xenolith::InputListener::ButtonMask&&)",
			"::stappler::xenolith::InputListener::addPinchRecognizer(InputCallback<stappler::xenolith::GesturePinch>&&,stappler::xenolith::InputListener::ButtonMask&&)",
			"::stappler::xenolith::InputListener::addScrollRecognizer(InputCallback<stappler::xenolith::GestureScroll>&&)",
			"::stappler::xenolith::InputListener::addMoveRecognizer(InputCallback<stappler::xenolith::GestureData>&&,bool)",
			"::stappler::xenolith::InputListener::addMouseOverRecognizer(InputCallback<stappler::xenolith::GestureData>&&,float)",
			"::stappler::xenolith::InputListener::addKeyRecognizer(InputCallback<stappler::xenolith::GestureData>&&,stappler::xenolith::InputListener::KeyMask&&)",
			"::stappler::xenolith::InputListener::setPointerEnterCallback(Function<bool (bool)>&&)",
			"::stappler::xenolith::InputListener::setBackgroudCallback(Function<bool (bool)>&&)",
			"::stappler::xenolith::InputListener::setFocusCallback(Function<bool (bool)>&&)",
			"::stappler::xenolith::InputListener::setMouseOverCallback(Function<bool (bool)>&&)",
			"::stappler::xenolith::InputListener::clear()",
			"::stappler::xenolith::InputListener::shouldProcessEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::InputListener::_shouldProcessEvent(stappler::xenolith::InputEvent const&) const",
			"::stappler::xenolith::InputListener::addEventMask(stappler::xenolith::InputListener::EventMask const&)",
			"::stappler::xenolith::InputListener::addRecognizer(stappler::xenolith::GestureRecognizer*)",
			"::stappler::xenolith::InputListener::_priority",
			"::stappler::xenolith::InputListener::_enabled",
			"::stappler::xenolith::InputListener::_running",
			"::stappler::xenolith::InputListener::_owner",
			"::stappler::xenolith::InputListener::_eventMask",
			"::stappler::xenolith::InputListener::_swallowEvents",
			"::stappler::xenolith::InputListener::_touchPadding",
			"::stappler::xenolith::InputListener::_opacityFilter",
			"::stappler::xenolith::InputListener::_density",
			"::stappler::xenolith::InputListener::_scene",
			"::stappler::xenolith::InputListener::_eventFilter",
			"::stappler::xenolith::InputListener::_recognizers",
			"::stappler::xenolith::InputListener::_callbacks"
		],
		"XLMeshIndex.h":  [
			"XENOLITH_APPLICATION_XLMESHINDEX_H_",
			"::stappler::xenolith::MeshIndex",
			"::stappler::xenolith::MeshIndex::~MeshIndex()",
			"::stappler::xenolith::MeshIndex::init(core::BufferData const*)",
			"::stappler::xenolith::MeshIndex::init(core::BufferData const*,Rc<core::Resource> const&)",
			"::stappler::xenolith::MeshIndex::init(core::BufferData const*,Rc<stappler::xenolith::TemporaryResource> const&)",
			"::stappler::xenolith::MeshIndex::getName() const",
			"::stappler::xenolith::MeshIndex::setBuffers(core::BufferData const*,core::BufferData const*)",
			"::stappler::xenolith::MeshIndex::isLoaded() const",
			"::stappler::xenolith::MeshIndex::getVertexData() const",
			"::stappler::xenolith::MeshIndex::getIndexData() const",
			"::stappler::xenolith::MeshIndex::_name",
			"::stappler::xenolith::MeshIndex::_vertexData",
			"::stappler::xenolith::MeshIndex::_indexData"
		],
		"XLNetwork.h":  [
			"XENOLITH_RESOURCES_NETWORK_XLNETWORK_H_",
			"::stappler::xenolith::network::NetworkCapabilities",
			"::stappler::xenolith::network::operator|(stappler::xenolith::network::NetworkCapabilities const&,stappler::xenolith::network::NetworkCapabilities const&)",
			"::stappler::xenolith::network::operator&(stappler::xenolith::network::NetworkCapabilities const&,stappler::xenolith::network::NetworkCapabilities const&)",
			"::stappler::xenolith::network::operator^(stappler::xenolith::network::NetworkCapabilities const&,stappler::xenolith::network::NetworkCapabilities const&)",
			"::stappler::xenolith::network::operator|=(stappler::xenolith::network::NetworkCapabilities&,stappler::xenolith::network::NetworkCapabilities const&)",
			"::stappler::xenolith::network::operator&=(stappler::xenolith::network::NetworkCapabilities&,stappler::xenolith::network::NetworkCapabilities const&)",
			"::stappler::xenolith::network::operator^=(stappler::xenolith::network::NetworkCapabilities&,stappler::xenolith::network::NetworkCapabilities const&)",
			"::stappler::xenolith::network::operator==(stappler::xenolith::network::NetworkCapabilities const&,std::underlying_type<NetworkCapabilities>::type const&)",
			"::stappler::xenolith::network::operator==(std::underlying_type<NetworkCapabilities>::type const&,stappler::xenolith::network::NetworkCapabilities const&)",
			"::stappler::xenolith::network::operator!=(stappler::xenolith::network::NetworkCapabilities const&,std::underlying_type<NetworkCapabilities>::type const&)",
			"::stappler::xenolith::network::operator!=(std::underlying_type<NetworkCapabilities>::type const&,stappler::xenolith::network::NetworkCapabilities const&)",
			"::stappler::xenolith::network::operator~(stappler::xenolith::network::NetworkCapabilities const&)"
		],
		"XLNetworkController.h":  [
			"XENOLITH_RESOURCES_NETWORK_XLNETWORKCONTROLLER_H_",
			"::stappler::xenolith::network::Controller",
			"::stappler::xenolith::network::Controller::onNetworkCapabilities",
			"::stappler::xenolith::network::Controller::Controller(stappler::xenolith::Application*,stappler::StringView,stappler::mem_std::Bytes&&)",
			"::stappler::xenolith::network::Controller::~Controller()",
			"::stappler::xenolith::network::Controller::initialize(stappler::xenolith::Application*)",
			"::stappler::xenolith::network::Controller::invalidate(stappler::xenolith::Application*)",
			"::stappler::xenolith::network::Controller::update(stappler::xenolith::Application*,stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::network::Controller::getApplication() const",
			"::stappler::xenolith::network::Controller::getName() const",
			"::stappler::xenolith::network::Controller::run(Rc<stappler::xenolith::network::Request>&&)",
			"::stappler::xenolith::network::Controller::setSignKey(stappler::mem_std::Bytes&&)",
			"::stappler::xenolith::network::Controller::isNetworkOnline() const",
			"::stappler::xenolith::network::Controller::getNetworkCapabilities() const",
			"::stappler::xenolith::network::Controller::_data"
		],
		"XLNetworkRequest.h":  [
			"XENOLITH_RESOURCES_NETWORK_XLNETWORKREQUEST_H_",
			"::stappler::xenolith::network::Method",
			"::stappler::xenolith::network::Handle",
			"::stappler::xenolith::network::Handle::Context",
			"::stappler::xenolith::network::Handle::~Handle()",
			"::stappler::xenolith::network::Handle::init(stappler::StringView)",
			"::stappler::xenolith::network::Handle::init(stappler::StringView,stappler::FilePath)",
			"::stappler::xenolith::network::Handle::init(stappler::xenolith::network::Method,stappler::StringView)",
			"::stappler::xenolith::network::Handle::isSuccess() const",
			"::stappler::xenolith::network::Handle::getMTime() const",
			"::stappler::xenolith::network::Handle::getETag() const",
			"::stappler::xenolith::network::Handle::getSharegroup() const",
			"::stappler::xenolith::network::Handle::setMTime(int64_t)",
			"::stappler::xenolith::network::Handle::setETag(stappler::StringView)",
			"::stappler::xenolith::network::Handle::setSharegroup(stappler::StringView)",
			"::stappler::xenolith::network::Handle::setSignRequest(bool)",
			"::stappler::xenolith::network::Handle::shouldSignRequest() const",
			"::stappler::xenolith::network::Handle::getReqeust() const",
			"::stappler::xenolith::network::Handle::prepare(stappler::xenolith::network::Handle::Context*)",
			"::stappler::xenolith::network::Handle::finalize(stappler::xenolith::network::Handle::Context*,bool)",
			"::stappler::xenolith::network::Handle::_success",
			"::stappler::xenolith::network::Handle::_signRequest",
			"::stappler::xenolith::network::Handle::_errorBuffer",
			"::stappler::xenolith::network::Handle::_mtime",
			"::stappler::xenolith::network::Handle::_etag",
			"::stappler::xenolith::network::Handle::_sharegroup",
			"::stappler::xenolith::network::Handle::_controller",
			"::stappler::xenolith::network::Handle::_request",
			"::stappler::xenolith::network::Request",
			"::stappler::xenolith::network::Request::CompleteCallback",
			"::stappler::xenolith::network::Request::ProgressCallback",
			"::stappler::xenolith::network::Request::~Request()",
			"::stappler::xenolith::network::Request::init(Callback<bool (stappler::xenolith::network::Handle &)> const&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::network::Request::perform(stappler::xenolith::Application*,stappler::xenolith::network::Request::CompleteCallback&&)",
			"::stappler::xenolith::network::Request::perform(stappler::xenolith::network::Controller*,stappler::xenolith::network::Request::CompleteCallback&&)",
			"::stappler::xenolith::network::Request::setIgnoreResponseData(bool)",
			"::stappler::xenolith::network::Request::isIgnoreResponseData() const",
			"::stappler::xenolith::network::Request::isRunning() const",
			"::stappler::xenolith::network::Request::getHandle() const",
			"::stappler::xenolith::network::Request::getUploadProgress() const",
			"::stappler::xenolith::network::Request::getDownloadProgress() const",
			"::stappler::xenolith::network::Request::getUploadProgressCounters() const",
			"::stappler::xenolith::network::Request::getDownloadProgressCounters() const",
			"::stappler::xenolith::network::Request::setUploadProgress(stappler::xenolith::network::Request::ProgressCallback&&)",
			"::stappler::xenolith::network::Request::setDownloadProgress(stappler::xenolith::network::Request::ProgressCallback&&)",
			"::stappler::xenolith::network::Request::getData() const",
			"::stappler::xenolith::network::Request::handleHeader(stappler::StringView,stappler::StringView)",
			"::stappler::xenolith::network::Request::handleReceive(char*,size_t)",
			"::stappler::xenolith::network::Request::notifyOnComplete(bool)",
			"::stappler::xenolith::network::Request::notifyOnUploadProgress(int64_t,int64_t)",
			"::stappler::xenolith::network::Request::notifyOnDownloadProgress(int64_t,int64_t)",
			"::stappler::xenolith::network::Request::_running",
			"::stappler::xenolith::network::Request::_ignoreResponseData",
			"::stappler::xenolith::network::Request::_setupInput",
			"::stappler::xenolith::network::Request::_targetHeaderCallback",
			"::stappler::xenolith::network::Request::_uploadProgress",
			"::stappler::xenolith::network::Request::_downloadProgress",
			"::stappler::xenolith::network::Request::_onDownloadProgress",
			"::stappler::xenolith::network::Request::_onUploadProgress",
			"::stappler::xenolith::network::Request::_onComplete",
			"::stappler::xenolith::network::Request::_handle",
			"::stappler::xenolith::network::Request::_owner",
			"::stappler::xenolith::network::Request::_nbytes",
			"::stappler::xenolith::network::Request::_data"
		],
		"XLNode.h":  [
			"XENOLITH_SCENE_NODES_XLNODE_H_",
			"::stappler::xenolith::Node",
			"::stappler::xenolith::Node::ZOrderTransparent",
			"::stappler::xenolith::Node::ZOrderMax",
			"::stappler::xenolith::Node::ZOrderMin",
			"::stappler::xenolith::Node::isParent(stappler::xenolith::Node*,stappler::xenolith::Node*)",
			"::stappler::xenolith::Node::getChainNodeToParentTransform(stappler::xenolith::Node*,stappler::xenolith::Node*,bool)",
			"::stappler::xenolith::Node::getChainParentToNodeTransform(stappler::xenolith::Node*,stappler::xenolith::Node*,bool)",
			"::stappler::xenolith::Node::Node()",
			"::stappler::xenolith::Node::~Node()",
			"::stappler::xenolith::Node::init()",
			"::stappler::xenolith::Node::setLocalZOrder(stappler::xenolith::ZOrder)",
			"::stappler::xenolith::Node::getLocalZOrder() const",
			"::stappler::xenolith::Node::setScale(float)",
			"::stappler::xenolith::Node::setScale(stappler::xenolith::Vec2 const&)",
			"::stappler::xenolith::Node::setScale(stappler::xenolith::Vec3 const&)",
			"::stappler::xenolith::Node::setScaleX(float)",
			"::stappler::xenolith::Node::setScaleY(float)",
			"::stappler::xenolith::Node::setScaleZ(float)",
			"::stappler::xenolith::Node::getScale() const",
			"::stappler::xenolith::Node::setPosition(stappler::xenolith::Vec2 const&)",
			"::stappler::xenolith::Node::setPosition(stappler::xenolith::Vec3 const&)",
			"::stappler::xenolith::Node::setPositionX(float)",
			"::stappler::xenolith::Node::setPositionY(float)",
			"::stappler::xenolith::Node::setPositionZ(float)",
			"::stappler::xenolith::Node::getPosition() const",
			"::stappler::xenolith::Node::setSkewX(float)",
			"::stappler::xenolith::Node::setSkewY(float)",
			"::stappler::xenolith::Node::getSkew() const",
			"::stappler::xenolith::Node::setAnchorPoint(stappler::xenolith::Vec2 const&)",
			"::stappler::xenolith::Node::getAnchorPoint() const",
			"::stappler::xenolith::Node::setContentSize(stappler::xenolith::Size2 const&)",
			"::stappler::xenolith::Node::getContentSize() const",
			"::stappler::xenolith::Node::setVisible(bool)",
			"::stappler::xenolith::Node::isVisible() const",
			"::stappler::xenolith::Node::setRotation(float)",
			"::stappler::xenolith::Node::setRotation(stappler::xenolith::Vec3 const&)",
			"::stappler::xenolith::Node::setRotation(stappler::xenolith::Quaternion const&)",
			"::stappler::xenolith::Node::getRotation() const",
			"::stappler::xenolith::Node::getRotation3D() const",
			"::stappler::xenolith::Node::getRotationQuat() const",
			"::stappler::xenolith::Node::addChild<typename,typename>(N*,Args &&...)",
			"::stappler::xenolith::Node::addChild<typename,typename>(Rc<N> const&,Args &&...)",
			"::stappler::xenolith::Node::addChildNode(stappler::xenolith::Node*)",
			"::stappler::xenolith::Node::addChildNode(stappler::xenolith::Node*,stappler::xenolith::ZOrder)",
			"::stappler::xenolith::Node::addChildNode(stappler::xenolith::Node*,stappler::xenolith::ZOrder,uint64_t)",
			"::stappler::xenolith::Node::getChildByTag(uint64_t) const",
			"::stappler::xenolith::Node::getChildren() const",
			"::stappler::xenolith::Node::getChildrenCount() const",
			"::stappler::xenolith::Node::setParent(stappler::xenolith::Node*)",
			"::stappler::xenolith::Node::getParent() const",
			"::stappler::xenolith::Node::removeFromParent(bool)",
			"::stappler::xenolith::Node::removeChild(stappler::xenolith::Node*,bool)",
			"::stappler::xenolith::Node::removeChildByTag(uint64_t,bool)",
			"::stappler::xenolith::Node::removeAllChildren(bool)",
			"::stappler::xenolith::Node::reorderChild(stappler::xenolith::Node*,stappler::xenolith::ZOrder)",
			"::stappler::xenolith::Node::sortAllChildren()",
			"::stappler::xenolith::Node::runAction<typename>(A*)",
			"::stappler::xenolith::Node::runAction<typename>(A*,uint32_t)",
			"::stappler::xenolith::Node::runAction<typename>(Rc<A> const&)",
			"::stappler::xenolith::Node::runAction<typename>(Rc<A> const&,uint32_t)",
			"::stappler::xenolith::Node::runActionObject(stappler::xenolith::Action*)",
			"::stappler::xenolith::Node::runActionObject(stappler::xenolith::Action*,uint32_t)",
			"::stappler::xenolith::Node::stopAllActions()",
			"::stappler::xenolith::Node::stopAction(stappler::xenolith::Action*)",
			"::stappler::xenolith::Node::stopActionByTag(uint32_t)",
			"::stappler::xenolith::Node::stopAllActionsByTag(uint32_t)",
			"::stappler::xenolith::Node::getActionByTag(uint32_t)",
			"::stappler::xenolith::Node::getNumberOfRunningActions() const",
			"::stappler::xenolith::Node::addComponent<typename>(C*)",
			"::stappler::xenolith::Node::addComponent<typename>(Rc<C> const&)",
			"::stappler::xenolith::Node::addComponentItem(stappler::xenolith::Component*)",
			"::stappler::xenolith::Node::removeComponent(stappler::xenolith::Component*)",
			"::stappler::xenolith::Node::removeComponentByTag(uint64_t)",
			"::stappler::xenolith::Node::removeAllComponentByTag(uint64_t)",
			"::stappler::xenolith::Node::removeAllComponents()",
			"::stappler::xenolith::Node::getComponentByType<typename>() const",
			"::stappler::xenolith::Node::getComponentByType<typename>(uint32_t) const",
			"::stappler::xenolith::Node::addInputListener<typename>(C*)",
			"::stappler::xenolith::Node::addInputListener<typename>(Rc<C> const&)",
			"::stappler::xenolith::Node::addInputListenerItem(stappler::xenolith::InputListener*)",
			"::stappler::xenolith::Node::removeInputListener(stappler::xenolith::InputListener*)",
			"::stappler::xenolith::Node::getName() const",
			"::stappler::xenolith::Node::setName(stappler::StringView)",
			"::stappler::xenolith::Node::getDataValue() const",
			"::stappler::xenolith::Node::setDataValue(stappler::mem_std::Value&&)",
			"::stappler::xenolith::Node::getTag() const",
			"::stappler::xenolith::Node::setTag(uint64_t)",
			"::stappler::xenolith::Node::isRunning() const",
			"::stappler::xenolith::Node::onEnter(stappler::xenolith::Scene*)",
			"::stappler::xenolith::Node::onExit()",
			"::stappler::xenolith::Node::onContentSizeDirty()",
			"::stappler::xenolith::Node::onTransformDirty(stappler::xenolith::Mat4 const&)",
			"::stappler::xenolith::Node::onGlobalTransformDirty(stappler::xenolith::Mat4 const&)",
			"::stappler::xenolith::Node::onReorderChildDirty()",
			"::stappler::xenolith::Node::cleanup()",
			"::stappler::xenolith::Node::getBoundingBox() const",
			"::stappler::xenolith::Node::resume()",
			"::stappler::xenolith::Node::pause()",
			"::stappler::xenolith::Node::update(stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::Node::updateChildrenTransform()",
			"::stappler::xenolith::Node::getNodeToParentTransform() const",
			"::stappler::xenolith::Node::setNodeToParentTransform(stappler::xenolith::Mat4 const&)",
			"::stappler::xenolith::Node::getParentToNodeTransform() const",
			"::stappler::xenolith::Node::getNodeToWorldTransform() const",
			"::stappler::xenolith::Node::getWorldToNodeTransform() const",
			"::stappler::xenolith::Node::convertToNodeSpace(stappler::xenolith::Vec2 const&) const",
			"::stappler::xenolith::Node::convertToWorldSpace(stappler::xenolith::Vec2 const&) const",
			"::stappler::xenolith::Node::convertToNodeSpaceAR(stappler::xenolith::Vec2 const&) const",
			"::stappler::xenolith::Node::convertToWorldSpaceAR(stappler::xenolith::Vec2 const&) const",
			"::stappler::xenolith::Node::isCascadeOpacityEnabled() const",
			"::stappler::xenolith::Node::isCascadeColorEnabled() const",
			"::stappler::xenolith::Node::setCascadeOpacityEnabled(bool)",
			"::stappler::xenolith::Node::setCascadeColorEnabled(bool)",
			"::stappler::xenolith::Node::getOpacity() const",
			"::stappler::xenolith::Node::getDisplayedOpacity() const",
			"::stappler::xenolith::Node::setOpacity(float)",
			"::stappler::xenolith::Node::setOpacity(stappler::xenolith::OpacityValue)",
			"::stappler::xenolith::Node::updateDisplayedOpacity(float)",
			"::stappler::xenolith::Node::getColor() const",
			"::stappler::xenolith::Node::getDisplayedColor() const",
			"::stappler::xenolith::Node::setColor(stappler::xenolith::Color4F const&,bool)",
			"::stappler::xenolith::Node::updateDisplayedColor(stappler::xenolith::Color4F const&)",
			"::stappler::xenolith::Node::setOpacityModifyRGB(bool)",
			"::stappler::xenolith::Node::isOpacityModifyRGB() const",
			"::stappler::xenolith::Node::setDepthIndex(float)",
			"::stappler::xenolith::Node::getDepthIndex() const",
			"::stappler::xenolith::Node::draw(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)",
			"::stappler::xenolith::Node::visitGeometry(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)",
			"::stappler::xenolith::Node::visitDraw(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)",
			"::stappler::xenolith::Node::scheduleUpdate()",
			"::stappler::xenolith::Node::unscheduleUpdate()",
			"::stappler::xenolith::Node::isTouched(stappler::xenolith::Vec2 const&,float)",
			"::stappler::xenolith::Node::isTouchedNodeSpace(stappler::xenolith::Vec2 const&,float)",
			"::stappler::xenolith::Node::setOnEnterCallback(Function<void (stappler::xenolith::Scene *)>&&)",
			"::stappler::xenolith::Node::setOnExitCallback(Function<void ()>&&)",
			"::stappler::xenolith::Node::setOnContentSizeDirtyCallback(Function<void ()>&&)",
			"::stappler::xenolith::Node::setOnTransformDirtyCallback(Function<void (const stappler::xenolith::Mat4 &)>&&)",
			"::stappler::xenolith::Node::setOnReorderChildDirtyCallback(Function<void ()>&&)",
			"::stappler::xenolith::Node::getInputDensity() const",
			"::stappler::xenolith::Node::getDirector() const",
			"::stappler::xenolith::Node::getScheduler() const",
			"::stappler::xenolith::Node::getActionManager() const",
			"::stappler::xenolith::Node::getFrameContext() const",
			"::stappler::xenolith::Node::updateCascadeOpacity()",
			"::stappler::xenolith::Node::disableCascadeOpacity()",
			"::stappler::xenolith::Node::updateCascadeColor()",
			"::stappler::xenolith::Node::disableCascadeColor()",
			"::stappler::xenolith::Node::updateColor()",
			"::stappler::xenolith::Node::transform(stappler::xenolith::Mat4 const&)",
			"::stappler::xenolith::Node::processParentFlags(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)",
			"::stappler::xenolith::Node::visitSelf(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags,bool)",
			"::stappler::xenolith::Node::_is3d",
			"::stappler::xenolith::Node::_running",
			"::stappler::xenolith::Node::_visible",
			"::stappler::xenolith::Node::_scheduled",
			"::stappler::xenolith::Node::_paused",
			"::stappler::xenolith::Node::_cascadeColorEnabled",
			"::stappler::xenolith::Node::_cascadeOpacityEnabled",
			"::stappler::xenolith::Node::_contentSizeDirty",
			"::stappler::xenolith::Node::_reorderChildDirty",
			"::stappler::xenolith::Node::_transformCacheDirty",
			"::stappler::xenolith::Node::_transformInverseDirty",
			"::stappler::xenolith::Node::_transformDirty",
			"::stappler::xenolith::Node::_name",
			"::stappler::xenolith::Node::_dataValue",
			"::stappler::xenolith::Node::_tag",
			"::stappler::xenolith::Node::_zOrder",
			"::stappler::xenolith::Node::_skew",
			"::stappler::xenolith::Node::_anchorPoint",
			"::stappler::xenolith::Node::_contentSize",
			"::stappler::xenolith::Node::_position",
			"::stappler::xenolith::Node::_scale",
			"::stappler::xenolith::Node::_rotation",
			"::stappler::xenolith::Node::_inputDensity",
			"::stappler::xenolith::Node::_depthIndex",
			"::stappler::xenolith::Node::_displayedColor",
			"::stappler::xenolith::Node::_realColor",
			"::stappler::xenolith::Node::_rotationQuat",
			"::stappler::xenolith::Node::_transform",
			"::stappler::xenolith::Node::_inverse",
			"::stappler::xenolith::Node::_modelViewTransform",
			"::stappler::xenolith::Node::_children",
			"::stappler::xenolith::Node::_parent",
			"::stappler::xenolith::Node::_onEnterCallback",
			"::stappler::xenolith::Node::_onExitCallback",
			"::stappler::xenolith::Node::_onContentSizeDirtyCallback",
			"::stappler::xenolith::Node::_onTransformDirtyCallback",
			"::stappler::xenolith::Node::_onReorderChildDirtyCallback",
			"::stappler::xenolith::Node::_components",
			"::stappler::xenolith::Node::_inputEvents",
			"::stappler::xenolith::Node::_scene",
			"::stappler::xenolith::Node::_director",
			"::stappler::xenolith::Node::_scheduler",
			"::stappler::xenolith::Node::_actionManager",
			"::stappler::xenolith::Node::_frameContext",
			"::stappler::xenolith::Node::getComponentByType<typename>() const",
			"::stappler::xenolith::Node::getComponentByType<typename>(uint32_t) const"
		],
		"XLNodeInfo.h":  [
			"XENOLITH_SCENE_NODES_XLNODEINFO_H_",
			"::stappler::xenolith::RenderingLevel",
			"::stappler::xenolith::StateId",
			"::stappler::xenolith::InvalidTag",
			"::stappler::xenolith::NodeFlags",
			"::stappler::xenolith::operator|(stappler::xenolith::NodeFlags const&,stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::operator&(stappler::xenolith::NodeFlags const&,stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::operator^(stappler::xenolith::NodeFlags const&,stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::operator|=(stappler::xenolith::NodeFlags&,stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::operator&=(stappler::xenolith::NodeFlags&,stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::operator^=(stappler::xenolith::NodeFlags&,stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::operator==(stappler::xenolith::NodeFlags const&,std::underlying_type<NodeFlags>::type const&)",
			"::stappler::xenolith::operator==(std::underlying_type<NodeFlags>::type const&,stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::operator!=(stappler::xenolith::NodeFlags const&,std::underlying_type<NodeFlags>::type const&)",
			"::stappler::xenolith::operator!=(std::underlying_type<NodeFlags>::type const&,stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::operator~(stappler::xenolith::NodeFlags const&)",
			"::stappler::xenolith::CommandFlags",
			"::stappler::xenolith::operator|(stappler::xenolith::CommandFlags const&,stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::operator&(stappler::xenolith::CommandFlags const&,stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::operator^(stappler::xenolith::CommandFlags const&,stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::operator|=(stappler::xenolith::CommandFlags&,stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::operator&=(stappler::xenolith::CommandFlags&,stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::operator^=(stappler::xenolith::CommandFlags&,stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::operator==(stappler::xenolith::CommandFlags const&,std::underlying_type<CommandFlags>::type const&)",
			"::stappler::xenolith::operator==(std::underlying_type<CommandFlags>::type const&,stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::operator!=(stappler::xenolith::CommandFlags const&,std::underlying_type<CommandFlags>::type const&)",
			"::stappler::xenolith::operator!=(std::underlying_type<CommandFlags>::type const&,stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::operator~(stappler::xenolith::CommandFlags const&)",
			"::stappler::xenolith::MaterialInfo",
			"::stappler::xenolith::MaterialInfo::images",
			"::stappler::xenolith::MaterialInfo::samplers",
			"::stappler::xenolith::MaterialInfo::colorModes",
			"::stappler::xenolith::MaterialInfo::pipeline",
			"::stappler::xenolith::MaterialInfo::hash() const",
			"::stappler::xenolith::MaterialInfo::description() const",
			"::stappler::xenolith::MaterialInfo::operator==(stappler::xenolith::MaterialInfo const&) const",
			"::stappler::xenolith::MaterialInfo::operator!=(stappler::xenolith::MaterialInfo const&) const",
			"::stappler::xenolith::MaterialInfo::hasImage(uint64_t) const",
			"::stappler::xenolith::MaterialInfo::MaterialInfo()",
			"::stappler::xenolith::ZOrderLess",
			"::stappler::xenolith::ZOrderLess::operator()(SpanView<stappler::xenolith::ZOrder> const&,SpanView<stappler::xenolith::ZOrder> const&) const",
			"::stappler::xenolith::DrawStateValues",
			"::stappler::xenolith::DrawStateValues::enabled",
			"::stappler::xenolith::DrawStateValues::viewport",
			"::stappler::xenolith::DrawStateValues::scissor",
			"::stappler::xenolith::DrawStateValues::operator==(stappler::xenolith::DrawStateValues const&) const",
			"::stappler::xenolith::DrawStateValues::isScissorEnabled() const",
			"::stappler::xenolith::DrawStateValues::isViewportEnabled() const",
			"::stappler::xenolith::DrawStat",
			"::stappler::xenolith::DrawStat::vertexes",
			"::stappler::xenolith::DrawStat::triangles",
			"::stappler::xenolith::DrawStat::zPaths",
			"::stappler::xenolith::DrawStat::drawCalls",
			"::stappler::xenolith::DrawStat::cachedImages",
			"::stappler::xenolith::DrawStat::cachedFramebuffers",
			"::stappler::xenolith::DrawStat::cachedImageViews",
			"::stappler::xenolith::DrawStat::materials",
			"::stappler::xenolith::DrawStat::solidCmds",
			"::stappler::xenolith::DrawStat::surfaceCmds",
			"::stappler::xenolith::DrawStat::transparentCmds",
			"::stappler::xenolith::DrawStat::vertexInputTime"
		],
		"XLPlatform.h":  [
			"XENOLITH_PLATFORM_XLPLATFORM_H_",
			"::stappler::xenolith::platform::getCommonFormat()"
		],
		"XLPlatformLinuxDbus.h":  [
			"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXDBUS_H_",
			"::NMState",
			"::NMConnectivityState",
			"::NMMetered",
			"::stappler::xenolith::platform::InterfaceThemeInfo",
			"::stappler::xenolith::platform::InterfaceThemeInfo::DefaultCursorTheme",
			"::stappler::xenolith::platform::InterfaceThemeInfo::DefaultCursorSize",
			"::stappler::xenolith::platform::InterfaceThemeInfo::cursorTheme",
			"::stappler::xenolith::platform::InterfaceThemeInfo::cursorSize",
			"::stappler::xenolith::platform::InterfaceThemeInfo::operator==(stappler::xenolith::platform::InterfaceThemeInfo const&) const",
			"::stappler::xenolith::platform::InterfaceThemeInfo::operator!=(stappler::xenolith::platform::InterfaceThemeInfo const&) const",
			"::stappler::xenolith::platform::NetworkState",
			"::stappler::xenolith::platform::NetworkState::networkingEnabled",
			"::stappler::xenolith::platform::NetworkState::wirelessEnabled",
			"::stappler::xenolith::platform::NetworkState::wwanEnabled",
			"::stappler::xenolith::platform::NetworkState::wimaxEnabled",
			"::stappler::xenolith::platform::NetworkState::metered",
			"::stappler::xenolith::platform::NetworkState::state",
			"::stappler::xenolith::platform::NetworkState::connectivity",
			"::stappler::xenolith::platform::NetworkState::primaryConnectionType",
			"::stappler::xenolith::platform::NetworkState::capabilities",
			"::stappler::xenolith::platform::NetworkState::operator==(stappler::xenolith::platform::NetworkState const&) const",
			"::stappler::xenolith::platform::NetworkState::operator!=(stappler::xenolith::platform::NetworkState const&) const",
			"::stappler::xenolith::platform::NetworkState::description() const",
			"::stappler::xenolith::platform::DBusLibrary",
			"::stappler::xenolith::platform::DBusLibrary::get()",
			"::stappler::xenolith::platform::DBusLibrary::isAvailable() const",
			"::stappler::xenolith::platform::DBusLibrary::getCurrentInterfaceTheme() const",
			"::stappler::xenolith::platform::DBusLibrary::addNetworkConnectionCallback(void*,Function<void (const stappler::xenolith::platform::NetworkState &)>&&)",
			"::stappler::xenolith::platform::DBusLibrary::removeNetworkConnectionCallback(void*)",
			"::stappler::xenolith::platform::DBusLibrary::DBusLibrary(stappler::xenolith::platform::DBusInterface*)",
			"::stappler::xenolith::platform::DBusLibrary::_connection"
		],
		"XLPlatformLinuxView.h":  [
			"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXVIEW_H_",
			"::stappler::xenolith::platform::LinuxViewInterface",
			"::stappler::xenolith::platform::LinuxViewInterface::~LinuxViewInterface()",
			"::stappler::xenolith::platform::LinuxViewInterface::getSocketFd() const",
			"::stappler::xenolith::platform::LinuxViewInterface::poll(bool)",
			"::stappler::xenolith::platform::LinuxViewInterface::getScreenFrameInterval() const",
			"::stappler::xenolith::platform::LinuxViewInterface::mapWindow()",
			"::stappler::xenolith::platform::LinuxViewInterface::scheduleFrame()",
			"::stappler::xenolith::platform::LinuxViewInterface::onSurfaceInfo(core::SurfaceInfo&) const",
			"::stappler::xenolith::platform::LinuxViewInterface::commit(uint32_t,uint32_t)"
		],
		"XLPlatformLinuxWayland.h":  [
			"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXWAYLAND_H_",
			"XL_WAYLAND_DEBUG",
			"::stappler::xenolith::platform::WaylandLibrary",
			"::stappler::xenolith::platform::WaylandLibrary::ConnectionData",
			"::stappler::xenolith::platform::WaylandLibrary::ConnectionData::display",
			"::stappler::xenolith::platform::WaylandLibrary::getInstance()",
			"::stappler::xenolith::platform::WaylandLibrary::ownsProxy(wl_proxy*)",
			"::stappler::xenolith::platform::WaylandLibrary::ownsProxy(wl_output*)",
			"::stappler::xenolith::platform::WaylandLibrary::ownsProxy(wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::~WaylandLibrary()",
			"::stappler::xenolith::platform::WaylandLibrary::WaylandLibrary()",
			"::stappler::xenolith::platform::WaylandLibrary::init()",
			"::stappler::xenolith::platform::WaylandLibrary::close()",
			"::stappler::xenolith::platform::WaylandLibrary::wl_registry_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_compositor_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_output_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_seat_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_region_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_callback_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_pointer_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_keyboard_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_touch_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subcompositor_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_pool_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_buffer_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wp_viewporter_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wp_viewport_interface",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_interface",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_positioner_interface",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_interface",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_interface",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_popup_interface",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_connect",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_get_fd",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_dispatch",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_dispatch_pending",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_prepare_read",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_flush",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_read_events",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_disconnect",
			"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_marshal_flags",
			"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_get_version",
			"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_add_listener",
			"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_set_user_data",
			"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_get_user_data",
			"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_set_tag",
			"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_get_tag",
			"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_destroy",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_roundtrip",
			"::stappler::xenolith::platform::WaylandLibrary::viewporter",
			"::stappler::xenolith::platform::WaylandLibrary::xdg",
			"::stappler::xenolith::platform::WaylandLibrary::wl_display_get_registry(wl_display*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_registry_bind(wl_registry*,uint32_t,wl_interface const*,uint32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_registry_add_listener(wl_registry*,wl_registry_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_registry_destroy(wl_registry*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_create_pool(wl_shm*,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_add_listener(wl_shm*,wl_shm_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_set_user_data(wl_shm*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_get_user_data(wl_shm*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_destroy(wl_shm*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_pool_destroy(wl_shm_pool*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_shm_pool_create_buffer(wl_shm_pool*,int32_t,int32_t,int32_t,int32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_buffer_destroy(wl_buffer*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_compositor_create_surface(wl_compositor*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_compositor_create_region(wl_compositor*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_compositor_destroy(wl_compositor*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_region_add(wl_region*,int32_t,int32_t,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_region_destroy(wl_region*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_add_listener(wl_surface*,wl_surface_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_attach(wl_surface*,wl_buffer*,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_set_buffer_scale(wl_surface*,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_commit(wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_damage(wl_surface*,int32_t,int32_t,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_damage_buffer(wl_surface*,int32_t,int32_t,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_set_opaque_region(wl_surface*,wl_region*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_set_user_data(wl_surface*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_get_user_data(wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_destroy(wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subcompositor_get_subsurface(wl_subcompositor*,wl_surface*,wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subcompositor_destroy(wl_subcompositor*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_set_position(wl_subsurface*,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_place_above(wl_subsurface*,wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_place_below(wl_subsurface*,wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_set_sync(wl_subsurface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_set_desync(wl_subsurface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_destroy(wl_subsurface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_callback_add_listener(wl_callback*,wl_callback_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_callback_destroy(wl_callback*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_output_add_listener(wl_output*,wl_output_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_surface_frame(wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_output_set_user_data(wl_output*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_output_get_user_data(wl_output*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_output_destroy(wl_output*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_seat_add_listener(wl_seat*,wl_seat_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_seat_set_user_data(wl_seat*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_seat_get_user_data(wl_seat*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_seat_get_pointer(wl_seat*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_seat_get_keyboard(wl_seat*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_seat_get_touch(wl_seat*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_seat_destroy(wl_seat*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_pointer_add_listener(wl_pointer*,wl_pointer_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_pointer_set_cursor(wl_pointer*,uint32_t,wl_surface*,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_pointer_release(wl_pointer*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_keyboard_add_listener(wl_keyboard*,wl_keyboard_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_keyboard_release(wl_keyboard*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_touch_add_listener(wl_touch*,wl_touch_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_touch_release(wl_touch*)",
			"::stappler::xenolith::platform::WaylandLibrary::wp_viewporter_get_viewport(wp_viewporter*,wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::wp_viewporter_destroy(wp_viewporter*)",
			"::stappler::xenolith::platform::WaylandLibrary::wp_viewport_set_source(wp_viewport*,wl_fixed_t,wl_fixed_t,wl_fixed_t,wl_fixed_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wp_viewport_set_destination(wp_viewport*,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::wp_viewport_destroy(wp_viewport*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_add_listener(xdg_wm_base*,xdg_wm_base_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_pong(xdg_wm_base*,uint32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_ack_configure(xdg_surface*,uint32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_get_xdg_surface(xdg_wm_base*,wl_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_add_listener(xdg_surface*,xdg_surface_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_get_toplevel(xdg_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_set_window_geometry(xdg_surface*,int32_t,int32_t,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_destroy(xdg_surface*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_title(xdg_toplevel*,char const*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_app_id(xdg_toplevel*,char const*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_add_listener(xdg_toplevel*,xdg_toplevel_listener const*,void*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_move(xdg_toplevel*,wl_seat*,uint32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_resize(xdg_toplevel*,wl_seat*,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_max_size(xdg_toplevel*,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_min_size(xdg_toplevel*,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_maximized(xdg_toplevel*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_unset_maximized(xdg_toplevel*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_fullscreen(xdg_toplevel*,wl_output*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_unset_fullscreen(xdg_toplevel*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_minimized(xdg_toplevel*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_destroy(xdg_toplevel*)",
			"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_destroy(xdg_wm_base*)",
			"::stappler::xenolith::platform::WaylandLibrary::wl_cursor_theme_load",
			"::stappler::xenolith::platform::WaylandLibrary::wl_cursor_theme_destroy",
			"::stappler::xenolith::platform::WaylandLibrary::wl_cursor_theme_get_cursor",
			"::stappler::xenolith::platform::WaylandLibrary::wl_cursor_image_get_buffer",
			"::stappler::xenolith::platform::WaylandLibrary::acquireConnection()",
			"::stappler::xenolith::platform::WaylandLibrary::getActiveConnection() const",
			"::stappler::xenolith::platform::WaylandLibrary::hasWaylandCursor() const",
			"::stappler::xenolith::platform::WaylandLibrary::open(void*)",
			"::stappler::xenolith::platform::WaylandLibrary::openWaylandCursor(void*)",
			"::stappler::xenolith::platform::WaylandLibrary::openConnection(stappler::xenolith::platform::WaylandLibrary::ConnectionData&)",
			"::stappler::xenolith::platform::WaylandLibrary::_handle",
			"::stappler::xenolith::platform::WaylandLibrary::_cursor",
			"::stappler::xenolith::platform::WaylandLibrary::_pending",
			"::stappler::xenolith::platform::WaylandLibrary::_current",
			"::stappler::xenolith::platform::WaylandDisplay",
			"::stappler::xenolith::platform::WaylandDisplay::~WaylandDisplay()",
			"::stappler::xenolith::platform::WaylandDisplay::init(Rc<stappler::xenolith::platform::WaylandLibrary> const&)",
			"::stappler::xenolith::platform::WaylandDisplay::createSurface(stappler::xenolith::platform::WaylandViewInterface*)",
			"::stappler::xenolith::platform::WaylandDisplay::destroySurface(wl_surface*)",
			"::stappler::xenolith::platform::WaylandDisplay::createDecorationSurface(stappler::xenolith::platform::WaylandDecoration*)",
			"::stappler::xenolith::platform::WaylandDisplay::destroyDecorationSurface(wl_surface*)",
			"::stappler::xenolith::platform::WaylandDisplay::ownsSurface(wl_surface*) const",
			"::stappler::xenolith::platform::WaylandDisplay::isDecoration(wl_surface*) const",
			"::stappler::xenolith::platform::WaylandDisplay::flush()",
			"::stappler::xenolith::platform::WaylandDisplay::getSocketFd() const",
			"::stappler::xenolith::platform::WaylandDisplay::wayland",
			"::stappler::xenolith::platform::WaylandDisplay::display",
			"::stappler::xenolith::platform::WaylandDisplay::shm",
			"::stappler::xenolith::platform::WaylandDisplay::seat",
			"::stappler::xenolith::platform::WaylandDisplay::xkb",
			"::stappler::xenolith::platform::WaylandDisplay::outputs",
			"::stappler::xenolith::platform::WaylandDisplay::compositor",
			"::stappler::xenolith::platform::WaylandDisplay::subcompositor",
			"::stappler::xenolith::platform::WaylandDisplay::viewporter",
			"::stappler::xenolith::platform::WaylandDisplay::xdgWmBase",
			"::stappler::xenolith::platform::WaylandDisplay::surfaces",
			"::stappler::xenolith::platform::WaylandDisplay::decorations",
			"::stappler::xenolith::platform::WaylandDisplay::seatDirty",
			"::stappler::xenolith::platform::WaylandCursorImage",
			"::stappler::xenolith::platform::WaylandDecorationName",
			"::stappler::xenolith::platform::WaylandCursorTheme",
			"::stappler::xenolith::platform::WaylandCursorTheme::~WaylandCursorTheme()",
			"::stappler::xenolith::platform::WaylandCursorTheme::init(stappler::xenolith::platform::WaylandDisplay*,stappler::StringView,int)",
			"::stappler::xenolith::platform::WaylandCursorTheme::setCursor(stappler::xenolith::platform::WaylandSeat*)",
			"::stappler::xenolith::platform::WaylandCursorTheme::setCursor(wl_pointer*,wl_surface*,uint32_t,stappler::xenolith::platform::WaylandCursorImage,int)",
			"::stappler::xenolith::platform::WaylandCursorTheme::wayland",
			"::stappler::xenolith::platform::WaylandCursorTheme::cursorTheme",
			"::stappler::xenolith::platform::WaylandCursorTheme::cursorSize",
			"::stappler::xenolith::platform::WaylandCursorTheme::cursorName",
			"::stappler::xenolith::platform::WaylandCursorTheme::cursors",
			"::stappler::xenolith::platform::WaylandBuffer",
			"::stappler::xenolith::platform::WaylandBuffer::~WaylandBuffer()",
			"::stappler::xenolith::platform::WaylandBuffer::init(stappler::xenolith::platform::WaylandLibrary*,wl_shm_pool*,int32_t,int32_t,int32_t,int32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandBuffer::wayland",
			"::stappler::xenolith::platform::WaylandBuffer::buffer",
			"::stappler::xenolith::platform::WaylandBuffer::width",
			"::stappler::xenolith::platform::WaylandBuffer::height",
			"::stappler::xenolith::platform::WaylandShm",
			"::stappler::xenolith::platform::WaylandShm::Format",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::top",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::left",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottom",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::right",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topLeft",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topRight",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomLeft",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomRight",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::leftActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::rightActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topLeftActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topRightActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomLeftActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomRightActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerLeft",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerLeftActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerRight",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerRightActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerCenter",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerCenterActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconClose",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconMaximize",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconMinimize",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconRestore",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconCloseActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconMaximizeActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconMinimizeActive",
			"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconRestoreActive",
			"::stappler::xenolith::platform::WaylandShm::~WaylandShm()",
			"::stappler::xenolith::platform::WaylandShm::init(Rc<stappler::xenolith::platform::WaylandLibrary> const&,wl_registry*,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandShm::allocateDecorations(stappler::xenolith::platform::WaylandShm::ShadowBuffers*,uint32_t,uint32_t,stappler::xenolith::Color3B const&,stappler::xenolith::Color3B const&)",
			"::stappler::xenolith::platform::WaylandShm::wayland",
			"::stappler::xenolith::platform::WaylandShm::id",
			"::stappler::xenolith::platform::WaylandShm::shm",
			"::stappler::xenolith::platform::WaylandShm::format",
			"::stappler::xenolith::platform::WaylandOutput",
			"::stappler::xenolith::platform::WaylandOutput::Geometry",
			"::stappler::xenolith::platform::WaylandOutput::Geometry::x",
			"::stappler::xenolith::platform::WaylandOutput::Geometry::y",
			"::stappler::xenolith::platform::WaylandOutput::Geometry::physical_width",
			"::stappler::xenolith::platform::WaylandOutput::Geometry::physical_height",
			"::stappler::xenolith::platform::WaylandOutput::Geometry::subpixel",
			"::stappler::xenolith::platform::WaylandOutput::Geometry::transform",
			"::stappler::xenolith::platform::WaylandOutput::Geometry::make",
			"::stappler::xenolith::platform::WaylandOutput::Geometry::model",
			"::stappler::xenolith::platform::WaylandOutput::Mode",
			"::stappler::xenolith::platform::WaylandOutput::Mode::flags",
			"::stappler::xenolith::platform::WaylandOutput::Mode::width",
			"::stappler::xenolith::platform::WaylandOutput::Mode::height",
			"::stappler::xenolith::platform::WaylandOutput::Mode::refresh",
			"::stappler::xenolith::platform::WaylandOutput::~WaylandOutput()",
			"::stappler::xenolith::platform::WaylandOutput::init(Rc<stappler::xenolith::platform::WaylandLibrary> const&,wl_registry*,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandOutput::description() const",
			"::stappler::xenolith::platform::WaylandOutput::wayland",
			"::stappler::xenolith::platform::WaylandOutput::id",
			"::stappler::xenolith::platform::WaylandOutput::output",
			"::stappler::xenolith::platform::WaylandOutput::geometry",
			"::stappler::xenolith::platform::WaylandOutput::mode",
			"::stappler::xenolith::platform::WaylandOutput::scale",
			"::stappler::xenolith::platform::WaylandOutput::name",
			"::stappler::xenolith::platform::WaylandOutput::desc",
			"::stappler::xenolith::platform::WaylandSeat",
			"::stappler::xenolith::platform::WaylandSeat::KeyState",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::controlIndex",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::altIndex",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::shiftIndex",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::superIndex",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::capsLockIndex",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::numLockIndex",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::keyRepeatRate",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::keyRepeatDelay",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::keyRepeatInterval",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::modsDepressed",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::modsLatched",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::modsLocked",
			"::stappler::xenolith::platform::WaylandSeat::KeyState::keycodes",
			"::stappler::xenolith::platform::WaylandSeat::~WaylandSeat()",
			"::stappler::xenolith::platform::WaylandSeat::init(Rc<stappler::xenolith::platform::WaylandLibrary> const&,stappler::xenolith::platform::WaylandDisplay*,wl_registry*,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandSeat::initCursors()",
			"::stappler::xenolith::platform::WaylandSeat::tryUpdateCursor()",
			"::stappler::xenolith::platform::WaylandSeat::update()",
			"::stappler::xenolith::platform::WaylandSeat::translateKey(uint32_t) const",
			"::stappler::xenolith::platform::WaylandSeat::composeSymbol(xkb_keysym_t,core::InputKeyComposeState&) const",
			"::stappler::xenolith::platform::WaylandSeat::wayland",
			"::stappler::xenolith::platform::WaylandSeat::root",
			"::stappler::xenolith::platform::WaylandSeat::id",
			"::stappler::xenolith::platform::WaylandSeat::hasPointerFrames",
			"::stappler::xenolith::platform::WaylandSeat::seat",
			"::stappler::xenolith::platform::WaylandSeat::name",
			"::stappler::xenolith::platform::WaylandSeat::capabilities",
			"::stappler::xenolith::platform::WaylandSeat::pointer",
			"::stappler::xenolith::platform::WaylandSeat::keyboard",
			"::stappler::xenolith::platform::WaylandSeat::touch",
			"::stappler::xenolith::platform::WaylandSeat::pointerScale",
			"::stappler::xenolith::platform::WaylandSeat::pointerFocus",
			"::stappler::xenolith::platform::WaylandSeat::serial",
			"::stappler::xenolith::platform::WaylandSeat::cursorSurface",
			"::stappler::xenolith::platform::WaylandSeat::state",
			"::stappler::xenolith::platform::WaylandSeat::compose",
			"::stappler::xenolith::platform::WaylandSeat::keyState",
			"::stappler::xenolith::platform::WaylandSeat::cursorTheme",
			"::stappler::xenolith::platform::WaylandSeat::cursorImage",
			"::stappler::xenolith::platform::WaylandSeat::pointerDecorations",
			"::stappler::xenolith::platform::WaylandSeat::pointerOutputs",
			"::stappler::xenolith::platform::WaylandSeat::pointerViews",
			"::stappler::xenolith::platform::WaylandSeat::keyboardViews",
			"::stappler::xenolith::platform::WaylandDecoration",
			"::stappler::xenolith::platform::WaylandDecoration::~WaylandDecoration()",
			"::stappler::xenolith::platform::WaylandDecoration::init(stappler::xenolith::platform::WaylandViewInterface*,Rc<stappler::xenolith::platform::WaylandBuffer>&&,Rc<stappler::xenolith::platform::WaylandBuffer>&&,stappler::xenolith::platform::WaylandDecorationName)",
			"::stappler::xenolith::platform::WaylandDecoration::init(stappler::xenolith::platform::WaylandViewInterface*,Rc<stappler::xenolith::platform::WaylandBuffer>&&,stappler::xenolith::platform::WaylandDecorationName)",
			"::stappler::xenolith::platform::WaylandDecoration::setAltBuffers(Rc<stappler::xenolith::platform::WaylandBuffer>&&,Rc<stappler::xenolith::platform::WaylandBuffer>&&)",
			"::stappler::xenolith::platform::WaylandDecoration::handlePress(uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandDecoration::handleMotion()",
			"::stappler::xenolith::platform::WaylandDecoration::onEnter()",
			"::stappler::xenolith::platform::WaylandDecoration::onLeave()",
			"::stappler::xenolith::platform::WaylandDecoration::setActive(bool)",
			"::stappler::xenolith::platform::WaylandDecoration::setVisible(bool)",
			"::stappler::xenolith::platform::WaylandDecoration::setAlternative(bool)",
			"::stappler::xenolith::platform::WaylandDecoration::setGeometry(int32_t,int32_t,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandDecoration::commit()",
			"::stappler::xenolith::platform::WaylandDecoration::isTouchable() const",
			"::stappler::xenolith::platform::WaylandDecoration::wayland",
			"::stappler::xenolith::platform::WaylandDecoration::display",
			"::stappler::xenolith::platform::WaylandDecoration::root",
			"::stappler::xenolith::platform::WaylandDecoration::name",
			"::stappler::xenolith::platform::WaylandDecoration::image",
			"::stappler::xenolith::platform::WaylandDecoration::surface",
			"::stappler::xenolith::platform::WaylandDecoration::subsurface",
			"::stappler::xenolith::platform::WaylandDecoration::viewport",
			"::stappler::xenolith::platform::WaylandDecoration::buffer",
			"::stappler::xenolith::platform::WaylandDecoration::active",
			"::stappler::xenolith::platform::WaylandDecoration::altBuffer",
			"::stappler::xenolith::platform::WaylandDecoration::altActive",
			"::stappler::xenolith::platform::WaylandDecoration::_x",
			"::stappler::xenolith::platform::WaylandDecoration::_y",
			"::stappler::xenolith::platform::WaylandDecoration::_width",
			"::stappler::xenolith::platform::WaylandDecoration::_height",
			"::stappler::xenolith::platform::WaylandDecoration::lastTouch",
			"::stappler::xenolith::platform::WaylandDecoration::serial",
			"::stappler::xenolith::platform::WaylandDecoration::visible",
			"::stappler::xenolith::platform::WaylandDecoration::isActive",
			"::stappler::xenolith::platform::WaylandDecoration::alternative",
			"::stappler::xenolith::platform::WaylandDecoration::dirty",
			"::stappler::xenolith::platform::WaylandDecoration::waitForMove",
			"::stappler::xenolith::platform::WaylandViewInterface",
			"::stappler::xenolith::platform::WaylandViewInterface::~WaylandViewInterface()",
			"::stappler::xenolith::platform::WaylandViewInterface::getDisplay() const",
			"::stappler::xenolith::platform::WaylandViewInterface::getSurface() const",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerEnter(wl_fixed_t,wl_fixed_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerLeave()",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerMotion(uint32_t,wl_fixed_t,wl_fixed_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerButton(uint32_t,uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerAxis(uint32_t,uint32_t,wl_fixed_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerAxisSource(uint32_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerAxisStop(uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerAxisDiscrete(uint32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handlePointerFrame()",
			"::stappler::xenolith::platform::WaylandViewInterface::handleKeyboardEnter(Vector<uint32_t>&&,uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handleKeyboardLeave()",
			"::stappler::xenolith::platform::WaylandViewInterface::handleKey(uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handleKeyModifiers(uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandViewInterface::handleDecorationPress(stappler::xenolith::platform::WaylandDecoration*,uint32_t,bool)",
			"::stappler::xenolith::platform::WaylandViewInterface::_display",
			"::stappler::xenolith::platform::WaylandViewInterface::_surface"
		],
		"XLPlatformLinuxWaylandView.h":  [
			"XENOLITH_PLATFORM_XLPLATFROMLINUXWAYLANDVIEW_H_",
			"::stappler::xenolith::platform::WaylandView",
			"::stappler::xenolith::platform::WaylandView::DecorWidth",
			"::stappler::xenolith::platform::WaylandView::DecorInset",
			"::stappler::xenolith::platform::WaylandView::DecorOffset",
			"::stappler::xenolith::platform::WaylandView::IconSize",
			"::stappler::xenolith::platform::WaylandView::PointerEvent",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::Event",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::event",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::x",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::y",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::enter",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::time",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::x",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::y",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::motion",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::serial",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::time",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::button",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::state",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::button",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::time",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::axis",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::value",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::axis",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::axis_source",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::axisSource",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::time",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::axis",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::axisStop",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::axis",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::discrete",
			"::stappler::xenolith::platform::WaylandView::PointerEvent::axisDiscrete",
			"::stappler::xenolith::platform::WaylandView::WaylandView(stappler::xenolith::platform::WaylandLibrary*,stappler::xenolith::platform::ViewInterface*,stappler::StringView,stappler::StringView,stappler::xenolith::URect)",
			"::stappler::xenolith::platform::WaylandView::~WaylandView()",
			"::stappler::xenolith::platform::WaylandView::poll(bool)",
			"::stappler::xenolith::platform::WaylandView::getSocketFd() const",
			"::stappler::xenolith::platform::WaylandView::getScreenFrameInterval() const",
			"::stappler::xenolith::platform::WaylandView::mapWindow()",
			"::stappler::xenolith::platform::WaylandView::getDisplay() const",
			"::stappler::xenolith::platform::WaylandView::getSurface() const",
			"::stappler::xenolith::platform::WaylandView::handleSurfaceEnter(wl_surface*,wl_output*)",
			"::stappler::xenolith::platform::WaylandView::handleSurfaceLeave(wl_surface*,wl_output*)",
			"::stappler::xenolith::platform::WaylandView::handleSurfaceConfigure(xdg_surface*,uint32_t)",
			"::stappler::xenolith::platform::WaylandView::handleToplevelConfigure(xdg_toplevel*,int32_t,int32_t,wl_array*)",
			"::stappler::xenolith::platform::WaylandView::handleToplevelClose(xdg_toplevel*)",
			"::stappler::xenolith::platform::WaylandView::handleToplevelBounds(xdg_toplevel*,int32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandView::handleSurfaceFrameDone(wl_callback*,uint32_t)",
			"::stappler::xenolith::platform::WaylandView::handlePointerEnter(wl_fixed_t,wl_fixed_t)",
			"::stappler::xenolith::platform::WaylandView::handlePointerLeave()",
			"::stappler::xenolith::platform::WaylandView::handlePointerMotion(uint32_t,wl_fixed_t,wl_fixed_t)",
			"::stappler::xenolith::platform::WaylandView::handlePointerButton(uint32_t,uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandView::handlePointerAxis(uint32_t,uint32_t,wl_fixed_t)",
			"::stappler::xenolith::platform::WaylandView::handlePointerAxisSource(uint32_t)",
			"::stappler::xenolith::platform::WaylandView::handlePointerAxisStop(uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandView::handlePointerAxisDiscrete(uint32_t,int32_t)",
			"::stappler::xenolith::platform::WaylandView::handlePointerFrame()",
			"::stappler::xenolith::platform::WaylandView::handleKeyboardEnter(Vector<uint32_t>&&,uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandView::handleKeyboardLeave()",
			"::stappler::xenolith::platform::WaylandView::handleKey(uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandView::handleKeyModifiers(uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandView::handleKeyRepeat()",
			"::stappler::xenolith::platform::WaylandView::handleDecorationPress(stappler::xenolith::platform::WaylandDecoration*,uint32_t,bool)",
			"::stappler::xenolith::platform::WaylandView::scheduleFrame()",
			"::stappler::xenolith::platform::WaylandView::onSurfaceInfo(core::SurfaceInfo&) const",
			"::stappler::xenolith::platform::WaylandView::commit(uint32_t,uint32_t)",
			"::stappler::xenolith::platform::WaylandView::createDecorations()",
			"::stappler::xenolith::platform::WaylandView::_display",
			"::stappler::xenolith::platform::WaylandView::_view",
			"::stappler::xenolith::platform::WaylandView::_surface",
			"::stappler::xenolith::platform::WaylandView::_xdgSurface",
			"::stappler::xenolith::platform::WaylandView::_toplevel",
			"::stappler::xenolith::platform::WaylandView::_currentExtent",
			"::stappler::xenolith::platform::WaylandView::_commitedExtent",
			"::stappler::xenolith::platform::WaylandView::_continuousRendering",
			"::stappler::xenolith::platform::WaylandView::_scheduleNext",
			"::stappler::xenolith::platform::WaylandView::_clientSizeDecoration",
			"::stappler::xenolith::platform::WaylandView::_shouldClose",
			"::stappler::xenolith::platform::WaylandView::_surfaceDirty",
			"::stappler::xenolith::platform::WaylandView::_fullscreen",
			"::stappler::xenolith::platform::WaylandView::_pointerInit",
			"::stappler::xenolith::platform::WaylandView::_activeOutputs",
			"::stappler::xenolith::platform::WaylandView::_surfaceX",
			"::stappler::xenolith::platform::WaylandView::_surfaceY",
			"::stappler::xenolith::platform::WaylandView::_activeModifiers",
			"::stappler::xenolith::platform::WaylandView::_pointerEvents",
			"::stappler::xenolith::platform::WaylandView::_state",
			"::stappler::xenolith::platform::WaylandView::_decors",
			"::stappler::xenolith::platform::WaylandView::_iconMaximized",
			"::stappler::xenolith::platform::WaylandView::_configureSerial",
			"::stappler::xenolith::platform::WaylandView::_screenFrameInterval",
			"::stappler::xenolith::platform::WaylandView::KeyData",
			"::stappler::xenolith::platform::WaylandView::KeyData::scancode",
			"::stappler::xenolith::platform::WaylandView::KeyData::codepoint",
			"::stappler::xenolith::platform::WaylandView::KeyData::time",
			"::stappler::xenolith::platform::WaylandView::KeyData::repeats",
			"::stappler::xenolith::platform::WaylandView::KeyData::lastRepeat",
			"::stappler::xenolith::platform::WaylandView::_keys"
		],
		"XLPlatformLinuxXcb.h":  [
			"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXXCB_H_",
			"XL_X11_DEBUG",
			"::stappler::xenolith::platform::XcbLibrary",
			"::stappler::xenolith::platform::XcbLibrary::RANDR_MAJOR_VERSION",
			"::stappler::xenolith::platform::XcbLibrary::RANDR_MINOR_VERSION",
			"::stappler::xenolith::platform::XcbLibrary::ConnectionData",
			"::stappler::xenolith::platform::XcbLibrary::ConnectionData::screen_nbr",
			"::stappler::xenolith::platform::XcbLibrary::ConnectionData::connection",
			"::stappler::xenolith::platform::XcbLibrary::ConnectionData::setup",
			"::stappler::xenolith::platform::XcbLibrary::ConnectionData::screen",
			"::stappler::xenolith::platform::XcbLibrary::getInstance()",
			"::stappler::xenolith::platform::XcbLibrary::XcbLibrary()",
			"::stappler::xenolith::platform::XcbLibrary::~XcbLibrary()",
			"::stappler::xenolith::platform::XcbLibrary::init()",
			"::stappler::xenolith::platform::XcbLibrary::open(void*)",
			"::stappler::xenolith::platform::XcbLibrary::close()",
			"::stappler::xenolith::platform::XcbLibrary::hasRandr() const",
			"::stappler::xenolith::platform::XcbLibrary::hasKeysyms() const",
			"::stappler::xenolith::platform::XcbLibrary::hasXkb() const",
			"::stappler::xenolith::platform::XcbLibrary::xcb_connect",
			"::stappler::xenolith::platform::XcbLibrary::xcb_get_setup",
			"::stappler::xenolith::platform::XcbLibrary::xcb_setup_roots_iterator",
			"::stappler::xenolith::platform::XcbLibrary::xcb_screen_next",
			"::stappler::xenolith::platform::XcbLibrary::xcb_connection_has_error",
			"::stappler::xenolith::platform::XcbLibrary::xcb_get_file_descriptor",
			"::stappler::xenolith::platform::XcbLibrary::xcb_generate_id",
			"::stappler::xenolith::platform::XcbLibrary::xcb_flush",
			"::stappler::xenolith::platform::XcbLibrary::xcb_disconnect",
			"::stappler::xenolith::platform::XcbLibrary::xcb_poll_for_event",
			"::stappler::xenolith::platform::XcbLibrary::xcb_map_window",
			"::stappler::xenolith::platform::XcbLibrary::xcb_create_window",
			"::stappler::xenolith::platform::XcbLibrary::xcb_change_property",
			"::stappler::xenolith::platform::XcbLibrary::xcb_intern_atom",
			"::stappler::xenolith::platform::XcbLibrary::xcb_intern_atom_reply",
			"::stappler::xenolith::platform::XcbLibrary::xcb_wait_for_reply",
			"::stappler::xenolith::platform::XcbLibrary::xcb_get_modifier_mapping_unchecked",
			"::stappler::xenolith::platform::XcbLibrary::xcb_get_modifier_mapping_reply",
			"::stappler::xenolith::platform::XcbLibrary::xcb_get_modifier_mapping_keycodes",
			"::stappler::xenolith::platform::XcbLibrary::xcb_get_keyboard_mapping",
			"::stappler::xenolith::platform::XcbLibrary::xcb_get_keyboard_mapping_reply",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_query_version",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_query_version_reply",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_unchecked",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_reply",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_sizes",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_sizes_length",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_sizes_iterator",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_rates_length",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_rates_iterator",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_refresh_rates_next",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_refresh_rates_rates",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_refresh_rates_rates_length",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_unchecked",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_reply",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_modes",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_modes_length",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_current",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_current_unchecked",
			"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_current_reply",
			"::stappler::xenolith::platform::XcbLibrary::xcb_key_symbols_alloc",
			"::stappler::xenolith::platform::XcbLibrary::xcb_key_symbols_free",
			"::stappler::xenolith::platform::XcbLibrary::xcb_key_symbols_get_keysym",
			"::stappler::xenolith::platform::XcbLibrary::xcb_key_symbols_get_keycode",
			"::stappler::xenolith::platform::XcbLibrary::xcb_key_press_lookup_keysym",
			"::stappler::xenolith::platform::XcbLibrary::xcb_key_release_lookup_keysym",
			"::stappler::xenolith::platform::XcbLibrary::xcb_refresh_keyboard_mapping",
			"::stappler::xenolith::platform::XcbLibrary::xcb_is_keypad_key",
			"::stappler::xenolith::platform::XcbLibrary::xcb_is_private_keypad_key",
			"::stappler::xenolith::platform::XcbLibrary::xcb_is_cursor_key",
			"::stappler::xenolith::platform::XcbLibrary::xcb_is_pf_key",
			"::stappler::xenolith::platform::XcbLibrary::xcb_is_function_key",
			"::stappler::xenolith::platform::XcbLibrary::xcb_is_misc_function_key",
			"::stappler::xenolith::platform::XcbLibrary::xcb_is_modifier_key",
			"::stappler::xenolith::platform::XcbLibrary::xcb_xkb_select_events",
			"::stappler::xenolith::platform::XcbLibrary::acquireConnection()",
			"::stappler::xenolith::platform::XcbLibrary::getActiveConnection() const",
			"::stappler::xenolith::platform::XcbLibrary::openAux()",
			"::stappler::xenolith::platform::XcbLibrary::openConnection(stappler::xenolith::platform::XcbLibrary::ConnectionData&)",
			"::stappler::xenolith::platform::XcbLibrary::_handle",
			"::stappler::xenolith::platform::XcbLibrary::_randr",
			"::stappler::xenolith::platform::XcbLibrary::_keysyms",
			"::stappler::xenolith::platform::XcbLibrary::_xkb",
			"::stappler::xenolith::platform::XcbLibrary::_pending",
			"::stappler::xenolith::platform::XcbLibrary::_current",
			"::stappler::xenolith::platform::XcbAtomRequest",
			"::stappler::xenolith::platform::XcbAtomRequest::name",
			"::stappler::xenolith::platform::XcbAtomRequest::onlyIfExists",
			"::stappler::xenolith::platform::s_atomRequests"
		],
		"XLPlatformLinuxXcbView.h":  [
			"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXXCBVIEW_H_",
			"::stappler::xenolith::platform::XcbView",
			"::stappler::xenolith::platform::XcbView::ScreenInfo",
			"::stappler::xenolith::platform::XcbView::ScreenInfo::width",
			"::stappler::xenolith::platform::XcbView::ScreenInfo::height",
			"::stappler::xenolith::platform::XcbView::ScreenInfo::mwidth",
			"::stappler::xenolith::platform::XcbView::ScreenInfo::mheight",
			"::stappler::xenolith::platform::XcbView::ScreenInfo::rates",
			"::stappler::xenolith::platform::XcbView::ReportError(int)",
			"::stappler::xenolith::platform::XcbView::XcbView(stappler::xenolith::platform::XcbLibrary*,stappler::xenolith::platform::ViewInterface*,stappler::StringView,stappler::StringView,stappler::xenolith::URect)",
			"::stappler::xenolith::platform::XcbView::~XcbView()",
			"::stappler::xenolith::platform::XcbView::valid() const",
			"::stappler::xenolith::platform::XcbView::poll(bool)",
			"::stappler::xenolith::platform::XcbView::getSocketFd() const",
			"::stappler::xenolith::platform::XcbView::getScreenFrameInterval() const",
			"::stappler::xenolith::platform::XcbView::mapWindow()",
			"::stappler::xenolith::platform::XcbView::getConnection() const",
			"::stappler::xenolith::platform::XcbView::getWindow() const",
			"::stappler::xenolith::platform::XcbView::getScreenInfo() const",
			"::stappler::xenolith::platform::XcbView::initXkb()",
			"::stappler::xenolith::platform::XcbView::updateXkbMapping()",
			"::stappler::xenolith::platform::XcbView::updateKeysymMapping()",
			"::stappler::xenolith::platform::XcbView::getKeysym(xcb_keycode_t,uint16_t,bool)",
			"::stappler::xenolith::platform::XcbView::composeSymbol(xkb_keysym_t,core::InputKeyComposeState&) const",
			"::stappler::xenolith::platform::XcbView::updateXkbKey(xcb_keycode_t)",
			"::stappler::xenolith::platform::XcbView::getKeyCode(xcb_keycode_t) const",
			"::stappler::xenolith::platform::XcbView::getKeysymCode(xcb_keysym_t) const",
			"::stappler::xenolith::platform::XcbView::_xcb",
			"::stappler::xenolith::platform::XcbView::_xkb",
			"::stappler::xenolith::platform::XcbView::_view",
			"::stappler::xenolith::platform::XcbView::_connection",
			"::stappler::xenolith::platform::XcbView::_defaultScreen",
			"::stappler::xenolith::platform::XcbView::_keysyms",
			"::stappler::xenolith::platform::XcbView::_window",
			"::stappler::xenolith::platform::XcbView::_atoms",
			"::stappler::xenolith::platform::XcbView::_width",
			"::stappler::xenolith::platform::XcbView::_height",
			"::stappler::xenolith::platform::XcbView::_rate",
			"::stappler::xenolith::platform::XcbView::_socket",
			"::stappler::xenolith::platform::XcbView::_numlock",
			"::stappler::xenolith::platform::XcbView::_shiftlock",
			"::stappler::xenolith::platform::XcbView::_capslock",
			"::stappler::xenolith::platform::XcbView::_modeswitch",
			"::stappler::xenolith::platform::XcbView::_xcbSetup",
			"::stappler::xenolith::platform::XcbView::_xkbDeviceId",
			"::stappler::xenolith::platform::XcbView::_xkbFirstEvent",
			"::stappler::xenolith::platform::XcbView::_xkbFirstError",
			"::stappler::xenolith::platform::XcbView::_xkbKeymap",
			"::stappler::xenolith::platform::XcbView::_xkbState",
			"::stappler::xenolith::platform::XcbView::_xkbCompose",
			"::stappler::xenolith::platform::XcbView::_keycodes",
			"::stappler::xenolith::platform::XcbView::_wmClass"
		],
		"XLPlatformLinuxXkb.h":  [
			"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXXKB_H_",
			"::stappler::xenolith::platform::XkbLibrary",
			"::stappler::xenolith::platform::XkbLibrary::getInstance()",
			"::stappler::xenolith::platform::XkbLibrary::XkbLibrary()",
			"::stappler::xenolith::platform::XkbLibrary::~XkbLibrary()",
			"::stappler::xenolith::platform::XkbLibrary::init()",
			"::stappler::xenolith::platform::XkbLibrary::close()",
			"::stappler::xenolith::platform::XkbLibrary::hasX11() const",
			"::stappler::xenolith::platform::XkbLibrary::getContext() const",
			"::stappler::xenolith::platform::XkbLibrary::xkb_context_new",
			"::stappler::xenolith::platform::XkbLibrary::xkb_context_ref",
			"::stappler::xenolith::platform::XkbLibrary::xkb_context_unref",
			"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_unref",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_unref",
			"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_new_from_string",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_new",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_update_mask",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_key_get_utf8",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_key_get_utf32",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_key_get_one_sym",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_mod_index_is_active",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_key_get_syms",
			"::stappler::xenolith::platform::XkbLibrary::xkb_state_get_keymap",
			"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_key_for_each",
			"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_key_get_name",
			"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_mod_get_index",
			"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_key_repeats",
			"::stappler::xenolith::platform::XkbLibrary::xkb_keysym_to_utf32",
			"::stappler::xenolith::platform::XkbLibrary::xkb_compose_table_new_from_locale",
			"::stappler::xenolith::platform::XkbLibrary::xkb_compose_table_unref",
			"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_new",
			"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_feed",
			"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_reset",
			"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_get_status",
			"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_get_one_sym",
			"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_unref",
			"::stappler::xenolith::platform::XkbLibrary::xkb_x11_setup_xkb_extension",
			"::stappler::xenolith::platform::XkbLibrary::xkb_x11_get_core_keyboard_device_id",
			"::stappler::xenolith::platform::XkbLibrary::xkb_x11_keymap_new_from_device",
			"::stappler::xenolith::platform::XkbLibrary::xkb_x11_state_new_from_device",
			"::stappler::xenolith::platform::XkbLibrary::open(void*)",
			"::stappler::xenolith::platform::XkbLibrary::openAux()",
			"::stappler::xenolith::platform::XkbLibrary::_handle",
			"::stappler::xenolith::platform::XkbLibrary::_x11",
			"::stappler::xenolith::platform::XkbLibrary::_context"
		],
		"XLPlatformViewInterface.h":  [
			"XENOLITH_PLATFORM_XLPLATFORMVIEWINTERFACE_H_",
			"::stappler::xenolith::platform::ViewInterface",
			"::stappler::xenolith::platform::ViewInterface::~ViewInterface()",
			"::stappler::xenolith::platform::ViewInterface::update(bool)",
			"::stappler::xenolith::platform::ViewInterface::end()",
			"::stappler::xenolith::platform::ViewInterface::handleInputEvent(core::InputEventData const&)",
			"::stappler::xenolith::platform::ViewInterface::handleInputEvents(Vector<core::InputEventData>&&)",
			"::stappler::xenolith::platform::ViewInterface::getExtent() const",
			"::stappler::xenolith::platform::ViewInterface::isInputEnabled() const",
			"::stappler::xenolith::platform::ViewInterface::deprecateSwapchain(bool)",
			"::stappler::xenolith::platform::ViewInterface::retainView()",
			"::stappler::xenolith::platform::ViewInterface::releaseView(uint64_t)",
			"::stappler::xenolith::platform::ViewInterface::setReadyForNextFrame()",
			"::stappler::xenolith::platform::ViewInterface::linkWithNativeWindow(void*)",
			"::stappler::xenolith::platform::ViewInterface::stopNativeWindow()",
			"::stappler::xenolith::platform::ViewInterface::setContentPadding(stappler::xenolith::Padding const&)",
			"::stappler::xenolith::platform::ViewInterface::getBackButtonCounter() const",
			"::stappler::xenolith::platform::ViewInterfaceRef",
			"::stappler::xenolith::platform::ViewInterfaceRef::~ViewInterfaceRef()",
			"::stappler::xenolith::platform::ViewInterfaceRef::ViewInterfaceRef()",
			"::stappler::xenolith::platform::ViewInterfaceRef::ViewInterfaceRef(stappler::xenolith::platform::ViewInterface*)",
			"::stappler::xenolith::platform::ViewInterfaceRef::ViewInterfaceRef(stappler::xenolith::platform::ViewInterfaceRef const&)",
			"::stappler::xenolith::platform::ViewInterfaceRef::ViewInterfaceRef(stappler::xenolith::platform::ViewInterfaceRef&&)",
			"::stappler::xenolith::platform::ViewInterfaceRef::operator=(stappler::xenolith::platform::ViewInterface*)",
			"::stappler::xenolith::platform::ViewInterfaceRef::operator=(stappler::xenolith::platform::ViewInterfaceRef const&)",
			"::stappler::xenolith::platform::ViewInterfaceRef::operator=(stappler::xenolith::platform::ViewInterfaceRef&&)",
			"::stappler::xenolith::platform::ViewInterfaceRef::get() const",
			"::stappler::xenolith::platform::ViewInterfaceRef::operator ViewInterface*() const",
			"::stappler::xenolith::platform::ViewInterfaceRef::operator bool() const",
			"::stappler::xenolith::platform::ViewInterfaceRef::operator->() const",
			"::stappler::xenolith::platform::ViewInterfaceRef::set(stappler::xenolith::platform::ViewInterface*)",
			"::stappler::xenolith::platform::ViewInterfaceRef::refId",
			"::stappler::xenolith::platform::ViewInterfaceRef::ref"
		],
		"XLResourceCache.h":  [
			"XENOLITH_APPLICATION_XLRESOURCECACHE_H_",
			"::stappler::xenolith::TemporaryResourceFlags",
			"::stappler::xenolith::operator|(stappler::xenolith::TemporaryResourceFlags const&,stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::operator&(stappler::xenolith::TemporaryResourceFlags const&,stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::operator^(stappler::xenolith::TemporaryResourceFlags const&,stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::operator|=(stappler::xenolith::TemporaryResourceFlags&,stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::operator&=(stappler::xenolith::TemporaryResourceFlags&,stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::operator^=(stappler::xenolith::TemporaryResourceFlags&,stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::operator==(stappler::xenolith::TemporaryResourceFlags const&,std::underlying_type<TemporaryResourceFlags>::type const&)",
			"::stappler::xenolith::operator==(std::underlying_type<TemporaryResourceFlags>::type const&,stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::operator!=(stappler::xenolith::TemporaryResourceFlags const&,std::underlying_type<TemporaryResourceFlags>::type const&)",
			"::stappler::xenolith::operator!=(std::underlying_type<TemporaryResourceFlags>::type const&,stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::operator~(stappler::xenolith::TemporaryResourceFlags const&)",
			"::stappler::xenolith::ResourceCache",
			"::stappler::xenolith::ResourceCache::~ResourceCache()",
			"::stappler::xenolith::ResourceCache::init(stappler::xenolith::Application*)",
			"::stappler::xenolith::ResourceCache::initialize(core::Loop const&)",
			"::stappler::xenolith::ResourceCache::invalidate()",
			"::stappler::xenolith::ResourceCache::update(stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::ResourceCache::addImage(stappler::StringView,Rc<core::ImageObject> const&)",
			"::stappler::xenolith::ResourceCache::addResource(Rc<core::Resource> const&)",
			"::stappler::xenolith::ResourceCache::removeResource(stappler::StringView)",
			"::stappler::xenolith::ResourceCache::getApplication() const",
			"::stappler::xenolith::ResourceCache::acquireTexture(stappler::StringView) const",
			"::stappler::xenolith::ResourceCache::acquireMeshIndex(stappler::StringView) const",
			"::stappler::xenolith::ResourceCache::getEmptyImage() const",
			"::stappler::xenolith::ResourceCache::getSolidImage() const",
			"::stappler::xenolith::ResourceCache::addExternalImageByRef(stappler::StringView,core::ImageInfo&&,stappler::BytesView,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)",
			"::stappler::xenolith::ResourceCache::addExternalImage(stappler::StringView,core::ImageInfo&&,stappler::FilePath,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)",
			"::stappler::xenolith::ResourceCache::addExternalImage(stappler::StringView,core::ImageInfo&&,stappler::BytesView,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)",
			"::stappler::xenolith::ResourceCache::addExternalImage(stappler::StringView,core::ImageInfo&&,memory::function<void (uint8_t *, uint64_t, const core::ImageData::DataCallback &)> const&,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)",
			"::stappler::xenolith::ResourceCache::addTemporaryResource(Rc<core::Resource>&&,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)",
			"::stappler::xenolith::ResourceCache::getTemporaryResource(stappler::StringView) const",
			"::stappler::xenolith::ResourceCache::hasTemporaryResource(stappler::StringView) const",
			"::stappler::xenolith::ResourceCache::removeTemporaryResource(stappler::StringView)",
			"::stappler::xenolith::ResourceCache::compileResource(stappler::xenolith::TemporaryResource*)",
			"::stappler::xenolith::ResourceCache::clearResource(stappler::xenolith::TemporaryResource*)",
			"::stappler::xenolith::ResourceCache::_application",
			"::stappler::xenolith::ResourceCache::_loop",
			"::stappler::xenolith::ResourceCache::_images",
			"::stappler::xenolith::ResourceCache::_resources",
			"::stappler::xenolith::ResourceCache::_temporaries"
		],
		"XLResourceObject.h":  [
			"XENOLITH_APPLICATION_XLRESOURCEOBJECT_H_",
			"::stappler::xenolith::ResourceType",
			"::stappler::xenolith::ResourceObject",
			"::stappler::xenolith::ResourceObject::~ResourceObject()",
			"::stappler::xenolith::ResourceObject::init(stappler::xenolith::ResourceType)",
			"::stappler::xenolith::ResourceObject::init(stappler::xenolith::ResourceType,Rc<core::Resource> const&)",
			"::stappler::xenolith::ResourceObject::init(stappler::xenolith::ResourceType,Rc<stappler::xenolith::TemporaryResource> const&)",
			"::stappler::xenolith::ResourceObject::invalidate()",
			"::stappler::xenolith::ResourceObject::getName() const",
			"::stappler::xenolith::ResourceObject::isLoaded() const",
			"::stappler::xenolith::ResourceObject::onEnter(stappler::xenolith::ResourceOwner*)",
			"::stappler::xenolith::ResourceObject::onExit(stappler::xenolith::ResourceOwner*)",
			"::stappler::xenolith::ResourceObject::getType() const",
			"::stappler::xenolith::ResourceObject::getTemporary() const",
			"::stappler::xenolith::ResourceObject::_type",
			"::stappler::xenolith::ResourceObject::_resource",
			"::stappler::xenolith::ResourceObject::_temporary"
		],
		"XLResourceOwner.h":  [
			"XENOLITH_APPLICATION_XLRESOURCEOWNER_H_",
			"::stappler::xenolith::ResourceOwner",
			"::stappler::xenolith::ResourceOwner::~ResourceOwner()",
			"::stappler::xenolith::ResourceOwner::revokeImages(SpanView<uint64_t>)"
		],
		"XLScene.h":  [
			"XENOLITH_SCENE_NODES_XLSCENE_H_",
			"::stappler::xenolith::Scene",
			"::stappler::xenolith::Scene::Queue",
			"::stappler::xenolith::Scene::FrameRequest",
			"::stappler::xenolith::Scene::FrameQueue",
			"::stappler::xenolith::Scene::FrameHandle",
			"::stappler::xenolith::Scene::~Scene()",
			"::stappler::xenolith::Scene::init(Queue::Builder&&,core::FrameContraints const&)",
			"::stappler::xenolith::Scene::renderRequest(Rc<stappler::xenolith::Scene::FrameRequest> const&)",
			"::stappler::xenolith::Scene::render(stappler::xenolith::FrameInfo&)",
			"::stappler::xenolith::Scene::onEnter(stappler::xenolith::Scene*)",
			"::stappler::xenolith::Scene::onExit()",
			"::stappler::xenolith::Scene::onContentSizeDirty()",
			"::stappler::xenolith::Scene::getQueue() const",
			"::stappler::xenolith::Scene::getDirector() const",
			"::stappler::xenolith::Scene::setContent(stappler::xenolith::SceneContent*)",
			"::stappler::xenolith::Scene::getContent() const",
			"::stappler::xenolith::Scene::onPresented(stappler::xenolith::Director*)",
			"::stappler::xenolith::Scene::onFinished(stappler::xenolith::Director*)",
			"::stappler::xenolith::Scene::onFrameStarted(stappler::xenolith::Scene::FrameRequest&)",
			"::stappler::xenolith::Scene::onFrameEnded(stappler::xenolith::Scene::FrameRequest&)",
			"::stappler::xenolith::Scene::setFrameConstraints(core::FrameContraints const&)",
			"::stappler::xenolith::Scene::getFrameConstraints() const",
			"::stappler::xenolith::Scene::getContentSize() const",
			"::stappler::xenolith::Scene::setClipContent(bool)",
			"::stappler::xenolith::Scene::isClipContent() const",
			"::stappler::xenolith::Scene::makeQueue(Queue::Builder&&)",
			"::stappler::xenolith::Scene::updateContentNode(stappler::xenolith::SceneContent*)",
			"::stappler::xenolith::Scene::_director",
			"::stappler::xenolith::Scene::_content",
			"::stappler::xenolith::Scene::_queue",
			"::stappler::xenolith::Scene::_constraints"
		],
		"XLSceneConfig.h":  [
			"XENOLITH_SCENE_XLSCENECONFIG_H_",
			"::stappler::xenolith::config::NodePreallocateChilds",
			"::stappler::xenolith::config::MaxMaterialImages",
			"::stappler::xenolith::config::MaxAmbientLights",
			"::stappler::xenolith::config::MaxDirectLights",
			"::stappler::xenolith::config::MaxDirectorDeltaTime"
		],
		"XLSceneContent.h":  [
			"XENOLITH_SCENE_NODES_XLSCENECONTENT_H_",
			"::stappler::xenolith::SceneContent",
			"::stappler::xenolith::SceneContent::~SceneContent()",
			"::stappler::xenolith::SceneContent::init()",
			"::stappler::xenolith::SceneContent::onEnter(stappler::xenolith::Scene*)",
			"::stappler::xenolith::SceneContent::onExit()",
			"::stappler::xenolith::SceneContent::onContentSizeDirty()",
			"::stappler::xenolith::SceneContent::onBackButton()",
			"::stappler::xenolith::SceneContent::getDecorationPadding() const",
			"::stappler::xenolith::SceneContent::setDecorationPadding(stappler::xenolith::Padding)",
			"::stappler::xenolith::SceneContent::updateBackButtonStatus()",
			"::stappler::xenolith::SceneContent::_decorationPadding",
			"::stappler::xenolith::SceneContent::_inputListener",
			"::stappler::xenolith::SceneContent::_retainBackButton",
			"::stappler::xenolith::SceneContent::_backButtonRetained"
		],
		"XLScheduler.h":  [
			"XENOLITH_SCENE_DIRECTOR_XLSCHEDULER_H_",
			"::stappler::xenolith::SchedulerFunc",
			"::stappler::xenolith::SchedulerCallback",
			"::stappler::xenolith::SchedulerCallback::callback",
			"::stappler::xenolith::SchedulerCallback::paused",
			"::stappler::xenolith::SchedulerCallback::removed",
			"::stappler::xenolith::SchedulerCallback::SchedulerCallback()",
			"::stappler::xenolith::SchedulerCallback::SchedulerCallback(stappler::xenolith::SchedulerFunc&&,bool)",
			"::stappler::xenolith::Scheduler",
			"::stappler::xenolith::Scheduler::Scheduler()",
			"::stappler::xenolith::Scheduler::~Scheduler()",
			"::stappler::xenolith::Scheduler::init()",
			"::stappler::xenolith::Scheduler::unschedule(void const*)",
			"::stappler::xenolith::Scheduler::unscheduleAll()",
			"::stappler::xenolith::Scheduler::scheduleUpdate<typename>(T*,int32_t,bool)",
			"::stappler::xenolith::Scheduler::schedulePerFrame(stappler::xenolith::SchedulerFunc&&,void*,int32_t,bool)",
			"::stappler::xenolith::Scheduler::update(stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::Scheduler::resume(void*)",
			"::stappler::xenolith::Scheduler::pause(void*)",
			"::stappler::xenolith::Scheduler::empty() const",
			"::stappler::xenolith::Scheduler::ScheduledTemporary",
			"::stappler::xenolith::Scheduler::ScheduledTemporary::callback",
			"::stappler::xenolith::Scheduler::ScheduledTemporary::target",
			"::stappler::xenolith::Scheduler::ScheduledTemporary::priority",
			"::stappler::xenolith::Scheduler::ScheduledTemporary::paused",
			"::stappler::xenolith::Scheduler::_locked",
			"::stappler::xenolith::Scheduler::_currentTarget",
			"::stappler::xenolith::Scheduler::_currentNode",
			"::stappler::xenolith::Scheduler::_list",
			"::stappler::xenolith::Scheduler::_tmp",
			"::stappler::xenolith::SchedulerUpdate<typename,typename>",
			"::stappler::xenolith::SchedulerUpdate<typename,typename>::scheduleUpdate(stappler::xenolith::Scheduler*,T*,int32_t,bool)",
			"::stappler::xenolith::SchedulerUpdate<T,typenamestd::enable_if<std::is_base_of<Ref,T>::value>::type>::SchedulerUpdate<T,typenamestd::enable_if<std::is_base_of<Ref,T>::value>::type>",
			"::stappler::xenolith::SchedulerUpdate<T,typenamestd::enable_if<std::is_base_of<Ref,T>::value>::type>::scheduleUpdate(stappler::xenolith::Scheduler*,T*,int32_t,bool)",
			"::stappler::xenolith::Scheduler::scheduleUpdate<typename>(T*,int32_t,bool)"
		],
		"XLStorageComponent.h":  [
			"XENOLITH_RESOURCES_STORAGE_XLSTORAGECOMPONENT_H_",
			"::stappler::xenolith::storage::Component",
			"::stappler::xenolith::storage::Component::~Component()",
			"::stappler::xenolith::storage::Component::Component(stappler::xenolith::storage::ComponentLoader&,stappler::StringView)",
			"::stappler::xenolith::storage::Component::handleChildInit(stappler::xenolith::storage::Server const&,db::Transaction const&)",
			"::stappler::xenolith::storage::Component::handleChildRelease(stappler::xenolith::storage::Server const&,db::Transaction const&)",
			"::stappler::xenolith::storage::Component::handleStorageTransaction(db::Transaction&)",
			"::stappler::xenolith::storage::Component::handleHeartbeat(stappler::xenolith::storage::Server const&)",
			"::stappler::xenolith::storage::Component::getName() const",
			"::stappler::xenolith::storage::Component::_name",
			"::stappler::xenolith::storage::ComponentLoader",
			"::stappler::xenolith::storage::ComponentLoader::~ComponentLoader()",
			"::stappler::xenolith::storage::ComponentLoader::getPool() const",
			"::stappler::xenolith::storage::ComponentLoader::getServer() const",
			"::stappler::xenolith::storage::ComponentLoader::getTransaction() const",
			"::stappler::xenolith::storage::ComponentLoader::exportComponent(stappler::xenolith::storage::Component*)",
			"::stappler::xenolith::storage::ComponentLoader::exportScheme(db::Scheme const&)",
			"::stappler::xenolith::storage::ComponentLoader::define<typename>(db::Scheme&,Args &&...)",
			"::stappler::xenolith::storage::ComponentContainer",
			"::stappler::xenolith::storage::ComponentContainer::TaskCallback",
			"::stappler::xenolith::storage::ComponentContainer::~ComponentContainer()",
			"::stappler::xenolith::storage::ComponentContainer::init(stappler::StringView)",
			"::stappler::xenolith::storage::ComponentContainer::handleStorageInit(stappler::xenolith::storage::ComponentLoader&)",
			"::stappler::xenolith::storage::ComponentContainer::handleStorageDisposed(db::Transaction const&)",
			"::stappler::xenolith::storage::ComponentContainer::handleComponentsLoaded(stappler::xenolith::storage::Server const&)",
			"::stappler::xenolith::storage::ComponentContainer::handleComponentsUnloaded(stappler::xenolith::storage::Server const&)",
			"::stappler::xenolith::storage::ComponentContainer::getName() const",
			"::stappler::xenolith::storage::ComponentContainer::setServer(stappler::xenolith::storage::Server const*)",
			"::stappler::xenolith::storage::ComponentContainer::getServer() const",
			"::stappler::xenolith::storage::ComponentContainer::isLoaded() const",
			"::stappler::xenolith::storage::ComponentContainer::perform(stappler::xenolith::storage::ComponentContainer::TaskCallback&&,stappler::mem_std::Ref*) const",
			"::stappler::xenolith::storage::ComponentContainer::_loaded",
			"::stappler::xenolith::storage::ComponentContainer::_name",
			"::stappler::xenolith::storage::ComponentContainer::_server",
			"::stappler::xenolith::storage::ComponentContainer::_pendingTasks"
		],
		"XLStorageServer.h":  [
			"XENOLITH_RESOURCES_STORAGE_XLSTORAGESERVER_H_",
			"::stappler::xenolith::storage::Server",
			"::stappler::xenolith::storage::Server::DataCallback",
			"::stappler::xenolith::storage::Server::QueryCallback",
			"::stappler::xenolith::storage::Server::InitList<typename>",
			"::stappler::xenolith::storage::Server::Scheme",
			"::stappler::xenolith::storage::Server::~Server()",
			"::stappler::xenolith::storage::Server::init(stappler::xenolith::Application*,stappler::mem_std::Value const&)",
			"::stappler::xenolith::storage::Server::initialize(stappler::xenolith::Application*)",
			"::stappler::xenolith::storage::Server::invalidate(stappler::xenolith::Application*)",
			"::stappler::xenolith::storage::Server::update(stappler::xenolith::Application*,stappler::xenolith::UpdateTime const&)",
			"::stappler::xenolith::storage::Server::getComponentContainer(stappler::StringView) const",
			"::stappler::xenolith::storage::Server::addComponentContainer(Rc<stappler::xenolith::storage::ComponentContainer> const&)",
			"::stappler::xenolith::storage::Server::removeComponentContainer(Rc<stappler::xenolith::storage::ComponentContainer> const&)",
			"::stappler::xenolith::storage::Server::get(stappler::CoderSource,stappler::xenolith::storage::Server::DataCallback&&)",
			"::stappler::xenolith::storage::Server::set(stappler::CoderSource,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&)",
			"::stappler::xenolith::storage::Server::clear(stappler::CoderSource,stappler::xenolith::storage::Server::DataCallback&&)",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,stappler::StringView,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,stappler::StringView,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,stappler::StringView,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,InitList<stappler::StringView>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,InitList<stappler::StringView>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,InitList<stappler::StringView>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,InitList<const char *>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,InitList<const char *>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,InitList<const char *>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,InitList<const db::Field *>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,InitList<const db::Field *>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,InitList<const db::Field *>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::select(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::xenolith::storage::Server::QueryCallback&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::create(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::create(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::Conflict::Flags) const",
			"::stappler::xenolith::storage::Server::create(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::UpdateFlags,db::Conflict::Flags) const",
			"::stappler::xenolith::storage::Server::update(stappler::xenolith::storage::Server::Scheme const&,uint64_t,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::update(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value const&,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::remove(stappler::xenolith::storage::Server::Scheme const&,uint64_t,Function<void (bool)>&&) const",
			"::stappler::xenolith::storage::Server::remove(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value const&,Function<void (bool)>&&) const",
			"::stappler::xenolith::storage::Server::count(stappler::xenolith::storage::Server::Scheme const&,Function<void (size_t)>&&) const",
			"::stappler::xenolith::storage::Server::count(stappler::xenolith::storage::Server::Scheme const&,Function<void (size_t)>&&,stappler::xenolith::storage::Server::QueryCallback&&) const",
			"::stappler::xenolith::storage::Server::touch(stappler::xenolith::storage::Server::Scheme const&,uint64_t) const",
			"::stappler::xenolith::storage::Server::touch(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value const&) const",
			"::stappler::xenolith::storage::Server::perform(Function<bool (const stappler::xenolith::storage::Server &, const db::Transaction &)>&&,stappler::mem_std::Ref*) const",
			"::stappler::xenolith::storage::Server::getApplication() const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,Vector<const db::Field *>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,Vector<const db::Field *>&&,db::UpdateFlags) const",
			"::stappler::xenolith::storage::Server::_data",
			"::stappler::xenolith::storage::StorageRoot",
			"::stappler::xenolith::storage::StorageRoot::onBroadcast",
			"::stappler::xenolith::storage::StorageRoot::scheduleAyncDbTask(db::Callback<db::Function<void (const db::Transaction &)> (db::pool_t *)> const&)",
			"::stappler::xenolith::storage::StorageRoot::getDocuemntRoot() const",
			"::stappler::xenolith::storage::StorageRoot::getFileScheme() const",
			"::stappler::xenolith::storage::StorageRoot::getUserScheme() const",
			"::stappler::xenolith::storage::StorageRoot::onLocalBroadcast(db::Value const&)",
			"::stappler::xenolith::storage::StorageRoot::onStorageTransaction(db::Transaction&)"
		],
		"XLSubscriptionListener.h":  [
			"XENOLITH_SCENE_NODES_XLSUBSCRIPTIONLISTENER_H_",
			"::stappler::xenolith::SubscriptionListener",
			"::stappler::xenolith::SubscriptionListener::DirtyCallback",
			"::stappler::xenolith::SubscriptionListener::~SubscriptionListener()",
			"::stappler::xenolith::SubscriptionListener::init(stappler::xenolith::SubscriptionListener::DirtyCallback&&)",
			"::stappler::xenolith::SubscriptionListener::onEnter(stappler::xenolith::Scene*)",
			"::stappler::xenolith::SubscriptionListener::onExit()",
			"::stappler::xenolith::SubscriptionListener::setCallback(stappler::xenolith::SubscriptionListener::DirtyCallback&&)",
			"::stappler::xenolith::SubscriptionListener::getCallback() const",
			"::stappler::xenolith::SubscriptionListener::setDirty()",
			"::stappler::xenolith::SubscriptionListener::update(stappler::xenolith::UpdateTime)",
			"::stappler::xenolith::SubscriptionListener::check()",
			"::stappler::xenolith::SubscriptionListener::updateScheduler()",
			"::stappler::xenolith::SubscriptionListener::schedule()",
			"::stappler::xenolith::SubscriptionListener::unschedule()",
			"::stappler::xenolith::SubscriptionListener::_scheduler",
			"::stappler::xenolith::SubscriptionListener::_subscription",
			"::stappler::xenolith::SubscriptionListener::_callback",
			"::stappler::xenolith::SubscriptionListener::_dirty",
			"::stappler::xenolith::SubscriptionListener::_scheduled",
			"::stappler::xenolith::DataListener<typename>",
			"::stappler::xenolith::DataListener<typename>::~DataListener()",
			"::stappler::xenolith::DataListener<typename>::init(stappler::xenolith::SubscriptionListener::DirtyCallback&&,T*)",
			"::stappler::xenolith::DataListener<typename>::setSubscription(T*)",
			"::stappler::xenolith::DataListener<typename>::getSubscription() const",
			"::stappler::xenolith::DataListener<typename>::update(stappler::xenolith::UpdateTime)",
			"::stappler::xenolith::DataListener<typename>::_binding"
		],
		"XLTemporaryResource.h":  [
			"XENOLITH_APPLICATION_XLTEMPORARYRESOURCE_H_",
			"::stappler::xenolith::TemporaryResource",
			"::stappler::xenolith::TemporaryResource::onLoaded",
			"::stappler::xenolith::TemporaryResource::~TemporaryResource()",
			"::stappler::xenolith::TemporaryResource::init(Rc<core::Resource>&&,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)",
			"::stappler::xenolith::TemporaryResource::invalidate()",
			"::stappler::xenolith::TemporaryResource::acquireTexture(stappler::StringView)",
			"::stappler::xenolith::TemporaryResource::acquireMeshIndex(stappler::StringView)",
			"::stappler::xenolith::TemporaryResource::setLoaded(bool)",
			"::stappler::xenolith::TemporaryResource::setRequested(bool)",
			"::stappler::xenolith::TemporaryResource::setTimeout(stappler::TimeInterval)",
			"::stappler::xenolith::TemporaryResource::load(stappler::mem_std::Ref*,Function<void (bool)>&&)",
			"::stappler::xenolith::TemporaryResource::onEnter(stappler::xenolith::ResourceOwner*,stappler::xenolith::ResourceObject*)",
			"::stappler::xenolith::TemporaryResource::onExit(stappler::xenolith::ResourceOwner*,stappler::xenolith::ResourceObject*)",
			"::stappler::xenolith::TemporaryResource::clear()",
			"::stappler::xenolith::TemporaryResource::getName() const",
			"::stappler::xenolith::TemporaryResource::isRequested() const",
			"::stappler::xenolith::TemporaryResource::isLoaded() const",
			"::stappler::xenolith::TemporaryResource::getAccessTime() const",
			"::stappler::xenolith::TemporaryResource::getTimeout() const",
			"::stappler::xenolith::TemporaryResource::getUsersCount() const",
			"::stappler::xenolith::TemporaryResource::getResource() const",
			"::stappler::xenolith::TemporaryResource::isDeprecated(stappler::xenolith::UpdateTime const&) const",
			"::stappler::xenolith::TemporaryResource::_requested",
			"::stappler::xenolith::TemporaryResource::_loaded",
			"::stappler::xenolith::TemporaryResource::_removeOnClear",
			"::stappler::xenolith::TemporaryResource::_users",
			"::stappler::xenolith::TemporaryResource::_atime",
			"::stappler::xenolith::TemporaryResource::_timeout",
			"::stappler::xenolith::TemporaryResource::_name",
			"::stappler::xenolith::TemporaryResource::_resource",
			"::stappler::xenolith::TemporaryResource::_textures",
			"::stappler::xenolith::TemporaryResource::_meshIndexes",
			"::stappler::xenolith::TemporaryResource::_owners",
			"::stappler::xenolith::TemporaryResource::_callbacks"
		],
		"XLTextInputManager.h":  [
			"XENOLITH_SCENE_INPUT_XLTEXTINPUTMANAGER_H_",
			"::stappler::xenolith::TextInputHandler",
			"::stappler::xenolith::TextInputHandler::onText",
			"::stappler::xenolith::TextInputHandler::onKeyboard",
			"::stappler::xenolith::TextInputHandler::onInput",
			"::stappler::xenolith::TextInputHandler::manager",
			"::stappler::xenolith::TextInputHandler::~TextInputHandler()",
			"::stappler::xenolith::TextInputHandler::run(stappler::xenolith::TextInputManager*,stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor,stappler::xenolith::TextInputType)",
			"::stappler::xenolith::TextInputHandler::cancel()",
			"::stappler::xenolith::TextInputHandler::setString(stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputHandler::setCursor(stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputHandler::setMarked(stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputHandler::getString() const",
			"::stappler::xenolith::TextInputHandler::getCursor() const",
			"::stappler::xenolith::TextInputHandler::getMarked() const",
			"::stappler::xenolith::TextInputHandler::isInputEnabled() const",
			"::stappler::xenolith::TextInputHandler::isKeyboardVisible() const",
			"::stappler::xenolith::TextInputHandler::getKeyboardRect() const",
			"::stappler::xenolith::TextInputHandler::isActive() const",
			"::stappler::xenolith::TextInputManager",
			"::stappler::xenolith::TextInputManager::TextInputManager()",
			"::stappler::xenolith::TextInputManager::init(stappler::xenolith::TextInputViewInterface*)",
			"::stappler::xenolith::TextInputManager::insertText(stappler::WideStringView,bool)",
			"::stappler::xenolith::TextInputManager::insertText(stappler::WideStringView,stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::setMarkedText(stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::deleteBackward()",
			"::stappler::xenolith::TextInputManager::deleteForward()",
			"::stappler::xenolith::TextInputManager::unmarkText()",
			"::stappler::xenolith::TextInputManager::hasText()",
			"::stappler::xenolith::TextInputManager::textChanged(stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::cursorChanged(stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::markedChanged(stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::onKeyboardEnabled(stappler::xenolith::Rect const&,float)",
			"::stappler::xenolith::TextInputManager::onKeyboardDisabled(float)",
			"::stappler::xenolith::TextInputManager::setInputEnabled(bool)",
			"::stappler::xenolith::TextInputManager::onTextChanged()",
			"::stappler::xenolith::TextInputManager::run(stappler::xenolith::TextInputHandler*,stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor,stappler::xenolith::TextInputType)",
			"::stappler::xenolith::TextInputManager::setString(stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::setCursor(stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::setMarked(stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::getStringByRange(stappler::xenolith::TextCursor)",
			"::stappler::xenolith::TextInputManager::getString() const",
			"::stappler::xenolith::TextInputManager::getCursor() const",
			"::stappler::xenolith::TextInputManager::getMarked() const",
			"::stappler::xenolith::TextInputManager::cancel()",
			"::stappler::xenolith::TextInputManager::isRunning() const",
			"::stappler::xenolith::TextInputManager::isKeyboardVisible() const",
			"::stappler::xenolith::TextInputManager::isInputEnabled() const",
			"::stappler::xenolith::TextInputManager::getKeyboardDuration() const",
			"::stappler::xenolith::TextInputManager::getKeyboardRect() const",
			"::stappler::xenolith::TextInputManager::getHandler() const",
			"::stappler::xenolith::TextInputManager::canHandleInputEvent(stappler::xenolith::InputEventData const&)",
			"::stappler::xenolith::TextInputManager::handleInputEvent(stappler::xenolith::InputEventData const&)",
			"::stappler::xenolith::TextInputManager::doInsertText(stappler::WideStringView,bool)",
			"::stappler::xenolith::TextInputManager::_view",
			"::stappler::xenolith::TextInputManager::_handler",
			"::stappler::xenolith::TextInputManager::_keyboardRect",
			"::stappler::xenolith::TextInputManager::_keyboardDuration",
			"::stappler::xenolith::TextInputManager::_isInputEnabled",
			"::stappler::xenolith::TextInputManager::_isKeyboardVisible",
			"::stappler::xenolith::TextInputManager::_running",
			"::stappler::xenolith::TextInputManager::_type",
			"::stappler::xenolith::TextInputManager::_string",
			"::stappler::xenolith::TextInputManager::_cursor",
			"::stappler::xenolith::TextInputManager::_marked",
			"::stappler::xenolith::TextInputManager::_compose"
		],
		"XLTexture.h":  [
			"XENOLITH_APPLICATION_XLTEXTURE_H_",
			"::stappler::xenolith::Texture",
			"::stappler::xenolith::Texture::~Texture()",
			"::stappler::xenolith::Texture::init(core::ImageData const*)",
			"::stappler::xenolith::Texture::init(core::ImageData const*,Rc<core::Resource> const&)",
			"::stappler::xenolith::Texture::init(core::ImageData const*,Rc<stappler::xenolith::TemporaryResource> const&)",
			"::stappler::xenolith::Texture::init(Rc<core::DynamicImage> const&)",
			"::stappler::xenolith::Texture::getName() const",
			"::stappler::xenolith::Texture::getIndex() const",
			"::stappler::xenolith::Texture::hasAlpha() const",
			"::stappler::xenolith::Texture::getExtent() const",
			"::stappler::xenolith::Texture::isLoaded() const",
			"::stappler::xenolith::Texture::getMaterialImage() const",
			"::stappler::xenolith::Texture::getImageData() const",
			"::stappler::xenolith::Texture::_data",
			"::stappler::xenolith::Texture::_dynamic"
		],
		"XLView.h":  [
			"XENOLITH_SCENE_DIRECTOR_XLVIEW_H_",
			"::stappler::xenolith::ViewInfo",
			"::stappler::xenolith::ViewInfo::name",
			"::stappler::xenolith::ViewInfo::bundleId",
			"::stappler::xenolith::ViewInfo::rect",
			"::stappler::xenolith::ViewInfo::decoration",
			"::stappler::xenolith::ViewInfo::frameInterval",
			"::stappler::xenolith::ViewInfo::density",
			"::stappler::xenolith::ViewInfo::selectConfig",
			"::stappler::xenolith::ViewInfo::onCreated",
			"::stappler::xenolith::ViewInfo::onClosed",
			"::stappler::xenolith::View",
			"::stappler::xenolith::View::FrameAverageCount",
			"::stappler::xenolith::View::AttachmentLayout",
			"::stappler::xenolith::View::ImageStorage",
			"::stappler::xenolith::View::FrameEmitter",
			"::stappler::xenolith::View::FrameRequest",
			"::stappler::xenolith::View::RenderQueue",
			"::stappler::xenolith::View::onFrameRate",
			"::stappler::xenolith::View::onBackground",
			"::stappler::xenolith::View::onFocus",
			"::stappler::xenolith::View::View()",
			"::stappler::xenolith::View::~View()",
			"::stappler::xenolith::View::init(stappler::xenolith::Application&,stappler::xenolith::ViewInfo&&)",
			"::stappler::xenolith::View::run()",
			"::stappler::xenolith::View::runWithQueue(Rc<core::Queue> const&)",
			"::stappler::xenolith::View::end()",
			"::stappler::xenolith::View::update(bool)",
			"::stappler::xenolith::View::close()",
			"::stappler::xenolith::View::performOnThread(Function<void ()>&&,stappler::mem_std::Ref*,bool)",
			"::stappler::xenolith::View::present(Rc<stappler::xenolith::View::ImageStorage>&&)",
			"::stappler::xenolith::View::presentImmediate(Rc<stappler::xenolith::View::ImageStorage>&&,Function<void (bool)>&&)",
			"::stappler::xenolith::View::invalidateTarget(Rc<stappler::xenolith::View::ImageStorage>&&)",
			"::stappler::xenolith::View::getSwapchainHandle() const",
			"::stappler::xenolith::View::captureImage(stappler::StringView,Rc<core::ImageObject> const&,stappler::xenolith::View::AttachmentLayout) const",
			"::stappler::xenolith::View::captureImage(Function<void (const core::ImageInfoData &, stappler::BytesView)>&&,Rc<core::ImageObject> const&,stappler::xenolith::View::AttachmentLayout) const",
			"::stappler::xenolith::View::getDirector() const",
			"::stappler::xenolith::View::getMainLoop() const",
			"::stappler::xenolith::View::getGlLoop() const",
			"::stappler::xenolith::View::handleInputEvent(stappler::xenolith::InputEventData const&)",
			"::stappler::xenolith::View::handleInputEvents(Vector<stappler::xenolith::InputEventData>&&)",
			"::stappler::xenolith::View::getSwapchainImageInfo() const",
			"::stappler::xenolith::View::getSwapchainImageInfo(core::SwapchainConfig const&) const",
			"::stappler::xenolith::View::getSwapchainImageViewInfo(core::ImageInfo const&) const",
			"::stappler::xenolith::View::getLastFrameInterval() const",
			"::stappler::xenolith::View::getAvgFrameInterval() const",
			"::stappler::xenolith::View::getLastFrameTime() const",
			"::stappler::xenolith::View::getAvgFrameTime() const",
			"::stappler::xenolith::View::getAvgFenceTime() const",
			"::stappler::xenolith::View::getFrameContraints() const",
			"::stappler::xenolith::View::getExtent() const",
			"::stappler::xenolith::View::hasFocus() const",
			"::stappler::xenolith::View::isInBackground() const",
			"::stappler::xenolith::View::isPointerWithinWindow() const",
			"::stappler::xenolith::View::getFrameInterval() const",
			"::stappler::xenolith::View::setFrameInterval(uint64_t)",
			"::stappler::xenolith::View::setReadyForNextFrame()",
			"::stappler::xenolith::View::retainBackButton()",
			"::stappler::xenolith::View::releaseBackButton()",
			"::stappler::xenolith::View::getBackButtonCounter() const",
			"::stappler::xenolith::View::setDecorationTone(float)",
			"::stappler::xenolith::View::setDecorationVisible(bool)",
			"::stappler::xenolith::View::retainView()",
			"::stappler::xenolith::View::releaseView(uint64_t)",
			"::stappler::xenolith::View::setContentPadding(stappler::xenolith::Padding const&)",
			"::stappler::xenolith::View::wakeup()",
			"::stappler::xenolith::View::_constraints",
			"::stappler::xenolith::View::_inBackground",
			"::stappler::xenolith::View::_hasFocus",
			"::stappler::xenolith::View::_pointerInWindow",
			"::stappler::xenolith::View::_threadStarted",
			"::stappler::xenolith::View::_navigationEmpty",
			"::stappler::xenolith::View::_init",
			"::stappler::xenolith::View::_running",
			"::stappler::xenolith::View::_director",
			"::stappler::xenolith::View::_mainLoop",
			"::stappler::xenolith::View::_glLoop",
			"::stappler::xenolith::View::_frameEmitter",
			"::stappler::xenolith::View::_info",
			"::stappler::xenolith::View::_gen",
			"::stappler::xenolith::View::_config",
			"::stappler::xenolith::View::_thread",
			"::stappler::xenolith::View::_threadId",
			"::stappler::xenolith::View::_shouldQuit",
			"::stappler::xenolith::View::_mutex",
			"::stappler::xenolith::View::_callbacks",
			"::stappler::xenolith::View::_frameIntervalMutex",
			"::stappler::xenolith::View::_lastFrameStart",
			"::stappler::xenolith::View::_lastFrameInterval",
			"::stappler::xenolith::View::_avgFrameInterval",
			"::stappler::xenolith::View::_avgFrameIntervalValue",
			"::stappler::xenolith::View::_backButtonCounter"
		],
		"XLViewCommandLine.h":  [
			"XENOLITH_PLATFORM_XLVIEWCOMMANDLINE_H_",
			"::stappler::xenolith::ViewCommandLineData",
			"::stappler::xenolith::ViewCommandLineData::bundleName",
			"::stappler::xenolith::ViewCommandLineData::applicationName",
			"::stappler::xenolith::ViewCommandLineData::applicationVersion",
			"::stappler::xenolith::ViewCommandLineData::userLanguage",
			"::stappler::xenolith::ViewCommandLineData::userAgent",
			"::stappler::xenolith::ViewCommandLineData::launchUrl",
			"::stappler::xenolith::ViewCommandLineData::screenSize",
			"::stappler::xenolith::ViewCommandLineData::viewDecoration",
			"::stappler::xenolith::ViewCommandLineData::density",
			"::stappler::xenolith::ViewCommandLineData::isPhone",
			"::stappler::xenolith::ViewCommandLineData::isFixed",
			"::stappler::xenolith::ViewCommandLineData::renderdoc",
			"::stappler::xenolith::ViewCommandLineData::validation",
			"::stappler::xenolith::ViewCommandLineData::verbose",
			"::stappler::xenolith::ViewCommandLineData::help",
			"::stappler::xenolith::ViewCommandLineData::encode() const",
			"::stappler::xenolith::parseViewCommandLineSwitch(stappler::xenolith::ViewCommandLineData&,char,char const*)",
			"::stappler::xenolith::parseViewCommandLineString(stappler::xenolith::ViewCommandLineData&,stappler::StringView const&,int,char const*[])"
		],
		"XLVk.h":  [
			"XENOLITH_BACKEND_VK_XLVK_H_",
			"VK_USE_PLATFORM_XCB_KHR",
			"VK_USE_PLATFORM_WAYLAND_KHR",
			"VK_BUFFER_USAGE_RAY_TRACING_BIT_KHR",
			"VK_BUFFER_USAGE_RAY_TRACING_BIT_NV",
			"::stappler::xenolith::vk::s_enableValidationLayers",
			"::stappler::xenolith::vk::s_printVkInfo",
			"::stappler::xenolith::vk::s_validationLayers",
			"XL_VK_MIN_LOADER_MESSAGE_SEVERITY",
			"XL_VK_MIN_MESSAGE_SEVERITY",
			"VK_HOOK_DEBUG",
			"XL_VK_FINALIZE_INVALID_FRAMES",
			"::stappler::xenolith::vk::BufferInfo",
			"::stappler::xenolith::vk::ImageInfo",
			"::stappler::xenolith::vk::ImageInfoData",
			"::stappler::xenolith::vk::ImageViewInfo",
			"::stappler::xenolith::vk::SamplerInfo",
			"::stappler::xenolith::vk::s_requiredExtension",
			"::stappler::xenolith::vk::s_optionalExtension",
			"::stappler::xenolith::vk::s_requiredDeviceExtensions",
			"::stappler::xenolith::vk::s_optionalDeviceExtensions",
			"::stappler::xenolith::vk::ExtensionFlags",
			"::stappler::xenolith::vk::operator|(stappler::xenolith::vk::ExtensionFlags const&,stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::operator&(stappler::xenolith::vk::ExtensionFlags const&,stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::operator^(stappler::xenolith::vk::ExtensionFlags const&,stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::operator|=(stappler::xenolith::vk::ExtensionFlags&,stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::operator&=(stappler::xenolith::vk::ExtensionFlags&,stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::operator^=(stappler::xenolith::vk::ExtensionFlags&,stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::operator==(stappler::xenolith::vk::ExtensionFlags const&,std::underlying_type<ExtensionFlags>::type const&)",
			"::stappler::xenolith::vk::operator==(std::underlying_type<ExtensionFlags>::type const&,stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::operator!=(stappler::xenolith::vk::ExtensionFlags const&,std::underlying_type<ExtensionFlags>::type const&)",
			"::stappler::xenolith::vk::operator!=(std::underlying_type<ExtensionFlags>::type const&,stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::operator~(stappler::xenolith::vk::ExtensionFlags const&)",
			"::stappler::xenolith::vk::s_promotedVk11Extensions",
			"::stappler::xenolith::vk::s_promotedVk12Extensions",
			"::stappler::xenolith::vk::s_promotedVk13Extensions",
			"::stappler::xenolith::vk::QueueOperations",
			"::stappler::xenolith::vk::operator|(stappler::xenolith::vk::QueueOperations const&,stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::operator&(stappler::xenolith::vk::QueueOperations const&,stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::operator^(stappler::xenolith::vk::QueueOperations const&,stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::operator|=(stappler::xenolith::vk::QueueOperations&,stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::operator&=(stappler::xenolith::vk::QueueOperations&,stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::operator^=(stappler::xenolith::vk::QueueOperations&,stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::operator==(stappler::xenolith::vk::QueueOperations const&,std::underlying_type<QueueOperations>::type const&)",
			"::stappler::xenolith::vk::operator==(std::underlying_type<QueueOperations>::type const&,stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::operator!=(stappler::xenolith::vk::QueueOperations const&,std::underlying_type<QueueOperations>::type const&)",
			"::stappler::xenolith::vk::operator!=(std::underlying_type<QueueOperations>::type const&,stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::operator~(stappler::xenolith::vk::QueueOperations const&)",
			"::stappler::xenolith::vk::PresentationEvent",
			"::stappler::xenolith::vk::getQueueOperations(VkQueueFlags,bool)",
			"::stappler::xenolith::vk::getQueueOperations(core::PassType)",
			"::stappler::xenolith::vk::getQueueOperationsDesc(stappler::xenolith::vk::QueueOperations)",
			"::stappler::xenolith::vk::getVkStageBits(core::ProgramStage)",
			"::stappler::xenolith::vk::getVkFormatName(VkFormat)",
			"::stappler::xenolith::vk::getVkColorSpaceName(VkColorSpaceKHR)",
			"::stappler::xenolith::vk::getVkResultName(VkResult)",
			"::stappler::xenolith::vk::getVkMemoryPropertyFlags(VkMemoryPropertyFlags)",
			"::stappler::xenolith::vk::checkIfExtensionAvailable(uint32_t,char const*,Vector<VkExtensionProperties> const&,Vector<stappler::StringView>&,Vector<stappler::StringView>&,stappler::xenolith::vk::ExtensionFlags&)",
			"::stappler::xenolith::vk::isPromotedExtension(uint32_t,stappler::StringView)",
			"::stappler::xenolith::vk::getFormatBlockSize(VkFormat)",
			"::stappler::xenolith::vk::getVkPresentMode(core::PresentMode)",
			"::stappler::xenolith::vk::sanitizeVkStruct<typename>(T&)",
			"::operator<<(std::ostream&,VkResult)"
		],
		"XLVkAllocator.h":  [
			"XENOLITH_BACKEND_VK_XLVKALLOCATOR_H_",
			"::stappler::xenolith::vk::AllocationUsage",
			"::stappler::xenolith::vk::AllocationType",
			"::stappler::xenolith::vk::MemoryRequirements",
			"::stappler::xenolith::vk::MemoryRequirements::requirements",
			"::stappler::xenolith::vk::MemoryRequirements::targetOffset",
			"::stappler::xenolith::vk::MemoryRequirements::prefersDedicated",
			"::stappler::xenolith::vk::MemoryRequirements::requiresDedicated",
			"::stappler::xenolith::vk::Allocator",
			"::stappler::xenolith::vk::Allocator::PageSize",
			"::stappler::xenolith::vk::Allocator::MaxIndex",
			"::stappler::xenolith::vk::Allocator::PreservePages",
			"::stappler::xenolith::vk::Allocator::MemHeapType",
			"::stappler::xenolith::vk::Allocator::MemNode",
			"::stappler::xenolith::vk::Allocator::MemNode::index",
			"::stappler::xenolith::vk::Allocator::MemNode::mem",
			"::stappler::xenolith::vk::Allocator::MemNode::size",
			"::stappler::xenolith::vk::Allocator::MemNode::offset",
			"::stappler::xenolith::vk::Allocator::MemNode::lastAllocation",
			"::stappler::xenolith::vk::Allocator::MemNode::ptr",
			"::stappler::xenolith::vk::Allocator::MemNode::operator bool() const",
			"::stappler::xenolith::vk::Allocator::MemNode::getFreeSpace() const",
			"::stappler::xenolith::vk::Allocator::MemBlock",
			"::stappler::xenolith::vk::Allocator::MemBlock::mem",
			"::stappler::xenolith::vk::Allocator::MemBlock::offset",
			"::stappler::xenolith::vk::Allocator::MemBlock::size",
			"::stappler::xenolith::vk::Allocator::MemBlock::type",
			"::stappler::xenolith::vk::Allocator::MemBlock::ptr",
			"::stappler::xenolith::vk::Allocator::MemBlock::operator bool() const",
			"::stappler::xenolith::vk::Allocator::MemType",
			"::stappler::xenolith::vk::Allocator::MemType::idx",
			"::stappler::xenolith::vk::Allocator::MemType::type",
			"::stappler::xenolith::vk::Allocator::MemType::min",
			"::stappler::xenolith::vk::Allocator::MemType::last",
			"::stappler::xenolith::vk::Allocator::MemType::max",
			"::stappler::xenolith::vk::Allocator::MemType::current",
			"::stappler::xenolith::vk::Allocator::MemType::buf",
			"::stappler::xenolith::vk::Allocator::MemType::isDeviceLocal() const",
			"::stappler::xenolith::vk::Allocator::MemType::isHostVisible() const",
			"::stappler::xenolith::vk::Allocator::MemType::isHostCoherent() const",
			"::stappler::xenolith::vk::Allocator::MemType::isHostCached() const",
			"::stappler::xenolith::vk::Allocator::MemType::isLazilyAllocated() const",
			"::stappler::xenolith::vk::Allocator::MemType::isProtected() const",
			"::stappler::xenolith::vk::Allocator::MemHeap",
			"::stappler::xenolith::vk::Allocator::MemHeap::idx",
			"::stappler::xenolith::vk::Allocator::MemHeap::heap",
			"::stappler::xenolith::vk::Allocator::MemHeap::types",
			"::stappler::xenolith::vk::Allocator::MemHeap::type",
			"::stappler::xenolith::vk::Allocator::MemHeap::budget",
			"::stappler::xenolith::vk::Allocator::MemHeap::usage",
			"::stappler::xenolith::vk::Allocator::MemHeap::currentUsage",
			"::stappler::xenolith::vk::Allocator::~Allocator()",
			"::stappler::xenolith::vk::Allocator::init(stappler::xenolith::vk::Device&,VkPhysicalDevice,DeviceInfo::Features const&,DeviceInfo::Properties const&)",
			"::stappler::xenolith::vk::Allocator::invalidate(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::Allocator::update()",
			"::stappler::xenolith::vk::Allocator::getInitialTypeMask() const",
			"::stappler::xenolith::vk::Allocator::getMemHeaps() const",
			"::stappler::xenolith::vk::Allocator::getDevice() const",
			"::stappler::xenolith::vk::Allocator::hasBudgetFeature() const",
			"::stappler::xenolith::vk::Allocator::hasMemReq2Feature() const",
			"::stappler::xenolith::vk::Allocator::hasDedicatedFeature() const",
			"::stappler::xenolith::vk::Allocator::getBufferImageGranularity() const",
			"::stappler::xenolith::vk::Allocator::getNonCoherentAtomSize() const",
			"::stappler::xenolith::vk::Allocator::getType(uint32_t) const",
			"::stappler::xenolith::vk::Allocator::findMemoryType(uint32_t,stappler::xenolith::vk::AllocationUsage) const",
			"::stappler::xenolith::vk::Allocator::getBufferMemoryRequirements(VkBuffer)",
			"::stappler::xenolith::vk::Allocator::getImageMemoryRequirements(VkImage)",
			"::stappler::xenolith::vk::Allocator::spawnPersistent(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::BufferInfo const&,stappler::BytesView)",
			"::stappler::xenolith::vk::Allocator::spawnPersistent(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::ImageInfoData const&,bool,uint64_t)",
			"::stappler::xenolith::vk::Allocator::preallocate(stappler::xenolith::vk::BufferInfo const&,stappler::BytesView)",
			"::stappler::xenolith::vk::Allocator::preallocate(stappler::xenolith::vk::ImageInfoData const&,bool,uint64_t)",
			"::stappler::xenolith::vk::Allocator::emplaceObjects(stappler::xenolith::vk::AllocationUsage,SpanView<Rc<stappler::xenolith::vk::Image>>,SpanView<Rc<stappler::xenolith::vk::Buffer>>)",
			"::stappler::xenolith::vk::Allocator::lock()",
			"::stappler::xenolith::vk::Allocator::unlock()",
			"::stappler::xenolith::vk::Allocator::alloc(stappler::xenolith::vk::Allocator::MemType*,uint64_t,bool)",
			"::stappler::xenolith::vk::Allocator::free(stappler::xenolith::vk::Allocator::MemType*,SpanView<stappler::xenolith::vk::Allocator::MemNode>)",
			"::stappler::xenolith::vk::Allocator::allocateDedicated(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::Buffer*)",
			"::stappler::xenolith::vk::Allocator::allocateDedicated(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::Image*)",
			"::stappler::xenolith::vk::Allocator::_mutex",
			"::stappler::xenolith::vk::Allocator::_physicalDevice",
			"::stappler::xenolith::vk::Allocator::_device",
			"::stappler::xenolith::vk::Allocator::_memBudget",
			"::stappler::xenolith::vk::Allocator::_memProperties",
			"::stappler::xenolith::vk::Allocator::_memHeaps",
			"::stappler::xenolith::vk::Allocator::_memTypes",
			"::stappler::xenolith::vk::Allocator::_bufferImageGranularity",
			"::stappler::xenolith::vk::Allocator::_nonCoherentAtomSize",
			"::stappler::xenolith::vk::Allocator::_hasBudget",
			"::stappler::xenolith::vk::Allocator::_hasMemReq2",
			"::stappler::xenolith::vk::Allocator::_hasDedicated",
			"::stappler::xenolith::vk::DeviceMemoryPool",
			"::stappler::xenolith::vk::DeviceMemoryPool::MemData",
			"::stappler::xenolith::vk::DeviceMemoryPool::MemData::type",
			"::stappler::xenolith::vk::DeviceMemoryPool::MemData::mem",
			"::stappler::xenolith::vk::DeviceMemoryPool::MemData::freed",
			"::stappler::xenolith::vk::DeviceMemoryPool::~DeviceMemoryPool()",
			"::stappler::xenolith::vk::DeviceMemoryPool::init(Rc<stappler::xenolith::vk::Allocator> const&,bool)",
			"::stappler::xenolith::vk::DeviceMemoryPool::spawn(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::BufferInfo const&)",
			"::stappler::xenolith::vk::DeviceMemoryPool::spawnPersistent(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::BufferInfo const&)",
			"::stappler::xenolith::vk::DeviceMemoryPool::getDevice() const",
			"::stappler::xenolith::vk::DeviceMemoryPool::getAllocator() const",
			"::stappler::xenolith::vk::DeviceMemoryPool::getMutex()",
			"::stappler::xenolith::vk::DeviceMemoryPool::alloc(stappler::xenolith::vk::DeviceMemoryPool::MemData*,VkDeviceSize,VkDeviceSize,stappler::xenolith::vk::AllocationType,stappler::xenolith::vk::AllocationUsage)",
			"::stappler::xenolith::vk::DeviceMemoryPool::free(Allocator::MemBlock&&)",
			"::stappler::xenolith::vk::DeviceMemoryPool::clear(stappler::xenolith::vk::DeviceMemoryPool::MemData*)",
			"::stappler::xenolith::vk::DeviceMemoryPool::_mutex",
			"::stappler::xenolith::vk::DeviceMemoryPool::_persistentMapping",
			"::stappler::xenolith::vk::DeviceMemoryPool::_allocator",
			"::stappler::xenolith::vk::DeviceMemoryPool::_heaps",
			"::stappler::xenolith::vk::DeviceMemoryPool::_buffers",
			"::std::operator<<(std::ostream&,stappler::xenolith::vk::AllocationUsage)"
		],
		"XLVkAttachment.h":  [
			"XENOLITH_BACKEND_VK_XLVKATTACHMENT_H_",
			"::stappler::xenolith::vk::BufferAttachment",
			"::stappler::xenolith::vk::BufferAttachment::~BufferAttachment()",
			"::stappler::xenolith::vk::ImageAttachment",
			"::stappler::xenolith::vk::ImageAttachment::~ImageAttachment()",
			"::stappler::xenolith::vk::ImageAttachment::makeFrameHandle(stappler::xenolith::core::Attachment::FrameQueue const&)",
			"::stappler::xenolith::vk::BufferAttachmentHandle",
			"::stappler::xenolith::vk::BufferAttachmentHandle::~BufferAttachmentHandle()",
			"::stappler::xenolith::vk::BufferAttachmentHandle::writeDescriptor(core::QueuePassHandle const&,stappler::xenolith::vk::DescriptorBufferInfo&)",
			"::stappler::xenolith::vk::ImageAttachmentHandle",
			"::stappler::xenolith::vk::ImageAttachmentHandle::~ImageAttachmentHandle()",
			"::stappler::xenolith::vk::ImageAttachmentHandle::getImage() const",
			"::stappler::xenolith::vk::ImageAttachmentHandle::writeDescriptor(core::QueuePassHandle const&,stappler::xenolith::vk::DescriptorImageInfo&)",
			"::stappler::xenolith::vk::ImageAttachmentHandle::isDescriptorDirty(stappler::xenolith::core::AttachmentHandle::PassHandle const&,stappler::xenolith::vk::PipelineDescriptor const&,uint32_t,bool) const",
			"::stappler::xenolith::vk::TexelAttachmentHandle",
			"::stappler::xenolith::vk::TexelAttachmentHandle::~TexelAttachmentHandle()",
			"::stappler::xenolith::vk::TexelAttachmentHandle::writeDescriptor(core::QueuePassHandle const&,stappler::xenolith::vk::DescriptorBufferViewInfo&)"
		],
		"XLVkBuffer.h":  [
			"XENOLITH_BACKEND_VK_XLVKBUFFER_H_",
			"::stappler::xenolith::vk::DeviceBuffer",
			"::stappler::xenolith::vk::DeviceBuffer::MappedRegion",
			"::stappler::xenolith::vk::DeviceBuffer::MappedRegion::ptr",
			"::stappler::xenolith::vk::DeviceBuffer::MappedRegion::offset",
			"::stappler::xenolith::vk::DeviceBuffer::MappedRegion::size",
			"::stappler::xenolith::vk::DeviceBuffer::~DeviceBuffer()",
			"::stappler::xenolith::vk::DeviceBuffer::init(stappler::xenolith::vk::DeviceMemoryPool*,VkBuffer,Allocator::MemBlock&&,stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::BufferInfo const&)",
			"::stappler::xenolith::vk::DeviceBuffer::invalidate(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::DeviceBuffer::setData(stappler::BytesView,VkDeviceSize)",
			"::stappler::xenolith::vk::DeviceBuffer::getData(VkDeviceSize,VkDeviceSize)",
			"::stappler::xenolith::vk::DeviceBuffer::map(VkDeviceSize,VkDeviceSize,bool)",
			"::stappler::xenolith::vk::DeviceBuffer::unmap(stappler::xenolith::vk::DeviceBuffer::MappedRegion const&,bool)",
			"::stappler::xenolith::vk::DeviceBuffer::getBuffer() const",
			"::stappler::xenolith::vk::DeviceBuffer::getSize() const",
			"::stappler::xenolith::vk::DeviceBuffer::getUsage() const",
			"::stappler::xenolith::vk::DeviceBuffer::reserveBlock(uint64_t,uint64_t)",
			"::stappler::xenolith::vk::DeviceBuffer::getReservedSize() const",
			"::stappler::xenolith::vk::DeviceBuffer::_targetOffset",
			"::stappler::xenolith::vk::DeviceBuffer::_usage",
			"::stappler::xenolith::vk::DeviceBuffer::_memory",
			"::stappler::xenolith::vk::DeviceBuffer::_needInvalidate"
		],
		"XLVkConfig.h":  [
			"XENOLITH_BACKEND_VK_XLVKCONFIG_H_",
			"::stappler::xenolith::config::MaxTextureSetImages",
			"::stappler::xenolith::config::MaxBufferArrayObjects"
		],
		"XLVkDevice.h":  [
			"XENOLITH_BACKEND_VK_XLVKDEVICE_H_",
			"::stappler::xenolith::vk::DeviceFrameHandle",
			"::stappler::xenolith::vk::DeviceFrameHandle::~DeviceFrameHandle()",
			"::stappler::xenolith::vk::DeviceFrameHandle::init(stappler::xenolith::vk::Loop&,stappler::xenolith::vk::Device&,Rc<stappler::xenolith::core::FrameHandle::FrameRequest>&&,uint64_t)",
			"::stappler::xenolith::vk::DeviceFrameHandle::getAllocator() const",
			"::stappler::xenolith::vk::DeviceFrameHandle::getMemPool(void*)",
			"::stappler::xenolith::vk::DeviceFrameHandle::_allocator",
			"::stappler::xenolith::vk::DeviceFrameHandle::_mutex",
			"::stappler::xenolith::vk::DeviceFrameHandle::_memPools",
			"::stappler::xenolith::vk::Device",
			"::stappler::xenolith::vk::Device::Features",
			"::stappler::xenolith::vk::Device::Properties",
			"::stappler::xenolith::vk::Device::FrameHandle",
			"::stappler::xenolith::vk::Device::Device()",
			"::stappler::xenolith::vk::Device::~Device()",
			"::stappler::xenolith::vk::Device::init(vk::Instance const*,stappler::xenolith::vk::DeviceInfo&&,stappler::xenolith::vk::Device::Features const&,Vector<stappler::StringView> const&)",
			"::stappler::xenolith::vk::Device::getInstance() const",
			"::stappler::xenolith::vk::Device::getDevice() const",
			"::stappler::xenolith::vk::Device::getPhysicalDevice() const",
			"::stappler::xenolith::vk::Device::begin(stappler::xenolith::vk::Loop&,thread::TaskQueue&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::Device::end()",
			"::stappler::xenolith::vk::Device::getInfo() const",
			"::stappler::xenolith::vk::Device::getTable() const",
			"::stappler::xenolith::vk::Device::getAllocator() const",
			"::stappler::xenolith::vk::Device::getQueueFamily(uint32_t) const",
			"::stappler::xenolith::vk::Device::getQueueFamily(stappler::xenolith::vk::QueueOperations) const",
			"::stappler::xenolith::vk::Device::getQueueFamily(core::PassType) const",
			"::stappler::xenolith::vk::Device::getQueueFamilies() const",
			"::stappler::xenolith::vk::Device::acquireQueue(stappler::xenolith::vk::QueueOperations,stappler::xenolith::vk::Device::FrameHandle&,Function<void (stappler::xenolith::vk::Device::FrameHandle &, const Rc<stappler::xenolith::vk::DeviceQueue> &)>&&,Function<void (stappler::xenolith::vk::Device::FrameHandle &)>&&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::vk::Device::acquireQueue(stappler::xenolith::vk::QueueOperations,stappler::xenolith::vk::Loop&,Function<void (stappler::xenolith::vk::Loop &, const Rc<stappler::xenolith::vk::DeviceQueue> &)>&&,Function<void (stappler::xenolith::vk::Loop &)>&&,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::vk::Device::releaseQueue(Rc<stappler::xenolith::vk::DeviceQueue>&&)",
			"::stappler::xenolith::vk::Device::tryAcquireQueueSync(stappler::xenolith::vk::QueueOperations,bool)",
			"::stappler::xenolith::vk::Device::acquireCommandPool(stappler::xenolith::vk::QueueOperations,uint32_t)",
			"::stappler::xenolith::vk::Device::acquireCommandPool(uint32_t)",
			"::stappler::xenolith::vk::Device::releaseCommandPool(core::Loop&,Rc<stappler::xenolith::vk::CommandPool>&&)",
			"::stappler::xenolith::vk::Device::releaseCommandPoolUnsafe(Rc<stappler::xenolith::vk::CommandPool>&&)",
			"::stappler::xenolith::vk::Device::getTextureSetLayout() const",
			"::stappler::xenolith::vk::Device::emplaceConstant(core::PredefinedConstant,stappler::mem_std::Bytes&) const",
			"::stappler::xenolith::vk::Device::supportsUpdateAfterBind(stappler::xenolith::core::Device::DescriptorType) const",
			"::stappler::xenolith::vk::Device::getEmptyImageObject() const",
			"::stappler::xenolith::vk::Device::getSolidImageObject() const",
			"::stappler::xenolith::vk::Device::makeFramebuffer(core::QueuePassData const*,SpanView<Rc<core::ImageView>>)",
			"::stappler::xenolith::vk::Device::makeImage(stappler::xenolith::vk::ImageInfoData const&)",
			"::stappler::xenolith::vk::Device::makeSemaphore()",
			"::stappler::xenolith::vk::Device::makeImageView(Rc<core::ImageObject> const&,stappler::xenolith::vk::ImageViewInfo const&)",
			"::stappler::xenolith::vk::Device::makeApiCall<typename>(Callback const&)",
			"::stappler::xenolith::vk::Device::hasNonSolidFillMode() const",
			"::stappler::xenolith::vk::Device::hasDynamicIndexedBuffers() const",
			"::stappler::xenolith::vk::Device::waitIdle() const",
			"::stappler::xenolith::vk::Device::compileImage(stappler::xenolith::vk::Loop const&,Rc<core::DynamicImage> const&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::Device::compileSamplers(thread::TaskQueue&,bool)",
			"::stappler::xenolith::vk::Device::setup(stappler::xenolith::vk::Instance const*,VkPhysicalDevice,stappler::xenolith::vk::Device::Properties const&,Vector<stappler::xenolith::vk::DeviceQueueFamily> const&,stappler::xenolith::vk::Device::Features const&,Vector<stappler::StringView> const&)",
			"::stappler::xenolith::vk::Device::_vkInstance",
			"::stappler::xenolith::vk::Device::_table",
			"::stappler::xenolith::vk::Device::_device",
			"::stappler::xenolith::vk::Device::_info",
			"::stappler::xenolith::vk::Device::_enabledFeatures",
			"::stappler::xenolith::vk::Device::_allocator",
			"::stappler::xenolith::vk::Device::_textureSetLayout",
			"::stappler::xenolith::vk::Device::_families",
			"::stappler::xenolith::vk::Device::_finished",
			"::stappler::xenolith::vk::Device::_immutableSamplers",
			"::stappler::xenolith::vk::Device::_samplers",
			"::stappler::xenolith::vk::Device::_compiledSamplers",
			"::stappler::xenolith::vk::Device::_samplersCompiled",
			"::stappler::xenolith::vk::Device::_formats",
			"::stappler::xenolith::vk::Device::_resourceMutex",
			"::stappler::xenolith::vk::Device::_resourceQueueWaiters",
			"::stappler::xenolith::vk::Device::_resourceQueueCond",
			"::stappler::xenolith::vk::Device::_apiMutex"
		],
		"XLVkDeviceQueue.h":  [
			"XENOLITH_BACKEND_VK_XLVKDEVICEQUEUE_H_",
			"::stappler::xenolith::vk::PipelineDescriptor",
			"::stappler::xenolith::vk::DeviceQueueFamily",
			"::stappler::xenolith::vk::DeviceQueueFamily::FrameHandle",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::acquireForLoop",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::releaseForLoop",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::acquireForFrame",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::releaseForFrame",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::handle",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::loop",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::ref",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::Waiter(Function<void (stappler::xenolith::vk::DeviceQueueFamily::FrameHandle &, const Rc<stappler::xenolith::vk::DeviceQueue> &)>&&,Function<void (stappler::xenolith::vk::DeviceQueueFamily::FrameHandle &)>&&,stappler::xenolith::vk::DeviceQueueFamily::FrameHandle*,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::Waiter(Function<void (stappler::xenolith::vk::Loop &, const Rc<stappler::xenolith::vk::DeviceQueue> &)>&&,Function<void (stappler::xenolith::vk::Loop &)>&&,stappler::xenolith::vk::Loop*,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::vk::DeviceQueueFamily::index",
			"::stappler::xenolith::vk::DeviceQueueFamily::count",
			"::stappler::xenolith::vk::DeviceQueueFamily::preferred",
			"::stappler::xenolith::vk::DeviceQueueFamily::ops",
			"::stappler::xenolith::vk::DeviceQueueFamily::transferGranularity",
			"::stappler::xenolith::vk::DeviceQueueFamily::queues",
			"::stappler::xenolith::vk::DeviceQueueFamily::pools",
			"::stappler::xenolith::vk::DeviceQueueFamily::waiters",
			"::stappler::xenolith::vk::DeviceQueue",
			"::stappler::xenolith::vk::DeviceQueue::FrameSync",
			"::stappler::xenolith::vk::DeviceQueue::FrameHandle",
			"::stappler::xenolith::vk::DeviceQueue::~DeviceQueue()",
			"::stappler::xenolith::vk::DeviceQueue::init(stappler::xenolith::vk::Device&,VkQueue,uint32_t,stappler::xenolith::vk::QueueOperations)",
			"::stappler::xenolith::vk::DeviceQueue::submit(stappler::xenolith::vk::DeviceQueue::FrameSync const&,stappler::xenolith::vk::Fence&,stappler::xenolith::vk::CommandPool&,SpanView<const stappler::xenolith::vk::CommandBuffer *>)",
			"::stappler::xenolith::vk::DeviceQueue::submit(stappler::xenolith::vk::Fence&,stappler::xenolith::vk::CommandBuffer const*)",
			"::stappler::xenolith::vk::DeviceQueue::submit(stappler::xenolith::vk::Fence&,SpanView<const stappler::xenolith::vk::CommandBuffer *>)",
			"::stappler::xenolith::vk::DeviceQueue::waitIdle()",
			"::stappler::xenolith::vk::DeviceQueue::getActiveFencesCount()",
			"::stappler::xenolith::vk::DeviceQueue::retainFence(stappler::xenolith::vk::Fence const&)",
			"::stappler::xenolith::vk::DeviceQueue::releaseFence(stappler::xenolith::vk::Fence const&)",
			"::stappler::xenolith::vk::DeviceQueue::getIndex() const",
			"::stappler::xenolith::vk::DeviceQueue::getFrameIndex() const",
			"::stappler::xenolith::vk::DeviceQueue::getQueue() const",
			"::stappler::xenolith::vk::DeviceQueue::getOps() const",
			"::stappler::xenolith::vk::DeviceQueue::getResult() const",
			"::stappler::xenolith::vk::DeviceQueue::setOwner(stappler::xenolith::vk::DeviceQueue::FrameHandle&)",
			"::stappler::xenolith::vk::DeviceQueue::reset()",
			"::stappler::xenolith::vk::DeviceQueue::_device",
			"::stappler::xenolith::vk::DeviceQueue::_index",
			"::stappler::xenolith::vk::DeviceQueue::_frameIdx",
			"::stappler::xenolith::vk::DeviceQueue::_ops",
			"::stappler::xenolith::vk::DeviceQueue::_queue",
			"::stappler::xenolith::vk::DeviceQueue::_nfences",
			"::stappler::xenolith::vk::DeviceQueue::_result",
			"::stappler::xenolith::vk::BufferLevel",
			"::stappler::xenolith::vk::QueueFamilyTransfer",
			"::stappler::xenolith::vk::QueueFamilyTransfer::srcQueueFamilyIndex",
			"::stappler::xenolith::vk::QueueFamilyTransfer::dstQueueFamilyIndex",
			"::stappler::xenolith::vk::ImageMemoryBarrier",
			"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier()",
			"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(stappler::xenolith::vk::Image*,VkAccessFlags,VkAccessFlags,VkImageLayout,VkImageLayout)",
			"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(stappler::xenolith::vk::Image*,VkAccessFlags,VkAccessFlags,VkImageLayout,VkImageLayout,VkImageSubresourceRange)",
			"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(stappler::xenolith::vk::Image*,VkAccessFlags,VkAccessFlags,VkImageLayout,VkImageLayout,stappler::xenolith::vk::QueueFamilyTransfer)",
			"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(stappler::xenolith::vk::Image*,VkAccessFlags,VkAccessFlags,VkImageLayout,VkImageLayout,stappler::xenolith::vk::QueueFamilyTransfer,VkImageSubresourceRange)",
			"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(VkImageMemoryBarrier const&)",
			"::stappler::xenolith::vk::ImageMemoryBarrier::srcAccessMask",
			"::stappler::xenolith::vk::ImageMemoryBarrier::dstAccessMask",
			"::stappler::xenolith::vk::ImageMemoryBarrier::oldLayout",
			"::stappler::xenolith::vk::ImageMemoryBarrier::newLayout",
			"::stappler::xenolith::vk::ImageMemoryBarrier::familyTransfer",
			"::stappler::xenolith::vk::ImageMemoryBarrier::image",
			"::stappler::xenolith::vk::ImageMemoryBarrier::subresourceRange",
			"::stappler::xenolith::vk::BufferMemoryBarrier",
			"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier()",
			"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier(stappler::xenolith::vk::Buffer*,VkAccessFlags,VkAccessFlags)",
			"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier(stappler::xenolith::vk::Buffer*,VkAccessFlags,VkAccessFlags,stappler::xenolith::vk::QueueFamilyTransfer)",
			"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier(stappler::xenolith::vk::Buffer*,VkAccessFlags,VkAccessFlags,stappler::xenolith::vk::QueueFamilyTransfer,VkDeviceSize,VkDeviceSize)",
			"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier(VkBufferMemoryBarrier const&)",
			"::stappler::xenolith::vk::BufferMemoryBarrier::srcAccessMask",
			"::stappler::xenolith::vk::BufferMemoryBarrier::dstAccessMask",
			"::stappler::xenolith::vk::BufferMemoryBarrier::familyTransfer",
			"::stappler::xenolith::vk::BufferMemoryBarrier::buffer",
			"::stappler::xenolith::vk::BufferMemoryBarrier::offset",
			"::stappler::xenolith::vk::BufferMemoryBarrier::size",
			"::stappler::xenolith::vk::DescriptorInfo",
			"::stappler::xenolith::vk::DescriptorInfo::DescriptorInfo(stappler::xenolith::vk::PipelineDescriptor const*,uint32_t,bool)",
			"::stappler::xenolith::vk::DescriptorInfo::descriptor",
			"::stappler::xenolith::vk::DescriptorInfo::index",
			"::stappler::xenolith::vk::DescriptorInfo::external",
			"::stappler::xenolith::vk::DescriptorImageInfo",
			"::stappler::xenolith::vk::DescriptorImageInfo::DescriptorImageInfo(stappler::xenolith::vk::PipelineDescriptor const*,uint32_t,bool)",
			"::stappler::xenolith::vk::DescriptorImageInfo::imageView",
			"::stappler::xenolith::vk::DescriptorImageInfo::sampler",
			"::stappler::xenolith::vk::DescriptorImageInfo::layout",
			"::stappler::xenolith::vk::DescriptorBufferInfo",
			"::stappler::xenolith::vk::DescriptorBufferInfo::DescriptorBufferInfo(stappler::xenolith::vk::PipelineDescriptor const*,uint32_t,bool)",
			"::stappler::xenolith::vk::DescriptorBufferInfo::buffer",
			"::stappler::xenolith::vk::DescriptorBufferInfo::offset",
			"::stappler::xenolith::vk::DescriptorBufferInfo::range",
			"::stappler::xenolith::vk::DescriptorBufferViewInfo",
			"::stappler::xenolith::vk::DescriptorBufferViewInfo::DescriptorBufferViewInfo(stappler::xenolith::vk::PipelineDescriptor const*,uint32_t,bool)",
			"::stappler::xenolith::vk::DescriptorBufferViewInfo::buffer",
			"::stappler::xenolith::vk::DescriptorBufferViewInfo::target",
			"::stappler::xenolith::vk::CommandBuffer",
			"::stappler::xenolith::vk::CommandBuffer::~CommandBuffer()",
			"::stappler::xenolith::vk::CommandBuffer::init(stappler::xenolith::vk::CommandPool const*,stappler::xenolith::vk::DeviceTable const*,VkCommandBuffer)",
			"::stappler::xenolith::vk::CommandBuffer::invalidate()",
			"::stappler::xenolith::vk::CommandBuffer::cmdPipelineBarrier(VkPipelineStageFlags,VkPipelineStageFlags,VkDependencyFlags,SpanView<stappler::xenolith::vk::ImageMemoryBarrier>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdPipelineBarrier(VkPipelineStageFlags,VkPipelineStageFlags,VkDependencyFlags,SpanView<stappler::xenolith::vk::BufferMemoryBarrier>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdPipelineBarrier(VkPipelineStageFlags,VkPipelineStageFlags,VkDependencyFlags,SpanView<stappler::xenolith::vk::BufferMemoryBarrier>,SpanView<stappler::xenolith::vk::ImageMemoryBarrier>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyBuffer(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Buffer*)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyBuffer(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Buffer*,VkDeviceSize,VkDeviceSize,VkDeviceSize)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyBuffer(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Buffer*,SpanView<VkBufferCopy>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyImage(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Image*,VkImageLayout,VkFilter)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyImage(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Image*,VkImageLayout,VkImageCopy const&)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyImage(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Image*,VkImageLayout,SpanView<VkImageCopy>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyBufferToImage(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Image*,VkImageLayout,VkDeviceSize)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyBufferToImage(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Image*,VkImageLayout,SpanView<VkBufferImageCopy>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyImageToBuffer(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Buffer*,VkDeviceSize)",
			"::stappler::xenolith::vk::CommandBuffer::cmdCopyImageToBuffer(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Buffer*,SpanView<VkBufferImageCopy>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdClearColorImage(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::Color4F const&)",
			"::stappler::xenolith::vk::CommandBuffer::cmdBeginRenderPass(stappler::xenolith::vk::RenderPass*,stappler::xenolith::vk::Framebuffer*,VkSubpassContents,bool)",
			"::stappler::xenolith::vk::CommandBuffer::cmdEndRenderPass()",
			"::stappler::xenolith::vk::CommandBuffer::cmdSetViewport(uint32_t,SpanView<VkViewport>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdSetScissor(uint32_t,SpanView<VkRect2D>)",
			"::stappler::xenolith::vk::CommandBuffer::cmdBindPipeline(stappler::xenolith::vk::GraphicPipeline*)",
			"::stappler::xenolith::vk::CommandBuffer::cmdBindPipeline(stappler::xenolith::vk::ComputePipeline*)",
			"::stappler::xenolith::vk::CommandBuffer::cmdBindIndexBuffer(stappler::xenolith::vk::Buffer*,VkDeviceSize,VkIndexType)",
			"::stappler::xenolith::vk::CommandBuffer::cmdBindDescriptorSets(stappler::xenolith::vk::RenderPass*,uint32_t,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdBindDescriptorSets(stappler::xenolith::vk::RenderPass*,uint32_t,SpanView<VkDescriptorSet>,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdBindGraphicDescriptorSets(VkPipelineLayout,SpanView<VkDescriptorSet>,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdBindComputeDescriptorSets(VkPipelineLayout,SpanView<VkDescriptorSet>,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdDraw(uint32_t,uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdDrawIndexed(uint32_t,uint32_t,uint32_t,int32_t,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdPushConstants(VkPipelineLayout,VkShaderStageFlags,uint32_t,stappler::BytesView)",
			"::stappler::xenolith::vk::CommandBuffer::cmdPushConstants(VkShaderStageFlags,uint32_t,stappler::BytesView)",
			"::stappler::xenolith::vk::CommandBuffer::cmdFillBuffer(stappler::xenolith::vk::Buffer*,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdFillBuffer(stappler::xenolith::vk::Buffer*,VkDeviceSize,VkDeviceSize,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdDispatch(uint32_t,uint32_t,uint32_t)",
			"::stappler::xenolith::vk::CommandBuffer::cmdNextSubpass()",
			"::stappler::xenolith::vk::CommandBuffer::getBuffer() const",
			"::stappler::xenolith::vk::CommandBuffer::getCurrentSubpass() const",
			"::stappler::xenolith::vk::CommandBuffer::getBoundLayoutIndex() const",
			"::stappler::xenolith::vk::CommandBuffer::getBoundLayout() const",
			"::stappler::xenolith::vk::CommandBuffer::writeImageTransfer(uint32_t,uint32_t,Rc<stappler::xenolith::vk::Buffer> const&,Rc<stappler::xenolith::vk::Image> const&)",
			"::stappler::xenolith::vk::CommandBuffer::addImage(stappler::xenolith::vk::Image*)",
			"::stappler::xenolith::vk::CommandBuffer::addBuffer(stappler::xenolith::vk::Buffer*)",
			"::stappler::xenolith::vk::CommandBuffer::_currentSubpass",
			"::stappler::xenolith::vk::CommandBuffer::_boundLayoutIndex",
			"::stappler::xenolith::vk::CommandBuffer::_boundLayout",
			"::stappler::xenolith::vk::CommandBuffer::_pool",
			"::stappler::xenolith::vk::CommandBuffer::_table",
			"::stappler::xenolith::vk::CommandBuffer::_buffer",
			"::stappler::xenolith::vk::CommandBuffer::_buffers",
			"::stappler::xenolith::vk::CommandBuffer::_images",
			"::stappler::xenolith::vk::CommandBuffer::_framebuffers",
			"::stappler::xenolith::vk::CommandBuffer::_descriptorSets",
			"::stappler::xenolith::vk::CommandBuffer::_memPool",
			"::stappler::xenolith::vk::CommandPool",
			"::stappler::xenolith::vk::CommandPool::DefaultFlags",
			"::stappler::xenolith::vk::CommandPool::Level",
			"::stappler::xenolith::vk::CommandPool::~CommandPool()",
			"::stappler::xenolith::vk::CommandPool::init(stappler::xenolith::vk::Device&,uint32_t,stappler::xenolith::vk::QueueOperations,bool)",
			"::stappler::xenolith::vk::CommandPool::invalidate(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::CommandPool::getClass() const",
			"::stappler::xenolith::vk::CommandPool::getFamilyIdx() const",
			"::stappler::xenolith::vk::CommandPool::getCommandPool() const",
			"::stappler::xenolith::vk::CommandPool::recordBuffer(stappler::xenolith::vk::Device&,Callback<bool (stappler::xenolith::vk::CommandBuffer &)> const&,VkCommandBufferUsageFlagBits,stappler::xenolith::vk::CommandPool::Level)",
			"::stappler::xenolith::vk::CommandPool::freeDefaultBuffers(stappler::xenolith::vk::Device&,Vector<VkCommandBuffer>&)",
			"::stappler::xenolith::vk::CommandPool::reset(stappler::xenolith::vk::Device&,bool)",
			"::stappler::xenolith::vk::CommandPool::autorelease(Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::vk::CommandPool::_familyIdx",
			"::stappler::xenolith::vk::CommandPool::_currentComplexity",
			"::stappler::xenolith::vk::CommandPool::_bestComplexity",
			"::stappler::xenolith::vk::CommandPool::_class",
			"::stappler::xenolith::vk::CommandPool::_commandPool",
			"::stappler::xenolith::vk::CommandPool::_autorelease",
			"::stappler::xenolith::vk::CommandPool::_buffers"
		],
		"XLVkGuiApplication.h":  [
			"XENOLITH_BACKEND_VKGUI_XLVKGUIAPPLICATION_H_",
			"::stappler::xenolith::vk::GuiApplication",
			"::stappler::xenolith::vk::GuiApplication::VulkanInstanceData",
			"::stappler::xenolith::vk::GuiApplication::VulkanInstanceInfo",
			"::stappler::xenolith::vk::GuiApplication::~GuiApplication()",
			"::stappler::xenolith::vk::GuiApplication::init(stappler::xenolith::Application::CommonInfo&&,Rc<core::Instance>&&)",
			"::stappler::xenolith::vk::GuiApplication::init(stappler::xenolith::Application::CommonInfo&&,Callback<bool (stappler::xenolith::vk::GuiApplication::VulkanInstanceData &, const stappler::xenolith::vk::GuiApplication::VulkanInstanceInfo &)> const&)",
			"::stappler::xenolith::vk::GuiApplication::run(stappler::xenolith::Application::CallbackInfo const&,uint32_t,stappler::TimeInterval)",
			"::stappler::xenolith::vk::GuiApplication::run(stappler::xenolith::Application::CallbackInfo const&,core::LoopInfo&&,uint32_t,stappler::TimeInterval)"
		],
		"XLVkGuiConfig.h":  [
			"XENOLITH_BACKEND_VKGUI_XLVKGUICONFIG_H_",
			"::stappler::xenolith::config::OnDemandFrameInterval",
			"::stappler::xenolith::config::MaxSuboptimalFrames",
			"::stappler::xenolith::config::GuiMainLoopDefaultInterval",
			"::stappler::xenolith::config::getGlThreadCount()",
			"::stappler::xenolith::config::getMainThreadCount()"
		],
		"XLVkGuiPlatform.h":  [
			"XENOLITH_BACKEND_VKGUI_XLVKGUIPLATFORM_H_",
			"::stappler::xenolith::vk::platform::createView(stappler::xenolith::Application&,core::Device const&,stappler::xenolith::ViewInfo&&)",
			"::stappler::xenolith::vk::platform::initInstance(vk::platform::VulkanInstanceData&,vk::platform::VulkanInstanceInfo const&)",
			"::stappler::xenolith::vk::platform::checkPresentationSupport(vk::Instance const*,VkPhysicalDevice,uint32_t)"
		],
		"XLVkGuiViewImpl.h":  [
			"XENOLITH_BACKEND_VKGUI_PLATFORM_LINUX_XLVKGUIVIEWIMPL_H_",
			"::stappler::xenolith::vk::platform::SurfaceType",
			"::stappler::xenolith::vk::platform::operator|(stappler::xenolith::vk::platform::SurfaceType const&,stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::operator&(stappler::xenolith::vk::platform::SurfaceType const&,stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::operator^(stappler::xenolith::vk::platform::SurfaceType const&,stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::operator|=(stappler::xenolith::vk::platform::SurfaceType&,stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::operator&=(stappler::xenolith::vk::platform::SurfaceType&,stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::operator^=(stappler::xenolith::vk::platform::SurfaceType&,stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::operator==(stappler::xenolith::vk::platform::SurfaceType const&,std::underlying_type<SurfaceType>::type const&)",
			"::stappler::xenolith::vk::platform::operator==(std::underlying_type<SurfaceType>::type const&,stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::operator!=(stappler::xenolith::vk::platform::SurfaceType const&,std::underlying_type<SurfaceType>::type const&)",
			"::stappler::xenolith::vk::platform::operator!=(std::underlying_type<SurfaceType>::type const&,stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::operator~(stappler::xenolith::vk::platform::SurfaceType const&)",
			"::stappler::xenolith::vk::platform::ViewImpl",
			"::stappler::xenolith::vk::platform::ViewImpl::ViewImpl()",
			"::stappler::xenolith::vk::platform::ViewImpl::~ViewImpl()",
			"::stappler::xenolith::vk::platform::ViewImpl::init(stappler::xenolith::Application&,core::Device const&,stappler::xenolith::ViewInfo&&)",
			"::stappler::xenolith::vk::platform::ViewImpl::threadInit()",
			"::stappler::xenolith::vk::platform::ViewImpl::threadDispose()",
			"::stappler::xenolith::vk::platform::ViewImpl::worker()",
			"::stappler::xenolith::vk::platform::ViewImpl::wakeup()",
			"::stappler::xenolith::vk::platform::ViewImpl::updateTextCursor(uint32_t,uint32_t)",
			"::stappler::xenolith::vk::platform::ViewImpl::updateTextInput(stappler::WideStringView,uint32_t,uint32_t,stappler::xenolith::TextInputType)",
			"::stappler::xenolith::vk::platform::ViewImpl::runTextInput(stappler::WideStringView,uint32_t,uint32_t,stappler::xenolith::TextInputType)",
			"::stappler::xenolith::vk::platform::ViewImpl::cancelTextInput()",
			"::stappler::xenolith::vk::platform::ViewImpl::presentWithQueue(vk::DeviceQueue&,Rc<stappler::xenolith::View::ImageStorage>&&)",
			"::stappler::xenolith::vk::platform::ViewImpl::isInputEnabled() const",
			"::stappler::xenolith::vk::platform::ViewImpl::getView() const",
			"::stappler::xenolith::vk::platform::ViewImpl::getDevice() const",
			"::stappler::xenolith::vk::platform::ViewImpl::getUpdateInterval() const",
			"::stappler::xenolith::vk::platform::ViewImpl::mapWindow()",
			"::stappler::xenolith::vk::platform::ViewImpl::linkWithNativeWindow(void*)",
			"::stappler::xenolith::vk::platform::ViewImpl::stopNativeWindow()",
			"::stappler::xenolith::vk::platform::ViewImpl::pollInput(bool)",
			"::stappler::xenolith::vk::platform::ViewImpl::getSurfaceOptions() const",
			"::stappler::xenolith::vk::platform::ViewImpl::finalize()",
			"::stappler::xenolith::vk::platform::ViewImpl::_view",
			"::stappler::xenolith::vk::platform::ViewImpl::_eventFd",
			"::stappler::xenolith::vk::platform::ViewImpl::_inputEnabled"
		],
		"XLVkInfo.h":  [
			"XENOLITH_BACKEND_VK_XLVKINFO_H_",
			"::stappler::xenolith::vk::DeviceInfo",
			"::stappler::xenolith::vk::DeviceInfo::Features",
			"::stappler::xenolith::vk::DeviceInfo::Features::getRequired()",
			"::stappler::xenolith::vk::DeviceInfo::Features::getOptional()",
			"::stappler::xenolith::vk::DeviceInfo::Features::device16bitStorage",
			"::stappler::xenolith::vk::DeviceInfo::Features::device8bitStorage",
			"::stappler::xenolith::vk::DeviceInfo::Features::deviceShaderFloat16Int8",
			"::stappler::xenolith::vk::DeviceInfo::Features::deviceDescriptorIndexing",
			"::stappler::xenolith::vk::DeviceInfo::Features::deviceBufferDeviceAddress",
			"::stappler::xenolith::vk::DeviceInfo::Features::device13",
			"::stappler::xenolith::vk::DeviceInfo::Features::device12",
			"::stappler::xenolith::vk::DeviceInfo::Features::device11",
			"::stappler::xenolith::vk::DeviceInfo::Features::device10",
			"::stappler::xenolith::vk::DeviceInfo::Features::flags",
			"::stappler::xenolith::vk::DeviceInfo::Features::canEnable(stappler::xenolith::vk::DeviceInfo::Features const&,uint32_t) const",
			"::stappler::xenolith::vk::DeviceInfo::Features::enableFromFeatures(stappler::xenolith::vk::DeviceInfo::Features const&)",
			"::stappler::xenolith::vk::DeviceInfo::Features::disableFromFeatures(stappler::xenolith::vk::DeviceInfo::Features const&)",
			"::stappler::xenolith::vk::DeviceInfo::Features::updateFrom13()",
			"::stappler::xenolith::vk::DeviceInfo::Features::updateFrom12()",
			"::stappler::xenolith::vk::DeviceInfo::Features::updateTo12(bool)",
			"::stappler::xenolith::vk::DeviceInfo::Features::clear()",
			"::stappler::xenolith::vk::DeviceInfo::Features::Features()",
			"::stappler::xenolith::vk::DeviceInfo::Features::Features(stappler::xenolith::vk::DeviceInfo::Features const&)",
			"::stappler::xenolith::vk::DeviceInfo::Features::operator=(stappler::xenolith::vk::DeviceInfo::Features const&)",
			"::stappler::xenolith::vk::DeviceInfo::Properties",
			"::stappler::xenolith::vk::DeviceInfo::Properties::deviceDescriptorIndexing",
			"::stappler::xenolith::vk::DeviceInfo::Properties::deviceMaintenance3",
			"::stappler::xenolith::vk::DeviceInfo::Properties::device10",
			"::stappler::xenolith::vk::DeviceInfo::Properties::Properties()",
			"::stappler::xenolith::vk::DeviceInfo::Properties::Properties(stappler::xenolith::vk::DeviceInfo::Properties const&)",
			"::stappler::xenolith::vk::DeviceInfo::Properties::operator=(stappler::xenolith::vk::DeviceInfo::Properties const&)",
			"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo",
			"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::ops",
			"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::index",
			"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::count",
			"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::used",
			"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::minImageTransferGranularity",
			"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::presentSurfaceMask",
			"::stappler::xenolith::vk::DeviceInfo::device",
			"::stappler::xenolith::vk::DeviceInfo::graphicsFamily",
			"::stappler::xenolith::vk::DeviceInfo::presentFamily",
			"::stappler::xenolith::vk::DeviceInfo::transferFamily",
			"::stappler::xenolith::vk::DeviceInfo::computeFamily",
			"::stappler::xenolith::vk::DeviceInfo::optionalExtensions",
			"::stappler::xenolith::vk::DeviceInfo::promotedExtensions",
			"::stappler::xenolith::vk::DeviceInfo::availableExtensions",
			"::stappler::xenolith::vk::DeviceInfo::properties",
			"::stappler::xenolith::vk::DeviceInfo::features",
			"::stappler::xenolith::vk::DeviceInfo::requiredExtensionsExists",
			"::stappler::xenolith::vk::DeviceInfo::requiredFeaturesExists",
			"::stappler::xenolith::vk::DeviceInfo::DeviceInfo()",
			"::stappler::xenolith::vk::DeviceInfo::DeviceInfo(VkPhysicalDevice,stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo,stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo,stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo,stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo,Vector<stappler::StringView>&&,Vector<stappler::StringView>&&)",
			"::stappler::xenolith::vk::DeviceInfo::DeviceInfo(stappler::xenolith::vk::DeviceInfo const&)",
			"::stappler::xenolith::vk::DeviceInfo::operator=(stappler::xenolith::vk::DeviceInfo const&)",
			"::stappler::xenolith::vk::DeviceInfo::DeviceInfo(stappler::xenolith::vk::DeviceInfo&&)",
			"::stappler::xenolith::vk::DeviceInfo::operator=(stappler::xenolith::vk::DeviceInfo&&)",
			"::stappler::xenolith::vk::DeviceInfo::supportsPresentation() const",
			"::stappler::xenolith::vk::DeviceInfo::description() const"
		],
		"XLVkInstance.h":  [
			"XENOLITH_BACKEND_VK_XLVKINSTANCE_H_",
			"::stappler::xenolith::vk::LoopData",
			"::stappler::xenolith::vk::LoopData::DeviceSupportCallback",
			"::stappler::xenolith::vk::LoopData::DeviceExtensionsCallback",
			"::stappler::xenolith::vk::LoopData::DeviceFeaturesCallback",
			"::stappler::xenolith::vk::LoopData::deviceSupportCallback",
			"::stappler::xenolith::vk::LoopData::deviceExtensionsCallback",
			"::stappler::xenolith::vk::LoopData::deviceFeaturesCallback",
			"::stappler::xenolith::vk::Instance",
			"::stappler::xenolith::vk::Instance::PresentSupportCallback",
			"::stappler::xenolith::vk::Instance::Instance(VkInstance,PFN_vkGetInstanceProcAddr const,uint32_t,Vector<stappler::StringView>&&,stappler::xenolith::core::Instance::TerminateCallback&&,stappler::xenolith::vk::Instance::PresentSupportCallback&&,bool,Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::vk::Instance::~Instance()",
			"::stappler::xenolith::vk::Instance::makeLoop(core::LoopInfo&&) const",
			"::stappler::xenolith::vk::Instance::makeDevice(core::LoopInfo const&) const",
			"::stappler::xenolith::vk::Instance::getSurfaceOptions(VkSurfaceKHR,VkPhysicalDevice) const",
			"::stappler::xenolith::vk::Instance::getSurfaceExtent(VkSurfaceKHR,VkPhysicalDevice) const",
			"::stappler::xenolith::vk::Instance::getInstance() const",
			"::stappler::xenolith::vk::Instance::printDevicesInfo(std::ostream&) const",
			"::stappler::xenolith::vk::Instance::getVersion() const",
			"::stappler::xenolith::vk::Instance::makeView(stappler::xenolith::Application&,core::Device const&,stappler::xenolith::ViewInfo&&) const",
			"::stappler::xenolith::vk::Instance::getDeviceFeatures(VkPhysicalDevice const&,DeviceInfo::Features&,stappler::xenolith::vk::ExtensionFlags,uint32_t) const",
			"::stappler::xenolith::vk::Instance::getDeviceProperties(VkPhysicalDevice const&,DeviceInfo::Properties&,stappler::xenolith::vk::ExtensionFlags,uint32_t) const",
			"::stappler::xenolith::vk::Instance::getDeviceInfo(VkPhysicalDevice) const",
			"::stappler::xenolith::vk::Instance::_instance",
			"::stappler::xenolith::vk::Instance::_version",
			"::stappler::xenolith::vk::Instance::_optionals",
			"::stappler::xenolith::vk::Instance::_devices",
			"::stappler::xenolith::vk::Instance::_checkPresentSupport",
			"::stappler::xenolith::vk::Instance::debugMessenger"
		],
		"XLVkLoop.h":  [
			"XENOLITH_BACKEND_VK_XLVKLOOP_H_",
			"::stappler::xenolith::vk::Loop",
			"::stappler::xenolith::vk::Loop::~Loop()",
			"::stappler::xenolith::vk::Loop::Loop()",
			"::stappler::xenolith::vk::Loop::init(Rc<stappler::xenolith::vk::Instance>&&,stappler::xenolith::core::Loop::LoopInfo&&)",
			"::stappler::xenolith::vk::Loop::waitRinning()",
			"::stappler::xenolith::vk::Loop::threadInit()",
			"::stappler::xenolith::vk::Loop::threadDispose()",
			"::stappler::xenolith::vk::Loop::worker()",
			"::stappler::xenolith::vk::Loop::cancel()",
			"::stappler::xenolith::vk::Loop::isRunning() const",
			"::stappler::xenolith::vk::Loop::compileResource(Rc<core::Resource>&&,Function<void (bool)>&&,bool) const",
			"::stappler::xenolith::vk::Loop::compileQueue(Rc<stappler::xenolith::core::Loop::Queue> const&,Function<void (bool)>&&) const",
			"::stappler::xenolith::vk::Loop::compileMaterials(Rc<core::MaterialInputData>&&,Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&) const",
			"::stappler::xenolith::vk::Loop::compileImage(Rc<core::DynamicImage> const&,Function<void (bool)>&&) const",
			"::stappler::xenolith::vk::Loop::runRenderQueue(Rc<stappler::xenolith::core::Loop::FrameRequest>&&,uint64_t,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::Loop::schedule(Function<bool (core::Loop &)>&&,stappler::StringView)",
			"::stappler::xenolith::vk::Loop::schedule(Function<bool (core::Loop &)>&&,uint64_t,stappler::StringView)",
			"::stappler::xenolith::vk::Loop::performInQueue(Rc<thread::Task>&&) const",
			"::stappler::xenolith::vk::Loop::performInQueue(Function<void ()>&&,stappler::mem_std::Ref*) const",
			"::stappler::xenolith::vk::Loop::performOnGlThread(Function<void ()>&&,stappler::mem_std::Ref*,bool) const",
			"::stappler::xenolith::vk::Loop::isOnGlThread() const",
			"::stappler::xenolith::vk::Loop::makeFrame(Rc<stappler::xenolith::core::Loop::FrameRequest>&&,uint64_t)",
			"::stappler::xenolith::vk::Loop::acquireFramebuffer(stappler::xenolith::core::Loop::PassData const*,SpanView<Rc<core::ImageView>>)",
			"::stappler::xenolith::vk::Loop::releaseFramebuffer(Rc<core::Framebuffer>&&)",
			"::stappler::xenolith::vk::Loop::acquireImage(stappler::xenolith::core::Loop::ImageAttachment const*,stappler::xenolith::core::Loop::AttachmentHandle const*,core::ImageInfoData const&)",
			"::stappler::xenolith::vk::Loop::releaseImage(Rc<stappler::xenolith::core::Loop::ImageStorage>&&)",
			"::stappler::xenolith::vk::Loop::makeSemaphore()",
			"::stappler::xenolith::vk::Loop::getSupportedDepthStencilFormat() const",
			"::stappler::xenolith::vk::Loop::acquireFence(uint32_t,bool)",
			"::stappler::xenolith::vk::Loop::signalDependencies(Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&,stappler::xenolith::core::Loop::Queue*,bool)",
			"::stappler::xenolith::vk::Loop::waitForDependencies(Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::Loop::wakeup()",
			"::stappler::xenolith::vk::Loop::waitIdle()",
			"::stappler::xenolith::vk::Loop::captureImage(Function<void (const stappler::xenolith::vk::ImageInfoData &, stappler::BytesView)>&&,Rc<core::ImageObject> const&,core::AttachmentLayout)",
			"::stappler::xenolith::vk::Loop::_thread",
			"::stappler::xenolith::vk::Loop::_threadId",
			"::stappler::xenolith::vk::Loop::_mutex",
			"::stappler::xenolith::vk::Loop::_cond",
			"::stappler::xenolith::vk::Loop::_running",
			"::stappler::xenolith::vk::Loop::_internal",
			"::stappler::xenolith::vk::Loop::_vkInstance",
			"::stappler::xenolith::vk::Loop::_clock"
		],
		"XLVkMaterialCompiler.h":  [
			"XENOLITH_BACKEND_VK_XLMATERIALCOMPILER_H_",
			"::stappler::xenolith::vk::MaterialCompiler",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialAttachment",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialInputData",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialId",
			"::stappler::xenolith::vk::MaterialCompiler::Material",
			"::stappler::xenolith::vk::MaterialCompiler::~MaterialCompiler()",
			"::stappler::xenolith::vk::MaterialCompiler::init()",
			"::stappler::xenolith::vk::MaterialCompiler::inProgress(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*) const",
			"::stappler::xenolith::vk::MaterialCompiler::setInProgress(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*)",
			"::stappler::xenolith::vk::MaterialCompiler::dropInProgress(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*)",
			"::stappler::xenolith::vk::MaterialCompiler::hasRequest(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*) const",
			"::stappler::xenolith::vk::MaterialCompiler::appendRequest(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*,Rc<stappler::xenolith::vk::MaterialCompiler::MaterialInputData>&&,Vector<Rc<core::DependencyEvent>>&&)",
			"::stappler::xenolith::vk::MaterialCompiler::clearRequests()",
			"::stappler::xenolith::vk::MaterialCompiler::makeRequest(Rc<stappler::xenolith::vk::MaterialCompiler::MaterialInputData>&&,Vector<Rc<core::DependencyEvent>>&&)",
			"::stappler::xenolith::vk::MaterialCompiler::runMaterialCompilationFrame(core::Loop&,Rc<stappler::xenolith::vk::MaterialCompiler::MaterialInputData>&&,Vector<Rc<core::DependencyEvent>>&&)",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::materials",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::dynamic",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::remove",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::deps",
			"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::callback",
			"::stappler::xenolith::vk::MaterialCompiler::_attachment",
			"::stappler::xenolith::vk::MaterialCompiler::_inProgress",
			"::stappler::xenolith::vk::MaterialCompiler::_requests"
		],
		"XLVkMeshCompiler.h":  [
			"XENOLITH_BACKEND_VK_XLVKMESHCOMPILER_H_",
			"::stappler::xenolith::vk::MeshCompiler",
			"::stappler::xenolith::vk::MeshCompiler::MeshAttachment",
			"::stappler::xenolith::vk::MeshCompiler::MeshInputData",
			"::stappler::xenolith::vk::MeshCompiler::MeshIndex",
			"::stappler::xenolith::vk::MeshCompiler::~MeshCompiler()",
			"::stappler::xenolith::vk::MeshCompiler::init()",
			"::stappler::xenolith::vk::MeshCompiler::inProgress(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*) const",
			"::stappler::xenolith::vk::MeshCompiler::setInProgress(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*)",
			"::stappler::xenolith::vk::MeshCompiler::dropInProgress(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*)",
			"::stappler::xenolith::vk::MeshCompiler::hasRequest(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*) const",
			"::stappler::xenolith::vk::MeshCompiler::appendRequest(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*,Rc<stappler::xenolith::vk::MeshCompiler::MeshInputData>&&,Vector<Rc<core::DependencyEvent>>&&)",
			"::stappler::xenolith::vk::MeshCompiler::clearRequests()",
			"::stappler::xenolith::vk::MeshCompiler::makeRequest(Rc<stappler::xenolith::vk::MeshCompiler::MeshInputData>&&,Vector<Rc<core::DependencyEvent>>&&)",
			"::stappler::xenolith::vk::MeshCompiler::runMeshCompilationFrame(core::Loop&,Rc<stappler::xenolith::vk::MeshCompiler::MeshInputData>&&,Vector<Rc<core::DependencyEvent>>&&)",
			"::stappler::xenolith::vk::MeshCompiler::MeshRequest",
			"::stappler::xenolith::vk::MeshCompiler::MeshRequest::toAdd",
			"::stappler::xenolith::vk::MeshCompiler::MeshRequest::toRemove",
			"::stappler::xenolith::vk::MeshCompiler::MeshRequest::deps",
			"::stappler::xenolith::vk::MeshCompiler::_attachment",
			"::stappler::xenolith::vk::MeshCompiler::_inProgress",
			"::stappler::xenolith::vk::MeshCompiler::_requests"
		],
		"XLVkObject.h":  [
			"XENOLITH_BACKEND_VK_XLVKOBJECT_H_",
			"::stappler::xenolith::vk::DeviceMemory",
			"::stappler::xenolith::vk::DeviceMemory::~DeviceMemory()",
			"::stappler::xenolith::vk::DeviceMemory::init(stappler::xenolith::vk::Device&,VkDeviceMemory)",
			"::stappler::xenolith::vk::DeviceMemory::getMemory() const",
			"::stappler::xenolith::vk::DeviceMemory::_memory",
			"::stappler::xenolith::vk::Image",
			"::stappler::xenolith::vk::Image::~Image()",
			"::stappler::xenolith::vk::Image::init(stappler::xenolith::vk::Device&,VkImage,stappler::xenolith::vk::ImageInfoData const&,uint32_t)",
			"::stappler::xenolith::vk::Image::init(stappler::xenolith::vk::Device&,VkImage,stappler::xenolith::vk::ImageInfoData const&,Rc<stappler::xenolith::vk::DeviceMemory>&&,Rc<core::DataAtlas>&&)",
			"::stappler::xenolith::vk::Image::init(stappler::xenolith::vk::Device&,uint64_t,VkImage,stappler::xenolith::vk::ImageInfoData const&,Rc<stappler::xenolith::vk::DeviceMemory>&&,Rc<core::DataAtlas>&&)",
			"::stappler::xenolith::vk::Image::getImage() const",
			"::stappler::xenolith::vk::Image::getMemory() const",
			"::stappler::xenolith::vk::Image::setPendingBarrier(stappler::xenolith::vk::ImageMemoryBarrier const&)",
			"::stappler::xenolith::vk::Image::getPendingBarrier() const",
			"::stappler::xenolith::vk::Image::dropPendingBarrier()",
			"::stappler::xenolith::vk::Image::getAspectMask() const",
			"::stappler::xenolith::vk::Image::bindMemory(Rc<stappler::xenolith::vk::DeviceMemory>&&,VkDeviceSize)",
			"::stappler::xenolith::vk::Image::_memory",
			"::stappler::xenolith::vk::Image::_image",
			"::stappler::xenolith::vk::Image::_barrier",
			"::stappler::xenolith::vk::Buffer",
			"::stappler::xenolith::vk::Buffer::~Buffer()",
			"::stappler::xenolith::vk::Buffer::init(stappler::xenolith::vk::Device&,VkBuffer,stappler::xenolith::vk::BufferInfo const&,Rc<stappler::xenolith::vk::DeviceMemory>&&)",
			"::stappler::xenolith::vk::Buffer::getBuffer() const",
			"::stappler::xenolith::vk::Buffer::getPool() const",
			"::stappler::xenolith::vk::Buffer::getMemory() const",
			"::stappler::xenolith::vk::Buffer::setPendingBarrier(stappler::xenolith::vk::BufferMemoryBarrier const&)",
			"::stappler::xenolith::vk::Buffer::getPendingBarrier() const",
			"::stappler::xenolith::vk::Buffer::dropPendingBarrier()",
			"::stappler::xenolith::vk::Buffer::bindMemory(Rc<stappler::xenolith::vk::DeviceMemory>&&,VkDeviceSize)",
			"::stappler::xenolith::vk::Buffer::_memory",
			"::stappler::xenolith::vk::Buffer::_buffer",
			"::stappler::xenolith::vk::Buffer::_barrier",
			"::stappler::xenolith::vk::Buffer::_pool",
			"::stappler::xenolith::vk::ImageView",
			"::stappler::xenolith::vk::ImageView::~ImageView()",
			"::stappler::xenolith::vk::ImageView::init(stappler::xenolith::vk::Device&,VkImage,VkFormat)",
			"::stappler::xenolith::vk::ImageView::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::Image*,stappler::xenolith::vk::ImageViewInfo const&)",
			"::stappler::xenolith::vk::ImageView::getImageView() const",
			"::stappler::xenolith::vk::ImageView::_imageView",
			"::stappler::xenolith::vk::Sampler",
			"::stappler::xenolith::vk::Sampler::~Sampler()",
			"::stappler::xenolith::vk::Sampler::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::SamplerInfo const&)",
			"::stappler::xenolith::vk::Sampler::getSampler() const",
			"::stappler::xenolith::vk::Sampler::_sampler"
		],
		"XLVkPipeline.h":  [
			"XENOLITH_BACKEND_VK_XLVKPIPELINE_H_",
			"::stappler::xenolith::vk::Shader",
			"::stappler::xenolith::vk::Shader::~Shader()",
			"::stappler::xenolith::vk::Shader::init(stappler::xenolith::vk::Device&,stappler::xenolith::core::Shader::ProgramData const&)",
			"::stappler::xenolith::vk::Shader::getModule() const",
			"::stappler::xenolith::vk::Shader::setup(stappler::xenolith::vk::Device&,stappler::xenolith::core::Shader::ProgramData const&,SpanView<uint32_t>)",
			"::stappler::xenolith::vk::Shader::_shaderModule",
			"::stappler::xenolith::vk::GraphicPipeline",
			"::stappler::xenolith::vk::GraphicPipeline::comparePipelineOrdering(stappler::xenolith::core::GraphicPipeline::PipelineInfo const&,stappler::xenolith::core::GraphicPipeline::PipelineInfo const&)",
			"::stappler::xenolith::vk::GraphicPipeline::~GraphicPipeline()",
			"::stappler::xenolith::vk::GraphicPipeline::init(stappler::xenolith::vk::Device&,stappler::xenolith::core::GraphicPipeline::PipelineData const&,stappler::xenolith::core::GraphicPipeline::SubpassData const&,stappler::xenolith::core::GraphicPipeline::RenderQueue const&)",
			"::stappler::xenolith::vk::GraphicPipeline::getPipeline() const",
			"::stappler::xenolith::vk::GraphicPipeline::_pipeline",
			"::stappler::xenolith::vk::ComputePipeline",
			"::stappler::xenolith::vk::ComputePipeline::~ComputePipeline()",
			"::stappler::xenolith::vk::ComputePipeline::init(stappler::xenolith::vk::Device&,stappler::xenolith::core::ComputePipeline::PipelineData const&,stappler::xenolith::core::ComputePipeline::SubpassData const&,stappler::xenolith::core::ComputePipeline::RenderQueue const&)",
			"::stappler::xenolith::vk::ComputePipeline::getPipeline() const",
			"::stappler::xenolith::vk::ComputePipeline::getLocalX() const",
			"::stappler::xenolith::vk::ComputePipeline::getLocalY() const",
			"::stappler::xenolith::vk::ComputePipeline::getLocalZ() const",
			"::stappler::xenolith::vk::ComputePipeline::_localX",
			"::stappler::xenolith::vk::ComputePipeline::_localY",
			"::stappler::xenolith::vk::ComputePipeline::_localZ",
			"::stappler::xenolith::vk::ComputePipeline::_pipeline"
		],
		"XLVkPlatform.h":  [
			"XENOLITH_BACKEND_VK_XLVKPLATFORM_H_",
			"::stappler::xenolith::vk::platform::VulkanInstanceInfo",
			"::stappler::xenolith::vk::platform::VulkanInstanceInfo::targetVersion",
			"::stappler::xenolith::vk::platform::VulkanInstanceInfo::availableLayers",
			"::stappler::xenolith::vk::platform::VulkanInstanceInfo::availableExtensions",
			"::stappler::xenolith::vk::platform::VulkanInstanceData",
			"::stappler::xenolith::vk::platform::VulkanInstanceData::targetVulkanVersion",
			"::stappler::xenolith::vk::platform::VulkanInstanceData::applicationVersion",
			"::stappler::xenolith::vk::platform::VulkanInstanceData::applicationName",
			"::stappler::xenolith::vk::platform::VulkanInstanceData::layersToEnable",
			"::stappler::xenolith::vk::platform::VulkanInstanceData::extensionsToEnable",
			"::stappler::xenolith::vk::platform::VulkanInstanceData::checkPresentationSupport",
			"::stappler::xenolith::vk::platform::VulkanInstanceData::userdata",
			"::stappler::xenolith::vk::platform::FunctionTable",
			"::stappler::xenolith::vk::platform::FunctionTable::createInstance(Callback<bool (stappler::xenolith::vk::platform::VulkanInstanceData &, const stappler::xenolith::vk::platform::VulkanInstanceInfo &)> const&,Instance::TerminateCallback&&) const",
			"::stappler::xenolith::vk::platform::FunctionTable::operator bool() const",
			"::stappler::xenolith::vk::platform::FunctionTable::loadInfo() const",
			"::stappler::xenolith::vk::platform::FunctionTable::prepareData(stappler::xenolith::vk::platform::VulkanInstanceData&,stappler::xenolith::vk::platform::VulkanInstanceInfo const&) const",
			"::stappler::xenolith::vk::platform::FunctionTable::validateData(stappler::xenolith::vk::platform::VulkanInstanceData&,stappler::xenolith::vk::platform::VulkanInstanceInfo const&) const",
			"::stappler::xenolith::vk::platform::FunctionTable::doCreateInstance(stappler::xenolith::vk::platform::VulkanInstanceData&,Instance::TerminateCallback&&) const",
			"::stappler::xenolith::vk::platform::createInstance(Callback<bool (stappler::xenolith::vk::platform::VulkanInstanceData &, const stappler::xenolith::vk::platform::VulkanInstanceInfo &)> const&)"
		],
		"XLVkQueuePass.h":  [
			"XENOLITH_BACKEND_VK_XLVKQUEUEPASS_H_",
			"::stappler::xenolith::vk::MaterialBuffers",
			"::stappler::xenolith::vk::MaterialBuffers::stagingBuffer",
			"::stappler::xenolith::vk::MaterialBuffers::targetBuffer",
			"::stappler::xenolith::vk::MaterialBuffers::ordering",
			"::stappler::xenolith::vk::QueuePass",
			"::stappler::xenolith::vk::QueuePass::~QueuePass()",
			"::stappler::xenolith::vk::QueuePass::init(stappler::xenolith::core::QueuePass::QueuePassBuilder&)",
			"::stappler::xenolith::vk::QueuePass::invalidate()",
			"::stappler::xenolith::vk::QueuePass::getQueueOps() const",
			"::stappler::xenolith::vk::QueuePass::makeFrameHandle(stappler::xenolith::core::QueuePass::FrameQueue const&)",
			"::stappler::xenolith::vk::QueuePass::_queueOps",
			"::stappler::xenolith::vk::QueuePassHandle",
			"::stappler::xenolith::vk::QueuePassHandle::rotateScissor(core::FrameContraints const&,stappler::xenolith::URect const&)",
			"::stappler::xenolith::vk::QueuePassHandle::~QueuePassHandle()",
			"::stappler::xenolith::vk::QueuePassHandle::invalidate()",
			"::stappler::xenolith::vk::QueuePassHandle::prepare(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::QueuePassHandle::submit(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Rc<stappler::xenolith::core::QueuePassHandle::FrameSync>&&,Function<void (bool)>&&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::QueuePassHandle::finalize(stappler::xenolith::core::QueuePassHandle::FrameQueue&,bool)",
			"::stappler::xenolith::vk::QueuePassHandle::getQueueOps() const",
			"::stappler::xenolith::vk::QueuePassHandle::doPrepareCommands(stappler::xenolith::core::QueuePassHandle::FrameHandle&)",
			"::stappler::xenolith::vk::QueuePassHandle::doSubmit(stappler::xenolith::core::QueuePassHandle::FrameHandle&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::QueuePassHandle::doSubmitted(stappler::xenolith::core::QueuePassHandle::FrameHandle&,Function<void (bool)>&&,bool,Rc<stappler::xenolith::vk::Fence>&&)",
			"::stappler::xenolith::vk::QueuePassHandle::doComplete(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Function<void (bool)>&&,bool)",
			"::stappler::xenolith::vk::QueuePassHandle::doFinalizeTransfer(core::MaterialSet*,Vector<stappler::xenolith::vk::ImageMemoryBarrier>&,Vector<stappler::xenolith::vk::BufferMemoryBarrier>&)",
			"::stappler::xenolith::vk::QueuePassHandle::updateMaterials(stappler::xenolith::core::QueuePassHandle::FrameHandle&,Rc<core::MaterialSet> const&,Vector<Rc<core::Material>> const&,SpanView<core::MaterialId>,SpanView<core::MaterialId>)",
			"::stappler::xenolith::vk::QueuePassHandle::_onPrepared",
			"::stappler::xenolith::vk::QueuePassHandle::_valid",
			"::stappler::xenolith::vk::QueuePassHandle::_commandsReady",
			"::stappler::xenolith::vk::QueuePassHandle::_descriptorsReady",
			"::stappler::xenolith::vk::QueuePassHandle::_device",
			"::stappler::xenolith::vk::QueuePassHandle::_loop",
			"::stappler::xenolith::vk::QueuePassHandle::_fence",
			"::stappler::xenolith::vk::QueuePassHandle::_pool",
			"::stappler::xenolith::vk::QueuePassHandle::_queue",
			"::stappler::xenolith::vk::QueuePassHandle::_buffers",
			"::stappler::xenolith::vk::QueuePassHandle::_sync",
			"::stappler::xenolith::vk::QueuePassHandle::_constraints"
		],
		"XLVkRenderPass.h":  [
			"XENOLITH_BACKEND_VK_XLVKRENDERPASSIMPL_H_",
			"::stappler::xenolith::vk::DescriptorData",
			"::stappler::xenolith::vk::DescriptorData::object",
			"::stappler::xenolith::vk::DescriptorData::data",
			"::stappler::xenolith::vk::DescriptorBinding",
			"::stappler::xenolith::vk::DescriptorBinding::type",
			"::stappler::xenolith::vk::DescriptorBinding::data",
			"::stappler::xenolith::vk::DescriptorBinding::~DescriptorBinding()",
			"::stappler::xenolith::vk::DescriptorBinding::DescriptorBinding(VkDescriptorType,uint32_t)",
			"::stappler::xenolith::vk::DescriptorBinding::write(uint32_t,stappler::xenolith::vk::DescriptorBufferInfo&&)",
			"::stappler::xenolith::vk::DescriptorBinding::write(uint32_t,stappler::xenolith::vk::DescriptorImageInfo&&)",
			"::stappler::xenolith::vk::DescriptorBinding::write(uint32_t,stappler::xenolith::vk::DescriptorBufferViewInfo&&)",
			"::stappler::xenolith::vk::DescriptorSet",
			"::stappler::xenolith::vk::DescriptorSet::set",
			"::stappler::xenolith::vk::DescriptorSet::bindings",
			"::stappler::xenolith::vk::Framebuffer",
			"::stappler::xenolith::vk::Framebuffer::~Framebuffer()",
			"::stappler::xenolith::vk::Framebuffer::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::RenderPass*,SpanView<Rc<core::ImageView>>)",
			"::stappler::xenolith::vk::Framebuffer::getFramebuffer() const",
			"::stappler::xenolith::vk::Framebuffer::_framebuffer",
			"::stappler::xenolith::vk::RenderPass",
			"::stappler::xenolith::vk::RenderPass::LayoutData",
			"::stappler::xenolith::vk::RenderPass::LayoutData::layout",
			"::stappler::xenolith::vk::RenderPass::LayoutData::descriptorPool",
			"::stappler::xenolith::vk::RenderPass::LayoutData::layouts",
			"::stappler::xenolith::vk::RenderPass::LayoutData::sets",
			"::stappler::xenolith::vk::RenderPass::Data",
			"::stappler::xenolith::vk::RenderPass::Data::renderPass",
			"::stappler::xenolith::vk::RenderPass::Data::renderPassAlternative",
			"::stappler::xenolith::vk::RenderPass::Data::layouts",
			"::stappler::xenolith::vk::RenderPass::Data::cleanup(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::RenderPass::~RenderPass()",
			"::stappler::xenolith::vk::RenderPass::init(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)",
			"::stappler::xenolith::vk::RenderPass::getRenderPass(bool) const",
			"::stappler::xenolith::vk::RenderPass::getPipelineLayout(uint32_t) const",
			"::stappler::xenolith::vk::RenderPass::getDescriptorSets(uint32_t) const",
			"::stappler::xenolith::vk::RenderPass::getClearValues() const",
			"::stappler::xenolith::vk::RenderPass::writeDescriptors(core::QueuePassHandle const&,uint32_t,bool) const",
			"::stappler::xenolith::vk::RenderPass::perform(core::QueuePassHandle const&,stappler::xenolith::vk::CommandBuffer&,Callback<void ()> const&)",
			"::stappler::xenolith::vk::RenderPass::initGraphicsPass(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)",
			"::stappler::xenolith::vk::RenderPass::initComputePass(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)",
			"::stappler::xenolith::vk::RenderPass::initTransferPass(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)",
			"::stappler::xenolith::vk::RenderPass::initGenericPass(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)",
			"::stappler::xenolith::vk::RenderPass::initDescriptors(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData const&,stappler::xenolith::vk::RenderPass::Data&)",
			"::stappler::xenolith::vk::RenderPass::initDescriptors(stappler::xenolith::vk::Device&,core::PipelineLayoutData const&,stappler::xenolith::vk::RenderPass::Data&,stappler::xenolith::vk::RenderPass::LayoutData&)",
			"::stappler::xenolith::vk::RenderPass::_attachmentDescriptions",
			"::stappler::xenolith::vk::RenderPass::_attachmentDescriptionsAlternative",
			"::stappler::xenolith::vk::RenderPass::_attachmentReferences",
			"::stappler::xenolith::vk::RenderPass::_preservedAttachments",
			"::stappler::xenolith::vk::RenderPass::_subpassDependencies",
			"::stappler::xenolith::vk::RenderPass::_subpasses",
			"::stappler::xenolith::vk::RenderPass::_variableAttachments",
			"::stappler::xenolith::vk::RenderPass::_data",
			"::stappler::xenolith::vk::RenderPass::_clearValues"
		],
		"XLVkRenderQueueCompiler.h":  [
			"XENOLITH_BACKEND_VK_XLVKRENDERQUEUECOMPILER_H_",
			"::stappler::xenolith::vk::RenderQueueInput",
			"::stappler::xenolith::vk::RenderQueueInput::queue",
			"::stappler::xenolith::vk::RenderQueueCompiler",
			"::stappler::xenolith::vk::RenderQueueCompiler::~RenderQueueCompiler()",
			"::stappler::xenolith::vk::RenderQueueCompiler::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::TransferQueue*,stappler::xenolith::vk::MaterialCompiler*)",
			"::stappler::xenolith::vk::RenderQueueCompiler::makeRequest(Rc<stappler::xenolith::vk::RenderQueueInput>&&)",
			"::stappler::xenolith::vk::RenderQueueCompiler::getTransferQueue() const",
			"::stappler::xenolith::vk::RenderQueueCompiler::getMaterialCompiler() const",
			"::stappler::xenolith::vk::RenderQueueCompiler::_transfer",
			"::stappler::xenolith::vk::RenderQueueCompiler::_materialCompiler",
			"::stappler::xenolith::vk::RenderQueueCompiler::_attachment"
		],
		"XLVkSwapchain.h":  [
			"XENOLITH_BACKEND_VKGUI_XLVKSWAPCHAIN_H_",
			"::stappler::xenolith::vk::Surface",
			"::stappler::xenolith::vk::Surface::~Surface()",
			"::stappler::xenolith::vk::Surface::init(stappler::xenolith::vk::Instance*,VkSurfaceKHR,stappler::mem_std::Ref*)",
			"::stappler::xenolith::vk::Surface::getSurface() const",
			"::stappler::xenolith::vk::Surface::_window",
			"::stappler::xenolith::vk::Surface::_instance",
			"::stappler::xenolith::vk::Surface::_surface",
			"::stappler::xenolith::vk::SwapchainHandle",
			"::stappler::xenolith::vk::SwapchainHandle::ImageStorage",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainImageData",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainImageData::image",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainImageData::views",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::imageIndex",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::data",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::sem",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::swapchain",
			"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::SwapchainAcquiredImage(uint32_t,stappler::xenolith::vk::SwapchainHandle::SwapchainImageData const*,Rc<stappler::xenolith::vk::Semaphore>&&,Rc<stappler::xenolith::vk::SwapchainHandle>&&)",
			"::stappler::xenolith::vk::SwapchainHandle::~SwapchainHandle()",
			"::stappler::xenolith::vk::SwapchainHandle::init(stappler::xenolith::vk::Device&,core::SurfaceInfo const&,core::SwapchainConfig const&,stappler::xenolith::vk::ImageInfo&&,core::PresentMode,stappler::xenolith::vk::Surface*,uint32_t[2],stappler::xenolith::vk::SwapchainHandle*)",
			"::stappler::xenolith::vk::SwapchainHandle::getPresentMode() const",
			"::stappler::xenolith::vk::SwapchainHandle::getRebuildMode() const",
			"::stappler::xenolith::vk::SwapchainHandle::getImageInfo() const",
			"::stappler::xenolith::vk::SwapchainHandle::getConfig() const",
			"::stappler::xenolith::vk::SwapchainHandle::getSurfaceInfo() const",
			"::stappler::xenolith::vk::SwapchainHandle::getSwapchain() const",
			"::stappler::xenolith::vk::SwapchainHandle::getAcquiredImagesCount() const",
			"::stappler::xenolith::vk::SwapchainHandle::getImages() const",
			"::stappler::xenolith::vk::SwapchainHandle::isDeprecated()",
			"::stappler::xenolith::vk::SwapchainHandle::isOptimal() const",
			"::stappler::xenolith::vk::SwapchainHandle::deprecate(bool)",
			"::stappler::xenolith::vk::SwapchainHandle::acquire(bool,Rc<stappler::xenolith::vk::Fence> const&)",
			"::stappler::xenolith::vk::SwapchainHandle::present(stappler::xenolith::vk::DeviceQueue&,Rc<stappler::xenolith::vk::SwapchainHandle::ImageStorage> const&)",
			"::stappler::xenolith::vk::SwapchainHandle::invalidateImage(stappler::xenolith::vk::SwapchainHandle::ImageStorage const*)",
			"::stappler::xenolith::vk::SwapchainHandle::acquireSemaphore()",
			"::stappler::xenolith::vk::SwapchainHandle::releaseSemaphore(Rc<stappler::xenolith::vk::Semaphore>&&)",
			"::stappler::xenolith::vk::SwapchainHandle::makeView(Rc<core::ImageObject> const&,stappler::xenolith::vk::ImageViewInfo const&)",
			"::stappler::xenolith::vk::SwapchainHandle::getSwapchainImageViewInfo(stappler::xenolith::vk::ImageInfo const&) const",
			"::stappler::xenolith::vk::SwapchainHandle::_device",
			"::stappler::xenolith::vk::SwapchainHandle::_deprecated",
			"::stappler::xenolith::vk::SwapchainHandle::_presentMode",
			"::stappler::xenolith::vk::SwapchainHandle::_imageInfo",
			"::stappler::xenolith::vk::SwapchainHandle::_surfaceInfo",
			"::stappler::xenolith::vk::SwapchainHandle::_config",
			"::stappler::xenolith::vk::SwapchainHandle::_swapchain",
			"::stappler::xenolith::vk::SwapchainHandle::_images",
			"::stappler::xenolith::vk::SwapchainHandle::_acquiredImages",
			"::stappler::xenolith::vk::SwapchainHandle::_presentedFrames",
			"::stappler::xenolith::vk::SwapchainHandle::_presentTime",
			"::stappler::xenolith::vk::SwapchainHandle::_rebuildMode",
			"::stappler::xenolith::vk::SwapchainHandle::_resourceMutex",
			"::stappler::xenolith::vk::SwapchainHandle::_semaphores",
			"::stappler::xenolith::vk::SwapchainHandle::_presentSemaphore",
			"::stappler::xenolith::vk::SwapchainHandle::_surface",
			"::stappler::xenolith::vk::SwapchainImage",
			"::stappler::xenolith::vk::SwapchainImage::State",
			"::stappler::xenolith::vk::SwapchainImage::~SwapchainImage()",
			"::stappler::xenolith::vk::SwapchainImage::init(Rc<stappler::xenolith::vk::SwapchainHandle>&&,uint64_t,uint64_t)",
			"::stappler::xenolith::vk::SwapchainImage::init(Rc<stappler::xenolith::vk::SwapchainHandle>&&,SwapchainHandle::SwapchainImageData const&,Rc<stappler::xenolith::vk::Semaphore>&&)",
			"::stappler::xenolith::vk::SwapchainImage::cleanup()",
			"::stappler::xenolith::vk::SwapchainImage::rearmSemaphores(core::Loop&)",
			"::stappler::xenolith::vk::SwapchainImage::releaseSemaphore(core::Semaphore*)",
			"::stappler::xenolith::vk::SwapchainImage::isSemaphorePersistent() const",
			"::stappler::xenolith::vk::SwapchainImage::getInfo() const",
			"::stappler::xenolith::vk::SwapchainImage::makeView(stappler::xenolith::vk::ImageViewInfo const&)",
			"::stappler::xenolith::vk::SwapchainImage::setImage(Rc<stappler::xenolith::vk::SwapchainHandle>&&,SwapchainHandle::SwapchainImageData const&,Rc<stappler::xenolith::vk::Semaphore> const&)",
			"::stappler::xenolith::vk::SwapchainImage::getOrder() const",
			"::stappler::xenolith::vk::SwapchainImage::getPresentWindow() const",
			"::stappler::xenolith::vk::SwapchainImage::setPresented()",
			"::stappler::xenolith::vk::SwapchainImage::isPresented() const",
			"::stappler::xenolith::vk::SwapchainImage::isSubmitted() const",
			"::stappler::xenolith::vk::SwapchainImage::getSwapchain() const",
			"::stappler::xenolith::vk::SwapchainImage::invalidateImage()",
			"::stappler::xenolith::vk::SwapchainImage::invalidateSwapchain()",
			"::stappler::xenolith::vk::SwapchainImage::_order",
			"::stappler::xenolith::vk::SwapchainImage::_presentWindow",
			"::stappler::xenolith::vk::SwapchainImage::_state",
			"::stappler::xenolith::vk::SwapchainImage::_swapchain"
		],
		"XLVkSync.h":  [
			"XENOLITH_BACKEND_VK_XLVKSYNC_H_",
			"::stappler::xenolith::vk::Semaphore",
			"::stappler::xenolith::vk::Semaphore::~Semaphore()",
			"::stappler::xenolith::vk::Semaphore::init(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::Semaphore::getSemaphore() const",
			"::stappler::xenolith::vk::Semaphore::_sem",
			"::stappler::xenolith::vk::Fence",
			"::stappler::xenolith::vk::Fence::State",
			"::stappler::xenolith::vk::Fence::~Fence()",
			"::stappler::xenolith::vk::Fence::init(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::Fence::clear()",
			"::stappler::xenolith::vk::Fence::getFence() const",
			"::stappler::xenolith::vk::Fence::setFrame(Function<bool ()>&&,Function<void ()>&&,uint64_t)",
			"::stappler::xenolith::vk::Fence::getFrame() const",
			"::stappler::xenolith::vk::Fence::setScheduleCallback(Function<bool ()>&&)",
			"::stappler::xenolith::vk::Fence::setReleaseCallback(Function<bool ()>&&)",
			"::stappler::xenolith::vk::Fence::getArmedTime() const",
			"::stappler::xenolith::vk::Fence::isArmed() const",
			"::stappler::xenolith::vk::Fence::setArmed(stappler::xenolith::vk::DeviceQueue&)",
			"::stappler::xenolith::vk::Fence::setArmed()",
			"::stappler::xenolith::vk::Fence::setTag(stappler::StringView)",
			"::stappler::xenolith::vk::Fence::getTag() const",
			"::stappler::xenolith::vk::Fence::addRelease(Function<void (bool)>&&,stappler::mem_std::Ref*,stappler::StringView)",
			"::stappler::xenolith::vk::Fence::schedule(stappler::xenolith::vk::Loop&)",
			"::stappler::xenolith::vk::Fence::check(stappler::xenolith::vk::Loop&,bool)",
			"::stappler::xenolith::vk::Fence::autorelease(Rc<stappler::mem_std::Ref>&&)",
			"::stappler::xenolith::vk::Fence::scheduleReset(stappler::xenolith::vk::Loop&)",
			"::stappler::xenolith::vk::Fence::scheduleReleaseReset(stappler::xenolith::vk::Loop&,bool)",
			"::stappler::xenolith::vk::Fence::doRelease(bool)",
			"::stappler::xenolith::vk::Fence::ReleaseHandle",
			"::stappler::xenolith::vk::Fence::ReleaseHandle::callback",
			"::stappler::xenolith::vk::Fence::ReleaseHandle::ref",
			"::stappler::xenolith::vk::Fence::ReleaseHandle::tag",
			"::stappler::xenolith::vk::Fence::_frame",
			"::stappler::xenolith::vk::Fence::_state",
			"::stappler::xenolith::vk::Fence::_fence",
			"::stappler::xenolith::vk::Fence::_release",
			"::stappler::xenolith::vk::Fence::_mutex",
			"::stappler::xenolith::vk::Fence::_queue",
			"::stappler::xenolith::vk::Fence::_armedTime",
			"::stappler::xenolith::vk::Fence::_tag",
			"::stappler::xenolith::vk::Fence::_scheduleFn",
			"::stappler::xenolith::vk::Fence::_releaseFn",
			"::stappler::xenolith::vk::Fence::_autorelease"
		],
		"XLVkTextureSet.h":  [
			"XENOLITH_BACKEND_VK_XLVKTEXTURESET_H_",
			"::stappler::xenolith::vk::TextureSetLayout",
			"::stappler::xenolith::vk::TextureSetLayout::AttachmentLayout",
			"::stappler::xenolith::vk::TextureSetLayout::~TextureSetLayout()",
			"::stappler::xenolith::vk::TextureSetLayout::init(stappler::xenolith::vk::Device&,uint32_t,uint32_t)",
			"::stappler::xenolith::vk::TextureSetLayout::invalidate(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::TextureSetLayout::compile(stappler::xenolith::vk::Device&,Vector<VkSampler> const&)",
			"::stappler::xenolith::vk::TextureSetLayout::getImageCount() const",
			"::stappler::xenolith::vk::TextureSetLayout::getSamplersCount() const",
			"::stappler::xenolith::vk::TextureSetLayout::getBuffersCount() const",
			"::stappler::xenolith::vk::TextureSetLayout::getLayout() const",
			"::stappler::xenolith::vk::TextureSetLayout::getEmptyImageView() const",
			"::stappler::xenolith::vk::TextureSetLayout::getSolidImageView() const",
			"::stappler::xenolith::vk::TextureSetLayout::getEmptyBuffer() const",
			"::stappler::xenolith::vk::TextureSetLayout::acquireSet(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::TextureSetLayout::releaseSet(Rc<stappler::xenolith::vk::TextureSet>&&)",
			"::stappler::xenolith::vk::TextureSetLayout::initDefault(stappler::xenolith::vk::Device&,stappler::xenolith::vk::Loop&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::TextureSetLayout::isPartiallyBound() const",
			"::stappler::xenolith::vk::TextureSetLayout::getEmptyImageObject() const",
			"::stappler::xenolith::vk::TextureSetLayout::getSolidImageObject() const",
			"::stappler::xenolith::vk::TextureSetLayout::readImage(stappler::xenolith::vk::Device&,stappler::xenolith::vk::Loop&,Rc<stappler::xenolith::vk::Image> const&,stappler::xenolith::vk::TextureSetLayout::AttachmentLayout,Function<void (const stappler::xenolith::vk::ImageInfoData &, stappler::BytesView)>&&)",
			"::stappler::xenolith::vk::TextureSetLayout::writeDefaults(stappler::xenolith::vk::CommandBuffer&)",
			"::stappler::xenolith::vk::TextureSetLayout::writeImageTransfer(stappler::xenolith::vk::Device&,stappler::xenolith::vk::CommandBuffer&,uint32_t,Rc<stappler::xenolith::vk::Buffer> const&,Rc<stappler::xenolith::vk::Image> const&)",
			"::stappler::xenolith::vk::TextureSetLayout::writeImageRead(stappler::xenolith::vk::Device&,stappler::xenolith::vk::CommandBuffer&,uint32_t,Rc<stappler::xenolith::vk::Image> const&,stappler::xenolith::vk::TextureSetLayout::AttachmentLayout,Rc<stappler::xenolith::vk::DeviceBuffer> const&)",
			"::stappler::xenolith::vk::TextureSetLayout::_partiallyBound",
			"::stappler::xenolith::vk::TextureSetLayout::_imageCount",
			"::stappler::xenolith::vk::TextureSetLayout::_bufferCount",
			"::stappler::xenolith::vk::TextureSetLayout::_samplersCount",
			"::stappler::xenolith::vk::TextureSetLayout::_layout",
			"::stappler::xenolith::vk::TextureSetLayout::_emptyImage",
			"::stappler::xenolith::vk::TextureSetLayout::_emptyImageView",
			"::stappler::xenolith::vk::TextureSetLayout::_solidImage",
			"::stappler::xenolith::vk::TextureSetLayout::_solidImageView",
			"::stappler::xenolith::vk::TextureSetLayout::_emptyBuffer",
			"::stappler::xenolith::vk::TextureSetLayout::_mutex",
			"::stappler::xenolith::vk::TextureSetLayout::_sets",
			"::stappler::xenolith::vk::TextureSet",
			"::stappler::xenolith::vk::TextureSet::~TextureSet()",
			"::stappler::xenolith::vk::TextureSet::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::TextureSetLayout const&)",
			"::stappler::xenolith::vk::TextureSet::getSet() const",
			"::stappler::xenolith::vk::TextureSet::write(core::MaterialLayout const&)",
			"::stappler::xenolith::vk::TextureSet::getPendingImageBarriers() const",
			"::stappler::xenolith::vk::TextureSet::getPendingBufferBarriers() const",
			"::stappler::xenolith::vk::TextureSet::dropPendingBarriers()",
			"::stappler::xenolith::vk::TextureSet::getDevice() const",
			"::stappler::xenolith::vk::TextureSet::writeImages(Vector<VkWriteDescriptorSet>&,core::MaterialLayout const&,std::forward_list<Vector<VkDescriptorImageInfo>>&)",
			"::stappler::xenolith::vk::TextureSet::writeBuffers(Vector<VkWriteDescriptorSet>&,core::MaterialLayout const&,std::forward_list<Vector<VkDescriptorBufferInfo>>&)",
			"::stappler::xenolith::vk::TextureSet::_partiallyBound",
			"::stappler::xenolith::vk::TextureSet::_layout",
			"::stappler::xenolith::vk::TextureSet::_imageCount",
			"::stappler::xenolith::vk::TextureSet::_bufferCount",
			"::stappler::xenolith::vk::TextureSet::_set",
			"::stappler::xenolith::vk::TextureSet::_pool",
			"::stappler::xenolith::vk::TextureSet::_pendingImageBarriers",
			"::stappler::xenolith::vk::TextureSet::_pendingBufferBarriers"
		],
		"XLVkTransferQueue.h":  [
			"XENOLITH_BACKEND_VK_XLVKTRANSFERQUEUE_H_",
			"::stappler::xenolith::vk::TransferResource",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::data",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::info",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::req",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::buffer",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::offset",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::stagingOffset",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::dedicated",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::dedicatedMemType",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::barrier",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::useStaging",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::BufferAllocInfo()",
			"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::BufferAllocInfo(core::BufferData*)",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::data",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::info",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::req",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::image",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::offset",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::stagingOffset",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::dedicated",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::dedicatedMemType",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::barrier",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::useStaging",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::ImageAllocInfo()",
			"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::ImageAllocInfo(core::ImageData*)",
			"::stappler::xenolith::vk::TransferResource::StagingCopy",
			"::stappler::xenolith::vk::TransferResource::StagingCopy::sourceOffet",
			"::stappler::xenolith::vk::TransferResource::StagingCopy::sourceSize",
			"::stappler::xenolith::vk::TransferResource::StagingCopy::targetImage",
			"::stappler::xenolith::vk::TransferResource::StagingCopy::targetBuffer",
			"::stappler::xenolith::vk::TransferResource::StagingBuffer",
			"::stappler::xenolith::vk::TransferResource::StagingBuffer::~StagingBuffer()",
			"::stappler::xenolith::vk::TransferResource::StagingBuffer::memoryTypeIndex",
			"::stappler::xenolith::vk::TransferResource::StagingBuffer::buffer",
			"::stappler::xenolith::vk::TransferResource::StagingBuffer::copyData",
			"::stappler::xenolith::vk::TransferResource::~TransferResource()",
			"::stappler::xenolith::vk::TransferResource::invalidate(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::TransferResource::init(Rc<stappler::xenolith::vk::Allocator> const&,Rc<core::Resource> const&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::TransferResource::init(Rc<stappler::xenolith::vk::Allocator> const&,Rc<core::Resource>&&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::TransferResource::initialize(stappler::xenolith::vk::AllocationUsage)",
			"::stappler::xenolith::vk::TransferResource::compile()",
			"::stappler::xenolith::vk::TransferResource::prepareCommands(uint32_t,VkCommandBuffer,Vector<VkImageMemoryBarrier>&,Vector<VkBufferMemoryBarrier>&)",
			"::stappler::xenolith::vk::TransferResource::transfer(Rc<stappler::xenolith::vk::DeviceQueue> const&,Rc<stappler::xenolith::vk::CommandPool> const&,Rc<stappler::xenolith::vk::Fence> const&)",
			"::stappler::xenolith::vk::TransferResource::isValid() const",
			"::stappler::xenolith::vk::TransferResource::isStagingRequired() const",
			"::stappler::xenolith::vk::TransferResource::allocate()",
			"::stappler::xenolith::vk::TransferResource::upload()",
			"::stappler::xenolith::vk::TransferResource::allocateDedicated(Rc<stappler::xenolith::vk::Allocator> const&,stappler::xenolith::vk::TransferResource::BufferAllocInfo&)",
			"::stappler::xenolith::vk::TransferResource::allocateDedicated(Rc<stappler::xenolith::vk::Allocator> const&,stappler::xenolith::vk::TransferResource::ImageAllocInfo&)",
			"::stappler::xenolith::vk::TransferResource::writeData(uint8_t*,stappler::xenolith::vk::TransferResource::BufferAllocInfo&)",
			"::stappler::xenolith::vk::TransferResource::writeData(uint8_t*,stappler::xenolith::vk::TransferResource::ImageAllocInfo&)",
			"::stappler::xenolith::vk::TransferResource::preTransferData()",
			"::stappler::xenolith::vk::TransferResource::createStagingBuffer(stappler::xenolith::vk::TransferResource::StagingBuffer&,size_t) const",
			"::stappler::xenolith::vk::TransferResource::writeStaging(stappler::xenolith::vk::TransferResource::StagingBuffer&)",
			"::stappler::xenolith::vk::TransferResource::dropStaging(stappler::xenolith::vk::TransferResource::StagingBuffer&) const",
			"::stappler::xenolith::vk::TransferResource::_memType",
			"::stappler::xenolith::vk::TransferResource::_requiredMemory",
			"::stappler::xenolith::vk::TransferResource::_alloc",
			"::stappler::xenolith::vk::TransferResource::_resource",
			"::stappler::xenolith::vk::TransferResource::_memory",
			"::stappler::xenolith::vk::TransferResource::_buffers",
			"::stappler::xenolith::vk::TransferResource::_images",
			"::stappler::xenolith::vk::TransferResource::_nonCoherentAtomSize",
			"::stappler::xenolith::vk::TransferResource::_stagingBuffer",
			"::stappler::xenolith::vk::TransferResource::_callback",
			"::stappler::xenolith::vk::TransferResource::_initialized",
			"::stappler::xenolith::vk::TransferResource::_targetUsage",
			"::stappler::xenolith::vk::TransferQueue",
			"::stappler::xenolith::vk::TransferQueue::~TransferQueue()",
			"::stappler::xenolith::vk::TransferQueue::init()",
			"::stappler::xenolith::vk::TransferQueue::makeRequest(Rc<stappler::xenolith::vk::TransferResource>&&)",
			"::stappler::xenolith::vk::TransferQueue::_attachment"
		],
		"XLVkView.h":  [
			"XENOLITH_BACKEND_VKGUI_XLVKVIEW_H_",
			"::stappler::xenolith::vk::View",
			"::stappler::xenolith::vk::View::EngineOptions",
			"::stappler::xenolith::vk::View::EngineOptions::waitOnSwapchainPassFence",
			"::stappler::xenolith::vk::View::EngineOptions::acquireImageImmediately",
			"::stappler::xenolith::vk::View::EngineOptions::flattenFrameRate",
			"::stappler::xenolith::vk::View::EngineOptions::followDisplayLink",
			"::stappler::xenolith::vk::View::EngineOptions::enableFrameEmitterBarrier",
			"::stappler::xenolith::vk::View::EngineOptions::renderImageOffscreen",
			"::stappler::xenolith::vk::View::EngineOptions::presentImmediate",
			"::stappler::xenolith::vk::View::EngineOptions::renderOnDemand",
			"::stappler::xenolith::vk::View::~View()",
			"::stappler::xenolith::vk::View::init(stappler::xenolith::Application&,stappler::xenolith::vk::Device const&,stappler::xenolith::ViewInfo&&)",
			"::stappler::xenolith::vk::View::threadInit()",
			"::stappler::xenolith::vk::View::threadDispose()",
			"::stappler::xenolith::vk::View::update(bool)",
			"::stappler::xenolith::vk::View::run()",
			"::stappler::xenolith::vk::View::runWithQueue(Rc<stappler::xenolith::View::RenderQueue> const&)",
			"::stappler::xenolith::vk::View::onAdded(stappler::xenolith::vk::Device&)",
			"::stappler::xenolith::vk::View::onRemoved()",
			"::stappler::xenolith::vk::View::deprecateSwapchain(bool)",
			"::stappler::xenolith::vk::View::present(Rc<stappler::xenolith::View::ImageStorage>&&)",
			"::stappler::xenolith::vk::View::presentImmediate(Rc<stappler::xenolith::View::ImageStorage>&&,Function<void (bool)>&&)",
			"::stappler::xenolith::vk::View::invalidateTarget(Rc<stappler::xenolith::View::ImageStorage>&&)",
			"::stappler::xenolith::vk::View::getSwapchainHandle() const",
			"::stappler::xenolith::vk::View::captureImage(stappler::StringView,Rc<core::ImageObject> const&,stappler::xenolith::View::AttachmentLayout) const",
			"::stappler::xenolith::vk::View::captureImage(Function<void (const stappler::xenolith::vk::ImageInfoData &, stappler::BytesView)>&&,Rc<core::ImageObject> const&,stappler::xenolith::View::AttachmentLayout) const",
			"::stappler::xenolith::vk::View::scheduleFence(Rc<stappler::xenolith::vk::Fence>&&)",
			"::stappler::xenolith::vk::View::getUpdateInterval() const",
			"::stappler::xenolith::vk::View::mapWindow()",
			"::stappler::xenolith::vk::View::getDevice() const",
			"::stappler::xenolith::vk::View::setReadyForNextFrame()",
			"::stappler::xenolith::vk::View::ScheduleImageMode",
			"::stappler::xenolith::vk::View::pollInput(bool)",
			"::stappler::xenolith::vk::View::getSurfaceOptions() const",
			"::stappler::xenolith::vk::View::invalidate()",
			"::stappler::xenolith::vk::View::scheduleNextImage(uint64_t,bool)",
			"::stappler::xenolith::vk::View::scheduleSwapchainImage(uint64_t,stappler::xenolith::vk::View::ScheduleImageMode)",
			"::stappler::xenolith::vk::View::acquireScheduledImageImmediate(Rc<stappler::xenolith::vk::SwapchainImage> const&)",
			"::stappler::xenolith::vk::View::acquireScheduledImage()",
			"::stappler::xenolith::vk::View::scheduleImage(Rc<stappler::xenolith::vk::SwapchainImage>&&)",
			"::stappler::xenolith::vk::View::onSwapchainImageReady(Rc<SwapchainHandle::SwapchainAcquiredImage>&&)",
			"::stappler::xenolith::vk::View::recreateSwapchain(core::PresentMode)",
			"::stappler::xenolith::vk::View::createSwapchain(core::SurfaceInfo const&,core::SwapchainConfig&&,core::PresentMode)",
			"::stappler::xenolith::vk::View::isImagePresentable(core::ImageObject const&,VkFilter&) const",
			"::stappler::xenolith::vk::View::runScheduledPresent(Rc<stappler::xenolith::vk::SwapchainImage>&&)",
			"::stappler::xenolith::vk::View::presentWithQueue(stappler::xenolith::vk::DeviceQueue&,Rc<stappler::xenolith::View::ImageStorage>&&)",
			"::stappler::xenolith::vk::View::invalidateSwapchainImage(Rc<stappler::xenolith::View::ImageStorage>&&)",
			"::stappler::xenolith::vk::View::updateFrameInterval()",
			"::stappler::xenolith::vk::View::waitForFences(uint64_t)",
			"::stappler::xenolith::vk::View::finalize()",
			"::stappler::xenolith::vk::View::updateFences()",
			"::stappler::xenolith::vk::View::clearImages()",
			"::stappler::xenolith::vk::View::_options",
			"::stappler::xenolith::vk::View::_readyForNextFrame",
			"::stappler::xenolith::vk::View::_blockDeprecation",
			"::stappler::xenolith::vk::View::_framesInProgress",
			"::stappler::xenolith::vk::View::_fenceOrder",
			"::stappler::xenolith::vk::View::_frameOrder",
			"::stappler::xenolith::vk::View::_onDemandOrder",
			"::stappler::xenolith::vk::View::_scheduledTime",
			"::stappler::xenolith::vk::View::_surface",
			"::stappler::xenolith::vk::View::_instance",
			"::stappler::xenolith::vk::View::_device",
			"::stappler::xenolith::vk::View::_swapchain",
			"::stappler::xenolith::vk::View::_threadName",
			"::stappler::xenolith::vk::View::_initImage",
			"::stappler::xenolith::vk::View::_fences",
			"::stappler::xenolith::vk::View::_fenceImages",
			"::stappler::xenolith::vk::View::_scheduledImages",
			"::stappler::xenolith::vk::View::_scheduledPresent",
			"::stappler::xenolith::vk::View::_requestedSwapchainImage",
			"::stappler::xenolith::vk::View::_swapchainImages"
		]
	},
	"reverse":  {
		"::NMConnectivityState": "XLPlatformLinuxDbus.h",
		"::NMMetered": "XLPlatformLinuxDbus.h",
		"::NMState": "XLPlatformLinuxDbus.h",
		"::_spChar": "SPCore.h",
		"::numbers::pi": "SPCore.h",
		"::operator\"\"_GiB(unsigned long long)": "SPCore.h",
		"::operator\"\"_KiB(unsigned long long)": "SPCore.h",
		"::operator\"\"_MiB(unsigned long long)": "SPCore.h",
		"::operator\"\"_c16(unsigned long long)": "SPCore.h",
		"::operator\"\"_c8(unsigned long long)": "SPCore.h",
		"::operator\"\"_hash(char const*,size_t)": "SPCore.h",
		"::operator\"\"_hash64(char const*,size_t)": "SPCore.h",
		"::operator\"\"_len(char const*,size_t)": "SPCore.h",
		"::operator\"\"_len(char16_t const*,size_t)": "SPCore.h",
		"::operator\"\"_length(char const*,size_t)": "SPCore.h",
		"::operator\"\"_length(char16_t const*,size_t)": "SPCore.h",
		"::operator\"\"_mksec(unsigned long long)": "SPCore.h",
		"::operator\"\"_msec(unsigned long long)": "SPCore.h",
		"::operator\"\"_tag(char const*,size_t)": "SPCore.h",
		"::operator\"\"_tag64(char const*,size_t)": "SPCore.h",
		"::operator\"\"_to_rad(long double)": "SPCore.h",
		"::operator\"\"_to_rad(unsigned long long)": "SPCore.h",
		"::operator\"\"_usec(unsigned long long)": "SPCore.h",
		"::operator\"\"_weak(char const*,size_t)": "SPMemString.h",
		"::operator<<(std::ostream&,VkResult)": "XLVk.h",
		"::stappler::AtomicCounter": "SPRef.h",
		"::stappler::AtomicCounter::AtomicCounter()": "SPRef.h",
		"::stappler::AtomicCounter::_count": "SPRef.h",
		"::stappler::AtomicCounter::decrement()": "SPRef.h",
		"::stappler::AtomicCounter::get() const": "SPRef.h",
		"::stappler::AtomicCounter::increment()": "SPRef.h",
		"::stappler::Binding<class>": "SPSubscription.h",
		"::stappler::Binding<class>::Binding()": "SPSubscription.h",
		"::stappler::Binding<class>::Binding(Binding<T> const&)": "SPSubscription.h",
		"::stappler::Binding<class>::Binding(Binding<T>&&)": "SPSubscription.h",
		"::stappler::Binding<class>::Binding(T*)": "SPSubscription.h",
		"::stappler::Binding<class>::Flags": "SPSubscription.h",
		"::stappler::Binding<class>::Id": "SPSubscription.h",
		"::stappler::Binding<class>::_id": "SPSubscription.h",
		"::stappler::Binding<class>::_subscription": "SPSubscription.h",
		"::stappler::Binding<class>::check()": "SPSubscription.h",
		"::stappler::Binding<class>::get() const": "SPSubscription.h",
		"::stappler::Binding<class>::operator T*()": "SPSubscription.h",
		"::stappler::Binding<class>::operator T*() const": "SPSubscription.h",
		"::stappler::Binding<class>::operator bool() const": "SPSubscription.h",
		"::stappler::Binding<class>::operator->()": "SPSubscription.h",
		"::stappler::Binding<class>::operator->() const": "SPSubscription.h",
		"::stappler::Binding<class>::operator=(Binding<T> const&)": "SPSubscription.h",
		"::stappler::Binding<class>::operator=(Binding<T>&&)": "SPSubscription.h",
		"::stappler::Binding<class>::set(T*)": "SPSubscription.h",
		"::stappler::Binding<class>::~Binding()": "SPSubscription.h",
		"::stappler::BufferTemplate<typename>": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::BufferTemplate(BufferTemplate<Interface>&&)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::BufferTemplate(const BufferTemplate<Interface>&)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::BufferTemplate(size_t)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::_buffer": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::_end": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::_input": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::_ptr": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::byte_type": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::capacity() const": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::clear()": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::data()": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::defsize": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::empty() const": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::get<typename>() const": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::input() const": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::operator=(BufferTemplate<Interface>&&)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::operator=(const BufferTemplate<Interface>&)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::overflow()": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::overflow(size_t)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::pop<typename>(size_t)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::prepare(size_t&)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::put<typename,typename std::enable_if<sizeof(CharType) == 1>::type*>(CharType const*,size_t)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::putc(char)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::putc(char16_t)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::read<typename>(size_t)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::save(uint8_t*,size_t)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::seek(size_t)": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::size() const": "SPBuffer.h",
		"::stappler::BufferTemplate<typename>::str() const": "SPBuffer.h",
		"::stappler::BytesReader<typename>": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::BytesReader()": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::BytesReader(stappler::BytesReader::CharType const*,size_t)": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::CharGroup<stappler::CharGroupId>": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::CharType": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::Chars<CharType...>": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::Compose<typename>": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::Range<char,char>": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::at(size_t const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::back() const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::clear()": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::compare(stappler::BytesReader::CharType const*) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::compare(stappler::BytesReader::CharType const*,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::data() const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::empty() const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::ends_with(BytesReader<stappler::BytesReader::CharType> const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::ends_with(stappler::BytesReader::CharType const*) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::ends_with(stappler::BytesReader::CharType const*,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::find(BytesReader<stappler::BytesReader::CharType> const&,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::find(stappler::BytesReader::CharType const*,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::find(stappler::BytesReader::CharType const*,size_t,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::find(stappler::BytesReader::CharType,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::front() const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::is(stappler::BytesReader::CharType const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::len": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::offset(size_t)": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::operator*() const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::operator<(size_t const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::operator<=(size_t const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::operator>(size_t const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::operator>=(size_t const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::operator[](size_t const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::prefix(stappler::BytesReader::CharType const*,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::ptr": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::rfind(BytesReader<stappler::BytesReader::CharType> const&,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::rfind(stappler::BytesReader::CharType const*,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::rfind(stappler::BytesReader::CharType const*,size_t,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::rfind(stappler::BytesReader::CharType,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::set(uint8_t const*,size_t)": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::size() const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::starts_with(BytesReader<stappler::BytesReader::CharType> const&) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::starts_with(stappler::BytesReader::CharType const*) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::starts_with(stappler::BytesReader::CharType const*,size_t) const": "SPBytesReader.h",
		"::stappler::BytesReader<typename>::terminated() const": "SPBytesReader.h",
		"::stappler::BytesView": "SPBytesView.h",
		"::stappler::BytesViewHost": "SPBytesView.h",
		"::stappler::BytesViewNetwork": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::BytesViewTemplate::PoolBytes const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::BytesViewTemplate::StdBytes const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(stappler::StringView)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate(uint8_t const*,size_t)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<size_t>(std::array<uint8_t, Size> const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const,size_t)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::BytesViewTemplate<stappler::Endian>(BytesViewTemplate<OtherEndianess> const,size_t,size_t)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::Converter<class>": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::PoolBytes": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::Self": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::StdBytes": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::bytes<typename>() const": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::convert<typename>(uint8_t const*)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::operator!=(stappler::BytesViewTemplate::Self const&) const": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::operator++()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::operator++(int)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::operator+=(size_t)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::PoolBytes const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::Self const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::operator=(stappler::BytesViewTemplate::StdBytes const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::operator==(stappler::BytesViewTemplate::Self const&) const": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::pdup(memory::pool_t*) const": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readBytes<stappler::Endian>(size_t)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readFloat16()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readFloat32()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readFloat64()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readString()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readString(size_t)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned16()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned24()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned32()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::readUnsigned64()": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::PoolBytes const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::Self const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::set(stappler::BytesViewTemplate::StdBytes const&)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::set(uint8_t const*,size_t)": "SPBytesView.h",
		"::stappler::BytesViewTemplate<stappler::Endian>::sub(size_t,size_t) const": "SPBytesView.h",
		"::stappler::Callback<typename>": "SPMemInterface.h",
		"::stappler::CharGroupId": "SPCharGroup.h",
		"::stappler::CoderSource": "SPSha.h",
		"::stappler::CoderSource::CoderSource()": "SPSha.h",
		"::stappler::CoderSource::CoderSource(BytesReader<char> const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(BytesReader<uint8_t> const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(char const*)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(char const*,size_t)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(stappler::CoderSource const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(stappler::CoderSource&&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(stappler::StringView const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(typename memory::PoolInterface::BytesType const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(typename memory::PoolInterface::StringType const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(typename memory::StandartInterface::BytesType const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(typename memory::StandartInterface::StringType const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource(uint8_t const*,size_t)": "SPSha.h",
		"::stappler::CoderSource::CoderSource<size_t>(std::array<uint8_t, Size> const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource<stappler::Endian>(BytesViewTemplate<Order> const&)": "SPSha.h",
		"::stappler::CoderSource::CoderSource<typename>(Container const&)": "SPSha.h",
		"::stappler::CoderSource::_data": "SPSha.h",
		"::stappler::CoderSource::_offset": "SPSha.h",
		"::stappler::CoderSource::data() const": "SPSha.h",
		"::stappler::CoderSource::empty() const": "SPSha.h",
		"::stappler::CoderSource::operator=(stappler::CoderSource const&)": "SPSha.h",
		"::stappler::CoderSource::operator=(stappler::CoderSource&&)": "SPSha.h",
		"::stappler::CoderSource::operator[](size_t) const": "SPSha.h",
		"::stappler::CoderSource::read(uint8_t*,size_t)": "SPSha.h",
		"::stappler::CoderSource::seek(int64_t,io::Seek)": "SPSha.h",
		"::stappler::CoderSource::size() const": "SPSha.h",
		"::stappler::CoderSource::tell() const": "SPSha.h",
		"::stappler::CoderSource::view() const": "SPSha.h",
		"::stappler::ConstHashIndex<typename>": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::Type": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::_bucket": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::_next": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::_self": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::ht": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::index": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::next()": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::operator!=(const ConstHashIndex<Value>&) const": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::operator*() const": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::operator++()": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::operator++(int)": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::operator->() const": "SPHashTable.h",
		"::stappler::ConstHashIndex<typename>::operator==(const ConstHashIndex<Value>&) const": "SPHashTable.h",
		"::stappler::Endian": "SPByteOrder.h",
		"::stappler::FilePath": "SPFilepath.h",
		"::stappler::HasMultiplication<typename,typename>": "SPCore.h",
		"::stappler::HasMultiplication<typename,typename>::test<class,class>(A*,B*)": "SPCore.h",
		"::stappler::HasMultiplication<typename,typename>::test<typename,typename>()": "SPCore.h",
		"::stappler::HasMultiplication<typename,typename>::type": "SPCore.h",
		"::stappler::HashEntry<typename>": "SPHashTable.h",
		"::stappler::HashEntry<typename>::Traits": "SPHashTable.h",
		"::stappler::HashEntry<typename>::Type": "SPHashTable.h",
		"::stappler::HashEntry<typename>::data": "SPHashTable.h",
		"::stappler::HashEntry<typename>::get()": "SPHashTable.h",
		"::stappler::HashEntry<typename>::get() const": "SPHashTable.h",
		"::stappler::HashEntry<typename>::getHash<typename>(uint32_t,Args &&...)": "SPHashTable.h",
		"::stappler::HashEntry<typename>::hash": "SPHashTable.h",
		"::stappler::HashEntry<typename>::isEqual<typename>(Value const&,Args &&...)": "SPHashTable.h",
		"::stappler::HashEntry<typename>::next": "SPHashTable.h",
		"::stappler::HashFunc": "SPHashTable.h",
		"::stappler::HashIndex<typename>": "SPHashTable.h",
		"::stappler::HashIndex<typename>::Type": "SPHashTable.h",
		"::stappler::HashIndex<typename>::_bucket": "SPHashTable.h",
		"::stappler::HashIndex<typename>::_next": "SPHashTable.h",
		"::stappler::HashIndex<typename>::_self": "SPHashTable.h",
		"::stappler::HashIndex<typename>::ht": "SPHashTable.h",
		"::stappler::HashIndex<typename>::index": "SPHashTable.h",
		"::stappler::HashIndex<typename>::next()": "SPHashTable.h",
		"::stappler::HashIndex<typename>::operator!=(const HashIndex<Value>&) const": "SPHashTable.h",
		"::stappler::HashIndex<typename>::operator*() const": "SPHashTable.h",
		"::stappler::HashIndex<typename>::operator++()": "SPHashTable.h",
		"::stappler::HashIndex<typename>::operator++(int)": "SPHashTable.h",
		"::stappler::HashIndex<typename>::operator->() const": "SPHashTable.h",
		"::stappler::HashIndex<typename>::operator==(const HashIndex<Value>&) const": "SPHashTable.h",
		"::stappler::HashTable<typename>": "SPHashTable.h",
		"::stappler::HashTable<typename>::HashTable(HashTable<Value>&&,stappler::HashTable::Pool*)": "SPHashTable.h",
		"::stappler::HashTable<typename>::HashTable(const HashTable<Value>&,stappler::HashTable::Pool*)": "SPHashTable.h",
		"::stappler::HashTable<typename>::HashTable(stappler::HashTable::Pool*)": "SPHashTable.h",
		"::stappler::HashTable<typename>::INITIAL_MAX": "SPHashTable.h",
		"::stappler::HashTable<typename>::Pool": "SPHashTable.h",
		"::stappler::HashTable<typename>::ValueType": "SPHashTable.h",
		"::stappler::HashTable<typename>::alloc_array(memory::pool_t*,uint32_t)": "SPHashTable.h",
		"::stappler::HashTable<typename>::allocate_value()": "SPHashTable.h",
		"::stappler::HashTable<typename>::array": "SPHashTable.h",
		"::stappler::HashTable<typename>::assign<typename>(Args &&...)": "SPHashTable.h",
		"::stappler::HashTable<typename>::begin()": "SPHashTable.h",
		"::stappler::HashTable<typename>::begin() const": "SPHashTable.h",
		"::stappler::HashTable<typename>::clear()": "SPHashTable.h",
		"::stappler::HashTable<typename>::const_iterator": "SPHashTable.h",
		"::stappler::HashTable<typename>::contains<typename>(Args &&...) const": "SPHashTable.h",
		"::stappler::HashTable<typename>::count": "SPHashTable.h",
		"::stappler::HashTable<typename>::do_allocate_array(uint32_t)": "SPHashTable.h",
		"::stappler::HashTable<typename>::do_copy(HashEntry<Value>**,uint32_t)": "SPHashTable.h",
		"::stappler::HashTable<typename>::emplace<typename>(Args &&...)": "SPHashTable.h",
		"::stappler::HashTable<typename>::empty() const": "SPHashTable.h",
		"::stappler::HashTable<typename>::end()": "SPHashTable.h",
		"::stappler::HashTable<typename>::end() const": "SPHashTable.h",
		"::stappler::HashTable<typename>::erase(stappler::HashTable::iterator)": "SPHashTable.h",
		"::stappler::HashTable<typename>::erase<typename>(Args &&...)": "SPHashTable.h",
		"::stappler::HashTable<typename>::expand_array(HashTable<Value>*,uint32_t)": "SPHashTable.h",
		"::stappler::HashTable<typename>::find<typename>(Args &&...)": "SPHashTable.h",
		"::stappler::HashTable<typename>::find<typename>(Args &&...) const": "SPHashTable.h",
		"::stappler::HashTable<typename>::foreach_fn": "SPHashTable.h",
		"::stappler::HashTable<typename>::free": "SPHashTable.h",
		"::stappler::HashTable<typename>::get<typename>(Args &&...) const": "SPHashTable.h",
		"::stappler::HashTable<typename>::get_cell_count() const": "SPHashTable.h",
		"::stappler::HashTable<typename>::get_free_count() const": "SPHashTable.h",
		"::stappler::HashTable<typename>::get_seed() const": "SPHashTable.h",
		"::stappler::HashTable<typename>::get_value<typename>(stappler::HashTable::ValueType***,Args &&...) const": "SPHashTable.h",
		"::stappler::HashTable<typename>::iterator": "SPHashTable.h",
		"::stappler::HashTable<typename>::max": "SPHashTable.h",
		"::stappler::HashTable<typename>::merge_fn": "SPHashTable.h",
		"::stappler::HashTable<typename>::operator=(HashTable<Value>&&)": "SPHashTable.h",
		"::stappler::HashTable<typename>::operator=(const HashTable<Value>&)": "SPHashTable.h",
		"::stappler::HashTable<typename>::pool": "SPHashTable.h",
		"::stappler::HashTable<typename>::reserve(size_t)": "SPHashTable.h",
		"::stappler::HashTable<typename>::seed": "SPHashTable.h",
		"::stappler::HashTable<typename>::set_value<typename>(bool,stappler::HashTable::ValueType***,Args &&...)": "SPHashTable.h",
		"::stappler::HashTable<typename>::size() const": "SPHashTable.h",
		"::stappler::HashTable<typename>::~HashTable()": "SPHashTable.h",
		"::stappler::HashTraitDiscovery<Rc<Value>>::HashTraitDiscovery<Rc<Value>>": "SPHashTable.h",
		"::stappler::HashTraitDiscovery<Rc<Value>>::type": "SPHashTable.h",
		"::stappler::HashTraitDiscovery<Value*>::HashTraitDiscovery<Value*>": "SPHashTable.h",
		"::stappler::HashTraitDiscovery<Value*>::type": "SPHashTable.h",
		"::stappler::HashTraitDiscovery<xenolith::ActionContainer>::HashTraitDiscovery<xenolith::ActionContainer>": "XLActionManager.h",
		"::stappler::HashTraitDiscovery<xenolith::ActionContainer>::type": "XLActionManager.h",
		"::stappler::HashTraits<NamedMem*>::HashTraits<NamedMem*>": "SPHashTable.h",
		"::stappler::HashTraits<NamedMem*>::equal(stappler::NamedMem const*,stappler::NamedMem const*)": "SPHashTable.h",
		"::stappler::HashTraits<NamedMem*>::equal(stappler::NamedMem const*,stappler::StringView)": "SPHashTable.h",
		"::stappler::HashTraits<NamedMem*>::hash(uint32_t,stappler::NamedMem const*)": "SPHashTable.h",
		"::stappler::HashTraits<NamedMem*>::hash(uint32_t,stappler::StringView)": "SPHashTable.h",
		"::stappler::HashTraits<NamedRef*>::HashTraits<NamedRef*>": "SPHashTable.h",
		"::stappler::HashTraits<NamedRef*>::equal(stappler::NamedRef const*,stappler::NamedRef const*)": "SPHashTable.h",
		"::stappler::HashTraits<NamedRef*>::hash(uint32_t,stappler::NamedRef const*)": "SPHashTable.h",
		"::stappler::HashTraits<PriorityListEntry<Value>*>::Entry": "SPPriorityList.h",
		"::stappler::HashTraits<PriorityListEntry<Value>*>::HashTraits<PriorityListEntry<Value>*>": "SPPriorityList.h",
		"::stappler::HashTraits<PriorityListEntry<Value>*>::ValueOffset": "SPPriorityList.h",
		"::stappler::HashTraits<PriorityListEntry<Value>*>::ValueSize": "SPPriorityList.h",
		"::stappler::HashTraits<PriorityListEntry<Value>*>::equal(stappler::HashTraits<PriorityListEntry<type-parameter-0-0> *>::Entry const*,stappler::HashTraits<PriorityListEntry<type-parameter-0-0> *>::Entry const*)": "SPPriorityList.h",
		"::stappler::HashTraits<PriorityListEntry<Value>*>::equal(stappler::HashTraits<PriorityListEntry<type-parameter-0-0> *>::Entry const*,void const*)": "SPPriorityList.h",
		"::stappler::HashTraits<PriorityListEntry<Value>*>::hash(uint32_t,stappler::HashTraits<PriorityListEntry<type-parameter-0-0> *>::Entry const*)": "SPPriorityList.h",
		"::stappler::HashTraits<PriorityListEntry<Value>*>::hash(uint32_t,void const*)": "SPPriorityList.h",
		"::stappler::HashTraits<Rc<NamedRef>>::HashTraits<Rc<NamedRef>>": "SPHashTable.h",
		"::stappler::HashTraits<Rc<NamedRef>>::equal(stappler::NamedRef const*,stappler::NamedRef const*)": "SPHashTable.h",
		"::stappler::HashTraits<Rc<NamedRef>>::equal(stappler::NamedRef const*,stappler::StringView)": "SPHashTable.h",
		"::stappler::HashTraits<Rc<NamedRef>>::hash(uint32_t,stappler::NamedRef const*)": "SPHashTable.h",
		"::stappler::HashTraits<Rc<NamedRef>>::hash(uint32_t,stappler::StringView)": "SPHashTable.h",
		"::stappler::InitializerList<typename>": "SPCore.h",
		"::stappler::NamedMem": "SPHashTable.h",
		"::stappler::NamedMem::key": "SPHashTable.h",
		"::stappler::NamedMem::~NamedMem()": "SPHashTable.h",
		"::stappler::NamedRef": "SPHashTable.h",
		"::stappler::NamedRef::getName() const": "SPHashTable.h",
		"::stappler::NamedRef::~NamedRef()": "SPHashTable.h",
		"::stappler::NumericLimits<typename>": "SPCore.h",
		"::stappler::Pair<typename,typename>": "SPCore.h",
		"::stappler::PriorityList<typename>": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::Entry": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::Pool": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::PriorityList(stappler::PriorityList::Pool*)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::_free": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::_hash": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::_negList": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::_pool": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::_posList": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::_size": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::_zeroList": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::allocate<typename>(void*,int32_t,Args &&...)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::clear()": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::emplace<typename>(void*,int32_t,Args &&...)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::emplace_list<typename>(bool,stappler::PriorityList::Entry**,void*,int32_t,Args &&...)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::empty() const": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::erase(void const*)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::erase_entry(stappler::PriorityList::Entry*)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::find(void*)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::foreach(Callback<bool (void *, int32_t, Value &)> const&)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::foreach_list(stappler::PriorityList::Entry*,Callback<bool (void *, int32_t, Value &)> const&)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::free(stappler::PriorityList::Entry*)": "SPPriorityList.h",
		"::stappler::PriorityList<typename>::~PriorityList()": "SPPriorityList.h",
		"::stappler::PriorityListEntry<typename>": "SPPriorityList.h",
		"::stappler::PriorityListEntry<typename>::next": "SPPriorityList.h",
		"::stappler::PriorityListEntry<typename>::prev": "SPPriorityList.h",
		"::stappler::PriorityListEntry<typename>::priority": "SPPriorityList.h",
		"::stappler::PriorityListEntry<typename>::target": "SPPriorityList.h",
		"::stappler::PriorityListEntry<typename>::value": "SPPriorityList.h",
		"::stappler::Rc<typename>": "SPRef.h",
		"::stappler::RcBase<typename>": "SPRef.h",
		"::stappler::RcBase<typename>::Pointer": "SPRef.h",
		"::stappler::RcBase<typename>::RcBase()": "SPRef.h",
		"::stappler::RcBase<typename>::RcBase(stappler::RcBase::Pointer const&)": "SPRef.h",
		"::stappler::RcBase<typename>::RcBase(stappler::RcBase::Pointer,bool)": "SPRef.h",
		"::stappler::RcBase<typename>::RcBase(stappler::RcBase::Self const&)": "SPRef.h",
		"::stappler::RcBase<typename>::RcBase(stappler::RcBase::Self&&)": "SPRef.h",
		"::stappler::RcBase<typename>::RcBase(stappler::nullptr_t const&)": "SPRef.h",
		"::stappler::RcBase<typename>::Self": "SPRef.h",
		"::stappler::RcBase<typename>::Type": "SPRef.h",
		"::stappler::RcBase<typename>::_ptr": "SPRef.h",
		"::stappler::RcBase<typename>::alloc()": "SPRef.h",
		"::stappler::RcBase<typename>::alloc<class>(Args &&...)": "SPRef.h",
		"::stappler::RcBase<typename>::cast<typename>() const": "SPRef.h",
		"::stappler::RcBase<typename>::create<class>(Args &&...)": "SPRef.h",
		"::stappler::RcBase<typename>::doRelease()": "SPRef.h",
		"::stappler::RcBase<typename>::doRetain()": "SPRef.h",
		"::stappler::RcBase<typename>::doSwap(stappler::RcBase::Pointer)": "SPRef.h",
		"::stappler::RcBase<typename>::get() const": "SPRef.h",
		"::stappler::RcBase<typename>::operator Base*() const": "SPRef.h",
		"::stappler::RcBase<typename>::operator RcBase<B><typename,typename std::enable_if<std::is_convertible<Base *, B *>({})>::type*>()": "SPRef.h",
		"::stappler::RcBase<typename>::operator bool() const": "SPRef.h",
		"::stappler::RcBase<typename>::operator!=(Base const*&) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator!=(stappler::RcBase::Self const&) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator!=(std::nullptr_t const) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator!=(typename std::remove_const<Base>::type*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator->() const": "SPRef.h",
		"::stappler::RcBase<typename>::operator<(Base const*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator<(stappler::RcBase::Self const&) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator<(std::nullptr_t const) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator<(typename std::remove_const<Base>::type*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator<=(Base const*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator<=(stappler::RcBase::Self const&) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator<=(std::nullptr_t const) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator<=(typename std::remove_const<Base>::type*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator=(stappler::RcBase::Pointer const&)": "SPRef.h",
		"::stappler::RcBase<typename>::operator=(stappler::RcBase::Self const&)": "SPRef.h",
		"::stappler::RcBase<typename>::operator=(stappler::RcBase::Self&&)": "SPRef.h",
		"::stappler::RcBase<typename>::operator=(stappler::nullptr_t const&)": "SPRef.h",
		"::stappler::RcBase<typename>::operator=<typename,typename std::enable_if<std::is_convertible<B *, Base *>({})>::type*>(RcBase<B> const&)": "SPRef.h",
		"::stappler::RcBase<typename>::operator==(Base const*&) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator==(stappler::RcBase::Self const&) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator==(std::nullptr_t const) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator==(typename std::remove_const<Base>::type*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator>(Base const*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator>(stappler::RcBase::Self const&) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator>(std::nullptr_t const) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator>(typename std::remove_const<Base>::type*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator>=(Base const*) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator>=(stappler::RcBase::Self const&) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator>=(std::nullptr_t const) const": "SPRef.h",
		"::stappler::RcBase<typename>::operator>=(typename std::remove_const<Base>::type*) const": "SPRef.h",
		"::stappler::RcBase<typename>::set(stappler::RcBase::Pointer const&)": "SPRef.h",
		"::stappler::RcBase<typename>::swap(stappler::RcBase::Self&)": "SPRef.h",
		"::stappler::RcBase<typename>::~RcBase()": "SPRef.h",
		"::stappler::ReaderClassBase<typename>": "SPStringView.h",
		"::stappler::ReaderClassBase<typename>::Chars<CharType...>": "SPStringView.h",
		"::stappler::ReaderClassBase<typename>::Group<GroupId>": "SPStringView.h",
		"::stappler::ReaderClassBase<typename>::GroupId": "SPStringView.h",
		"::stappler::ReaderClassBase<typename>::Range<CharType,CharType>": "SPStringView.h",
		"::stappler::RefBase<typename>": "SPRef.h",
		"::stappler::RefBase<typename>::InterfaceType": "SPRef.h",
		"::stappler::RefBase<typename>::RefBase()": "SPRef.h",
		"::stappler::RefBase<typename>::_counter": "SPRef.h",
		"::stappler::RefBase<typename>::getReferenceCount() const": "SPRef.h",
		"::stappler::RefBase<typename>::release(uint64_t)": "SPRef.h",
		"::stappler::RefBase<typename>::retain()": "SPRef.h",
		"::stappler::RefBase<typename>::~RefBase()": "SPRef.h",
		"::stappler::RefContainer<typename>": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::ContainerSize": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::Interface": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::RefContainer()": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::ReserveItems": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::Vector<typename>": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::_container": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::_nitems": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::addItem(Item*)": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::cleanup()": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::clear()": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::empty() const": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::foreach<typename>(Callback const&) const": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::getItemByTag(uint32_t) const": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::invalidateAllItemsByTag(uint32_t)": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::invalidateItemByTag(uint32_t)": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::removeAllItemsByTag(uint32_t)": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::removeItem(Item*)": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::removeItemByTag(uint32_t)": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::size() const": "SPRefContainer.h",
		"::stappler::RefContainer<typename>::~RefContainer()": "SPRefContainer.h",
		"::stappler::Result<typename>": "SPCore.h",
		"::stappler::Result<typename>::Result()": "SPCore.h",
		"::stappler::Result<typename>::Result(Result<T>&&)": "SPCore.h",
		"::stappler::Result<typename>::Result(T const&)": "SPCore.h",
		"::stappler::Result<typename>::Result(T&&)": "SPCore.h",
		"::stappler::Result<typename>::Result(const Result<T>&)": "SPCore.h",
		"::stappler::Result<typename>::Status": "SPCore.h",
		"::stappler::Result<typename>::error()": "SPCore.h",
		"::stappler::Result<typename>::get() const": "SPCore.h",
		"::stappler::Result<typename>::get(T const&) const": "SPCore.h",
		"::stappler::Result<typename>::grab(T&)": "SPCore.h",
		"::stappler::Result<typename>::operator=(Result<T>&&)": "SPCore.h",
		"::stappler::Result<typename>::operator=(const Result<T>&)": "SPCore.h",
		"::stappler::Result<typename>::result": "SPCore.h",
		"::stappler::Result<typename>::status": "SPCore.h",
		"::stappler::Result<typename>::unwrap<typename>(Callback const&) const": "SPCore.h",
		"::stappler::Result<typename>::valid() const": "SPCore.h",
		"::stappler::SpanView<typename>": "SPSpanView.h",
		"::stappler::SpanView<typename>::Self": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView()": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(InitializerList<stappler::SpanView::Type>)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(memory::vector<Type> const&)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(memory::vector<Type> const&,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(memory::vector<Type> const&,size_t,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Self const&)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Self const&,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Self const&,size_t,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Type const*,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(stappler::SpanView::Type const*,stappler::SpanView::Type const*)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(std::vector<Type> const&)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(std::vector<Type> const&,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView(std::vector<Type> const&,size_t,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView<class>(InputIt,InputIt)": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView<size_t>(stappler::SpanView::Type const(&)[Size])": "SPSpanView.h",
		"::stappler::SpanView<typename>::SpanView<size_t>(std::array<Type, Size> const&)": "SPSpanView.h",
		"::stappler::SpanView<typename>::Type": "SPSpanView.h",
		"::stappler::SpanView<typename>::alloc(memory::pool_t*,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::at(size_t const&) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::back() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::begin() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::bytes() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::clear()": "SPSpanView.h",
		"::stappler::SpanView<typename>::data() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::empty() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::end() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::first(size_t) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::front() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::hash() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::iterator": "SPSpanView.h",
		"::stappler::SpanView<typename>::last(size_t) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::len": "SPSpanView.h",
		"::stappler::SpanView<typename>::offset(size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator!=(stappler::SpanView::Self const&) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator*() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator++()": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator++(int)": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator+=(size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator<(size_t const&) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator<=(size_t const&) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator=(memory::vector<Type> const&)": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator=(stappler::SpanView::Self const&)": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator=(std::vector<Type> const&)": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator=<size_t>(std::array<Type, Size> const&)": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator==(stappler::SpanView::Self const&) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator>(size_t const&) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator>=(size_t const&) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::operator[](size_t const&) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::pdup(memory::pool_t*) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::pop_back(size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::pop_front(size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::ptr": "SPSpanView.h",
		"::stappler::SpanView<typename>::rbegin() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::rend() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::reverse_iterator": "SPSpanView.h",
		"::stappler::SpanView<typename>::set(stappler::SpanView::Type const*,size_t)": "SPSpanView.h",
		"::stappler::SpanView<typename>::size() const": "SPSpanView.h",
		"::stappler::SpanView<typename>::sub(size_t,size_t) const": "SPSpanView.h",
		"::stappler::SpanView<typename>::vec<typename>() const": "SPSpanView.h",
		"::stappler::StackBuffer<size_t>": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::StackBuffer()": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::StackBuffer(StackBuffer<Size>&&)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::StackBuffer(const StackBuffer<Size>&)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::_buf": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::_size": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::at(size_t)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::at(size_t) const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::capacity() const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::clear()": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::data()": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::data() const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::empty() const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::full() const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::get<typename>() const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::operator=(StackBuffer<Size>&&)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::operator=(const StackBuffer<Size>&)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::operator[](size_t)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::operator[](size_t) const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::prepare(size_t&)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::prepare_preserve(size_t&)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::put(uint8_t const*,size_t)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::putc(uint8_t)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::remains() const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::save(uint8_t*,size_t)": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::size() const": "SPBuffer.h",
		"::stappler::StackBuffer<size_t>::soft_clear()": "SPBuffer.h",
		"::stappler::StringToNumber(char const*,char**,int)": "SPCore.h",
		"::stappler::StringToNumber<typename>(char const*)": "SPMemInterface.h",
		"::stappler::StringToNumber<typename>(char const*,char**,int)": "SPCore.h",
		"::stappler::StringToNumber<typename>(memory::PoolInterface::StringType const&)": "SPMemInterface.h",
		"::stappler::StringToNumber<typename>(memory::StandartInterface::StringType const&)": "SPMemInterface.h",
		"::stappler::StringView": "SPStringView.h",
		"::stappler::StringViewBase(char const*,size_t)": "SPStringView.h",
		"::stappler::StringViewBase<typename>": "SPStringView.h",
		"::stappler::StringViewBase<typename>::Alphanumeric": "SPStringView.h",
		"::stappler::StringViewBase<typename>::Base64": "SPStringView.h",
		"::stappler::StringViewBase<typename>::CharType": "SPStringView.h",
		"::stappler::StringViewBase<typename>::Hexadecimial": "SPStringView.h",
		"::stappler::StringViewBase<typename>::Latin": "SPStringView.h",
		"::stappler::StringViewBase<typename>::LatinLowercase": "SPStringView.h",
		"::stappler::StringViewBase<typename>::LatinUppercase": "SPStringView.h",
		"::stappler::StringViewBase<typename>::MatchCharGroup<stappler::CharGroupId>": "SPStringView.h",
		"::stappler::StringViewBase<typename>::MatchCharType": "SPStringView.h",
		"::stappler::StringViewBase<typename>::MatchChars<CharType...>": "SPStringView.h",
		"::stappler::StringViewBase<typename>::MatchRange<char,char>": "SPStringView.h",
		"::stappler::StringViewBase<typename>::Numbers": "SPStringView.h",
		"::stappler::StringViewBase<typename>::PoolString": "SPStringView.h",
		"::stappler::StringViewBase<typename>::Self": "SPStringView.h",
		"::stappler::StringViewBase<typename>::StdString": "SPStringView.h",
		"::stappler::StringViewBase<typename>::StringViewBase()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::CharType const*,size_t)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::CharType const*,size_t,size_t)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::PoolString const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::Self const&,size_t)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::Self const&,size_t,size_t)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::StringViewBase(stappler::StringViewBase::StdString const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::TraitsType": "SPStringView.h",
		"::stappler::StringViewBase<typename>::WhiteSpace": "SPStringView.h",
		"::stappler::StringViewBase<typename>::__merge<typename,typename>(Buf&,T const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::__merge<typename>(Buf&,stappler::StringViewBase::CharType const*)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::__size(stappler::StringViewBase::CharType const*)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::__size<typename>(T const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::_merge<typename,typename,typename>(Buf&,T&&,Args &&...)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::_merge<typename,typename>(Buf&,T&&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::_size<typename,typename>(T&&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::_size<typename,typename>(T&&,Args &&...)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::backwardReadChars<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::backwardReadUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::backwardSkipChars<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::backwardSkipUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::begin() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::end() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::hash() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::hash32() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::CharType const&) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::CharType const*) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::is(stappler::StringViewBase::Self const&) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::is<_CharType>() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::is<stappler::CharGroupId>() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::is<stappler::StringViewBase::CharType>() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::is<typename>() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::match<typename>(stappler::StringViewBase::CharType)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::merge<typename,typename>(Args &&...)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator!=(stappler::StringViewBase::Self const&) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator++()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator++(int)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator+=(size_t)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator-(stappler::StringViewBase::Self const&) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator-=(stappler::StringViewBase::Self const&) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::PoolString const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::Self const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator=(stappler::StringViewBase::StdString const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::operator==(stappler::StringViewBase::Self const&) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::pdup(memory::pool_t*) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::readChars<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::readDouble()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::readFloat()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::readInteger(int)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::readUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::readUntilString(stappler::StringViewBase::Self const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::CharType const*,size_t)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::PoolString const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::Self const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::set(stappler::StringViewBase::StdString const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::skipChars<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::skipString(stappler::StringViewBase::Self const&)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::skipUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::skipUntilString(stappler::StringViewBase::Self const&,bool)": "SPStringView.h",
		"::stappler::StringViewBase<typename>::split<typename,typename>(Callback const&) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::str<typename>() const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::sub(size_t,size_t) const": "SPStringView.h",
		"::stappler::StringViewBase<typename>::trimChars<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::trimUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewBase<typename>::value_type": "SPStringView.h",
		"::stappler::StringViewUtf8": "SPStringView.h",
		"::stappler::StringViewUtf8::Alphanumeric": "SPStringView.h",
		"::stappler::StringViewUtf8::Base64": "SPStringView.h",
		"::stappler::StringViewUtf8::CharGroup<stappler::CharGroupId>": "SPStringView.h",
		"::stappler::StringViewUtf8::CharType": "SPStringView.h",
		"::stappler::StringViewUtf8::Chars<MatchCharType...>": "SPStringView.h",
		"::stappler::StringViewUtf8::Compose<typename>": "SPStringView.h",
		"::stappler::StringViewUtf8::Hexadecimial": "SPStringView.h",
		"::stappler::StringViewUtf8::Latin": "SPStringView.h",
		"::stappler::StringViewUtf8::LatinLowercase": "SPStringView.h",
		"::stappler::StringViewUtf8::LatinUppercase": "SPStringView.h",
		"::stappler::StringViewUtf8::MatchCharGroup<stappler::CharGroupId>": "SPStringView.h",
		"::stappler::StringViewUtf8::MatchCharType": "SPStringView.h",
		"::stappler::StringViewUtf8::MatchChars<MatchCharType...>": "SPStringView.h",
		"::stappler::StringViewUtf8::MatchCompose<typename>": "SPStringView.h",
		"::stappler::StringViewUtf8::MatchRange<char,char>": "SPStringView.h",
		"::stappler::StringViewUtf8::Numbers": "SPStringView.h",
		"::stappler::StringViewUtf8::PoolString": "SPStringView.h",
		"::stappler::StringViewUtf8::Range<char,char>": "SPStringView.h",
		"::stappler::StringViewUtf8::Self": "SPStringView.h",
		"::stappler::StringViewUtf8::StdString": "SPStringView.h",
		"::stappler::StringViewUtf8::StringViewUtf8()": "SPStringView.h",
		"::stappler::StringViewUtf8::StringViewUtf8(StringViewBase<char> const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::StringViewUtf8(char const*,size_t)": "SPStringView.h",
		"::stappler::StringViewUtf8::StringViewUtf8(char const*,size_t,size_t)": "SPStringView.h",
		"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8 const&,size_t)": "SPStringView.h",
		"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8 const&,size_t,size_t)": "SPStringView.h",
		"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8::PoolString const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::StringViewUtf8(stappler::StringViewUtf8::StdString const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::TraitsType": "SPStringView.h",
		"::stappler::StringViewUtf8::WhiteSpace": "SPStringView.h",
		"::stappler::StringViewUtf8::backwardReadChars<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::backwardReadUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::backwardSkipChars<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::backwardSkipUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::begin() const": "SPStringView.h",
		"::stappler::StringViewUtf8::code_size() const": "SPStringView.h",
		"::stappler::StringViewUtf8::end() const": "SPStringView.h",
		"::stappler::StringViewUtf8::foreach<typename>(Callback const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::hash() const": "SPStringView.h",
		"::stappler::StringViewUtf8::hash32() const": "SPStringView.h",
		"::stappler::StringViewUtf8::is(char const&) const": "SPStringView.h",
		"::stappler::StringViewUtf8::is(char const*) const": "SPStringView.h",
		"::stappler::StringViewUtf8::is(char16_t const&) const": "SPStringView.h",
		"::stappler::StringViewUtf8::is(stappler::StringViewUtf8::Self const&) const": "SPStringView.h",
		"::stappler::StringViewUtf8::is<char16_t>() const": "SPStringView.h",
		"::stappler::StringViewUtf8::is<stappler::CharGroupId>() const": "SPStringView.h",
		"::stappler::StringViewUtf8::is<typename>() const": "SPStringView.h",
		"::stappler::StringViewUtf8::isSpace() const": "SPStringView.h",
		"::stappler::StringViewUtf8::letter<typename>() const": "SPStringView.h",
		"::stappler::StringViewUtf8::match<typename>(char16_t)": "SPStringView.h",
		"::stappler::StringViewUtf8::offset(size_t)": "SPStringView.h",
		"::stappler::StringViewUtf8::operator StringViewBase<char>() const": "SPStringView.h",
		"::stappler::StringViewUtf8::operator!=(stappler::StringViewUtf8::Self const&) const": "SPStringView.h",
		"::stappler::StringViewUtf8::operator*() const": "SPStringView.h",
		"::stappler::StringViewUtf8::operator++()": "SPStringView.h",
		"::stappler::StringViewUtf8::operator++(int)": "SPStringView.h",
		"::stappler::StringViewUtf8::operator+=(size_t)": "SPStringView.h",
		"::stappler::StringViewUtf8::operator-(stappler::StringViewUtf8::Self const&) const": "SPStringView.h",
		"::stappler::StringViewUtf8::operator-=(stappler::StringViewUtf8::Self const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::PoolString const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::Self const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::operator=(stappler::StringViewUtf8::StdString const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::operator==(stappler::StringViewUtf8::Self const&) const": "SPStringView.h",
		"::stappler::StringViewUtf8::readChars<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::readDouble()": "SPStringView.h",
		"::stappler::StringViewUtf8::readFloat()": "SPStringView.h",
		"::stappler::StringViewUtf8::readInteger(int)": "SPStringView.h",
		"::stappler::StringViewUtf8::readUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::readUntilString(stappler::StringViewUtf8::Self const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::rv_match_utf8<typename>(stappler::StringViewUtf8::CharType const*,size_t,uint8_t&)": "SPStringView.h",
		"::stappler::StringViewUtf8::set(char const*,size_t)": "SPStringView.h",
		"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::PoolString const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::Self const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::set(stappler::StringViewUtf8::StdString const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::skipChars<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::skipString(stappler::StringViewUtf8::Self const&)": "SPStringView.h",
		"::stappler::StringViewUtf8::skipUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::skipUntilString(stappler::StringViewUtf8::Self const&,bool)": "SPStringView.h",
		"::stappler::StringViewUtf8::split<typename,typename>(Callback const&) const": "SPStringView.h",
		"::stappler::StringViewUtf8::str<typename>() const": "SPStringView.h",
		"::stappler::StringViewUtf8::sub(size_t,size_t) const": "SPStringView.h",
		"::stappler::StringViewUtf8::trimChars<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::trimUntil<typename>()": "SPStringView.h",
		"::stappler::StringViewUtf8::value_type": "SPStringView.h",
		"::stappler::StringView_readNumber<typename>(stappler::const_char16_ptr&,size_t&,int)": "SPStringView.h",
		"::stappler::StringView_readNumber<typename>(stappler::const_char_ptr&,size_t&,int)": "SPStringView.h",
		"::stappler::SubscriptionFlags": "SPSubscription.h",
		"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::SubscriptionFlags const&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::SubscriptionFlags&&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::SubscriptionFlags::Super const&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::SubscriptionFlags::Super&&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::ValueWrapper<unsigned long, stappler::SubscriptionFlagsClassFlag>::Type const&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::SubscriptionFlags(stappler::ValueWrapper<unsigned long, stappler::SubscriptionFlagsClassFlag>::Type&&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::Super": "SPSubscription.h",
		"::stappler::SubscriptionFlags::hasFlag<typename>(T) const": "SPSubscription.h",
		"::stappler::SubscriptionFlags::initial() const": "SPSubscription.h",
		"::stappler::SubscriptionFlags::operator=(stappler::SubscriptionFlags const&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::operator=(stappler::SubscriptionFlags&&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::operator=(stappler::SubscriptionFlags::Super const&)": "SPSubscription.h",
		"::stappler::SubscriptionFlags::operator=(stappler::SubscriptionFlags::Super&&)": "SPSubscription.h",
		"::stappler::SubscriptionId": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::Flag()": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::Flag<class,class>(T,Args &&...)": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::Flags": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::FlagsMap": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::Id": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::Initial": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::Interface": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::_Flag<class>(T)": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::_flags": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::_forwarded": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::_forwardedFlags": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::check(stappler::SubscriptionTemplate::Id)": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::getNextId()": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::setDirty(stappler::SubscriptionTemplate::Flags,bool)": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::setForwardedSubscription(SubscriptionTemplate<_Interface>*)": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::subscribe(stappler::SubscriptionTemplate::Id)": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::unsubscribe(stappler::SubscriptionTemplate::Id)": "SPSubscription.h",
		"::stappler::SubscriptionTemplate<typename>::~SubscriptionTemplate()": "SPSubscription.h",
		"::stappler::Time": "SPTime.h",
		"::stappler::Time::Time()": "SPTime.h",
		"::stappler::Time::Time(stappler::Time const&)": "SPTime.h",
		"::stappler::Time::Time(stappler::Time&&)": "SPTime.h",
		"::stappler::Time::Time(stappler::nullptr_t)": "SPTime.h",
		"::stappler::Time::encodeToFormat(char*,size_t,char const*) const": "SPTime.h",
		"::stappler::Time::floatSeconds(float)": "SPTime.h",
		"::stappler::Time::fromCompileTime(char const*,char const*)": "SPTime.h",
		"::stappler::Time::fromHttp(stappler::StringView)": "SPTime.h",
		"::stappler::Time::microseconds(uint64_t)": "SPTime.h",
		"::stappler::Time::milliseconds(uint64_t)": "SPTime.h",
		"::stappler::Time::now()": "SPTime.h",
		"::stappler::Time::operator!=(stappler::Time const&) const": "SPTime.h",
		"::stappler::Time::operator+(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::Time::operator+=(stappler::TimeInterval const&)": "SPTime.h",
		"::stappler::Time::operator-(stappler::Time const&) const": "SPTime.h",
		"::stappler::Time::operator-(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::Time::operator-=(stappler::TimeInterval const&)": "SPTime.h",
		"::stappler::Time::operator<(stappler::Time const&) const": "SPTime.h",
		"::stappler::Time::operator<=(stappler::Time const&) const": "SPTime.h",
		"::stappler::Time::operator=(stappler::Time const&)": "SPTime.h",
		"::stappler::Time::operator=(stappler::Time&&)": "SPTime.h",
		"::stappler::Time::operator=(stappler::nullptr_t)": "SPTime.h",
		"::stappler::Time::operator==(stappler::Time const&) const": "SPTime.h",
		"::stappler::Time::operator>(stappler::Time const&) const": "SPTime.h",
		"::stappler::Time::operator>=(stappler::Time const&) const": "SPTime.h",
		"::stappler::Time::seconds(time_t)": "SPTime.h",
		"::stappler::Time::toAtomXml<typename>() const": "SPTime.h",
		"::stappler::Time::toCTime<typename>() const": "SPTime.h",
		"::stappler::Time::toFormat<typename>(char const*) const": "SPTime.h",
		"::stappler::Time::toHttp<typename>() const": "SPTime.h",
		"::stappler::Time::toIso8601<typename>(size_t) const": "SPTime.h",
		"::stappler::Time::toRfc822<typename>() const": "SPTime.h",
		"::stappler::TimeInterval": "SPTime.h",
		"::stappler::TimeInterval::TimeInterval()": "SPTime.h",
		"::stappler::TimeInterval::TimeInterval(stappler::TimeInterval const&)": "SPTime.h",
		"::stappler::TimeInterval::TimeInterval(stappler::TimeInterval&&)": "SPTime.h",
		"::stappler::TimeInterval::TimeInterval(stappler::nullptr_t)": "SPTime.h",
		"::stappler::TimeInterval::between(stappler::Time const&,stappler::Time const&)": "SPTime.h",
		"::stappler::TimeInterval::floatSeconds(float)": "SPTime.h",
		"::stappler::TimeInterval::microseconds(uint64_t)": "SPTime.h",
		"::stappler::TimeInterval::milliseconds(uint64_t)": "SPTime.h",
		"::stappler::TimeInterval::operator!=(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::TimeInterval::operator*(float) const": "SPTime.h",
		"::stappler::TimeInterval::operator*=(float)": "SPTime.h",
		"::stappler::TimeInterval::operator+(stappler::Time const&) const": "SPTime.h",
		"::stappler::TimeInterval::operator+(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::TimeInterval::operator+=(stappler::TimeInterval const&)": "SPTime.h",
		"::stappler::TimeInterval::operator-(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::TimeInterval::operator-=(stappler::TimeInterval const&)": "SPTime.h",
		"::stappler::TimeInterval::operator/(float) const": "SPTime.h",
		"::stappler::TimeInterval::operator/=(float)": "SPTime.h",
		"::stappler::TimeInterval::operator<(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::TimeInterval::operator<=(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::TimeInterval::operator=(stappler::TimeInterval const&)": "SPTime.h",
		"::stappler::TimeInterval::operator=(stappler::TimeInterval&&)": "SPTime.h",
		"::stappler::TimeInterval::operator=(stappler::nullptr_t)": "SPTime.h",
		"::stappler::TimeInterval::operator==(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::TimeInterval::operator>(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::TimeInterval::operator>=(stappler::TimeInterval const&) const": "SPTime.h",
		"::stappler::TimeInterval::seconds(time_t)": "SPTime.h",
		"::stappler::TimeStorage": "SPTime.h",
		"::stappler::TimeStorage::TimeStorage()": "SPTime.h",
		"::stappler::TimeStorage::TimeStorage(stappler::TimeStorage const&)": "SPTime.h",
		"::stappler::TimeStorage::TimeStorage(stappler::TimeStorage&&)": "SPTime.h",
		"::stappler::TimeStorage::TimeStorage(uint64_t)": "SPTime.h",
		"::stappler::TimeStorage::_value": "SPTime.h",
		"::stappler::TimeStorage::asGmt() const": "SPTime.h",
		"::stappler::TimeStorage::asLocal() const": "SPTime.h",
		"::stappler::TimeStorage::clear()": "SPTime.h",
		"::stappler::TimeStorage::fsec() const": "SPTime.h",
		"::stappler::TimeStorage::mksec() const": "SPTime.h",
		"::stappler::TimeStorage::msec() const": "SPTime.h",
		"::stappler::TimeStorage::operator bool() const": "SPTime.h",
		"::stappler::TimeStorage::operator=(stappler::TimeStorage const&)": "SPTime.h",
		"::stappler::TimeStorage::operator=(stappler::TimeStorage&&)": "SPTime.h",
		"::stappler::TimeStorage::sec() const": "SPTime.h",
		"::stappler::TimeStorage::setMicros(uint64_t)": "SPTime.h",
		"::stappler::TimeStorage::setMicroseconds(uint64_t)": "SPTime.h",
		"::stappler::TimeStorage::setMillis(uint64_t)": "SPTime.h",
		"::stappler::TimeStorage::setMilliseconds(uint64_t)": "SPTime.h",
		"::stappler::TimeStorage::setSeconds(time_t)": "SPTime.h",
		"::stappler::TimeStorage::toFloatSeconds() const": "SPTime.h",
		"::stappler::TimeStorage::toMicros() const": "SPTime.h",
		"::stappler::TimeStorage::toMicroseconds() const": "SPTime.h",
		"::stappler::TimeStorage::toMillis() const": "SPTime.h",
		"::stappler::TimeStorage::toMilliseconds() const": "SPTime.h",
		"::stappler::TimeStorage::toSeconds() const": "SPTime.h",
		"::stappler::UrlView": "SPUrl.h",
		"::stappler::UrlView::UrlToken": "SPUrl.h",
		"::stappler::UrlView::UrlView()": "SPUrl.h",
		"::stappler::UrlView::UrlView(stappler::StringView)": "SPUrl.h",
		"::stappler::UrlView::clear()": "SPUrl.h",
		"::stappler::UrlView::fragment": "SPUrl.h",
		"::stappler::UrlView::get<typename>() const": "SPUrl.h",
		"::stappler::UrlView::host": "SPUrl.h",
		"::stappler::UrlView::isEmail() const": "SPUrl.h",
		"::stappler::UrlView::isPath() const": "SPUrl.h",
		"::stappler::UrlView::isValidIdnTld(stappler::StringView)": "SPUrl.h",
		"::stappler::UrlView::parse(stappler::StringView const&)": "SPUrl.h",
		"::stappler::UrlView::parse(stappler::StringView&)": "SPUrl.h",
		"::stappler::UrlView::parseArgs<typename>(stappler::StringView,size_t)": "SPUrl.h",
		"::stappler::UrlView::parsePath<typename>(stappler::StringView)": "SPUrl.h",
		"::stappler::UrlView::parseUrl(stappler::StringView&,Callback<void (stappler::StringViewUtf8, UrlView::UrlToken)> const&)": "SPUrl.h",
		"::stappler::UrlView::password": "SPUrl.h",
		"::stappler::UrlView::path": "SPUrl.h",
		"::stappler::UrlView::port": "SPUrl.h",
		"::stappler::UrlView::query": "SPUrl.h",
		"::stappler::UrlView::scheme": "SPUrl.h",
		"::stappler::UrlView::url": "SPUrl.h",
		"::stappler::UrlView::user": "SPUrl.h",
		"::stappler::ValueWrapper<class,class>": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::Type": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::ValueWrapper()": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::ValueWrapper(T const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::ValueWrapper(T&&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::ValueWrapper(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::ValueWrapper(ValueWrapper<T, Flag>&&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::empty() const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::epsilon()": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::get()": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::get() const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::max()": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::min()": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator!=(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator&(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator&=(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator*(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator*<typename>(M const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator*=(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator+(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator++()": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator++(int)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator+=(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator-() const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator-(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator--()": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator--(int)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator-=(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator/(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator/=(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator<(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator<=(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator=(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator=(ValueWrapper<T, Flag>&&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator==(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator>(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator>=(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator^(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator^=(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator|(ValueWrapper<T, Flag> const&) const": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::operator|=(ValueWrapper<T, Flag> const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::set(T const&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::set(T&&)": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::value": "SPCore.h",
		"::stappler::ValueWrapper<class,class>::zero()": "SPCore.h",
		"::stappler::WideStringView": "SPStringView.h",
		"::stappler::_ValueReinterpretator<T,T>::_ValueReinterpretator<T,T>": "SPCore.h",
		"::stappler::_ValueReinterpretator<T,T>::reinterpret(T)": "SPCore.h",
		"::stappler::_ValueReinterpretator<class,class>": "SPCore.h",
		"::stappler::_ValueReinterpretator<class,class>::reinterpret(V)": "SPCore.h",
		"::stappler::base16::charToHex(char const&,bool)": "SPString.h",
		"::stappler::base16::decode(Callback<void (uint8_t)> const&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base16::decode(std::basic_ostream<char>&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base16::decode(uint8_t*,size_t,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base16::decode<typename>(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base16::decodeSize(size_t)": "SPString.h",
		"::stappler::base16::encode(Callback<void (char)> const&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base16::encode(char*,size_t,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base16::encode(std::basic_ostream<char>&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base16::encode<typename>(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base16::encodeSize(size_t)": "SPString.h",
		"::stappler::base16::hexToChar(char const&)": "SPString.h",
		"::stappler::base16::hexToChar(char const&,char const&)": "SPString.h",
		"::stappler::base64::__decode_pool(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::__decode_std(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::__encode_pool(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::__encode_std(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::decode(Callback<void (uint8_t)> const&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::decode(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::decode(std::basic_ostream<char>&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::decode(uint8_t*,size_t,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::decode<typename>(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::decodeSize(size_t)": "SPString.h",
		"::stappler::base64::encode(Callback<void (char)> const&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::encode(char*,size_t,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::encode(std::basic_ostream<char>&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::encode<typename>(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64::encodeSize(size_t)": "SPString.h",
		"::stappler::base64url::__encode_pool(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::__encode_std(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::decode(Callback<void (uint8_t)> const&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::decode(std::basic_ostream<char>&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::decode(uint8_t*,size_t,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::decode<typename>(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::decodeSize(size_t)": "SPString.h",
		"::stappler::base64url::encode(Callback<void (char)> const&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::encode(char*,size_t,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::encode(std::basic_ostream<char>&,stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::encode<typename>(stappler::CoderSource const&)": "SPString.h",
		"::stappler::base64url::encodeSize(size_t)": "SPString.h",
		"::stappler::bitmap::AlphaFormat": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::BitmapFormat(stappler::StringView,stappler::StringView,stappler::bitmap::BitmapFormat::check_fn const&,stappler::bitmap::BitmapFormat::size_fn const&,stappler::bitmap::BitmapFormat::info_fn const&,stappler::bitmap::BitmapFormat::load_fn const&,stappler::bitmap::BitmapFormat::write_fn const&,stappler::bitmap::BitmapFormat::save_fn const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::BitmapFormat(stappler::bitmap::FileFormat,stappler::bitmap::BitmapFormat::check_fn const&,stappler::bitmap::BitmapFormat::size_fn const&,stappler::bitmap::BitmapFormat::info_fn const&,stappler::bitmap::BitmapFormat::load_fn const&,stappler::bitmap::BitmapFormat::write_fn const&,stappler::bitmap::BitmapFormat::save_fn const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::Flags": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::_flags": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::_format": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::_mime": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::_name": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::add(stappler::bitmap::BitmapFormat&&)": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::check_fn": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::check_ptr": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getCheckFn() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getFlags() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getFormat() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getInfo(uint8_t const*,size_t,stappler::bitmap::ImageInfo&) const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getInfoFn() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getLoadFn() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getMime() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getName() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getSaveFn() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getSize(io::Producer const&,StackBuffer<512>&,uint32_t&,uint32_t&) const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getSizeFn() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::getWriteFn() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::info_fn": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::info_ptr": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::is(uint8_t const*,size_t) const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::isReadable() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::isRecognizable() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::isWritable() const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::load(uint8_t const*,size_t,stappler::bitmap::BitmapWriter&) const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::load_fn": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::load_ptr": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::save(stappler::StringView,uint8_t const*,stappler::bitmap::BitmapWriter&,bool) const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::save_fn": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::save_ptr": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::size_fn": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::size_ptr": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::write(uint8_t const*,stappler::bitmap::BitmapWriter&,bool) const": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::write_fn": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapFormat::write_ptr": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapTemplate<typename>": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate()": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(BitmapTemplate<Interface>&&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(const BitmapTemplate<Interface>&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(stappler::BytesView,stappler::bitmap::StrideFn const&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(stappler::BytesView,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(typename Interface::BytesType&&,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(uint8_t const*,size_t,stappler::bitmap::StrideFn const&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::BitmapTemplate(uint8_t const*,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::_alpha": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::_color": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::_data": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::_height": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::_originalFormat": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::_originalFormatName": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::_stride": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::_width": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::alloc(uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::alpha() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::clear()": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::convert(stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::convertWithTarget(uint8_t*,stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&) const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::data() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::dataPtr()": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::dataPtr() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::empty() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::format() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::getOriginalFormat() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::getOriginalFormatName() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::hasStrideOffset() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::height() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(stappler::BytesView,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(typename Interface::BytesType&&,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::loadBitmap(uint8_t const*,uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::loadData(stappler::BytesView,stappler::bitmap::StrideFn const&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::loadData(uint8_t const*,size_t,stappler::bitmap::StrideFn const&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::operator bool() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::operator=(BitmapTemplate<Interface>&&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::operator=(const BitmapTemplate<Interface>&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::resample(stappler::bitmap::ResampleFilter,uint32_t,uint32_t,uint32_t) const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::resample(uint32_t,uint32_t,uint32_t) const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::save(stappler::StringView,bool)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::save(stappler::StringView,stappler::StringView,bool)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::save(stappler::bitmap::FileFormat,stappler::StringView,bool)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::setInfo(uint32_t,uint32_t,stappler::bitmap::PixelFormat,stappler::bitmap::AlphaFormat,uint32_t)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::size() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::stride() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::truncate(stappler::bitmap::PixelFormat,stappler::bitmap::StrideFn const&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::updateStride(stappler::bitmap::StrideFn const&)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::width() const": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::write(stappler::StringView,bool)": "SPBitmap.h",
		"::stappler::bitmap::BitmapTemplate<typename>::write(stappler::bitmap::FileFormat,bool)": "SPBitmap.h",
		"::stappler::bitmap::BitmapWriter": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapWriter::assign": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapWriter::clear": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapWriter::getData": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapWriter::getStride": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapWriter::push": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapWriter::resize": "SPBitmapFormat.h",
		"::stappler::bitmap::BitmapWriter::target": "SPBitmapFormat.h",
		"::stappler::bitmap::FileFormat": "SPBitmapFormat.h",
		"::stappler::bitmap::ImageInfo": "SPBitmapFormat.h",
		"::stappler::bitmap::ImageInfo::alpha": "SPBitmapFormat.h",
		"::stappler::bitmap::ImageInfo::color": "SPBitmapFormat.h",
		"::stappler::bitmap::ImageInfo::format": "SPBitmapFormat.h",
		"::stappler::bitmap::ImageInfo::height": "SPBitmapFormat.h",
		"::stappler::bitmap::ImageInfo::stride": "SPBitmapFormat.h",
		"::stappler::bitmap::ImageInfo::width": "SPBitmapFormat.h",
		"::stappler::bitmap::PixelFormat": "SPBitmapFormat.h",
		"::stappler::bitmap::ResampleFilter": "SPBitmap.h",
		"::stappler::bitmap::StrideFn": "SPBitmapFormat.h",
		"::stappler::bitmap::check(stappler::StringView,uint8_t const*,size_t)": "SPBitmapFormat.h",
		"::stappler::bitmap::check(stappler::bitmap::FileFormat,uint8_t const*,size_t)": "SPBitmapFormat.h",
		"::stappler::bitmap::convertData<stappler::bitmap::PixelFormat,stappler::bitmap::PixelFormat>(stappler::BytesView,stappler::BytesView,uint32_t,uint32_t)": "SPBitmapFormat.h",
		"::stappler::bitmap::convertLine<stappler::bitmap::PixelFormat,stappler::bitmap::PixelFormat>(uint8_t const*,uint8_t*,uint32_t,uint32_t)": "SPBitmapFormat.h",
		"::stappler::bitmap::detectFormat(io::Producer const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::detectFormat(stappler::StringView)": "SPBitmapFormat.h",
		"::stappler::bitmap::detectFormat(uint8_t const*,size_t)": "SPBitmapFormat.h",
		"::stappler::bitmap::getBytesPerPixel(stappler::bitmap::PixelFormat)": "SPBitmapFormat.h",
		"::stappler::bitmap::getImageInfo(stappler::BytesView,stappler::bitmap::ImageInfo&)": "SPBitmapFormat.h",
		"::stappler::bitmap::getImageSize(io::Producer const&,uint32_t&,uint32_t&)": "SPBitmapFormat.h",
		"::stappler::bitmap::getImageSize(stappler::StringView,uint32_t&,uint32_t&)": "SPBitmapFormat.h",
		"::stappler::bitmap::getMimeType(stappler::StringView)": "SPBitmapFormat.h",
		"::stappler::bitmap::getMimeType(stappler::bitmap::FileFormat)": "SPBitmapFormat.h",
		"::stappler::bitmap::isImage(io::Producer const&,bool)": "SPBitmapFormat.h",
		"::stappler::bitmap::isImage(stappler::StringView,bool)": "SPBitmapFormat.h",
		"::stappler::bitmap::isImage(uint8_t const*,size_t,bool)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator!=(BitmapFormat::Flags const&,std::underlying_type<BitmapFormat::Flags>::type const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator!=(std::underlying_type<BitmapFormat::Flags>::type const&,BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator&(BitmapFormat::Flags const&,BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator&=(BitmapFormat::Flags&,BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator==(BitmapFormat::Flags const&,std::underlying_type<BitmapFormat::Flags>::type const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator==(std::underlying_type<BitmapFormat::Flags>::type const&,BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator^(BitmapFormat::Flags const&,BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator^=(BitmapFormat::Flags&,BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator|(BitmapFormat::Flags const&,BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator|=(BitmapFormat::Flags&,BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::bitmap::operator~(BitmapFormat::Flags const&)": "SPBitmapFormat.h",
		"::stappler::byteorder::BigConverter<class>": "SPByteOrder.h",
		"::stappler::byteorder::BigToHost<class>(T)": "SPByteOrder.h",
		"::stappler::byteorder::Bit16Size": "SPByteOrder.h",
		"::stappler::byteorder::Bit32Size": "SPByteOrder.h",
		"::stappler::byteorder::Bit64Size": "SPByteOrder.h",
		"::stappler::byteorder::Bit8Size": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit16Size>::Converter<T,ShouldSwap::DoSwap,Bit16Size>": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit16Size>::Swap(T)": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit32Size>::Converter<T,ShouldSwap::DoSwap,Bit32Size>": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit32Size>::Swap(T)": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit64Size>::Converter<T,ShouldSwap::DoSwap,Bit64Size>": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit64Size>::Swap(T)": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit8Size>::Converter<T,ShouldSwap::DoSwap,Bit8Size>": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Bit8Size>::Swap(T)": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Size>::Converter<T,ShouldSwap::DoSwap,Size>": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::DoSwap,Size>::Swap(T)": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::NoSwap,Size>::Converter<T,ShouldSwap::NoSwap,Size>": "SPByteOrder.h",
		"::stappler::byteorder::Converter<T,ShouldSwap::NoSwap,Size>::Swap(T)": "SPByteOrder.h",
		"::stappler::byteorder::ConverterTraits<Endian::Big,T>::ConverterTraits<Endian::Big,T>": "SPByteOrder.h",
		"::stappler::byteorder::ConverterTraits<Endian::Little,T>::ConverterTraits<Endian::Little,T>": "SPByteOrder.h",
		"::stappler::byteorder::HostConverter<class>": "SPByteOrder.h",
		"::stappler::byteorder::HostToBig<class>(T)": "SPByteOrder.h",
		"::stappler::byteorder::HostToLittle<class>(T)": "SPByteOrder.h",
		"::stappler::byteorder::HostToNetwork<class>(T)": "SPByteOrder.h",
		"::stappler::byteorder::LittleConverter<class>": "SPByteOrder.h",
		"::stappler::byteorder::LittleToHost<class>(T)": "SPByteOrder.h",
		"::stappler::byteorder::NetworkConverter<class>": "SPByteOrder.h",
		"::stappler::byteorder::NetworkToHost<class>(T)": "SPByteOrder.h",
		"::stappler::byteorder::ShouldSwap": "SPByteOrder.h",
		"::stappler::byteorder::bswap16(uint16_t)": "SPByteOrder.h",
		"::stappler::byteorder::bswap32(uint32_t)": "SPByteOrder.h",
		"::stappler::byteorder::bswap64(uint64_t)": "SPByteOrder.h",
		"::stappler::byteorder::hostToBig()": "SPByteOrder.h",
		"::stappler::byteorder::hostToLittle()": "SPByteOrder.h",
		"::stappler::byteorder::hostToNetwork()": "SPByteOrder.h",
		"::stappler::byteorder::isLittleEndian()": "SPByteOrder.h",
		"::stappler::chars::CharGroup<char,GroupId::Alphanumeric>::CharGroup<char,GroupId::Alphanumeric>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Alphanumeric>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Base64>::CharGroup<char,GroupId::Base64>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Base64>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Controls>::CharGroup<char,GroupId::Controls>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Hexadecimial>::CharGroup<char,GroupId::Hexadecimial>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Hexadecimial>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Latin>::CharGroup<char,GroupId::Latin>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Latin>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::LatinLowercase>::CharGroup<char,GroupId::LatinLowercase>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::LatinLowercase>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::LatinUppercase>::CharGroup<char,GroupId::LatinUppercase>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::LatinUppercase>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::NonPrintable>::CharGroup<char,GroupId::NonPrintable>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Numbers>::CharGroup<char,GroupId::Numbers>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::Numbers>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::PunctuationBasic>::CharGroup<char,GroupId::PunctuationBasic>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::PunctuationBasic>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::TextPunctuation>::CharGroup<char,GroupId::TextPunctuation>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::TextPunctuation>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::WhiteSpace>::CharGroup<char,GroupId::WhiteSpace>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char,GroupId::WhiteSpace>::match(char)": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Alphanumeric>::CharGroup<char16_t,GroupId::Alphanumeric>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Arrows>::CharGroup<char16_t,GroupId::Arrows>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Base64>::CharGroup<char16_t,GroupId::Base64>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::BreakableWhiteSpace>::CharGroup<char16_t,GroupId::BreakableWhiteSpace>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Controls>::CharGroup<char16_t,GroupId::Controls>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Currency>::CharGroup<char16_t,GroupId::Currency>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Cyrillic>::CharGroup<char16_t,GroupId::Cyrillic>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Fractionals>::CharGroup<char16_t,GroupId::Fractionals>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::GreekAdvanced>::CharGroup<char16_t,GroupId::GreekAdvanced>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::GreekBasic>::CharGroup<char16_t,GroupId::GreekBasic>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Hexadecimial>::CharGroup<char16_t,GroupId::Hexadecimial>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Latin>::CharGroup<char16_t,GroupId::Latin>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::LatinLowercase>::CharGroup<char16_t,GroupId::LatinLowercase>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::LatinSuppl1>::CharGroup<char16_t,GroupId::LatinSuppl1>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::LatinUppercase>::CharGroup<char16_t,GroupId::LatinUppercase>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Math>::CharGroup<char16_t,GroupId::Math>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::NonPrintable>::CharGroup<char16_t,GroupId::NonPrintable>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::Numbers>::CharGroup<char16_t,GroupId::Numbers>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::OpticalAlignmentBullet>::CharGroup<char16_t,GroupId::OpticalAlignmentBullet>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::OpticalAlignmentSpecial>::CharGroup<char16_t,GroupId::OpticalAlignmentSpecial>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::PunctuationAdvanced>::CharGroup<char16_t,GroupId::PunctuationAdvanced>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::PunctuationBasic>::CharGroup<char16_t,GroupId::PunctuationBasic>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::TextPunctuation>::CharGroup<char16_t,GroupId::TextPunctuation>": "SPCharGroup.h",
		"::stappler::chars::CharGroup<char16_t,GroupId::WhiteSpace>::CharGroup<char16_t,GroupId::WhiteSpace>": "SPCharGroup.h",
		"::stappler::chars::Chars<typename,CharType...>": "SPCharGroup.h",
		"::stappler::chars::Chars<typename,CharType...>::foreach<typename>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::Chars<typename,CharType...>::match(CharType)": "SPCharGroup.h",
		"::stappler::chars::Compose<typename,typename>": "SPCharGroup.h",
		"::stappler::chars::Compose<typename,typename>::foreach<typename>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::Compose<typename,typename>::match(CharType)": "SPCharGroup.h",
		"::stappler::chars::GroupId": "SPCharGroup.h",
		"::stappler::chars::MatchTraits": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::_foreachChar<typename,typename,CharType,CharType,CharType...>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::_foreachChar<typename,typename,CharType>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::_foreachCompose<typename,typename,typename,typename,typename>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::_foreachCompose<typename,typename,typename>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::_matchChar<typename,CharType,CharType,CharType...>(CharType)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::_matchChar<typename,CharType>(CharType)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::_matchCompose<typename,typename,typename,typename>(CharType)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::_matchCompose<typename,typename>(CharType)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::foreachChar<typename,typename,CharType...>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::foreachCompose<typename,typename,typename>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::foreachPair<typename,typename,CharType,CharType>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::matchChar<typename,CharType...>(CharType)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::matchCompose<typename,typename>(CharType)": "SPCharGroup.h",
		"::stappler::chars::MatchTraits::matchPair<typename,CharType,CharType>(CharType)": "SPCharGroup.h",
		"::stappler::chars::Range<typename,CharType,CharType>": "SPCharGroup.h",
		"::stappler::chars::Range<typename,CharType,CharType>::foreach<typename>(Func const&)": "SPCharGroup.h",
		"::stappler::chars::Range<typename,CharType,CharType>::match(CharType)": "SPCharGroup.h",
		"::stappler::chars::UniChar": "SPCharGroup.h",
		"::stappler::chars::UniChar::match(char)": "SPCharGroup.h",
		"::stappler::chars::isdigit<typename>(CharType)": "SPCharGroup.h",
		"::stappler::chars::islower<typename>(CharType)": "SPCharGroup.h",
		"::stappler::chars::isspace<typename>(CharType)": "SPCharGroup.h",
		"::stappler::chars::isupper<typename>(CharType)": "SPCharGroup.h",
		"::stappler::chars::isxdigit<typename>(CharType)": "SPCharGroup.h",
		"::stappler::compareDataRanges<typename>(uint8_t const*,size_t,uint8_t const*,size_t,Compare const&)": "SPBytesView.h",
		"::stappler::const_char16_ptr": "SPStringView.h",
		"::stappler::const_char_ptr": "SPStringView.h",
		"::stappler::crypto::Backend": "SPCrypto.h",
		"::stappler::crypto::BackendFlags": "SPCrypto.h",
		"::stappler::crypto::BlockCipher": "SPCrypto.h",
		"::stappler::crypto::BlockCryptoHeader": "SPCrypto.h",
		"::stappler::crypto::BlockCryptoHeader::cipher": "SPCrypto.h",
		"::stappler::crypto::BlockCryptoHeader::padding": "SPCrypto.h",
		"::stappler::crypto::BlockCryptoHeader::size": "SPCrypto.h",
		"::stappler::crypto::BlockCryptoHeader::version": "SPCrypto.h",
		"::stappler::crypto::BlockInfo": "SPCrypto.h",
		"::stappler::crypto::BlockInfo::cipher": "SPCrypto.h",
		"::stappler::crypto::BlockInfo::dataSize": "SPCrypto.h",
		"::stappler::crypto::BlockInfo::version": "SPCrypto.h",
		"::stappler::crypto::BlockKey256": "SPCrypto.h",
		"::stappler::crypto::BlockKey256::cipher": "SPCrypto.h",
		"::stappler::crypto::BlockKey256::data": "SPCrypto.h",
		"::stappler::crypto::BlockKey256::operator!=(stappler::crypto::BlockKey256 const&) const": "SPCrypto.h",
		"::stappler::crypto::BlockKey256::operator==(stappler::crypto::BlockKey256 const&) const": "SPCrypto.h",
		"::stappler::crypto::BlockKey256::version": "SPCrypto.h",
		"::stappler::crypto::BlockKeySize256": "SPCrypto.h",
		"::stappler::crypto::Gost3411_256": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::Buf": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::Gost3411_256()": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::Length": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::_Ctx": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::_update<typename,typename>(T&&,Args &&...)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::_update<typename>(T&&)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::ctx": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::final()": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::final(uint8_t*)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::hmac(stappler::CoderSource const&,stappler::CoderSource const&)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::init()": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::make(stappler::CoderSource const&,stappler::StringView const&)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::perform<typename>(Args &&...)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::update(stappler::CoderSource const&)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_256::update(uint8_t const*,size_t)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::Buf": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::Gost3411_512()": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::Length": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::_Ctx": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::_update<typename,typename>(T&&,Args &&...)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::_update<typename>(T&&)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::ctx": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::final()": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::final(uint8_t*)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::hmac(stappler::CoderSource const&,stappler::CoderSource const&)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::init()": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::make(stappler::CoderSource const&,stappler::StringView const&)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::perform<typename>(Args &&...)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::update(stappler::CoderSource const&)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_512::update(uint8_t const*,size_t)": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_Ctx": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_Ctx::N": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_Ctx::Sigma": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_Ctx::buffer": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_Ctx::bufsize": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_Ctx::digest_size": "SPGost3411-2012.h",
		"::stappler::crypto::Gost3411_Ctx::h": "SPGost3411-2012.h",
		"::stappler::crypto::HMAC_I_PAD": "SPSha.h",
		"::stappler::crypto::HMAC_O_PAD": "SPSha.h",
		"::stappler::crypto::HashCoderCallback": "SPCrypto.h",
		"::stappler::crypto::HashFunction": "SPCrypto.h",
		"::stappler::crypto::KeyBits": "SPCrypto.h",
		"::stappler::crypto::KeyContext": "SPCrypto.h",
		"::stappler::crypto::KeyContext::backendCtx": "SPCrypto.h",
		"::stappler::crypto::KeyContext::cryptoCtx": "SPCrypto.h",
		"::stappler::crypto::KeyContext::keyCtx": "SPCrypto.h",
		"::stappler::crypto::KeyContext::type": "SPCrypto.h",
		"::stappler::crypto::KeyFormat": "SPCrypto.h",
		"::stappler::crypto::KeyType": "SPCrypto.h",
		"::stappler::crypto::PrivateKey": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::PrivateKey(stappler::BytesView,stappler::CoderSource const&)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::PrivateKey(stappler::crypto::Backend)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::PrivateKey(stappler::crypto::Backend,stappler::BytesView,stappler::CoderSource const&)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::PrivateKey(stappler::crypto::PrivateKey const&)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::_key": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::_loaded": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::_valid": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::decrypt(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::encrypt(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::exportDer(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&) const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::exportDer(Callback<void (const uint8_t *, size_t)> const&,stappler::crypto::KeyFormat,stappler::CoderSource const&) const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::exportPem(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&) const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::exportPem(Callback<void (const uint8_t *, size_t)> const&,stappler::crypto::KeyFormat,stappler::CoderSource const&) const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::exportPublic() const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::fingerprint(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&) const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::generate(stappler::crypto::KeyBits)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::getBackend() const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::getKey() const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::getType() const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::import(stappler::BytesView,stappler::CoderSource const&)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::isSupported(stappler::crypto::KeyFormat) const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::operator bool() const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::operator=(stappler::crypto::PrivateKey const&)": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::sign(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&,stappler::crypto::SignAlgorithm) const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::verify(stappler::CoderSource const&,stappler::BytesView,stappler::crypto::SignAlgorithm) const": "SPCrypto.h",
		"::stappler::crypto::PrivateKey::~PrivateKey()": "SPCrypto.h",
		"::stappler::crypto::PublicKey": "SPCrypto.h",
		"::stappler::crypto::PublicKey::PublicKey(stappler::BytesView)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::PublicKey(stappler::crypto::Backend)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::PublicKey(stappler::crypto::Backend,stappler::BytesView)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::PublicKey(stappler::crypto::PrivateKey const&)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::PublicKey(stappler::crypto::PublicKey const&)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::_key": "SPCrypto.h",
		"::stappler::crypto::PublicKey::_loaded": "SPCrypto.h",
		"::stappler::crypto::PublicKey::_valid": "SPCrypto.h",
		"::stappler::crypto::PublicKey::encrypt(Callback<void (const uint8_t *, size_t)> const&,stappler::CoderSource const&)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::exportDer(Callback<void (const uint8_t *, size_t)> const&) const": "SPCrypto.h",
		"::stappler::crypto::PublicKey::exportPem(Callback<void (const uint8_t *, size_t)> const&) const": "SPCrypto.h",
		"::stappler::crypto::PublicKey::getBackend() const": "SPCrypto.h",
		"::stappler::crypto::PublicKey::getKey() const": "SPCrypto.h",
		"::stappler::crypto::PublicKey::getType() const": "SPCrypto.h",
		"::stappler::crypto::PublicKey::import(stappler::BytesView)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::importOpenSSH(stappler::StringView)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::operator bool() const": "SPCrypto.h",
		"::stappler::crypto::PublicKey::operator=(stappler::crypto::PublicKey const&)": "SPCrypto.h",
		"::stappler::crypto::PublicKey::verify(stappler::CoderSource const&,stappler::BytesView,stappler::crypto::SignAlgorithm) const": "SPCrypto.h",
		"::stappler::crypto::PublicKey::~PublicKey()": "SPCrypto.h",
		"::stappler::crypto::SP_SECURE_KEY": "SPSha.h",
		"::stappler::crypto::SafeBlockEncoding": "SPCrypto.h",
		"::stappler::crypto::Sha256": "SPSha.h",
		"::stappler::crypto::Sha256::Buf": "SPSha.h",
		"::stappler::crypto::Sha256::Length": "SPSha.h",
		"::stappler::crypto::Sha256::Sha256()": "SPSha.h",
		"::stappler::crypto::Sha256::_Ctx": "SPSha.h",
		"::stappler::crypto::Sha256::_Ctx::buf": "SPSha.h",
		"::stappler::crypto::Sha256::_Ctx::curlen": "SPSha.h",
		"::stappler::crypto::Sha256::_Ctx::length": "SPSha.h",
		"::stappler::crypto::Sha256::_Ctx::state": "SPSha.h",
		"::stappler::crypto::Sha256::_update<typename,typename>(T&&,Args &&...)": "SPSha.h",
		"::stappler::crypto::Sha256::_update<typename>(T&&)": "SPSha.h",
		"::stappler::crypto::Sha256::ctx": "SPSha.h",
		"::stappler::crypto::Sha256::final()": "SPSha.h",
		"::stappler::crypto::Sha256::final(uint8_t*)": "SPSha.h",
		"::stappler::crypto::Sha256::hmac(stappler::CoderSource const&,stappler::CoderSource const&)": "SPSha.h",
		"::stappler::crypto::Sha256::init()": "SPSha.h",
		"::stappler::crypto::Sha256::make(stappler::CoderSource const&,stappler::StringView const&)": "SPSha.h",
		"::stappler::crypto::Sha256::perform<typename>(Args &&...)": "SPSha.h",
		"::stappler::crypto::Sha256::update(stappler::CoderSource const&)": "SPSha.h",
		"::stappler::crypto::Sha256::update(uint8_t const*,size_t)": "SPSha.h",
		"::stappler::crypto::Sha512": "SPSha.h",
		"::stappler::crypto::Sha512::Buf": "SPSha.h",
		"::stappler::crypto::Sha512::Length": "SPSha.h",
		"::stappler::crypto::Sha512::Sha512()": "SPSha.h",
		"::stappler::crypto::Sha512::_Ctx": "SPSha.h",
		"::stappler::crypto::Sha512::_Ctx::buf": "SPSha.h",
		"::stappler::crypto::Sha512::_Ctx::curlen": "SPSha.h",
		"::stappler::crypto::Sha512::_Ctx::length": "SPSha.h",
		"::stappler::crypto::Sha512::_Ctx::state": "SPSha.h",
		"::stappler::crypto::Sha512::_update<typename,typename>(T&&,Args &&...)": "SPSha.h",
		"::stappler::crypto::Sha512::_update<typename>(T&&)": "SPSha.h",
		"::stappler::crypto::Sha512::ctx": "SPSha.h",
		"::stappler::crypto::Sha512::final()": "SPSha.h",
		"::stappler::crypto::Sha512::final(uint8_t*)": "SPSha.h",
		"::stappler::crypto::Sha512::hmac(stappler::CoderSource const&,stappler::CoderSource const&)": "SPSha.h",
		"::stappler::crypto::Sha512::init()": "SPSha.h",
		"::stappler::crypto::Sha512::make(stappler::CoderSource const&,stappler::StringView const&)": "SPSha.h",
		"::stappler::crypto::Sha512::perform<typename>(Args &&...)": "SPSha.h",
		"::stappler::crypto::Sha512::update(stappler::CoderSource const&)": "SPSha.h",
		"::stappler::crypto::Sha512::update(uint8_t const*,size_t)": "SPSha.h",
		"::stappler::crypto::SignAlgorithm": "SPCrypto.h",
		"::stappler::crypto::decryptBlock(stappler::crypto::Backend,stappler::crypto::BlockKey256 const&,stappler::BytesView,Callback<void (const uint8_t *, size_t)> const&)": "SPCrypto.h",
		"::stappler::crypto::decryptBlock(stappler::crypto::BlockKey256 const&,stappler::BytesView,Callback<void (const uint8_t *, size_t)> const&)": "SPCrypto.h",
		"::stappler::crypto::encryptBlock(stappler::crypto::Backend,stappler::crypto::BlockKey256 const&,stappler::BytesView,Callback<void (const uint8_t *, size_t)> const&)": "SPCrypto.h",
		"::stappler::crypto::encryptBlock(stappler::crypto::BlockKey256 const&,stappler::BytesView,Callback<void (const uint8_t *, size_t)> const&)": "SPCrypto.h",
		"::stappler::crypto::getBlockInfo(stappler::BytesView)": "SPCrypto.h",
		"::stappler::crypto::getBlockSize(stappler::crypto::BlockCipher)": "SPCrypto.h",
		"::stappler::crypto::hash256(Callback<void (const stappler::crypto::HashCoderCallback &)> const&,stappler::crypto::HashFunction)": "SPCrypto.h",
		"::stappler::crypto::hash256(stappler::CoderSource const&,stappler::crypto::HashFunction)": "SPCrypto.h",
		"::stappler::crypto::hash256(stappler::crypto::Backend,Callback<void (const stappler::crypto::HashCoderCallback &)> const&,stappler::crypto::HashFunction)": "SPCrypto.h",
		"::stappler::crypto::hash256(stappler::crypto::Backend,stappler::CoderSource const&,stappler::crypto::HashFunction)": "SPCrypto.h",
		"::stappler::crypto::hash512(Callback<void (const stappler::crypto::HashCoderCallback &)> const&,stappler::crypto::HashFunction)": "SPCrypto.h",
		"::stappler::crypto::hash512(stappler::CoderSource const&,stappler::crypto::HashFunction)": "SPCrypto.h",
		"::stappler::crypto::hash512(stappler::crypto::Backend,Callback<void (const stappler::crypto::HashCoderCallback &)> const&,stappler::crypto::HashFunction)": "SPCrypto.h",
		"::stappler::crypto::hash512(stappler::crypto::Backend,stappler::CoderSource const&,stappler::crypto::HashFunction)": "SPCrypto.h",
		"::stappler::crypto::isPemKey(stappler::BytesView)": "SPCrypto.h",
		"::stappler::crypto::listBackends(Callback<void (stappler::crypto::Backend, stappler::StringView, stappler::crypto::BackendFlags)> const&)": "SPCrypto.h",
		"::stappler::crypto::makeBlockKey(stappler::BytesView,stappler::BytesView,stappler::crypto::BlockCipher,uint32_t)": "SPCrypto.h",
		"::stappler::crypto::makeBlockKey(stappler::crypto::Backend,stappler::BytesView,stappler::BytesView,stappler::crypto::BlockCipher,uint32_t)": "SPCrypto.h",
		"::stappler::crypto::makeBlockKey(stappler::crypto::PrivateKey const&,stappler::BytesView,stappler::crypto::BlockCipher,uint32_t)": "SPCrypto.h",
		"::stappler::crypto::operator!=(stappler::crypto::BackendFlags const&,std::underlying_type<BackendFlags>::type const&)": "SPCrypto.h",
		"::stappler::crypto::operator!=(std::underlying_type<BackendFlags>::type const&,stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::operator&(stappler::crypto::BackendFlags const&,stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::operator&=(stappler::crypto::BackendFlags&,stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::operator==(stappler::crypto::BackendFlags const&,std::underlying_type<BackendFlags>::type const&)": "SPCrypto.h",
		"::stappler::crypto::operator==(std::underlying_type<BackendFlags>::type const&,stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::operator^(stappler::crypto::BackendFlags const&,stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::operator^=(stappler::crypto::BackendFlags&,stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::operator|(stappler::crypto::BackendFlags const&,stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::operator|=(stappler::crypto::BackendFlags&,stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::operator~(stappler::crypto::BackendFlags const&)": "SPCrypto.h",
		"::stappler::crypto::uint512_u": "SPGost3411-2012.h",
		"::stappler::crypto::uint512_u::B": "SPGost3411-2012.h",
		"::stappler::crypto::uint512_u::QWORD": "SPGost3411-2012.h",
		"::stappler::data::DataFormat": "SPDataDecode.h",
		"::stappler::data::EncodeFormat": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::CborCompressed": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::Compression": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::EncodeFormat(long)": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::EncodeFormat(stappler::data::EncodeFormat const&)": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::EncodeFormat(stappler::data::EncodeFormat::Format,stappler::data::EncodeFormat::Compression,stappler::data::EncodeFormat::Encryption,stappler::StringView)": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::EncodeStreamIndex": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::Encryption": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::Format": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::JsonCompressed": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::compression": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::encryption": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::flag() const": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::format": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::isRaw() const": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::isTextual() const": "SPDataEncode.h",
		"::stappler::data::EncodeFormat::operator=(stappler::data::EncodeFormat const&)": "SPDataEncode.h",
		"::stappler::data::EncodeTraits<typename>": "SPDataEncode.h",
		"::stappler::data::EncodeTraits<typename>::BytesType": "SPDataEncode.h",
		"::stappler::data::EncodeTraits<typename>::InterfaceType": "SPDataEncode.h",
		"::stappler::data::EncodeTraits<typename>::StringType": "SPDataEncode.h",
		"::stappler::data::EncodeTraits<typename>::ValueType": "SPDataEncode.h",
		"::stappler::data::EncodeTraits<typename>::save(stappler::data::EncodeTraits::ValueType const&,stappler::StringView const&,stappler::data::EncodeFormat)": "SPDataEncode.h",
		"::stappler::data::EncodeTraits<typename>::write(stappler::data::EncodeTraits::ValueType const&,stappler::data::EncodeFormat,size_t)": "SPDataEncode.h",
		"::stappler::data::EncodeTraits<typename>::write(std::ostream&,stappler::data::EncodeTraits::ValueType const&,stappler::data::EncodeFormat)": "SPDataEncode.h",
		"::stappler::data::StreamTraits<typename>": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onArrayValue<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onArrayValue<typename>(typeof (& C::onArrayValue))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onBeginArray<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onBeginArray<typename>(typeof (& C::onBeginArray))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onBeginDict<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onBeginDict<typename>(typeof (& C::onBeginDict))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onEndArray<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onEndArray<typename>(typeof (& C::onEndArray))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onEndDict<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onEndDict<typename>(typeof (& C::onEndDict))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onKey<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onKey<typename>(typeof (& C::onKey))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onKeyValuePair<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onKeyValuePair<typename>(typeof (& C::onKeyValuePair))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onNextValue<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onNextValue<typename>(typeof (& C::onNextValue))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onValue<typename>()": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::CallTest_onValue<typename>(typeof (& C::onValue))": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::failure": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onArrayValue": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onBeginArray": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onBeginDict": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onEndArray": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onEndDict": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onKey": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onKeyValuePair": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onNextValue": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::onValue": "SPDataTraits.h",
		"::stappler::data::StreamTraits<typename>::success": "SPDataTraits.h",
		"::stappler::data::ValueTemplate<Interface>::ArrayNull": "SPDataValue.h",
		"::stappler::data::ValueTemplate<Interface>::BytesNull": "SPDataValue.h",
		"::stappler::data::ValueTemplate<Interface>::DictionaryNull": "SPDataValue.h",
		"::stappler::data::ValueTemplate<Interface>::Null": "SPDataValue.h",
		"::stappler::data::ValueTemplate<Interface>::StringNull": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ArrayNull": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ArrayType": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::BytesNull": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::BytesType": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::DictionaryNull": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::DictionaryType": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::InterfaceType": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::Null": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::Self": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::StringNull": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::StringType": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::Type": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(BytesViewTemplate<Endian::Big> const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(BytesViewTemplate<Endian::Little> const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(InitializerList<Pair<stappler::data::ValueTemplate::StringType, stappler::data::ValueTemplate::Self>>)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(InitializerList<stappler::data::ValueTemplate::Self>)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(bool)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(char const*)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(double)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(float)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(int32_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(int64_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::StringView const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::Time)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::TimeInterval)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::ArrayType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::ArrayType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::BytesType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::BytesType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::DictionaryType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::DictionaryType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Self const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Self&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::StringType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::StringType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::data::ValueTemplate::Type)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(stappler::nullptr_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(uint32_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate(uint64_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::ValueTemplate<typename>(ValueTemplate<OtherInterface> const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::_type": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addArray()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addArray(stappler::data::ValueTemplate::ArrayType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addArray(stappler::data::ValueTemplate::ArrayType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addBool(bool)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addBytes(stappler::data::ValueTemplate::BytesType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addBytes(stappler::data::ValueTemplate::BytesType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addDict()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addDict(stappler::data::ValueTemplate::DictionaryType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addDict(stappler::data::ValueTemplate::DictionaryType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addDouble(double)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addInteger(int64_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addString(char const*)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addString(stappler::StringView const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addString(stappler::data::ValueTemplate::StringType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addString(stappler::data::ValueTemplate::StringType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::addValue<class>(Val&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::arrayVal": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asArray()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asArray() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asBool() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asBytes() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asDict()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asDict() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asDouble() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asInteger() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::asString() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::boolVal": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::bytesVal": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::clear()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::compare(stappler::data::ValueTemplate::ArrayType const&,stappler::data::ValueTemplate::ArrayType const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::compare(stappler::data::ValueTemplate::DictionaryType const&,stappler::data::ValueTemplate::DictionaryType const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::convert<typename>() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::convertToArray(int)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::convertToDict()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::dictVal": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::doubleVal": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::emplace()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::emplace<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::empty() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::encode<class,class>(Stream&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::erase<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getArray()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getArray() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getArray<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getArray<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getBool() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getBool<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getBytes()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getBytes() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getBytes<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getBytes<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getDict()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getDict() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getDict<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getDict<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getDouble(double) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getDouble<class>(Key&&,double) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getInteger(int64_t) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getInteger<class>(Key&&,int64_t) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getString()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getString() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getString<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getString<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getType() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getType<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getType<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getValue<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::getValue<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::hasValue<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::intVal": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isArray() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isArray<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isArray<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBasicType() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBasicType<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBasicType<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBool() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBool<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBool<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBytes() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBytes<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isBytes<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isDictionary() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isDictionary<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isDictionary<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isDouble() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isDouble<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isDouble<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isInteger() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isInteger<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isInteger<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isNull() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isNull<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isNull<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isString() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isString<class>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::isString<typename>(Key&&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::newArray<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::newDict<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator bool() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator int32_t() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator int64_t() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator size_t() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(bool) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(char const*) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(double) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(float) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(int32_t) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(int64_t) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(size_t) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(stappler::StringView const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(stappler::data::ValueTemplate::ArrayType const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(stappler::data::ValueTemplate::BytesType const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(stappler::data::ValueTemplate::DictionaryType const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator!=(stappler::data::ValueTemplate::Self const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(bool)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(char const*)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(double)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(float)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(int32_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(int64_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(size_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::BytesView const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::StringView const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::ArrayType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::ArrayType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::BytesType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::BytesType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::DictionaryType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::DictionaryType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::Self const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::Self&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::StringType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::data::ValueTemplate::StringType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=(stappler::nullptr_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator=<typename>(ValueTemplate<OtherInterface> const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(bool) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(char const*) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(double) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(float) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(int32_t) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(int64_t) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(size_t) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(stappler::StringView const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::ArrayType const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::BytesType const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::DictionaryType const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::operator==(stappler::data::ValueTemplate::Self const&) const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::reset(stappler::data::ValueTemplate::Type)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setArray(stappler::data::ValueTemplate::ArrayType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setArray(stappler::data::ValueTemplate::ArrayType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setArray<class>(stappler::data::ValueTemplate::ArrayType const&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setArray<class>(stappler::data::ValueTemplate::ArrayType&&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBool(bool)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBool<class>(bool,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBytes(stappler::BytesView const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBytes(stappler::data::ValueTemplate::BytesType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBytes(stappler::data::ValueTemplate::BytesType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBytes<class>(BytesViewTemplate<Endian::Big> const&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBytes<class>(BytesViewTemplate<Endian::Little> const&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBytes<class>(stappler::data::ValueTemplate::BytesType const&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setBytes<class>(stappler::data::ValueTemplate::BytesType&&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setDict(stappler::data::ValueTemplate::DictionaryType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setDict(stappler::data::ValueTemplate::DictionaryType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setDict<class>(stappler::data::ValueTemplate::DictionaryType const&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setDict<class>(stappler::data::ValueTemplate::DictionaryType&&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setDouble(double)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setDouble(float)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setDouble<class>(double,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setInteger(int32_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setInteger(int64_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setInteger(size_t)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setInteger<class>(int64_t,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setNull()": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setNull<class>(Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setString(char const*)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setString(stappler::StringView const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setString(stappler::data::ValueTemplate::StringType const&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setString(stappler::data::ValueTemplate::StringType&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setString<class>(char const*,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setString<class>(stappler::StringView const&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setString<class>(stappler::data::ValueTemplate::StringType const&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setString<class>(stappler::data::ValueTemplate::StringType&&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setValue<class,class>(Val&&,Key&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::setValue<class>(Val&&)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::size() const": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::slice(int,int)": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::strVal": "SPDataValue.h",
		"::stappler::data::ValueTemplate<typename>::~ValueTemplate()": "SPDataValue.h",
		"::stappler::data::WrapperTemplate<typename>": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Array": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Bytes": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::ConstIterator()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::ConstIterator(Scheme const*)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::ConstIterator(Scheme const*,typename Dictionary::const_iterator)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::ConstIterator(const ConstIterator<Scheme>&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::increment()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::iter": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator!=(const ConstIterator<Scheme>&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator*() const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator++()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator++(int)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator->() const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator=(const ConstIterator<Scheme>&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::operator==(const ConstIterator<Scheme>&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::pointer": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::reference": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::scheme": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::skipProtected()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::ConstIterator<class>::value_type": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Dictionary": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::Iterator()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::Iterator(Scheme*)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::Iterator(Scheme*,typename Dictionary::iterator)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::Iterator(const Iterator<Scheme>&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::increment()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::iter": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator!=(const Iterator<Scheme>&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator*() const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator++()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator++(int)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator->() const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator=(const Iterator<Scheme>&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::operator==(const Iterator<Scheme>&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::pointer": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::reference": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::scheme": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::skipProtected()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Iterator<class>::value_type": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::String": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Type": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::Value": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::WrapperTemplate()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::WrapperTemplate(stappler::data::WrapperTemplate::Value&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::_data": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::_modified": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::_protected": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::begin<typename>(Scheme const*)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::begin<typename>(Scheme*)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::emplace<class>(Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::end<typename>(Scheme const*)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::end<typename>(Scheme*)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::erase<class>(Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getArray<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getBool<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getBytes<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getData()": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getData() const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getDict<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getDouble<class>(Key&&,double) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getInteger<class>(Key&&,int64_t) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getString<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getType<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::getValue<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::hasValue<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isArray<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isBasicType<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isBool<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isBytes<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isDictionary<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isDouble<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isInteger<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isModified() const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isNull<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isProtected() const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::isString<class>(Key&&) const": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::newArray<class>(Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::newDict<class>(Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setArray<class>(stappler::data::WrapperTemplate::Array const&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setArray<class>(stappler::data::WrapperTemplate::Array&&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setBool<class>(bool,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setBytes<class>(stappler::BytesView,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setBytes<class>(stappler::data::WrapperTemplate::Bytes const&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setBytes<class>(stappler::data::WrapperTemplate::Bytes&&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setDict<class>(stappler::data::WrapperTemplate::Dictionary const&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setDict<class>(stappler::data::WrapperTemplate::Dictionary&&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setDouble<class>(double,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setInteger<class>(int64_t,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setModified(bool)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setNull<class>(Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setProtected(bool)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setString<class>(stappler::StringView,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setString<class>(stappler::data::WrapperTemplate::String const&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setString<class>(stappler::data::WrapperTemplate::String&&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::WrapperTemplate<typename>::setValue<class,class>(Val&&,Key&&)": "SPDataWrapper.h",
		"::stappler::data::cbor::Decoder<typename>": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::ArrayType": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::BytesType": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::Decoder(BytesViewTemplate<Endian::Network>&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::DictionaryType": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::InterfaceType": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::StringType": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::ValueType": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::back": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::buf": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decode(stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decode(stappler::data::cbor::MajorTypeEncoded,uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodeArray(uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodeByteString(uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodeCharString(uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodeMap(uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodeNegativeInt(uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodePositiveInt(uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodeSimpleValue(uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodeTaggedValue(uint8_t,stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::decodeUndefinedLength<typename>(Container&,stappler::data::cbor::MajorTypeEncoded)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::parse(stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::parseNumber(stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::parseValue(stappler::data::cbor::Decoder::ValueType&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::r": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Decoder<typename>::stack": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::Encoder(bool,size_t)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::Encoder(stappler::StringView)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::Encoder(std::ostream*)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::InterfaceType": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::Type": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::ValueType": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::buffer": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::data()": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::emplace(uint8_t const*,size_t)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::emplace(uint8_t)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::encode(const typename ValueType::ArrayType&)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::encode(const typename ValueType::DictionaryType&)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::file": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::isOpen() const": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::onBeginArray(const typename ValueType::ArrayType&)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::stream": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::switchBuffer(size_t)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::type": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::write(bool)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::write(const typename ValueType::BytesType&)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::write(const typename ValueType::StringType&)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::write(double)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::write(int64_t)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::write(stappler::nullptr_t)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Encoder<typename>::~Encoder()": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::Flags": "SPDataCbor.h",
		"::stappler::data::cbor::MajorType": "SPDataCbor.h",
		"::stappler::data::cbor::MajorTypeEncoded": "SPDataCbor.h",
		"::stappler::data::cbor::SimpleValue": "SPDataCbor.h",
		"::stappler::data::cbor::Tag": "SPDataCbor.h",
		"::stappler::data::cbor::_readInt(BytesViewTemplate<Endian::Network>&)": "SPDataCbor.h",
		"::stappler::data::cbor::_readIntValue(BytesViewTemplate<Endian::Network>&,uint8_t)": "SPDataCbor.h",
		"::stappler::data::cbor::_readNumber(BytesViewTemplate<Endian::Network>&)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeArrayStart<class>(Writer&,size_t)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeBool<class>(Writer&,bool)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeBytes<class>(Writer&,BytesViewTemplate<Endian::Network> const&)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeFloat16<class>(Writer&,uint16_t)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeFloat32<class>(Writer&,float)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeFloat64<class>(Writer&,double)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeFloat<class>(Writer&,double)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeFloatNaN<class>(Writer&)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeFloatNegativeInf<class>(Writer&)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeFloatPositiveInf<class>(Writer&)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeId<class>(Writer&)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeInt<class>(Writer&,int64_t)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeInt<class>(Writer&,uint64_t,stappler::data::cbor::MajorTypeEncoded)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeMapStart<class>(Writer&,size_t)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeNull<class>(Writer&,stappler::nullptr_t)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeNumber<class>(Writer&,float)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeNumeric<class,class>(Writer&,T,stappler::data::cbor::MajorTypeEncoded,stappler::data::cbor::Flags)": "SPDataCbor.h",
		"::stappler::data::cbor::_writeString<class>(Writer&,stappler::StringView const&)": "SPDataCbor.h",
		"::stappler::data::cbor::data(uint8_t)": "SPDataCbor.h",
		"::stappler::data::cbor::flags(uint8_t)": "SPDataCbor.h",
		"::stappler::data::cbor::operator<<(stappler::data::cbor::MajorType,stappler::data::cbor::Flags)": "SPDataCbor.h",
		"::stappler::data::cbor::operator==(uint8_t,stappler::data::cbor::Flags)": "SPDataCbor.h",
		"::stappler::data::cbor::operator==(uint8_t,stappler::data::cbor::MajorType)": "SPDataCbor.h",
		"::stappler::data::cbor::operator==(uint8_t,stappler::data::cbor::MajorTypeEncoded)": "SPDataCbor.h",
		"::stappler::data::cbor::read<typename,typename>(Container const&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::read<typename>(BytesViewTemplate<Endian::Little>&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::read<typename>(BytesViewTemplate<Endian::Network>&)": "SPDataDecodeCbor.h",
		"::stappler::data::cbor::save<typename>(ValueTemplate<Interface> const&,stappler::StringView)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::type(uint8_t)": "SPDataCbor.h",
		"::stappler::data::cbor::write<typename>(ValueTemplate<Interface> const&,size_t)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::write<typename>(std::ostream&,ValueTemplate<Interface> const&)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::writeArray<typename>(const typename ValueTemplate<Interface>::ArrayType&)": "SPDataEncodeCbor.h",
		"::stappler::data::cbor::writeObject<typename>(const typename ValueTemplate<Interface>::DictionaryType&)": "SPDataEncodeCbor.h",
		"::stappler::data::compress<typename>(uint8_t const*,size_t,EncodeFormat::Compression,bool)": "SPDataEncode.h",
		"::stappler::data::compressData(uint8_t const*,size_t,uint8_t*,size_t,EncodeFormat::Compression)": "SPDataEncode.h",
		"::stappler::data::decompress(uint8_t const*,size_t,uint8_t*,size_t)": "SPDataDecode.h",
		"::stappler::data::decompress<typename>(uint8_t const*,size_t)": "SPDataDecode.h",
		"::stappler::data::decompressBrotli<typename>(uint8_t const*,size_t,bool)": "SPDataDecode.h",
		"::stappler::data::decompressLZ4<typename>(uint8_t const*,size_t,bool)": "SPDataDecode.h",
		"::stappler::data::detectDataFormat(uint8_t const*,size_t,uint8_t&)": "SPDataDecode.h",
		"::stappler::data::getCompressBounds(size_t,EncodeFormat::Compression)": "SPDataEncode.h",
		"::stappler::data::getDecompressedSize(uint8_t const*,size_t)": "SPDataDecode.h",
		"::stappler::data::getLZ4EncodeState()": "SPDataEncode.h",
		"::stappler::data::json::Decoder<typename>": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::BackType": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::Decoder(stappler::StringView&,bool)": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::InterfaceType": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::StringType": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::ValueType": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::back": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::backType": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::buf": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::parseBufferString(stappler::data::json::Decoder::StringType&)": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::parseJson(stappler::data::json::Decoder::ValueType&)": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::parseJsonNumber(stappler::data::json::Decoder::ValueType&)": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::parseValue(stappler::data::json::Decoder::ValueType&)": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::pop()": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::push(stappler::data::json::Decoder::BackType,stappler::data::json::Decoder::ValueType*)": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::r": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::stack": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::stop": "SPDataDecodeJson.h",
		"::stappler::data::json::Decoder<typename>::validate": "SPDataDecodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::InterfaceType": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::PrettyEncoder(std::ostream*,bool)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::ValueType": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::bstack": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::depth": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::isObjectArray(const typename ValueType::ArrayType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::lastKey": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::offsetted": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::onBeginArray(const typename ValueType::ArrayType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::onEndArray(const typename ValueType::ArrayType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::onEndDict(const typename ValueType::DictionaryType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::onKey(const typename ValueType::StringType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::onNextValue()": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::onValue(stappler::data::json::PrettyEncoder::ValueType const&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::popComplex": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::stream": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::timeMarkers": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::write(bool)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::write(const typename ValueType::BytesType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::write(const typename ValueType::StringType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::write(double)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::write(int64_t)": "SPDataEncodeJson.h",
		"::stappler::data::json::PrettyEncoder<typename>::write(stappler::nullptr_t)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::InterfaceType": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::RawEncoder(std::ostream*)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::Type": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::ValueType": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::bytes": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::onBeginArray(const typename ValueType::ArrayType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::onEndArray(const typename ValueType::ArrayType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::onEndDict(const typename ValueType::DictionaryType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::onKey(const typename ValueType::StringType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::onNextValue()": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::stream": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::type": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::write(bool)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::write(const typename ValueType::BytesType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::write(const typename ValueType::StringType&)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::write(double)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::write(int64_t)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::write(stappler::nullptr_t)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::writeChar(char)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::writeData(char const*)": "SPDataEncodeJson.h",
		"::stappler::data::json::RawEncoder<typename>::writeData(char const*,size_t)": "SPDataEncodeJson.h",
		"::stappler::data::json::decodeNumber(stappler::StringView&,bool&)": "SPDataDecodeJson.h",
		"::stappler::data::json::encodeString<typename>(std::ostream&,StringType const&)": "SPDataEncodeJson.h",
		"::stappler::data::json::read<typename>(stappler::StringView const&)": "SPDataDecodeJson.h",
		"::stappler::data::json::read<typename>(stappler::StringView&,bool)": "SPDataDecodeJson.h",
		"::stappler::data::json::save<typename>(ValueTemplate<Interface> const&,stappler::StringView,bool,bool)": "SPDataEncodeJson.h",
		"::stappler::data::json::toString<typename>(ValueTemplate<Interface> const&,bool)": "SPDataEncodeJson.h",
		"::stappler::data::json::write<typename>(ValueTemplate<Interface> const&,bool,bool)": "SPDataEncodeJson.h",
		"::stappler::data::json::write<typename>(std::ostream&,ValueTemplate<Interface> const&,bool,bool)": "SPDataEncodeJson.h",
		"::stappler::data::operator<<<typename,typename,typename>(std::basic_ostream<CharT, Traits>&,ValueTemplate<Interface> const&)": "SPDataEncode.h",
		"::stappler::data::operator<<<typename,typename>(std::basic_ostream<CharT, Traits>&,EncodeFormat::Format)": "SPDataEncode.h",
		"::stappler::data::operator<<<typename,typename>(std::basic_ostream<CharT, Traits>&,stappler::data::EncodeFormat)": "SPDataEncode.h",
		"::stappler::data::parseCommandLineOptions<typename,typename>(Output&,int,char const*[],Callback<void (Output &, stappler::StringView)> const&,Callback<int (Output &, char, const char *)> const&,Callback<int (Output &, const stappler::StringView &, int, const char **)> const&)": "SPData.h",
		"::stappler::data::parseCommandLineOptions<typename,typename>(Output&,int,char16_t const*[],Callback<void (Output &, stappler::StringView)> const&,Callback<int (Output &, char, const char *)> const&,Callback<int (Output &, const stappler::StringView &, int, const char **)> const&)": "SPData.h",
		"::stappler::data::parseCommandLineOptions<typename,typename>(int,char const*[],Callback<int (Output &, char, const char *)> const&,Callback<int (Output &, const stappler::StringView &, int, const char **)> const&)": "SPData.h",
		"::stappler::data::parseCommandLineOptions<typename,typename>(int,char16_t const*[],Callback<int (Output &, char, const char *)> const&,Callback<int (Output &, const stappler::StringView &, int, const char **)> const&)": "SPData.h",
		"::stappler::data::read<typename,typename>(StringType const&,stappler::StringView const&)": "SPDataDecode.h",
		"::stappler::data::readFile<typename>(stappler::StringView,stappler::StringView const&)": "SPDataDecode.h",
		"::stappler::data::readUrlencoded<typename>(stappler::StringView,size_t,size_t)": "SPData.h",
		"::stappler::data::save<typename>(ValueTemplate<Interface> const&,stappler::StringView const&,stappler::data::EncodeFormat)": "SPDataEncode.h",
		"::stappler::data::serenity::Decoder<typename>": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::BackType": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::BytesType": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::Decoder(stappler::StringView&)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::InterfaceType": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::StringType": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::TokenType": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::ValueType": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::back": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::backType": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::parse(stappler::data::serenity::Decoder::ValueType&)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::parseBufferString(stappler::data::serenity::Decoder::StringType&)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::parseNumber(stappler::StringView&,stappler::data::serenity::Decoder::ValueType&)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::parsePlainToken(stappler::data::serenity::Decoder::ValueType&,stappler::StringView)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::pop()": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::push(stappler::data::serenity::Decoder::BackType,stappler::data::serenity::Decoder::ValueType*)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::r": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::stack": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::stop": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::Decoder<typename>::transformToDict(stappler::data::serenity::Decoder::ValueType&)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::InterfaceType": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::PrettyEncoder(std::ostream*)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::Type": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::ValueType": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::bstack": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::depth": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::isObjectArray(const typename ValueType::ArrayType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::offsetted": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onArrayValue(stappler::data::serenity::PrettyEncoder::ValueType const&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onBeginArray(const typename ValueType::ArrayType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onEndArray(const typename ValueType::ArrayType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onEndDict(const typename ValueType::DictionaryType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onKey(const typename ValueType::StringType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onKeyValuePair(const typename ValueType::StringType&,stappler::data::serenity::PrettyEncoder::ValueType const&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onNextValue()": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::onValue(stappler::data::serenity::PrettyEncoder::ValueType const&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::popComplex": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::stream": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::type": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::write(bool)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::write(const typename ValueType::BytesType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::write(const typename ValueType::StringType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::write(double)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::write(int64_t)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::PrettyEncoder<typename>::write(stappler::nullptr_t)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::InterfaceType": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::RawEncoder(std::ostream*)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::Type": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::ValueType": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::onArrayValue(stappler::data::serenity::RawEncoder::ValueType const&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::onBeginArray(const typename ValueType::ArrayType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::onBeginDict(const typename ValueType::DictionaryType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::onEndArray(const typename ValueType::ArrayType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::onEndDict(const typename ValueType::DictionaryType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::onKey(const typename ValueType::StringType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::onKeyValuePair(const typename ValueType::StringType&,stappler::data::serenity::RawEncoder::ValueType const&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::onNextValue()": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::preventKey": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::stream": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::type": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::write(bool)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::write(const typename ValueType::BytesType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::write(const typename ValueType::StringType&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::write(double)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::write(int64_t)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::RawEncoder<typename>::write(stappler::nullptr_t)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::TokenSpecials": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::encodeString<typename>(std::ostream&,StringType const&)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::read<typename>(stappler::StringView const&)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::read<typename>(stappler::StringView&)": "SPDataDecodeSerenity.h",
		"::stappler::data::serenity::save<typename>(ValueTemplate<Interface> const&,stappler::StringView,bool)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::shouldEncodePercent(char)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::toString<typename>(ValueTemplate<Interface> const&,bool)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::write<typename>(ValueTemplate<Interface> const&,bool)": "SPDataEncodeSerenity.h",
		"::stappler::data::serenity::write<typename>(std::ostream&,ValueTemplate<Interface> const&,bool)": "SPDataEncodeSerenity.h",
		"::stappler::data::toString<typename>(ValueTemplate<Interface> const&,EncodeFormat::Format)": "SPDataEncode.h",
		"::stappler::data::toString<typename>(ValueTemplate<Interface> const&,bool)": "SPDataEncode.h",
		"::stappler::data::write<typename>(ValueTemplate<Interface> const&,stappler::data::EncodeFormat,size_t)": "SPDataEncode.h",
		"::stappler::data::write<typename>(std::ostream&,ValueTemplate<Interface> const&,stappler::data::EncodeFormat)": "SPDataEncode.h",
		"::stappler::data::writeCompressionMark(uint8_t*,size_t,EncodeFormat::Compression)": "SPDataEncode.h",
		"::stappler::db::AccessRole": "STStorageTransaction.h",
		"::stappler::db::AccessRole::Admin<typename>(Args &&...)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::Default<typename>(Args &&...)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::Empty<typename>(Args &&...)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnCount": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnCreate": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnField": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnPatch": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnRemove": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnReturn": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnReturnField": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnSave": "STStorageTransaction.h",
		"::stappler::db::AccessRole::OnSelect": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define()": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(Transaction::Op)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnCount&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnCreate&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnField&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnPatch&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnRemove&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnReturn&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnReturnField&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnSave&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRole::OnSelect&&)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define(stappler::db::AccessRoleId)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::define<typename,typename>(T&&,Args &&...)": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onCount": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onCreate": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onField": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onPatch": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onRemove": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onReturn": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onReturnField": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onSave": "STStorageTransaction.h",
		"::stappler::db::AccessRole::onSelect": "STStorageTransaction.h",
		"::stappler::db::AccessRole::operations": "STStorageTransaction.h",
		"::stappler::db::AccessRole::users": "STStorageTransaction.h",
		"::stappler::db::AccessRoleId": "STStorageTransaction.h",
		"::stappler::db::Action": "STStorageQueryList.h",
		"::stappler::db::Adapter": "STStorageAdapter.h",
		"::stappler::db::Adapter::Adapter(stappler::db::Adapter const&)": "STStorageAdapter.h",
		"::stappler::db::Adapter::Adapter(stappler::db::BackendInterface*)": "STStorageAdapter.h",
		"::stappler::db::Adapter::FromContext()": "STStorageAdapter.h",
		"::stappler::db::Adapter::_interface": "STStorageAdapter.h",
		"::stappler::db::Adapter::addToView(stappler::db::FieldView const&,stappler::db::Scheme const*,uint64_t,stappler::mem_pool::Value const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::authorizeUser(stappler::db::Auth const&,stappler::StringView const&,stappler::StringView const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::beginTransaction() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::broadcast(stappler::StringView,stappler::mem_pool::Value&&,bool) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::broadcast(stappler::mem_pool::Bytes const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::broadcast(stappler::mem_pool::Value const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::cancelTransaction() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::clear(stappler::CoderSource const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::count(stappler::db::Worker&,stappler::db::Query const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::create(stappler::db::Worker&,stappler::mem_pool::Value&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::endTransaction() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::field(stappler::db::Action,stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::field(stappler::db::Action,stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::foreach(stappler::db::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::get(stappler::CoderSource const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::getDatabaseName() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::getDeltaValue(stappler::db::Scheme const&)": "STStorageAdapter.h",
		"::stappler::db::Adapter::getDeltaValue(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t)": "STStorageAdapter.h",
		"::stappler::db::Adapter::getReferenceParents(stappler::db::Scheme const&,uint64_t,stappler::db::Scheme const*,stappler::db::Field const*) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::getTransactionKey() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::getTransactionStatus() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::init(BackendInterface::Config const&,Map<stappler::StringView, const stappler::db::Scheme *> const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::interface() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::isInTransaction() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::makeSessionsCleanup() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::operator bool() const": "STStorageAdapter.h",
		"::stappler::db::Adapter::operator=(stappler::db::Adapter const&)": "STStorageAdapter.h",
		"::stappler::db::Adapter::operator==(stappler::db::Adapter const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::patch(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::performQueryList(stappler::db::QueryList const&,size_t,bool) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::performQueryListForIds(stappler::db::QueryList const&,size_t) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::performWithTransaction(Callback<bool (const db::Transaction &)> const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::remove(stappler::db::Worker&,uint64_t) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::removeFromView(stappler::db::FieldView const&,stappler::db::Scheme const*,uint64_t) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::runAutoFields(stappler::db::Transaction const&,Vector<uint64_t> const&,stappler::db::Scheme const&,stappler::db::Field const&)": "STStorageAdapter.h",
		"::stappler::db::Adapter::save(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&,Vector<stappler::mem_pool::String> const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::scheduleAutoField(stappler::db::Scheme const&,stappler::db::Field const&,uint64_t)": "STStorageAdapter.h",
		"::stappler::db::Adapter::select(stappler::db::Worker&,stappler::db::Query const&) const": "STStorageAdapter.h",
		"::stappler::db::Adapter::set(stappler::CoderSource const&,stappler::mem_pool::Value const&,stappler::TimeInterval) const": "STStorageAdapter.h",
		"::stappler::db::Auth": "STStorageAuth.h",
		"::stappler::db::Auth::Auth(stappler::db::Scheme const&)": "STStorageAuth.h",
		"::stappler::db::Auth::Auth(stappler::db::Scheme const&,stappler::StringView const&,stappler::StringView const&)": "STStorageAuth.h",
		"::stappler::db::Auth::Auth(stappler::db::Scheme const&,stappler::db::Auth::NameFieldCallback const&,stappler::StringView const&)": "STStorageAuth.h",
		"::stappler::db::Auth::Auth(stappler::db::Scheme const&,stappler::db::Auth::NameFieldCallback const&,stappler::db::Field const*)": "STStorageAuth.h",
		"::stappler::db::Auth::Auth(stappler::db::Scheme const&,stappler::db::Field const*,stappler::db::Field const*)": "STStorageAuth.h",
		"::stappler::db::Auth::NameFieldCallback": "STStorageAuth.h",
		"::stappler::db::Auth::_name": "STStorageAuth.h",
		"::stappler::db::Auth::_nameFieldCallback": "STStorageAuth.h",
		"::stappler::db::Auth::_password": "STStorageAuth.h",
		"::stappler::db::Auth::_scheme": "STStorageAuth.h",
		"::stappler::db::Auth::authorizeWithPassword(stappler::StringView const&,stappler::mem_pool::Bytes const&,size_t) const": "STStorageAuth.h",
		"::stappler::db::Auth::detectPasswordField(stappler::db::Scheme const&)": "STStorageAuth.h",
		"::stappler::db::Auth::getNameField(stappler::StringView const&) const": "STStorageAuth.h",
		"::stappler::db::Auth::getPasswordField() const": "STStorageAuth.h",
		"::stappler::db::Auth::getScheme() const": "STStorageAuth.h",
		"::stappler::db::AutoFieldDef": "STStorageField.h",
		"::stappler::db::AutoFieldDef::defaultFn": "STStorageField.h",
		"::stappler::db::AutoFieldDef::requireFields": "STStorageField.h",
		"::stappler::db::AutoFieldDef::schemes": "STStorageField.h",
		"::stappler::db::AutoFieldScheme": "STStorageField.h",
		"::stappler::db::AutoFieldScheme::AutoFieldScheme(stappler::db::Scheme const&,stappler::db::AutoFieldScheme::ReqVec&&,stappler::db::AutoFieldScheme::ReqVec&&)": "STStorageField.h",
		"::stappler::db::AutoFieldScheme::AutoFieldScheme(stappler::db::Scheme const&,stappler::db::AutoFieldScheme::ReqVec&&,stappler::db::ViewLinkageFn&&,stappler::db::AutoFieldScheme::ReqVec&&)": "STStorageField.h",
		"::stappler::db::AutoFieldScheme::ReqVec": "STStorageField.h",
		"::stappler::db::AutoFieldScheme::linkage": "STStorageField.h",
		"::stappler::db::AutoFieldScheme::requiresForAuto": "STStorageField.h",
		"::stappler::db::AutoFieldScheme::requiresForLinking": "STStorageField.h",
		"::stappler::db::AutoFieldScheme::scheme": "STStorageField.h",
		"::stappler::db::BackendInterface": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::Config": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::Config::fileScheme": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::Config::name": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::StorageType": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::addToView(stappler::db::FieldView const&,stappler::db::Scheme const*,uint64_t,stappler::mem_pool::Value const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::authorizeUser(stappler::db::Auth const&,stappler::StringView const&,stappler::StringView const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::beginTransaction()": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::broadcast(stappler::mem_pool::Bytes const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::cancelTransaction()": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::clear(stappler::CoderSource const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::count(stappler::db::Worker&,stappler::db::Query const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::create(stappler::db::Worker&,stappler::mem_pool::Value&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::dbName": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::endTransaction()": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::field(stappler::db::Action,stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::field(stappler::db::Action,stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::foreach(stappler::db::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::get(stappler::CoderSource const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::getDatabaseName() const": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::getDeltaValue(stappler::db::Scheme const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::getDeltaValue(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::getReferenceParents(stappler::db::Scheme const&,uint64_t,stappler::db::Scheme const*,stappler::db::Field const*)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::getTransactionKey() const": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::getTransactionStatus() const": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::init(stappler::db::BackendInterface::Config const&,Map<stappler::StringView, const stappler::db::Scheme *> const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::isInTransaction() const": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::makeSessionsCleanup()": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::patch(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::performQueryList(stappler::db::QueryList const&,size_t,bool)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::performQueryListForIds(stappler::db::QueryList const&,size_t)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::processBroadcasts(Callback<void (stappler::BytesView)> const&,int64_t)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::remove(stappler::db::Worker&,uint64_t)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::removeFromView(stappler::db::FieldView const&,stappler::db::Scheme const*,uint64_t)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::save(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&,Vector<stappler::mem_pool::String> const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::select(stappler::db::Worker&,stappler::db::Query const&)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::set(stappler::CoderSource const&,stappler::mem_pool::Value const&,stappler::TimeInterval)": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::transactionStatus": "STStorageBackendInterface.h",
		"::stappler::db::BackendInterface::~BackendInterface()": "STStorageBackendInterface.h",
		"::stappler::db::Binder": "STStorageBackendInterface.h",
		"::stappler::db::Binder::DataField": "STStorageBackendInterface.h",
		"::stappler::db::Binder::DataField::compress": "STStorageBackendInterface.h",
		"::stappler::db::Binder::DataField::data": "STStorageBackendInterface.h",
		"::stappler::db::Binder::DataField::field": "STStorageBackendInterface.h",
		"::stappler::db::Binder::DataField::force": "STStorageBackendInterface.h",
		"::stappler::db::Binder::FullTextField": "STStorageBackendInterface.h",
		"::stappler::db::Binder::FullTextField::data": "STStorageBackendInterface.h",
		"::stappler::db::Binder::FullTextRank": "STStorageBackendInterface.h",
		"::stappler::db::Binder::FullTextRank::field": "STStorageBackendInterface.h",
		"::stappler::db::Binder::FullTextRank::query": "STStorageBackendInterface.h",
		"::stappler::db::Binder::FullTextRank::scheme": "STStorageBackendInterface.h",
		"::stappler::db::Binder::TypeString": "STStorageBackendInterface.h",
		"::stappler::db::Binder::TypeString::TypeString<typename,typename>(Str&&,Type&&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::TypeString::str": "STStorageBackendInterface.h",
		"::stappler::db::Binder::TypeString::type": "STStorageBackendInterface.h",
		"::stappler::db::Binder::_iface": "STStorageBackendInterface.h",
		"::stappler::db::Binder::clear()": "STStorageBackendInterface.h",
		"::stappler::db::Binder::getInterface() const": "STStorageBackendInterface.h",
		"::stappler::db::Binder::setInterface(stappler::db::QueryInterface*)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,Vector<double> const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,Vector<int64_t> const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,Vector<stappler::StringView> const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,double)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,int64_t)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::CoderSource const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::StringView const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::Time)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::TimeInterval)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::Binder::DataField const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::Binder::FullTextField const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::Binder::FullTextRank const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::Binder::TypeString const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::db::FullTextData const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes&&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::String const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::String&&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::sql::PatternComparator<const StringView &> const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,stappler::sql::PatternComparator<const Value &> const&)": "STStorageBackendInterface.h",
		"::stappler::db::Binder::writeBind(stappler::mem_pool::StringStream&,uint64_t)": "STStorageBackendInterface.h",
		"::stappler::db::Comparation": "STStorageQuery.h",
		"::stappler::db::Conflict": "STStorageWorker.h",
		"::stappler::db::Conflict::Conflict(Conflict::Flags)": "STStorageWorker.h",
		"::stappler::db::Conflict::Conflict(stappler::StringView,Query::Select&&,Vector<stappler::mem_pool::String>&&)": "STStorageWorker.h",
		"::stappler::db::Conflict::Conflict(stappler::StringView,Query::Select&&,stappler::db::Conflict::Flags)": "STStorageWorker.h",
		"::stappler::db::Conflict::Flags": "STStorageWorker.h",
		"::stappler::db::Conflict::condition": "STStorageWorker.h",
		"::stappler::db::Conflict::field": "STStorageWorker.h",
		"::stappler::db::Conflict::flags": "STStorageWorker.h",
		"::stappler::db::Conflict::mask": "STStorageWorker.h",
		"::stappler::db::Conflict::setFlags(stappler::db::Conflict::Flags)": "STStorageWorker.h",
		"::stappler::db::Conflict::update(stappler::StringView)": "STStorageWorker.h",
		"::stappler::db::ContinueToken": "STContinueToken.h",
		"::stappler::db::ContinueToken::ContinueToken()": "STContinueToken.h",
		"::stappler::db::ContinueToken::ContinueToken(stappler::StringView const&)": "STContinueToken.h",
		"::stappler::db::ContinueToken::ContinueToken(stappler::StringView const&,size_t,bool)": "STContinueToken.h",
		"::stappler::db::ContinueToken::ContinueToken(stappler::db::ContinueToken const&)": "STContinueToken.h",
		"::stappler::db::ContinueToken::ContinueToken(stappler::db::ContinueToken&&)": "STContinueToken.h",
		"::stappler::db::ContinueToken::Flags": "STContinueToken.h",
		"::stappler::db::ContinueToken::_init": "STContinueToken.h",
		"::stappler::db::ContinueToken::_numResults": "STContinueToken.h",
		"::stappler::db::ContinueToken::count": "STContinueToken.h",
		"::stappler::db::ContinueToken::encode() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::encodeNext() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::encodeNextImpl() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::encodePrev() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::encodePrevImpl() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::fetched": "STContinueToken.h",
		"::stappler::db::ContinueToken::field": "STContinueToken.h",
		"::stappler::db::ContinueToken::firstVec": "STContinueToken.h",
		"::stappler::db::ContinueToken::flags": "STContinueToken.h",
		"::stappler::db::ContinueToken::getCount() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::getEnd() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::getFetched() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::getField() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::getFirstVec() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::getLastVec() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::getNumResults() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::getStart() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::getTotal() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::hasFlag(stappler::db::ContinueToken::Flags) const": "STContinueToken.h",
		"::stappler::db::ContinueToken::hasNext() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::hasNextImpl() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::hasPrev() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::hasPrevImpl() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::initVec": "STContinueToken.h",
		"::stappler::db::ContinueToken::isInit() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::lastVec": "STContinueToken.h",
		"::stappler::db::ContinueToken::operator bool() const": "STContinueToken.h",
		"::stappler::db::ContinueToken::operator=(stappler::db::ContinueToken const&)": "STContinueToken.h",
		"::stappler::db::ContinueToken::operator=(stappler::db::ContinueToken&&)": "STContinueToken.h",
		"::stappler::db::ContinueToken::perform(stappler::db::Scheme const&,stappler::db::Transaction const&,stappler::db::Query&)": "STContinueToken.h",
		"::stappler::db::ContinueToken::perform(stappler::db::Scheme const&,stappler::db::Transaction const&,stappler::db::Query&,stappler::db::Ordering)": "STContinueToken.h",
		"::stappler::db::ContinueToken::performOrdered(stappler::db::Scheme const&,stappler::db::Transaction const&,stappler::db::Query&)": "STContinueToken.h",
		"::stappler::db::ContinueToken::refresh(stappler::db::Scheme const&,stappler::db::Transaction const&,stappler::db::Query&)": "STContinueToken.h",
		"::stappler::db::ContinueToken::setFlag(stappler::db::ContinueToken::Flags)": "STContinueToken.h",
		"::stappler::db::ContinueToken::total": "STContinueToken.h",
		"::stappler::db::ContinueToken::unsetFlag(stappler::db::ContinueToken::Flags)": "STContinueToken.h",
		"::stappler::db::DefaultFn": "STStorageField.h",
		"::stappler::db::DeltaAction": "STStorageBackendInterface.h",
		"::stappler::db::Documentation": "STStorageField.h",
		"::stappler::db::Field": "STStorageField.h",
		"::stappler::db::Field::Array<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Boolean<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Bytes<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Custom<typename>(stappler::db::FieldCustom*)": "STStorageField.h",
		"::stappler::db::Field::Data<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Extra<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Extra<typename>(stappler::mem_pool::String&&,stappler::InitializerList<Field>&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Field(stappler::db::Field const&)": "STStorageField.h",
		"::stappler::db::Field::Field(stappler::db::Field&&)": "STStorageField.h",
		"::stappler::db::Field::Field(stappler::db::Field::Slot const*)": "STStorageField.h",
		"::stappler::db::Field::Field<typename>(Str&&)": "STStorageQuery.h",
		"::stappler::db::Field::Field<typename>(Str&&,Vector<stappler::db::Query::Field>&&)": "STStorageQuery.h",
		"::stappler::db::Field::Field<typename>(Str&&,Vector<stappler::mem_pool::String>&&)": "STStorageQuery.h",
		"::stappler::db::Field::Field<typename>(Str&&,std::initializer_list<Field>&&)": "STStorageQuery.h",
		"::stappler::db::Field::Field<typename>(Str&&,std::initializer_list<String>&&)": "STStorageQuery.h",
		"::stappler::db::Field::File<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Float<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::FullTextView<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Image<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Integer<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Object<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Password<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Set<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Slot": "STStorageField.h",
		"::stappler::db::Field::Slot::Slot(stappler::mem_pool::String&&,stappler::db::Type)": "STStorageField.h",
		"::stappler::db::Field::Slot::autoField": "STStorageField.h",
		"::stappler::db::Field::Slot::def": "STStorageField.h",
		"::stappler::db::Field::Slot::defaultFn": "STStorageField.h",
		"::stappler::db::Field::Slot::documentation": "STStorageField.h",
		"::stappler::db::Field::Slot::flags": "STStorageField.h",
		"::stappler::db::Field::Slot::getDefault(stappler::mem_pool::Value const&) const": "STStorageField.h",
		"::stappler::db::Field::Slot::getName() const": "STStorageField.h",
		"::stappler::db::Field::Slot::getTransform() const": "STStorageField.h",
		"::stappler::db::Field::Slot::getType() const": "STStorageField.h",
		"::stappler::db::Field::Slot::hasDefault() const": "STStorageField.h",
		"::stappler::db::Field::Slot::hasFlag(stappler::db::Flags) const": "STStorageField.h",
		"::stappler::db::Field::Slot::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::Field::Slot::init<typename,typename>(F&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Slot::init<typename>(F&)": "STStorageField.h",
		"::stappler::db::Field::Slot::isDataLayout() const": "STStorageField.h",
		"::stappler::db::Field::Slot::isFile() const": "STStorageField.h",
		"::stappler::db::Field::Slot::isIndexed() const": "STStorageField.h",
		"::stappler::db::Field::Slot::isProtected() const": "STStorageField.h",
		"::stappler::db::Field::Slot::isSimpleLayout() const": "STStorageField.h",
		"::stappler::db::Field::Slot::name": "STStorageField.h",
		"::stappler::db::Field::Slot::owner": "STStorageField.h",
		"::stappler::db::Field::Slot::readFilterFn": "STStorageField.h",
		"::stappler::db::Field::Slot::replaceFilterFn": "STStorageField.h",
		"::stappler::db::Field::Slot::root": "STStorageField.h",
		"::stappler::db::Field::Slot::setOptions<typename,typename,typename>(F&,T&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Slot::setOptions<typename,typename>(F&,T&&)": "STStorageField.h",
		"::stappler::db::Field::Slot::transform": "STStorageField.h",
		"::stappler::db::Field::Slot::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::Field::Slot::type": "STStorageField.h",
		"::stappler::db::Field::Slot::writeFilterFn": "STStorageField.h",
		"::stappler::db::Field::Slot::~Slot()": "STStorageField.h",
		"::stappler::db::Field::Text<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::View<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::Virtual<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::Field::getDefault(stappler::mem_pool::Value const&) const": "STStorageField.h",
		"::stappler::db::Field::getFlags() const": "STStorageField.h",
		"::stappler::db::Field::getForeignScheme() const": "STStorageField.h",
		"::stappler::db::Field::getName() const": "STStorageField.h",
		"::stappler::db::Field::getSlot<typename>() const": "STStorageField.h",
		"::stappler::db::Field::getTransform() const": "STStorageField.h",
		"::stappler::db::Field::getType() const": "STStorageField.h",
		"::stappler::db::Field::getTypeDesc() const": "STStorageField.h",
		"::stappler::db::Field::hasDefault() const": "STStorageField.h",
		"::stappler::db::Field::hasFlag(stappler::db::Flags) const": "STStorageField.h",
		"::stappler::db::Field::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::Field::isDataLayout() const": "STStorageField.h",
		"::stappler::db::Field::isFile() const": "STStorageField.h",
		"::stappler::db::Field::isIndexed() const": "STStorageField.h",
		"::stappler::db::Field::isProtected() const": "STStorageField.h",
		"::stappler::db::Field::isReference() const": "STStorageField.h",
		"::stappler::db::Field::isSimpleLayout() const": "STStorageField.h",
		"::stappler::db::Field::operator bool() const": "STStorageField.h",
		"::stappler::db::Field::operator=(stappler::db::Field const&)": "STStorageField.h",
		"::stappler::db::Field::operator=(stappler::db::Field&&)": "STStorageField.h",
		"::stappler::db::Field::slot": "STStorageField.h",
		"::stappler::db::Field::transform(stappler::db::Scheme const&,int64_t,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::Field::transform(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldArray": "STStorageField.h",
		"::stappler::db::FieldArray::FieldArray<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldArray::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::FieldArray::tfield": "STStorageField.h",
		"::stappler::db::FieldArray::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldArray::~FieldArray()": "STStorageField.h",
		"::stappler::db::FieldBigIntArray": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::FieldBigIntArray<typename>(stappler::mem_pool::String&&,Args &&...)": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::getIndexField() const": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::getIndexName() const": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::getTypeName() const": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::isComparationAllowed(db::Comparation) const": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::isSimpleLayout() const": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::readFromStorage(db::ResultCursor const&,size_t) const": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::transformValue(db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::writeQuery(db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const": "STFieldIntArray.h",
		"::stappler::db::FieldBigIntArray::writeToStorage(db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const": "STFieldIntArray.h",
		"::stappler::db::FieldCustom": "STStorageField.h",
		"::stappler::db::FieldCustom::FieldCustom<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldCustom::getIndexField() const": "STStorageField.h",
		"::stappler::db::FieldCustom::getIndexName() const": "STStorageField.h",
		"::stappler::db::FieldCustom::getTypeName() const": "STStorageField.h",
		"::stappler::db::FieldCustom::isComparationAllowed(stappler::db::Comparation) const": "STStorageField.h",
		"::stappler::db::FieldCustom::readFromStorage(stappler::db::ResultCursor const&,size_t) const": "STStorageField.h",
		"::stappler::db::FieldCustom::writeQuery(stappler::db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const": "STStorageField.h",
		"::stappler::db::FieldCustom::writeToStorage(stappler::db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const": "STStorageField.h",
		"::stappler::db::FieldCustom::~FieldCustom()": "STStorageField.h",
		"::stappler::db::FieldExtra": "STStorageField.h",
		"::stappler::db::FieldExtra::FieldExtra<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldExtra::fields": "STStorageField.h",
		"::stappler::db::FieldExtra::getDefault(stappler::mem_pool::Value const&) const": "STStorageField.h",
		"::stappler::db::FieldExtra::hasDefault() const": "STStorageField.h",
		"::stappler::db::FieldExtra::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::FieldExtra::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldExtra::~FieldExtra()": "STStorageField.h",
		"::stappler::db::FieldFile": "STStorageField.h",
		"::stappler::db::FieldFile::FieldFile<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldFile::allowedTypes": "STStorageField.h",
		"::stappler::db::FieldFile::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::FieldFile::maxSize": "STStorageField.h",
		"::stappler::db::FieldFile::~FieldFile()": "STStorageField.h",
		"::stappler::db::FieldFullTextView": "STStorageField.h",
		"::stappler::db::FieldFullTextView::FieldFullTextView<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldFullTextView::parseQuery(stappler::mem_pool::Value const&) const": "STStorageField.h",
		"::stappler::db::FieldFullTextView::queryFn": "STStorageField.h",
		"::stappler::db::FieldFullTextView::requireFields": "STStorageField.h",
		"::stappler::db::FieldFullTextView::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldFullTextView::viewFn": "STStorageField.h",
		"::stappler::db::FieldFullTextView::~FieldFullTextView()": "STStorageField.h",
		"::stappler::db::FieldImage": "STStorageField.h",
		"::stappler::db::FieldImage::FieldImage<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldImage::allowedTypes": "STStorageField.h",
		"::stappler::db::FieldImage::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::FieldImage::maxImageSize": "STStorageField.h",
		"::stappler::db::FieldImage::maxSize": "STStorageField.h",
		"::stappler::db::FieldImage::minImageSize": "STStorageField.h",
		"::stappler::db::FieldImage::primary": "STStorageField.h",
		"::stappler::db::FieldImage::thumbnails": "STStorageField.h",
		"::stappler::db::FieldImage::~FieldImage()": "STStorageField.h",
		"::stappler::db::FieldIntArray": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::FieldIntArray<typename>(stappler::mem_pool::String&&,Args &&...)": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::getIndexField() const": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::getIndexName() const": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::getTypeName() const": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::isComparationAllowed(db::Comparation) const": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::isSimpleLayout() const": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::readFromStorage(db::ResultCursor const&,size_t) const": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::transformValue(db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::writeQuery(db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const": "STFieldIntArray.h",
		"::stappler::db::FieldIntArray::writeToStorage(db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const": "STFieldIntArray.h",
		"::stappler::db::FieldObject": "STStorageField.h",
		"::stappler::db::FieldObject::FieldObject<typename>(stappler::mem_pool::String&&,stappler::db::Type,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldObject::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::FieldObject::link": "STStorageField.h",
		"::stappler::db::FieldObject::linkage": "STStorageField.h",
		"::stappler::db::FieldObject::onRemove": "STStorageField.h",
		"::stappler::db::FieldObject::scheme": "STStorageField.h",
		"::stappler::db::FieldObject::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldObject::~FieldObject()": "STStorageField.h",
		"::stappler::db::FieldOption<F,AutoFieldDef>::FieldOption<F,AutoFieldDef>": "STStorageField.h",
		"::stappler::db::FieldOption<F,AutoFieldDef>::assign(F&,stappler::db::AutoFieldDef&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,DefaultFn>::FieldOption<F,DefaultFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,DefaultFn>::assign(F&,stappler::db::DefaultFn const&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Documentation>::FieldOption<F,Documentation>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Documentation>::assign(F&,stappler::db::Documentation&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Field>::FieldOption<F,Field>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Field>::assign(F&,stappler::db::Field&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,FieldView::DeltaOptions>::FieldOption<F,FieldView::DeltaOptions>": "STStorageField.h",
		"::stappler::db::FieldOption<F,FieldView::DeltaOptions>::assign(F&,FieldView::DeltaOptions)": "STStorageField.h",
		"::stappler::db::FieldOption<F,FilterFn>::FieldOption<F,FilterFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,FilterFn>::assign(F&,stappler::db::FilterFn const&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Flags>::FieldOption<F,Flags>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Flags>::assign(F&,stappler::db::Flags)": "STStorageField.h",
		"::stappler::db::FieldOption<F,ForeignLink>::FieldOption<F,ForeignLink>": "STStorageField.h",
		"::stappler::db::FieldOption<F,ForeignLink>::assign(F&,stappler::db::ForeignLink&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,FullTextQueryFn>::FieldOption<F,FullTextQueryFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,FullTextQueryFn>::assign(F&,stappler::db::FullTextQueryFn&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,FullTextViewFn>::FieldOption<F,FullTextViewFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,FullTextViewFn>::assign(F&,stappler::db::FullTextViewFn&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Function<Value()>>::FieldOption<F,Function<Value()>>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Function<Value()>>::assign(F&,Function<stappler::mem_pool::Value ()> const&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Linkage>::FieldOption<F,Linkage>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Linkage>::assign(F&,stappler::db::Linkage)": "STStorageField.h",
		"::stappler::db::FieldOption<F,MaxFileSize>::FieldOption<F,MaxFileSize>": "STStorageField.h",
		"::stappler::db::FieldOption<F,MaxFileSize>::assign(F&,stappler::db::MaxFileSize)": "STStorageField.h",
		"::stappler::db::FieldOption<F,MaxImageSize>::FieldOption<F,MaxImageSize>": "STStorageField.h",
		"::stappler::db::FieldOption<F,MaxImageSize>::assign(F&,stappler::db::MaxImageSize&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,MaxLength>::FieldOption<F,MaxLength>": "STStorageField.h",
		"::stappler::db::FieldOption<F,MaxLength>::assign(F&,stappler::db::MaxLength)": "STStorageField.h",
		"::stappler::db::FieldOption<F,MinImageSize>::FieldOption<F,MinImageSize>": "STStorageField.h",
		"::stappler::db::FieldOption<F,MinImageSize>::assign(F&,stappler::db::MinImageSize&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,MinLength>::FieldOption<F,MinLength>": "STStorageField.h",
		"::stappler::db::FieldOption<F,MinLength>::assign(F&,stappler::db::MinLength)": "STStorageField.h",
		"::stappler::db::FieldOption<F,PasswordSalt>::FieldOption<F,PasswordSalt>": "STStorageField.h",
		"::stappler::db::FieldOption<F,PasswordSalt>::assign(F&,stappler::db::PasswordSalt&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,ReadFilterFn>::FieldOption<F,ReadFilterFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,ReadFilterFn>::assign(F&,stappler::db::ReadFilterFn const&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,RemovePolicy>::FieldOption<F,RemovePolicy>": "STStorageField.h",
		"::stappler::db::FieldOption<F,RemovePolicy>::assign(F&,stappler::db::RemovePolicy)": "STStorageField.h",
		"::stappler::db::FieldOption<F,ReplaceFilterFn>::FieldOption<F,ReplaceFilterFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,ReplaceFilterFn>::assign(F&,stappler::db::ReplaceFilterFn const&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Scheme>::FieldOption<F,Scheme>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Scheme>::assign(F&,stappler::db::Scheme const&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Transform>::FieldOption<F,Transform>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Transform>::assign(F&,stappler::db::Transform)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Value>::FieldOption<F,Value>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Value>::assign(F&,stappler::mem_pool::Value&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Vector<Field>>::FieldOption<F,Vector<Field>>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Vector<Field>>::assign(F&,Vector<stappler::db::Field>&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Vector<String>>::FieldOption<F,Vector<String>>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Vector<String>>::assign(F&,Vector<stappler::mem_pool::String>&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,Vector<Thumbnail>>::FieldOption<F,Vector<Thumbnail>>": "STStorageField.h",
		"::stappler::db::FieldOption<F,Vector<Thumbnail>>::assign(F&,Vector<stappler::db::Thumbnail>&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,ViewFn>::FieldOption<F,ViewFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,ViewFn>::assign(F&,stappler::db::ViewFn&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,ViewLinkageFn>::FieldOption<F,ViewLinkageFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,ViewLinkageFn>::assign(F&,stappler::db::ViewLinkageFn&&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,WriteFilterFn>::FieldOption<F,WriteFilterFn>": "STStorageField.h",
		"::stappler::db::FieldOption<F,WriteFilterFn>::assign(F&,stappler::db::WriteFilterFn const&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,constScheme*>::FieldOption<F,constScheme*>": "STStorageField.h",
		"::stappler::db::FieldOption<F,constScheme*>::assign(F&,stappler::db::Scheme const*)": "STStorageField.h",
		"::stappler::db::FieldOption<F,constScheme>::FieldOption<F,constScheme>": "STStorageField.h",
		"::stappler::db::FieldOption<F,constScheme>::assign(F&,stappler::db::Scheme const&)": "STStorageField.h",
		"::stappler::db::FieldOption<F,std::initializer_list<Field>>::FieldOption<F,std::initializer_list<Field>>": "STStorageField.h",
		"::stappler::db::FieldOption<F,std::initializer_list<Field>>::assign(F&,std::initializer_list<Field>&&)": "STStorageField.h",
		"::stappler::db::FieldOption<FieldArray,Type>::FieldOption<FieldArray,Type>": "STStorageField.h",
		"::stappler::db::FieldOption<FieldArray,Type>::assign(stappler::db::FieldArray&,stappler::db::Type)": "STStorageField.h",
		"::stappler::db::FieldOption<FieldFullTextView,Vector<String>>::FieldOption<FieldFullTextView,Vector<String>>": "STStorageField.h",
		"::stappler::db::FieldOption<FieldFullTextView,Vector<String>>::assign(stappler::db::FieldFullTextView&,Vector<stappler::mem_pool::String>&&)": "STStorageField.h",
		"::stappler::db::FieldOption<FieldView,Vector<String>>::FieldOption<FieldView,Vector<String>>": "STStorageField.h",
		"::stappler::db::FieldOption<FieldView,Vector<String>>::assign(stappler::db::FieldView&,Vector<stappler::mem_pool::String>&&)": "STStorageField.h",
		"::stappler::db::FieldOption<FieldVirtual,Vector<String>>::FieldOption<FieldVirtual,Vector<String>>": "STStorageField.h",
		"::stappler::db::FieldOption<FieldVirtual,Vector<String>>::assign(stappler::db::FieldVirtual&,Vector<stappler::mem_pool::String>&&)": "STStorageField.h",
		"::stappler::db::FieldOption<FieldVirtual,VirtualReadFn>::FieldOption<FieldVirtual,VirtualReadFn>": "STStorageField.h",
		"::stappler::db::FieldOption<FieldVirtual,VirtualReadFn>::assign(stappler::db::FieldVirtual&,stappler::db::VirtualReadFn&&)": "STStorageField.h",
		"::stappler::db::FieldOption<FieldVirtual,VirtualWriteFn>::FieldOption<FieldVirtual,VirtualWriteFn>": "STStorageField.h",
		"::stappler::db::FieldOption<FieldVirtual,VirtualWriteFn>::assign(stappler::db::FieldVirtual&,stappler::db::VirtualWriteFn&&)": "STStorageField.h",
		"::stappler::db::FieldPassword": "STStorageField.h",
		"::stappler::db::FieldPassword::FieldPassword<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldPassword::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::FieldPassword::maxLength": "STStorageField.h",
		"::stappler::db::FieldPassword::minLength": "STStorageField.h",
		"::stappler::db::FieldPassword::salt": "STStorageField.h",
		"::stappler::db::FieldPassword::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldPassword::~FieldPassword()": "STStorageField.h",
		"::stappler::db::FieldPoint": "STFieldPoint.h",
		"::stappler::db::FieldPoint::FieldPoint<typename>(stappler::mem_pool::String&&,Args &&...)": "STFieldPoint.h",
		"::stappler::db::FieldPoint::getIndexField() const": "STFieldPoint.h",
		"::stappler::db::FieldPoint::getIndexName() const": "STFieldPoint.h",
		"::stappler::db::FieldPoint::getTypeName() const": "STFieldPoint.h",
		"::stappler::db::FieldPoint::isComparationAllowed(stappler::sql::Comparation) const": "STFieldPoint.h",
		"::stappler::db::FieldPoint::isSimpleLayout() const": "STFieldPoint.h",
		"::stappler::db::FieldPoint::readFromStorage(db::ResultCursor const&,size_t) const": "STFieldPoint.h",
		"::stappler::db::FieldPoint::transformValue(db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STFieldPoint.h",
		"::stappler::db::FieldPoint::writeQuery(db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const": "STFieldPoint.h",
		"::stappler::db::FieldPoint::writeToStorage(db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const": "STFieldPoint.h",
		"::stappler::db::FieldResolver": "STStorageWorker.h",
		"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&)": "STStorageWorker.h",
		"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,Set<const stappler::db::Field *> const&)": "STStorageWorker.h",
		"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,stappler::db::Query const&)": "STStorageWorker.h",
		"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,stappler::db::Query const&,Set<const stappler::db::Field *> const&)": "STStorageWorker.h",
		"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,stappler::db::Worker const&)": "STStorageWorker.h",
		"::stappler::db::FieldResolver::FieldResolver(stappler::db::Scheme const&,stappler::db::Worker const&,stappler::db::Query const&)": "STStorageWorker.h",
		"::stappler::db::FieldResolver::getVirtuals() const": "STStorageWorker.h",
		"::stappler::db::FieldResolver::hasIncludesOrExcludes() const": "STStorageWorker.h",
		"::stappler::db::FieldResolver::include(stappler::StringView)": "STStorageWorker.h",
		"::stappler::db::FieldResolver::isFieldRequired(stappler::db::Field const&) const": "STStorageWorker.h",
		"::stappler::db::FieldResolver::query": "STStorageWorker.h",
		"::stappler::db::FieldResolver::readFields(Worker::FieldCallback const&,bool)": "STStorageWorker.h",
		"::stappler::db::FieldResolver::required": "STStorageWorker.h",
		"::stappler::db::FieldResolver::requiredFields": "STStorageWorker.h",
		"::stappler::db::FieldResolver::scheme": "STStorageWorker.h",
		"::stappler::db::FieldResolver::shouldExcludeField(stappler::db::Field const&) const": "STStorageWorker.h",
		"::stappler::db::FieldResolver::shouldIncludeAll() const": "STStorageWorker.h",
		"::stappler::db::FieldResolver::shouldIncludeField(stappler::db::Field const&) const": "STStorageWorker.h",
		"::stappler::db::FieldResolver::shouldResolveFields() const": "STStorageWorker.h",
		"::stappler::db::FieldText": "STStorageField.h",
		"::stappler::db::FieldText::FieldText<typename>(stappler::mem_pool::String&&,stappler::db::Type,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldText::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::FieldText::maxLength": "STStorageField.h",
		"::stappler::db::FieldText::minLength": "STStorageField.h",
		"::stappler::db::FieldText::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldText::~FieldText()": "STStorageField.h",
		"::stappler::db::FieldTextArray": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::FieldTextArray<typename>(stappler::mem_pool::String&&,Args &&...)": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::getIndexField() const": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::getIndexName() const": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::getTypeName() const": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::isComparationAllowed(db::Comparation) const": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::isSimpleLayout() const": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::readFromStorage(db::ResultCursor const&,size_t) const": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::transformValue(db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::writeQuery(db::Scheme const&,stappler::sql::Query<db::Binder, Interface>::WhereContinue&,stappler::sql::Operator,stappler::StringView const&,stappler::sql::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const": "STFieldTextArray.h",
		"::stappler::db::FieldTextArray::writeToStorage(db::QueryInterface&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&) const": "STFieldTextArray.h",
		"::stappler::db::FieldView": "STStorageField.h",
		"::stappler::db::FieldView::DeltaOptions": "STStorageField.h",
		"::stappler::db::FieldView::FieldView<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldView::delta": "STStorageField.h",
		"::stappler::db::FieldView::linkage": "STStorageField.h",
		"::stappler::db::FieldView::requireFields": "STStorageField.h",
		"::stappler::db::FieldView::scheme": "STStorageField.h",
		"::stappler::db::FieldView::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldView::viewFn": "STStorageField.h",
		"::stappler::db::FieldView::~FieldView()": "STStorageField.h",
		"::stappler::db::FieldVirtual": "STStorageField.h",
		"::stappler::db::FieldVirtual::FieldVirtual<typename>(stappler::mem_pool::String&&,Args &&...)": "STStorageField.h",
		"::stappler::db::FieldVirtual::hash(stappler::mem_pool::StringStream&,stappler::db::ValidationLevel) const": "STStorageField.h",
		"::stappler::db::FieldVirtual::readFn": "STStorageField.h",
		"::stappler::db::FieldVirtual::requireFields": "STStorageField.h",
		"::stappler::db::FieldVirtual::transformValue(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,bool) const": "STStorageField.h",
		"::stappler::db::FieldVirtual::writeFn": "STStorageField.h",
		"::stappler::db::FieldVirtual::~FieldVirtual()": "STStorageField.h",
		"::stappler::db::File": "STStorageFile.h",
		"::stappler::db::File::createFile(stappler::db::Transaction const&,stappler::StringView const&,stappler::BytesView const&,int64_t)": "STStorageFile.h",
		"::stappler::db::File::createFile(stappler::db::Transaction const&,stappler::StringView const&,stappler::StringView const&,int64_t)": "STStorageFile.h",
		"::stappler::db::File::createFile(stappler::db::Transaction const&,stappler::db::Field const&,stappler::db::InputFile&)": "STStorageFile.h",
		"::stappler::db::File::createImage(stappler::db::Transaction const&,stappler::db::Field const&,stappler::StringView const&,stappler::BytesView const&,int64_t)": "STStorageFile.h",
		"::stappler::db::File::createImage(stappler::db::Transaction const&,stappler::db::Field const&,stappler::db::InputFile&)": "STStorageFile.h",
		"::stappler::db::File::getData(stappler::db::Transaction const&,uint64_t)": "STStorageFile.h",
		"::stappler::db::File::getFilesystemPath(uint64_t)": "STStorageFile.h",
		"::stappler::db::File::getScheme()": "STStorageFile.h",
		"::stappler::db::File::purgeFile(stappler::db::Transaction const&,int64_t)": "STStorageFile.h",
		"::stappler::db::File::purgeFile(stappler::db::Transaction const&,stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value const&)": "STStorageFile.h",
		"::stappler::db::File::removeFile(int64_t)": "STStorageFile.h",
		"::stappler::db::File::removeFile(stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value const&)": "STStorageFile.h",
		"::stappler::db::File::setData(stappler::db::Transaction const&,uint64_t,stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value const&)": "STStorageFile.h",
		"::stappler::db::File::validateFileField(stappler::db::Field const&,stappler::StringView const&,stappler::BytesView const&)": "STStorageFile.h",
		"::stappler::db::File::validateFileField(stappler::db::Field const&,stappler::db::InputFile const&)": "STStorageFile.h",
		"::stappler::db::FilterFn": "STStorageField.h",
		"::stappler::db::Flags": "STStorageField.h",
		"::stappler::db::ForeignLink": "STStorageField.h",
		"::stappler::db::FullTextData": "STStorageQueryList.h",
		"::stappler::db::FullTextQueryFn": "STStorageField.h",
		"::stappler::db::FullTextViewFn": "STStorageField.h",
		"::stappler::db::ImagePolicy": "STStorageField.h",
		"::stappler::db::InputConfig": "STStorage.h",
		"::stappler::db::InputConfig::InputConfig()": "STStorage.h",
		"::stappler::db::InputConfig::InputConfig(stappler::db::InputConfig const&)": "STStorage.h",
		"::stappler::db::InputConfig::InputConfig(stappler::db::InputConfig&&)": "STStorage.h",
		"::stappler::db::InputConfig::Require": "STStorage.h",
		"::stappler::db::InputConfig::maxFileSize": "STStorage.h",
		"::stappler::db::InputConfig::maxRequestSize": "STStorage.h",
		"::stappler::db::InputConfig::maxVarSize": "STStorage.h",
		"::stappler::db::InputConfig::operator=(stappler::db::InputConfig const&)": "STStorage.h",
		"::stappler::db::InputConfig::operator=(stappler::db::InputConfig&&)": "STStorage.h",
		"::stappler::db::InputConfig::required": "STStorage.h",
		"::stappler::db::InputConfig::updateFrequency": "STStorage.h",
		"::stappler::db::InputConfig::updateLimits(Map<stappler::mem_pool::String, stappler::db::Field> const&)": "STStorage.h",
		"::stappler::db::InputConfig::updateTime": "STStorage.h",
		"::stappler::db::InputFile": "STInputFile.h",
		"::stappler::db::InputFile::InputFile(stappler::db::InputFile const&)": "STInputFile.h",
		"::stappler::db::InputFile::InputFile(stappler::db::InputFile&&)": "STInputFile.h",
		"::stappler::db::InputFile::InputFile(stappler::mem_pool::String&&,stappler::mem_pool::String&&,stappler::mem_pool::String&&,stappler::mem_pool::String&&,size_t,int64_t)": "STInputFile.h",
		"::stappler::db::InputFile::close()": "STInputFile.h",
		"::stappler::db::InputFile::encoding": "STInputFile.h",
		"::stappler::db::InputFile::file": "STInputFile.h",
		"::stappler::db::InputFile::headerSize": "STInputFile.h",
		"::stappler::db::InputFile::id": "STInputFile.h",
		"::stappler::db::InputFile::isBinary": "STInputFile.h",
		"::stappler::db::InputFile::isOpen() const": "STInputFile.h",
		"::stappler::db::InputFile::name": "STInputFile.h",
		"::stappler::db::InputFile::negativeId() const": "STInputFile.h",
		"::stappler::db::InputFile::operator=(stappler::db::InputFile const&)": "STInputFile.h",
		"::stappler::db::InputFile::operator=(stappler::db::InputFile&&)": "STInputFile.h",
		"::stappler::db::InputFile::original": "STInputFile.h",
		"::stappler::db::InputFile::path": "STInputFile.h",
		"::stappler::db::InputFile::readBytes()": "STInputFile.h",
		"::stappler::db::InputFile::readText()": "STInputFile.h",
		"::stappler::db::InputFile::save(stappler::StringView const&) const": "STInputFile.h",
		"::stappler::db::InputFile::type": "STInputFile.h",
		"::stappler::db::InputFile::write(char const*,size_t)": "STInputFile.h",
		"::stappler::db::InputFile::writeSize": "STInputFile.h",
		"::stappler::db::InputFile::~InputFile()": "STInputFile.h",
		"::stappler::db::Linkage": "STStorageField.h",
		"::stappler::db::MaxFileSize": "STStorageField.h",
		"::stappler::db::MaxImageSize": "STStorageField.h",
		"::stappler::db::MaxImageSize::MaxImageSize()": "STStorageField.h",
		"::stappler::db::MaxImageSize::MaxImageSize(size_t,size_t,stappler::db::ImagePolicy)": "STStorageField.h",
		"::stappler::db::MaxImageSize::height": "STStorageField.h",
		"::stappler::db::MaxImageSize::policy": "STStorageField.h",
		"::stappler::db::MaxImageSize::width": "STStorageField.h",
		"::stappler::db::MaxLength": "STStorageField.h",
		"::stappler::db::MinImageSize": "STStorageField.h",
		"::stappler::db::MinImageSize::MinImageSize()": "STStorageField.h",
		"::stappler::db::MinImageSize::MinImageSize(size_t,size_t,stappler::db::ImagePolicy)": "STStorageField.h",
		"::stappler::db::MinImageSize::height": "STStorageField.h",
		"::stappler::db::MinImageSize::policy": "STStorageField.h",
		"::stappler::db::MinImageSize::width": "STStorageField.h",
		"::stappler::db::MinLength": "STStorageField.h",
		"::stappler::db::Object": "STStorageObject.h",
		"::stappler::db::Object::Object(stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value&&,stappler::db::Scheme const&)": "STStorageObject.h",
		"::stappler::db::Object::_locked": "STStorageObject.h",
		"::stappler::db::Object::_oid": "STStorageObject.h",
		"::stappler::db::Object::_scheme": "STStorageObject.h",
		"::stappler::db::Object::begin()": "STStorageObject.h",
		"::stappler::db::Object::begin() const": "STStorageObject.h",
		"::stappler::db::Object::end()": "STStorageObject.h",
		"::stappler::db::Object::end() const": "STStorageObject.h",
		"::stappler::db::Object::getObjectId() const": "STStorageObject.h",
		"::stappler::db::Object::getScheme() const": "STStorageObject.h",
		"::stappler::db::Object::isFieldProtected(stappler::StringView const&) const": "STStorageObject.h",
		"::stappler::db::Object::isPropertyLocked(stappler::StringView const&) const": "STStorageObject.h",
		"::stappler::db::Object::lockProperty(stappler::StringView const&)": "STStorageObject.h",
		"::stappler::db::Object::save(stappler::db::Adapter const&,bool)": "STStorageObject.h",
		"::stappler::db::Object::unlockProperty(stappler::StringView const&)": "STStorageObject.h",
		"::stappler::db::Operator": "STStorageQuery.h",
		"::stappler::db::Ordering": "STStorageQuery.h",
		"::stappler::db::PasswordSalt": "STStorageField.h",
		"::stappler::db::Query": "STStorageQuery.h",
		"::stappler::db::Query::Field": "STStorageQuery.h",
		"::stappler::db::Query::Field::Field(stappler::db::Query::Field const&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::Field(stappler::db::Query::Field&&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::Field<typename>(Str&&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::Field<typename>(Str&&,Vector<stappler::db::Query::Field>&&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::Field<typename>(Str&&,Vector<stappler::mem_pool::String>&&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::Field<typename>(Str&&,std::initializer_list<Field>&&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::Field<typename>(Str&&,std::initializer_list<String>&&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::fields": "STStorageQuery.h",
		"::stappler::db::Query::Field::name": "STStorageQuery.h",
		"::stappler::db::Query::Field::operator=(stappler::db::Query::Field const&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::operator=(stappler::db::Query::Field&&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::setName(char const*)": "STStorageQuery.h",
		"::stappler::db::Query::Field::setName(stappler::StringView const&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::setName(stappler::db::Query::Field const&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::setName(stappler::db::Query::Field&&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::setName(stappler::mem_pool::String const&)": "STStorageQuery.h",
		"::stappler::db::Query::Field::setName(stappler::mem_pool::String&&)": "STStorageQuery.h",
		"::stappler::db::Query::FieldsVec": "STStorageQuery.h",
		"::stappler::db::Query::Select": "STStorageQuery.h",
		"::stappler::db::Query::Select::Select()": "STStorageQuery.h",
		"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,Vector<stappler::search::SearchData>&&)": "STStorageQuery.h",
		"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,int64_t,int64_t)": "STStorageQuery.h",
		"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,stappler::StringView const&)": "STStorageQuery.h",
		"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,stappler::mem_pool::String const&)": "STStorageQuery.h",
		"::stappler::db::Query::Select::Select(stappler::StringView const&,stappler::db::Comparation,stappler::mem_pool::Value&&,stappler::mem_pool::Value&&)": "STStorageQuery.h",
		"::stappler::db::Query::Select::compare": "STStorageQuery.h",
		"::stappler::db::Query::Select::field": "STStorageQuery.h",
		"::stappler::db::Query::Select::searchData": "STStorageQuery.h",
		"::stappler::db::Query::Select::value1": "STStorageQuery.h",
		"::stappler::db::Query::Select::value2": "STStorageQuery.h",
		"::stappler::db::Query::SoftLimit": "STStorageQuery.h",
		"::stappler::db::Query::SoftLimit::field": "STStorageQuery.h",
		"::stappler::db::Query::SoftLimit::limit": "STStorageQuery.h",
		"::stappler::db::Query::SoftLimit::offset": "STStorageQuery.h",
		"::stappler::db::Query::_selected": "STStorageQuery.h",
		"::stappler::db::Query::_softLimit": "STStorageQuery.h",
		"::stappler::db::Query::all()": "STStorageQuery.h",
		"::stappler::db::Query::clearFields()": "STStorageQuery.h",
		"::stappler::db::Query::decodeResolve(stappler::StringView const&)": "STStorageQuery.h",
		"::stappler::db::Query::delta(stappler::StringView const&)": "STStorageQuery.h",
		"::stappler::db::Query::delta(uint64_t)": "STStorageQuery.h",
		"::stappler::db::Query::deltaToken": "STStorageQuery.h",
		"::stappler::db::Query::depth(uint16_t)": "STStorageQuery.h",
		"::stappler::db::Query::empty() const": "STStorageQuery.h",
		"::stappler::db::Query::encode() const": "STStorageQuery.h",
		"::stappler::db::Query::encodeResolve(stappler::db::Resolve)": "STStorageQuery.h",
		"::stappler::db::Query::exclude(stappler::db::Query::Field&&)": "STStorageQuery.h",
		"::stappler::db::Query::field(int64_t,stappler::StringView const&)": "STStorageQuery.h",
		"::stappler::db::Query::field(int64_t,stappler::StringView const&,stappler::db::Query const&)": "STStorageQuery.h",
		"::stappler::db::Query::fieldsExclude": "STStorageQuery.h",
		"::stappler::db::Query::fieldsInclude": "STStorageQuery.h",
		"::stappler::db::Query::first(stappler::StringView const&,size_t,size_t)": "STStorageQuery.h",
		"::stappler::db::Query::forUpdate()": "STStorageQuery.h",
		"::stappler::db::Query::getDeltaToken() const": "STStorageQuery.h",
		"::stappler::db::Query::getExcludeFields() const": "STStorageQuery.h",
		"::stappler::db::Query::getIncludeFields() const": "STStorageQuery.h",
		"::stappler::db::Query::getLimitValue() const": "STStorageQuery.h",
		"::stappler::db::Query::getOffsetValue() const": "STStorageQuery.h",
		"::stappler::db::Query::getOrderField() const": "STStorageQuery.h",
		"::stappler::db::Query::getOrdering() const": "STStorageQuery.h",
		"::stappler::db::Query::getQueryField() const": "STStorageQuery.h",
		"::stappler::db::Query::getQueryId() const": "STStorageQuery.h",
		"::stappler::db::Query::getResolveDepth() const": "STStorageQuery.h",
		"::stappler::db::Query::getSelectAlias() const": "STStorageQuery.h",
		"::stappler::db::Query::getSelectIds() const": "STStorageQuery.h",
		"::stappler::db::Query::getSelectList() const": "STStorageQuery.h",
		"::stappler::db::Query::getSingleSelectId() const": "STStorageQuery.h",
		"::stappler::db::Query::getSoftLimitValue() const": "STStorageQuery.h",
		"::stappler::db::Query::hasDelta() const": "STStorageQuery.h",
		"::stappler::db::Query::hasFields() const": "STStorageQuery.h",
		"::stappler::db::Query::hasLimit() const": "STStorageQuery.h",
		"::stappler::db::Query::hasOffset() const": "STStorageQuery.h",
		"::stappler::db::Query::hasOrder() const": "STStorageQuery.h",
		"::stappler::db::Query::hasSelect() const": "STStorageQuery.h",
		"::stappler::db::Query::hasSelectList() const": "STStorageQuery.h",
		"::stappler::db::Query::hasSelectName() const": "STStorageQuery.h",
		"::stappler::db::Query::include(stappler::db::Query::Field&&)": "STStorageQuery.h",
		"::stappler::db::Query::include<typename>(stappler::db::Query::Field&&,Args &&...)": "STStorageQuery.h",
		"::stappler::db::Query::isForUpdate() const": "STStorageQuery.h",
		"::stappler::db::Query::isSoftLimit() const": "STStorageQuery.h",
		"::stappler::db::Query::last(stappler::StringView const&,size_t,size_t)": "STStorageQuery.h",
		"::stappler::db::Query::limit(size_t)": "STStorageQuery.h",
		"::stappler::db::Query::limit(size_t,size_t)": "STStorageQuery.h",
		"::stappler::db::Query::limitValue": "STStorageQuery.h",
		"::stappler::db::Query::offset(size_t)": "STStorageQuery.h",
		"::stappler::db::Query::offsetValue": "STStorageQuery.h",
		"::stappler::db::Query::order(stappler::StringView const&,stappler::db::Ordering,size_t,size_t)": "STStorageQuery.h",
		"::stappler::db::Query::orderField": "STStorageQuery.h",
		"::stappler::db::Query::ordering": "STStorageQuery.h",
		"::stappler::db::Query::queryField": "STStorageQuery.h",
		"::stappler::db::Query::queryId": "STStorageQuery.h",
		"::stappler::db::Query::resolveDepth": "STStorageQuery.h",
		"::stappler::db::Query::select(SpanView<int64_t>)": "STStorageQuery.h",
		"::stappler::db::Query::select(Vector<int64_t>&&)": "STStorageQuery.h",
		"::stappler::db::Query::select(int64_t)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,Vector<stappler::search::SearchData>&&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,stappler::db::Comparation,int64_t)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,stappler::db::Comparation,int64_t,int64_t)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,stappler::db::Comparation,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::Bytes const&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::Bytes&&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::String const&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::String&&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::StringView const&,stappler::mem_pool::Value const&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::db::Query::Select&&)": "STStorageQuery.h",
		"::stappler::db::Query::select(stappler::mem_pool::Value const&)": "STStorageQuery.h",
		"::stappler::db::Query::select(std::initializer_list<int64_t>&&)": "STStorageQuery.h",
		"::stappler::db::Query::selectAlias": "STStorageQuery.h",
		"::stappler::db::Query::selectIds": "STStorageQuery.h",
		"::stappler::db::Query::selectList": "STStorageQuery.h",
		"::stappler::db::Query::softLimit(stappler::StringView const&,stappler::db::Ordering,size_t,stappler::mem_pool::Value&&)": "STStorageQuery.h",
		"::stappler::db::Query::softLimitValue": "STStorageQuery.h",
		"::stappler::db::Query::update": "STStorageQuery.h",
		"::stappler::db::QueryFieldResolver": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data::exclude": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data::fields": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data::include": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data::meta": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data::next": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data::resolved": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data::resolvedData": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Data::scheme": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::Meta": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::QueryFieldResolver()": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::QueryFieldResolver(stappler::db::QueryFieldResolver::Data*)": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::QueryFieldResolver(stappler::db::Scheme const&,stappler::db::Query const&,Vector<stappler::mem_pool::String> const&)": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::doResolve(stappler::db::QueryFieldResolver::Data*,Vector<stappler::mem_pool::String> const&,uint16_t,uint16_t)": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::doResolveData(stappler::db::QueryFieldResolver::Data*,uint16_t,uint16_t)": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::getExcludeVec() const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::getField(stappler::mem_pool::String const&) const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::getFields() const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::getIncludeVec() const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::getMeta() const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::getResolves() const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::getResolvesData() const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::getScheme() const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::next(stappler::StringView const&) const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::operator bool() const": "STStorageQueryList.h",
		"::stappler::db::QueryFieldResolver::root": "STStorageQueryList.h",
		"::stappler::db::QueryInterface": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindBytes(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindCoderSource(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::CoderSource const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindDataField(stappler::db::Binder&,stappler::mem_pool::StringStream&,Binder::DataField const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindDouble(stappler::db::Binder&,stappler::mem_pool::StringStream&,double)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindDoubleVector(stappler::db::Binder&,stappler::mem_pool::StringStream&,Vector<double> const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindFullText(stappler::db::Binder&,stappler::mem_pool::StringStream&,Binder::FullTextField const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindFullTextData(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::db::FullTextData const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindFullTextRank(stappler::db::Binder&,stappler::mem_pool::StringStream&,Binder::FullTextRank const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindInt(stappler::db::Binder&,stappler::mem_pool::StringStream&,int64_t)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindIntVector(stappler::db::Binder&,stappler::mem_pool::StringStream&,Vector<int64_t> const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindMoveBytes(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes&&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindMoveString(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::String&&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindString(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::String const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindStringVector(stappler::db::Binder&,stappler::mem_pool::StringStream&,Vector<stappler::StringView> const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindStringView(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::StringView const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindTypeString(stappler::db::Binder&,stappler::mem_pool::StringStream&,Binder::TypeString const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindUInt(stappler::db::Binder&,stappler::mem_pool::StringStream&,uint64_t)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::bindValue(stappler::db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&)": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::clear()": "STStorageBackendInterface.h",
		"::stappler::db::QueryInterface::~QueryInterface()": "STStorageBackendInterface.h",
		"::stappler::db::QueryList": "STStorageQueryList.h",
		"::stappler::db::QueryList::DefaultSoftLimit": "STStorageQueryList.h",
		"::stappler::db::QueryList::FieldCallback": "STStorageQueryList.h",
		"::stappler::db::QueryList::Flags": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item::all": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item::field": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item::fields": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item::getQueryFields() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item::query": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item::ref": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item::resolved": "STStorageQueryList.h",
		"::stappler::db::QueryList::Item::scheme": "STStorageQueryList.h",
		"::stappler::db::QueryList::MaxSoftLimit": "STStorageQueryList.h",
		"::stappler::db::QueryList::MinSoftLimit": "STStorageQueryList.h",
		"::stappler::db::QueryList::QueryList(stappler::db::Scheme const*)": "STStorageQueryList.h",
		"::stappler::db::QueryList::_flags": "STStorageQueryList.h",
		"::stappler::db::QueryList::addFlag(stappler::db::QueryList::Flags)": "STStorageQueryList.h",
		"::stappler::db::QueryList::apply(stappler::mem_pool::Value const&)": "STStorageQueryList.h",
		"::stappler::db::QueryList::clearFlags()": "STStorageQueryList.h",
		"::stappler::db::QueryList::decodeOrder(stappler::db::Scheme const&,stappler::db::Query&,stappler::mem_pool::String const&,stappler::mem_pool::Value const&)": "STStorageQueryList.h",
		"::stappler::db::QueryList::decodeSelect(stappler::db::Scheme const&,stappler::db::Query&,stappler::mem_pool::Value const&)": "STStorageQueryList.h",
		"::stappler::db::QueryList::empty() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::extraData": "STStorageQueryList.h",
		"::stappler::db::QueryList::failed": "STStorageQueryList.h",
		"::stappler::db::QueryList::first(stappler::db::Scheme const*,stappler::StringView const&,size_t)": "STStorageQueryList.h",
		"::stappler::db::QueryList::getContinueToken() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getDelta() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getExcludeFields() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getExtraData() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getField() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getFields() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getIncludeFields() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getItems() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getPrimaryScheme() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getResolveDepth() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getScheme() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getSourceScheme() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::getTopQuery() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::hasFlag(stappler::db::QueryList::Flags) const": "STStorageQueryList.h",
		"::stappler::db::QueryList::isAll() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::isDeltaApplicable() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::isObject() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::isRefSet() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::isView() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::last(stappler::db::Scheme const*,stappler::StringView const&,size_t)": "STStorageQueryList.h",
		"::stappler::db::QueryList::limit(stappler::db::Scheme const*,size_t)": "STStorageQueryList.h",
		"::stappler::db::QueryList::offset(stappler::db::Scheme const*,size_t)": "STStorageQueryList.h",
		"::stappler::db::QueryList::order(stappler::db::Scheme const*,stappler::StringView const&,db::Ordering)": "STStorageQueryList.h",
		"::stappler::db::QueryList::queries": "STStorageQueryList.h",
		"::stappler::db::QueryList::resolve(Vector<stappler::mem_pool::String> const&)": "STStorageQueryList.h",
		"::stappler::db::QueryList::selectById(stappler::db::Scheme const*,uint64_t)": "STStorageQueryList.h",
		"::stappler::db::QueryList::selectByName(stappler::db::Scheme const*,stappler::StringView const&)": "STStorageQueryList.h",
		"::stappler::db::QueryList::selectByQuery(stappler::db::Scheme const*,Query::Select&&)": "STStorageQueryList.h",
		"::stappler::db::QueryList::setAll()": "STStorageQueryList.h",
		"::stappler::db::QueryList::setDelta(stappler::Time)": "STStorageQueryList.h",
		"::stappler::db::QueryList::setField(stappler::db::Scheme const*,stappler::db::Field const*)": "STStorageQueryList.h",
		"::stappler::db::QueryList::setFullTextQuery(stappler::db::Field const*,Vector<stappler::db::FullTextData>&&)": "STStorageQueryList.h",
		"::stappler::db::QueryList::setProperty(stappler::db::Field const*)": "STStorageQueryList.h",
		"::stappler::db::QueryList::setQueryAsMtime()": "STStorageQueryList.h",
		"::stappler::db::QueryList::setResolveDepth(uint16_t)": "STStorageQueryList.h",
		"::stappler::db::QueryList::size() const": "STStorageQueryList.h",
		"::stappler::db::QueryList::token": "STStorageQueryList.h",
		"::stappler::db::ReadFilterFn": "STStorageField.h",
		"::stappler::db::RemovePolicy": "STStorageField.h",
		"::stappler::db::ReplaceFilterFn": "STStorageField.h",
		"::stappler::db::Resolve": "STStorageQuery.h",
		"::stappler::db::Result": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::Iter()": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::Iter(stappler::db::Result*,size_t)": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator!=(stappler::db::Result::Iter const&) const": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator*() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator++()": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator<(stappler::db::Result::Iter const&) const": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator<=(stappler::db::Result::Iter const&) const": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator=(stappler::db::Result::Iter const&)": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator==(stappler::db::Result::Iter const&) const": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator>(stappler::db::Result::Iter const&) const": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::operator>=(stappler::db::Result::Iter const&) const": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::result": "STStorageBackendInterface.h",
		"::stappler::db::Result::Iter::row": "STStorageBackendInterface.h",
		"::stappler::db::Result::Result()": "STStorageBackendInterface.h",
		"::stappler::db::Result::Result(db::ResultCursor*)": "STStorageBackendInterface.h",
		"::stappler::db::Result::Result(stappler::db::Result const&)": "STStorageBackendInterface.h",
		"::stappler::db::Result::Result(stappler::db::Result&&)": "STStorageBackendInterface.h",
		"::stappler::db::Result::_cursor": "STStorageBackendInterface.h",
		"::stappler::db::Result::_nfields": "STStorageBackendInterface.h",
		"::stappler::db::Result::_row": "STStorageBackendInterface.h",
		"::stappler::db::Result::_success": "STStorageBackendInterface.h",
		"::stappler::db::Result::begin()": "STStorageBackendInterface.h",
		"::stappler::db::Result::clear()": "STStorageBackendInterface.h",
		"::stappler::db::Result::current() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::decode(db::Field const&,Vector<const stappler::db::Field *> const&)": "STStorageBackendInterface.h",
		"::stappler::db::Result::decode(db::FieldView const&)": "STStorageBackendInterface.h",
		"::stappler::db::Result::decode(db::Scheme const&,Vector<const stappler::db::Field *> const&)": "STStorageBackendInterface.h",
		"::stappler::db::Result::empty() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::end()": "STStorageBackendInterface.h",
		"::stappler::db::Result::getAffectedRows() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::getRowsHint() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::info() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::name(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::Result::next()": "STStorageBackendInterface.h",
		"::stappler::db::Result::nfields() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::nrows() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::operator bool() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::operator=(stappler::db::Result const&)": "STStorageBackendInterface.h",
		"::stappler::db::Result::operator=(stappler::db::Result&&)": "STStorageBackendInterface.h",
		"::stappler::db::Result::readId()": "STStorageBackendInterface.h",
		"::stappler::db::Result::success() const": "STStorageBackendInterface.h",
		"::stappler::db::Result::~Result()": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::clear()": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::getAffectedRows() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::getFieldName(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::getFieldsCount() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::getInfo() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::getRowsHint() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::isBinaryFormat(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::isEmpty() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::isEnded() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::isNull(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::isSuccess() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::next()": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::reset()": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::toBool(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::toBytes(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::toDouble(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::toId() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::toInteger(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::toString(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::toTypedData(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultCursor::~ResultCursor()": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::ResultRow(db::ResultCursor const*,size_t)": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::ResultRow(stappler::db::ResultRow const&)": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::at(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::back() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::front() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::isNull(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::operator=(stappler::db::ResultRow const&)": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::result": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::row": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::size() const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::toBool(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::toBytes(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::toData(db::Scheme const&,Map<stappler::mem_pool::String, db::Field> const&,Vector<const stappler::db::Field *> const&)": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::toData(size_t,db::Field const&)": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::toDouble(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::toInteger(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::toString(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::ResultRow::toTypedData(size_t) const": "STStorageBackendInterface.h",
		"::stappler::db::Scheme": "STStorageScheme.h",
		"::stappler::db::Scheme::AccessTable": "STStorageScheme.h",
		"::stappler::db::Scheme::EmptyFieldList()": "STStorageScheme.h",
		"::stappler::db::Scheme::FieldVec": "STStorageScheme.h",
		"::stappler::db::Scheme::Options": "STStorageScheme.h",
		"::stappler::db::Scheme::ParentScheme": "STStorageScheme.h",
		"::stappler::db::Scheme::ParentScheme::ParentScheme(stappler::db::Scheme const*,stappler::db::Field const*)": "STStorageScheme.h",
		"::stappler::db::Scheme::ParentScheme::backReference": "STStorageScheme.h",
		"::stappler::db::Scheme::ParentScheme::pointerField": "STStorageScheme.h",
		"::stappler::db::Scheme::ParentScheme::scheme": "STStorageScheme.h",
		"::stappler::db::Scheme::Scheme(stappler::StringView const&,bool)": "STStorageScheme.h",
		"::stappler::db::Scheme::Scheme(stappler::StringView const&,stappler::db::Scheme::Options)": "STStorageScheme.h",
		"::stappler::db::Scheme::Scheme(stappler::StringView const&,std::initializer_list<Field>,bool)": "STStorageScheme.h",
		"::stappler::db::Scheme::Scheme(stappler::StringView const&,std::initializer_list<Field>,stappler::db::Scheme::Options)": "STStorageScheme.h",
		"::stappler::db::Scheme::Scheme(stappler::db::Scheme const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::Scheme(stappler::db::Scheme&&)": "STStorageScheme.h",
		"::stappler::db::Scheme::TransformAction": "STStorageScheme.h",
		"::stappler::db::Scheme::UniqueConstraint": "STStorageScheme.h",
		"::stappler::db::Scheme::UniqueConstraint::UniqueConstraint(stappler::StringView,Vector<const stappler::db::Field *>&&)": "STStorageScheme.h",
		"::stappler::db::Scheme::UniqueConstraint::fields": "STStorageScheme.h",
		"::stappler::db::Scheme::UniqueConstraint::name": "STStorageScheme.h",
		"::stappler::db::Scheme::ViewScheme": "STStorageScheme.h",
		"::stappler::db::Scheme::ViewScheme::ViewScheme(stappler::db::Scheme const*,stappler::db::Field const*,stappler::db::AutoFieldScheme const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::ViewScheme::ViewScheme(stappler::db::Scheme const*,stappler::db::Field const*,stappler::db::FieldView const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::ViewScheme::autoField": "STStorageScheme.h",
		"::stappler::db::Scheme::ViewScheme::autoLink": "STStorageScheme.h",
		"::stappler::db::Scheme::ViewScheme::fields": "STStorageScheme.h",
		"::stappler::db::Scheme::ViewScheme::scheme": "STStorageScheme.h",
		"::stappler::db::Scheme::ViewScheme::viewField": "STStorageScheme.h",
		"::stappler::db::Scheme::_compressDict": "STStorageScheme.h",
		"::stappler::db::Scheme::_hasAccessControl": "STStorageScheme.h",
		"::stappler::db::Scheme::_hasFiles": "STStorageScheme.h",
		"::stappler::db::Scheme::_hasForceExclude": "STStorageScheme.h",
		"::stappler::db::Scheme::_hasVirtuals": "STStorageScheme.h",
		"::stappler::db::Scheme::addAutoField(stappler::db::Scheme const*,stappler::db::Field const*,stappler::db::AutoFieldScheme const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::addFlags(stappler::db::Scheme::Options)": "STStorageScheme.h",
		"::stappler::db::Scheme::addParent(stappler::db::Scheme const*,stappler::db::Field const*)": "STStorageScheme.h",
		"::stappler::db::Scheme::addView(stappler::db::Scheme const*,stappler::db::Field const*)": "STStorageScheme.h",
		"::stappler::db::Scheme::appendProperty<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::autoFieldReq": "STStorageScheme.h",
		"::stappler::db::Scheme::clearProperty<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::cloneFrom(stappler::db::Scheme*)": "STStorageScheme.h",
		"::stappler::db::Scheme::config": "STStorageScheme.h",
		"::stappler::db::Scheme::count<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::countProperty<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::countWithWorker(stappler::db::Worker&,stappler::db::Query const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::create<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::createFile(stappler::db::Transaction const&,stappler::db::Field const&,stappler::BytesView const&,stappler::StringView const&,int64_t) const": "STStorageScheme.h",
		"::stappler::db::Scheme::createFile(stappler::db::Transaction const&,stappler::db::Field const&,stappler::db::InputFile&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::createFilePatch(stappler::db::Transaction const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::createWithWorker(stappler::db::Worker&,stappler::mem_pool::Value const&,bool) const": "STStorageScheme.h",
		"::stappler::db::Scheme::define(Vector<stappler::db::Field>&&)": "STStorageScheme.h",
		"::stappler::db::Scheme::define(stappler::db::AccessRole&&)": "STStorageScheme.h",
		"::stappler::db::Scheme::define(stappler::db::UniqueConstraintDef&&)": "STStorageScheme.h",
		"::stappler::db::Scheme::define(stappler::mem_pool::Bytes&&)": "STStorageScheme.h",
		"::stappler::db::Scheme::define(std::initializer_list<Field>)": "STStorageScheme.h",
		"::stappler::db::Scheme::define<typename,typename>(T&&,Args &&...)": "STStorageScheme.h",
		"::stappler::db::Scheme::doPatch(stappler::db::Worker&,stappler::db::Transaction const&,uint64_t,stappler::mem_pool::Value&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::extractParents(Map<int64_t, const stappler::db::Scheme *>&,stappler::db::Transaction const&,stappler::mem_pool::Value const&,bool) const": "STStorageScheme.h",
		"::stappler::db::Scheme::fieldWithWorker(stappler::db::Action,stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::fieldWithWorker(stappler::db::Action,stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::fields": "STStorageScheme.h",
		"::stappler::db::Scheme::finalizeField(stappler::db::Transaction const&,stappler::db::Field const&,stappler::mem_pool::Value const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::flags": "STStorageScheme.h",
		"::stappler::db::Scheme::forceInclude": "STStorageScheme.h",
		"::stappler::db::Scheme::foreach<typename>(Storage&&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&,stappler::db::UpdateFlags) const": "STStorageScheme.h",
		"::stappler::db::Scheme::foreach<typename>(T&&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&,stappler::db::UpdateFlags) const": "STStorageScheme.h",
		"::stappler::db::Scheme::foreachWithWorker(stappler::db::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::fullTextFields": "STStorageScheme.h",
		"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags) const": "STStorageScheme.h",
		"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,stappler::StringView,stappler::db::UpdateFlags) const": "STStorageScheme.h",
		"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,stappler::db::UpdateFlags) const": "STStorageScheme.h",
		"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<StringView>&&,stappler::db::UpdateFlags) const": "STStorageScheme.h",
		"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags) const": "STStorageScheme.h",
		"::stappler::db::Scheme::get<typename,typename>(Storage&&,_Value&&,std::initializer_list<const char *>&&,stappler::db::UpdateFlags) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getAccessRole(stappler::db::AccessRoleId) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getAccessTable() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getCompressDict() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getConfig() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getField(stappler::StringView const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getFieldSet(stappler::db::Field const&,std::initializer_list<StringView>) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getFields() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getForceInclude() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getForeignLink(stappler::StringView const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getForeignLink(stappler::db::Field const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getForeignLink(stappler::db::FieldObject const*) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getLinkageForView(stappler::mem_pool::Value const&,stappler::db::Scheme::ViewScheme const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getMaxFileSize() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getMaxRequestSize() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getMaxVarSize() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getName() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getPatchFields(stappler::mem_pool::Value const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getProperty<typename,typename,typename>(_Storage&&,_Value&&,_Field&&,Set<const stappler::db::Field *> const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getProperty<typename,typename,typename>(_Storage&&,_Value&&,_Field&&,std::initializer_list<StringView>) const": "STStorageScheme.h",
		"::stappler::db::Scheme::getUnique() const": "STStorageScheme.h",
		"::stappler::db::Scheme::getViews() const": "STStorageScheme.h",
		"::stappler::db::Scheme::hasAccessControl() const": "STStorageScheme.h",
		"::stappler::db::Scheme::hasAliases() const": "STStorageScheme.h",
		"::stappler::db::Scheme::hasDelta() const": "STStorageScheme.h",
		"::stappler::db::Scheme::hasFiles() const": "STStorageScheme.h",
		"::stappler::db::Scheme::hasForceExclude() const": "STStorageScheme.h",
		"::stappler::db::Scheme::hasVirtuals() const": "STStorageScheme.h",
		"::stappler::db::Scheme::hash(stappler::db::ValidationLevel) const": "STStorageScheme.h",
		"::stappler::db::Scheme::initScheme()": "STStorageScheme.h",
		"::stappler::db::Scheme::initSchemes(Map<stappler::StringView, const stappler::db::Scheme *> const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::isAtomicPatch(stappler::mem_pool::Value const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::isCompressed() const": "STStorageScheme.h",
		"::stappler::db::Scheme::isDetouched() const": "STStorageScheme.h",
		"::stappler::db::Scheme::isProtected(stappler::StringView const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::makeObjectForPatch(stappler::db::Transaction const&,uint64_t,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::mergeValues(stappler::db::Field const&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&,stappler::mem_pool::Value&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::name": "STStorageScheme.h",
		"::stappler::db::Scheme::oidField": "STStorageScheme.h",
		"::stappler::db::Scheme::operator=(stappler::db::Scheme const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::operator=(stappler::db::Scheme&&)": "STStorageScheme.h",
		"::stappler::db::Scheme::parents": "STStorageScheme.h",
		"::stappler::db::Scheme::patchOrUpdate(stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::mem_pool::Value&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::patchOrUpdate(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::prepareUpdate(stappler::mem_pool::Value const&,bool) const": "STStorageScheme.h",
		"::stappler::db::Scheme::processFullTextFields(stappler::mem_pool::Value&,Vector<stappler::mem_pool::String>*) const": "STStorageScheme.h",
		"::stappler::db::Scheme::purgeFilePatch(stappler::db::Transaction const&,stappler::mem_pool::Value const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::remove<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::removeField(stappler::db::Transaction const&,stappler::mem_pool::Value&,stappler::db::Field const&,stappler::mem_pool::Value const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::removeWithWorker(stappler::db::Worker&,uint64_t) const": "STStorageScheme.h",
		"::stappler::db::Scheme::roles": "STStorageScheme.h",
		"::stappler::db::Scheme::save(stappler::db::Transaction const&,stappler::db::Object*) const": "STStorageScheme.h",
		"::stappler::db::Scheme::select<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::selectWithWorker(stappler::db::Worker&,stappler::db::Query const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::setAccessRole(stappler::db::AccessRoleId,stappler::db::AccessRole&&)": "STStorageScheme.h",
		"::stappler::db::Scheme::setConfig(stappler::db::InputConfig)": "STStorageScheme.h",
		"::stappler::db::Scheme::setFileWithWorker(stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::db::InputFile&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::setProperty<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::touch<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::touchParents(stappler::db::Transaction const&,stappler::mem_pool::Value const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::touchWithWorker(stappler::db::Worker&,stappler::mem_pool::Value const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::touchWithWorker(stappler::db::Worker&,uint64_t) const": "STStorageScheme.h",
		"::stappler::db::Scheme::transform(stappler::mem_pool::Value&,stappler::db::Scheme::TransformAction) const": "STStorageScheme.h",
		"::stappler::db::Scheme::unique": "STStorageScheme.h",
		"::stappler::db::Scheme::update<typename,typename>(T&&,Args &&...) const": "STStorageScheme.h",
		"::stappler::db::Scheme::updateLimits()": "STStorageScheme.h",
		"::stappler::db::Scheme::updateObject(stappler::db::Worker&,stappler::mem_pool::Value&&,stappler::mem_pool::Value&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::updateView(stappler::db::Transaction const&,stappler::mem_pool::Value const&,stappler::db::Scheme::ViewScheme const*,Vector<uint64_t> const&) const": "STStorageScheme.h",
		"::stappler::db::Scheme::updateWithWorker(stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,bool) const": "STStorageScheme.h",
		"::stappler::db::Scheme::updateWithWorker(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&,bool) const": "STStorageScheme.h",
		"::stappler::db::Scheme::validateHint(stappler::mem_pool::String const&,stappler::mem_pool::Value const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::validateHint(stappler::mem_pool::Value const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::validateHint(uint64_t,stappler::mem_pool::Value const&)": "STStorageScheme.h",
		"::stappler::db::Scheme::views": "STStorageScheme.h",
		"::stappler::db::StorageRoot": "STStorage.h",
		"::stappler::db::StorageRoot::_debug": "STStorage.h",
		"::stappler::db::StorageRoot::_debugMutex": "STStorage.h",
		"::stappler::db::StorageRoot::acquireTransaction(stappler::db::Adapter const&)": "STStorage.h",
		"::stappler::db::StorageRoot::addDebugMessage(stappler::mem_pool::Value&&) const": "STStorage.h",
		"::stappler::db::StorageRoot::addErrorMessage(stappler::mem_pool::Value&&) const": "STStorage.h",
		"::stappler::db::StorageRoot::broadcast(stappler::mem_pool::Bytes const&)": "STStorage.h",
		"::stappler::db::StorageRoot::broadcast(stappler::mem_pool::Value const&)": "STStorage.h",
		"::stappler::db::StorageRoot::getAdapterFromContext()": "STStorage.h",
		"::stappler::db::StorageRoot::getDocuemntRoot() const": "STStorage.h",
		"::stappler::db::StorageRoot::getFileFromContext(int64_t) const": "STStorage.h",
		"::stappler::db::StorageRoot::getFileScheme() const": "STStorage.h",
		"::stappler::db::StorageRoot::getRequestData() const": "STStorage.h",
		"::stappler::db::StorageRoot::getUserIdFromContext() const": "STStorage.h",
		"::stappler::db::StorageRoot::getUserScheme() const": "STStorage.h",
		"::stappler::db::StorageRoot::isAdministrative() const": "STStorage.h",
		"::stappler::db::StorageRoot::isDebugEnabled() const": "STStorage.h",
		"::stappler::db::StorageRoot::onLocalBroadcast(stappler::mem_pool::Value const&)": "STStorage.h",
		"::stappler::db::StorageRoot::onStorageTransaction(stappler::db::Transaction&)": "STStorage.h",
		"::stappler::db::StorageRoot::scheduleAyncDbTask(Callback<Function<void (const stappler::db::Transaction &)> (stappler::mempool::base::pool_t *)> const&)": "STStorage.h",
		"::stappler::db::StorageRoot::setDebugEnabled(bool)": "STStorage.h",
		"::stappler::db::StorageRoot::~StorageRoot()": "STStorage.h",
		"::stappler::db::Thumbnail": "STStorageField.h",
		"::stappler::db::Thumbnail::Thumbnail(stappler::mem_pool::String&&,size_t,size_t)": "STStorageField.h",
		"::stappler::db::Thumbnail::height": "STStorageField.h",
		"::stappler::db::Thumbnail::name": "STStorageField.h",
		"::stappler::db::Thumbnail::width": "STStorageField.h",
		"::stappler::db::Transaction": "STStorageTransaction.h",
		"::stappler::db::Transaction::Data": "STStorageTransaction.h",
		"::stappler::db::Transaction::Data::Data(stappler::db::Adapter const&,memory::pool_t*)": "STStorageTransaction.h",
		"::stappler::db::Transaction::Data::adapter": "STStorageTransaction.h",
		"::stappler::db::Transaction::Data::data": "STStorageTransaction.h",
		"::stappler::db::Transaction::Data::objects": "STStorageTransaction.h",
		"::stappler::db::Transaction::Data::pool": "STStorageTransaction.h",
		"::stappler::db::Transaction::Data::role": "STStorageTransaction.h",
		"::stappler::db::Transaction::Data::status": "STStorageTransaction.h",
		"::stappler::db::Transaction::Op": "STStorageTransaction.h",
		"::stappler::db::Transaction::Stack": "STStorageTransaction.h",
		"::stappler::db::Transaction::Stack::stack": "STStorageTransaction.h",
		"::stappler::db::Transaction::Transaction(stappler::db::Transaction::Data*)": "STStorageTransaction.h",
		"::stappler::db::Transaction::Transaction(stappler::nullptr_t)": "STStorageTransaction.h",
		"::stappler::db::Transaction::TransactionGuard": "STStorageTransaction.h",
		"::stappler::db::Transaction::TransactionGuard::TransactionGuard(stappler::db::Transaction const&)": "STStorageTransaction.h",
		"::stappler::db::Transaction::TransactionGuard::_t": "STStorageTransaction.h",
		"::stappler::db::Transaction::TransactionGuard::~TransactionGuard()": "STStorageTransaction.h",
		"::stappler::db::Transaction::_data": "STStorageTransaction.h",
		"::stappler::db::Transaction::acquire()": "STStorageTransaction.h",
		"::stappler::db::Transaction::acquire(stappler::db::Adapter const&)": "STStorageTransaction.h",
		"::stappler::db::Transaction::acquireIfExists()": "STStorageTransaction.h",
		"::stappler::db::Transaction::acquireIfExists(memory::pool_t*)": "STStorageTransaction.h",
		"::stappler::db::Transaction::acquireObject(stappler::db::Scheme const&,uint64_t) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::addToView(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t,stappler::mem_pool::Value const&,stappler::mem_pool::Value const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::beginTransaction() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::cancelTransaction() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::clearObjectStorage() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::count(stappler::db::Worker&,stappler::db::Query const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::create(stappler::db::Worker&,stappler::mem_pool::Value&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::endTransaction() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::field(stappler::db::Action,stappler::db::Worker&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::field(stappler::db::Action,stappler::db::Worker&,uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::foreach(stappler::db::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::getAdapter() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::getDeltaValue(stappler::db::Scheme const&)": "STStorageTransaction.h",
		"::stappler::db::Transaction::getDeltaValue(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t)": "STStorageTransaction.h",
		"::stappler::db::Transaction::getObject(int64_t) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::getRole() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::getStatus() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::getTransactionOp(stappler::db::Action)": "STStorageTransaction.h",
		"::stappler::db::Transaction::getTransactionStatus() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::getValue(stappler::StringView const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::isInTransaction() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::isOpAllowed(stappler::db::Scheme const&,stappler::db::Transaction::Op,stappler::db::Field const*) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::operator bool() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::patch(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::perform(Callback<bool ()> const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::performAsSystem(Callback<bool ()> const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::performQueryList(stappler::db::QueryList const&,size_t,bool) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::performQueryListField(stappler::db::QueryList const&,stappler::db::Field const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::performQueryListForIds(stappler::db::QueryList const&,size_t) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::processReturnField(stappler::db::Scheme const&,stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::processReturnObject(stappler::db::Scheme const&,stappler::mem_pool::Value&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::release() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::remove(stappler::db::Worker&,uint64_t) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::removeFromView(stappler::db::Scheme const&,stappler::db::FieldView const&,uint64_t,stappler::mem_pool::Value const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::retain() const": "STStorageTransaction.h",
		"::stappler::db::Transaction::save(stappler::db::Worker&,uint64_t,stappler::mem_pool::Value const&,Vector<stappler::mem_pool::String> const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::scheduleAutoField(stappler::db::Scheme const&,stappler::db::Field const&,uint64_t) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::select(stappler::db::Worker&,stappler::db::Query const&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::setAdapter(stappler::db::Adapter const&)": "STStorageTransaction.h",
		"::stappler::db::Transaction::setObject(int64_t,stappler::mem_pool::Value&&) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::setRole(stappler::db::AccessRoleId) const": "STStorageTransaction.h",
		"::stappler::db::Transaction::setStatus(int)": "STStorageTransaction.h",
		"::stappler::db::Transaction::setValue(stappler::StringView const&,stappler::mem_pool::Value&&)": "STStorageTransaction.h",
		"::stappler::db::TransactionStatus": "STStorageQueryList.h",
		"::stappler::db::Transform": "STStorageField.h",
		"::stappler::db::Type": "STStorageField.h",
		"::stappler::db::UniqueConstraintDef": "STStorageField.h",
		"::stappler::db::UniqueConstraintDef::fields": "STStorageField.h",
		"::stappler::db::UniqueConstraintDef::name": "STStorageField.h",
		"::stappler::db::UpdateFlags": "STStorageWorker.h",
		"::stappler::db::User": "STStorageUser.h",
		"::stappler::db::User::User(stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value&&,stappler::db::Scheme const&)": "STStorageUser.h",
		"::stappler::db::User::create(stappler::db::Adapter const&,stappler::StringView const&,stappler::StringView const&)": "STStorageUser.h",
		"::stappler::db::User::create(stappler::db::Adapter const&,stappler::data::WrapperTemplate<stappler::memory::PoolInterface>::Value&&)": "STStorageUser.h",
		"::stappler::db::User::get(stappler::db::Adapter const&,stappler::StringView const&,stappler::StringView const&)": "STStorageUser.h",
		"::stappler::db::User::get(stappler::db::Adapter const&,stappler::db::Scheme const&,stappler::BytesView const&)": "STStorageUser.h",
		"::stappler::db::User::get(stappler::db::Adapter const&,stappler::db::Scheme const&,stappler::StringView const&,stappler::StringView const&)": "STStorageUser.h",
		"::stappler::db::User::get(stappler::db::Adapter const&,stappler::db::Scheme const&,uint64_t)": "STStorageUser.h",
		"::stappler::db::User::get(stappler::db::Adapter const&,uint64_t)": "STStorageUser.h",
		"::stappler::db::User::getName() const": "STStorageUser.h",
		"::stappler::db::User::isAdmin() const": "STStorageUser.h",
		"::stappler::db::User::setPassword(stappler::StringView const&)": "STStorageUser.h",
		"::stappler::db::User::setup(stappler::db::Adapter const&,stappler::StringView const&,stappler::StringView const&)": "STStorageUser.h",
		"::stappler::db::User::validatePassword(stappler::StringView const&) const": "STStorageUser.h",
		"::stappler::db::ValidationLevel": "STStorageField.h",
		"::stappler::db::ViewFn": "STStorageField.h",
		"::stappler::db::ViewLinkageFn": "STStorageField.h",
		"::stappler::db::VirtualReadFn": "STStorageField.h",
		"::stappler::db::VirtualWriteFn": "STStorageField.h",
		"::stappler::db::Worker": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::ConditionData()": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::ConditionData(Query::Select const&,stappler::db::Field const*)": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::ConditionData(Query::Select&&,stappler::db::Field const*)": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::compare": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::field": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::set(Query::Select const&,stappler::db::Field const*)": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::set(Query::Select&&,stappler::db::Field const*)": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::value1": "STStorageWorker.h",
		"::stappler::db::Worker::ConditionData::value2": "STStorageWorker.h",
		"::stappler::db::Worker::ConflictData": "STStorageWorker.h",
		"::stappler::db::Worker::ConflictData::condition": "STStorageWorker.h",
		"::stappler::db::Worker::ConflictData::field": "STStorageWorker.h",
		"::stappler::db::Worker::ConflictData::flags": "STStorageWorker.h",
		"::stappler::db::Worker::ConflictData::hasCondition() const": "STStorageWorker.h",
		"::stappler::db::Worker::ConflictData::isDoNothing() const": "STStorageWorker.h",
		"::stappler::db::Worker::ConflictData::mask": "STStorageWorker.h",
		"::stappler::db::Worker::FieldCallback": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::clear()": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::exclude(Set<const stappler::db::Field *> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::exclude(stappler::StringView const&)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::exclude(stappler::db::Field const*)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::exclude(std::initializer_list<StringView>)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::excludeFields": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::include(Set<const stappler::db::Field *> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::include(stappler::StringView const&)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::include(stappler::db::Field const*)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::include(std::initializer_list<StringView>)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::includeAll": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::includeFields": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::includeNone": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::reset(stappler::db::Scheme const&)": "STStorageWorker.h",
		"::stappler::db::Worker::RequiredFields::scheme": "STStorageWorker.h",
		"::stappler::db::Worker::Worker(stappler::db::Scheme const&)": "STStorageWorker.h",
		"::stappler::db::Worker::Worker(stappler::db::Scheme const&,stappler::db::Adapter const&)": "STStorageWorker.h",
		"::stappler::db::Worker::Worker(stappler::db::Scheme const&,stappler::db::Transaction const&)": "STStorageWorker.h",
		"::stappler::db::Worker::Worker(stappler::db::Worker const&)": "STStorageWorker.h",
		"::stappler::db::Worker::Worker(stappler::db::Worker&&)": "STStorageWorker.h",
		"::stappler::db::Worker::_conditions": "STStorageWorker.h",
		"::stappler::db::Worker::_conflict": "STStorageWorker.h",
		"::stappler::db::Worker::_isSystem": "STStorageWorker.h",
		"::stappler::db::Worker::_required": "STStorageWorker.h",
		"::stappler::db::Worker::_scheme": "STStorageWorker.h",
		"::stappler::db::Worker::_transaction": "STStorageWorker.h",
		"::stappler::db::Worker::addCondition(Query::Select const&)": "STStorageWorker.h",
		"::stappler::db::Worker::addCondition(Vector<Query::Select> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::addConflict(Vector<stappler::db::Conflict> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::addConflict(stappler::db::Conflict const&)": "STStorageWorker.h",
		"::stappler::db::Worker::appendField(stappler::mem_pool::Value const&,stappler::StringView const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::appendField(stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::appendField(uint64_t,stappler::StringView const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::appendField(uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::asSystem()": "STStorageWorker.h",
		"::stappler::db::Worker::clearField(stappler::mem_pool::Value const&,stappler::StringView const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::clearField(stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::clearField(uint64_t,stappler::StringView const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::clearField(uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::clearRequiredFields()": "STStorageWorker.h",
		"::stappler::db::Worker::count()": "STStorageWorker.h",
		"::stappler::db::Worker::count(stappler::db::Query const&)": "STStorageWorker.h",
		"::stappler::db::Worker::countField(stappler::mem_pool::Value const&,stappler::StringView const&)": "STStorageWorker.h",
		"::stappler::db::Worker::countField(stappler::mem_pool::Value const&,stappler::db::Field const&)": "STStorageWorker.h",
		"::stappler::db::Worker::countField(uint64_t,stappler::StringView const&)": "STStorageWorker.h",
		"::stappler::db::Worker::countField(uint64_t,stappler::db::Field const&)": "STStorageWorker.h",
		"::stappler::db::Worker::create(stappler::mem_pool::Value const&,Conflict::Flags)": "STStorageWorker.h",
		"::stappler::db::Worker::create(stappler::mem_pool::Value const&,Vector<stappler::db::Conflict> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::create(stappler::mem_pool::Value const&,bool)": "STStorageWorker.h",
		"::stappler::db::Worker::create(stappler::mem_pool::Value const&,stappler::db::Conflict const&)": "STStorageWorker.h",
		"::stappler::db::Worker::create(stappler::mem_pool::Value const&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::create(stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Vector<stappler::db::Conflict> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::create(stappler::mem_pool::Value const&,stappler::db::UpdateFlags,stappler::db::Conflict const&)": "STStorageWorker.h",
		"::stappler::db::Worker::exclude<typename>(T&&)": "STStorageWorker.h",
		"::stappler::db::Worker::foreach(stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::StringView const&,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::StringView const&,stappler::StringView,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::StringView const&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::StringView const&,std::initializer_list<StringView>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::StringView const&,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::StringView const&,std::initializer_list<const char *>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::mem_pool::Value const&,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::mem_pool::Value const&,stappler::StringView,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::mem_pool::Value const&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::mem_pool::Value const&,std::initializer_list<StringView>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::mem_pool::Value const&,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(stappler::mem_pool::Value const&,std::initializer_list<const char *>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(uint64_t,SpanView<const stappler::db::Field *>,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(uint64_t,stappler::StringView,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(uint64_t,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(uint64_t,std::initializer_list<StringView>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(uint64_t,std::initializer_list<const Field *>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::get(uint64_t,std::initializer_list<const char *>&&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::getConditions() const": "STStorageWorker.h",
		"::stappler::db::Worker::getConflicts() const": "STStorageWorker.h",
		"::stappler::db::Worker::getField(stappler::mem_pool::Value const&,stappler::StringView const&,Set<const stappler::db::Field *> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::getField(stappler::mem_pool::Value const&,stappler::StringView const&,std::initializer_list<StringView>)": "STStorageWorker.h",
		"::stappler::db::Worker::getField(stappler::mem_pool::Value const&,stappler::db::Field const&,Set<const stappler::db::Field *> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::getField(stappler::mem_pool::Value const&,stappler::db::Field const&,std::initializer_list<StringView>)": "STStorageWorker.h",
		"::stappler::db::Worker::getField(uint64_t,stappler::StringView const&,Set<const stappler::db::Field *> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::getField(uint64_t,stappler::StringView const&,std::initializer_list<StringView>)": "STStorageWorker.h",
		"::stappler::db::Worker::getField(uint64_t,stappler::db::Field const&,Set<const stappler::db::Field *> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::getField(uint64_t,stappler::db::Field const&,std::initializer_list<StringView>)": "STStorageWorker.h",
		"::stappler::db::Worker::getFieldSet(stappler::db::Field const&,std::initializer_list<StringView>) const": "STStorageWorker.h",
		"::stappler::db::Worker::getRequiredFields() const": "STStorageWorker.h",
		"::stappler::db::Worker::include<typename>(T&&)": "STStorageWorker.h",
		"::stappler::db::Worker::includeNone()": "STStorageWorker.h",
		"::stappler::db::Worker::isSystem() const": "STStorageWorker.h",
		"::stappler::db::Worker::operator=(stappler::db::Worker const&)": "STStorageWorker.h",
		"::stappler::db::Worker::operator=(stappler::db::Worker&&)": "STStorageWorker.h",
		"::stappler::db::Worker::perform<typename>(Callback const&) const": "STStorageWorker.h",
		"::stappler::db::Worker::reduceGetQuery(stappler::db::Query const&,bool)": "STStorageWorker.h",
		"::stappler::db::Worker::remove(stappler::mem_pool::Value const&)": "STStorageWorker.h",
		"::stappler::db::Worker::remove(uint64_t)": "STStorageWorker.h",
		"::stappler::db::Worker::scheme() const": "STStorageWorker.h",
		"::stappler::db::Worker::select(stappler::db::Query const&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::setField(stappler::mem_pool::Value const&,stappler::StringView const&,stappler::db::InputFile&)": "STStorageWorker.h",
		"::stappler::db::Worker::setField(stappler::mem_pool::Value const&,stappler::StringView const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::setField(stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::db::InputFile&)": "STStorageWorker.h",
		"::stappler::db::Worker::setField(stappler::mem_pool::Value const&,stappler::db::Field const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::setField(uint64_t,stappler::StringView const&,stappler::db::InputFile&)": "STStorageWorker.h",
		"::stappler::db::Worker::setField(uint64_t,stappler::StringView const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::setField(uint64_t,stappler::db::Field const&,stappler::db::InputFile&)": "STStorageWorker.h",
		"::stappler::db::Worker::setField(uint64_t,stappler::db::Field const&,stappler::mem_pool::Value&&)": "STStorageWorker.h",
		"::stappler::db::Worker::shouldIncludeAll() const": "STStorageWorker.h",
		"::stappler::db::Worker::shouldIncludeNone() const": "STStorageWorker.h",
		"::stappler::db::Worker::touch(stappler::mem_pool::Value const&)": "STStorageWorker.h",
		"::stappler::db::Worker::touch(uint64_t)": "STStorageWorker.h",
		"::stappler::db::Worker::transaction() const": "STStorageWorker.h",
		"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,Query::Select const&)": "STStorageWorker.h",
		"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,Vector<Query::Select> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,bool)": "STStorageWorker.h",
		"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Query::Select const&)": "STStorageWorker.h",
		"::stappler::db::Worker::update(stappler::mem_pool::Value const&,stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Vector<Query::Select> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,Query::Select const&)": "STStorageWorker.h",
		"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,Vector<Query::Select> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,bool)": "STStorageWorker.h",
		"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,stappler::db::UpdateFlags)": "STStorageWorker.h",
		"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Query::Select const&)": "STStorageWorker.h",
		"::stappler::db::Worker::update(uint64_t,stappler::mem_pool::Value const&,stappler::db::UpdateFlags,Vector<Query::Select> const&)": "STStorageWorker.h",
		"::stappler::db::Worker::~Worker()": "STStorageWorker.h",
		"::stappler::db::WriteFilterFn": "STStorageField.h",
		"::stappler::db::checkIfComparationIsValid(stappler::db::Type,stappler::db::Comparation,stappler::db::Flags)": "STStorageField.h",
		"::stappler::db::config::getDefaultPasswordSalt()": "STStorageConfig.h",
		"::stappler::db::config::getDefaultTextMax()": "STStorageConfig.h",
		"::stappler::db::config::getDefaultTextMin()": "STStorageConfig.h",
		"::stappler::db::config::getInputUpdateFrequency()": "STStorageConfig.h",
		"::stappler::db::config::getInputUpdateTime()": "STStorageConfig.h",
		"::stappler::db::config::getInternalsStorageTime()": "STStorageConfig.h",
		"::stappler::db::config::getKeyValueStorageTime()": "STStorageConfig.h",
		"::stappler::db::config::getMaxAuthTime()": "STStorageConfig.h",
		"::stappler::db::config::getMaxExtraFieldSize()": "STStorageConfig.h",
		"::stappler::db::config::getMaxFileSize()": "STStorageConfig.h",
		"::stappler::db::config::getMaxInputFileSize()": "STStorageConfig.h",
		"::stappler::db::config::getMaxInputPostSize()": "STStorageConfig.h",
		"::stappler::db::config::getMaxInputVarSize()": "STStorageConfig.h",
		"::stappler::db::config::getMaxLoginFailure()": "STStorageConfig.h",
		"::stappler::db::config::getMaxRequestSize()": "STStorageConfig.h",
		"::stappler::db::config::getMaxVarSize()": "STStorageConfig.h",
		"::stappler::db::config::getResourceResolverMaxDepth()": "STStorageConfig.h",
		"::stappler::db::config::getStorageBroadcastChannelName()": "STStorageConfig.h",
		"::stappler::db::config::getStorageInterfaceKey()": "STStorageConfig.h",
		"::stappler::db::config::getTransactionPrefixKey()": "STStorageConfig.h",
		"::stappler::db::config::getTransactionStackKey()": "STStorageConfig.h",
		"::stappler::db::config::getUploadTmpFilePrefix()": "STStorageConfig.h",
		"::stappler::db::config::getUploadTmpImagePrefix()": "STStorageConfig.h",
		"::stappler::db::internals::RequestData": "STStorage.h",
		"::stappler::db::internals::RequestData::address": "STStorage.h",
		"::stappler::db::internals::RequestData::exists": "STStorage.h",
		"::stappler::db::internals::RequestData::hostname": "STStorage.h",
		"::stappler::db::internals::RequestData::operator bool()": "STStorage.h",
		"::stappler::db::internals::RequestData::uri": "STStorage.h",
		"::stappler::db::internals::getAdapterFromContext()": "STStorage.h",
		"::stappler::db::internals::getDocuemntRoot()": "STStorage.h",
		"::stappler::db::internals::getFileFromContext(int64_t)": "STStorage.h",
		"::stappler::db::internals::getFileScheme()": "STStorage.h",
		"::stappler::db::internals::getRequestData()": "STStorage.h",
		"::stappler::db::internals::getUserIdFromContext()": "STStorage.h",
		"::stappler::db::internals::getUserScheme()": "STStorage.h",
		"::stappler::db::internals::isAdministrative()": "STStorage.h",
		"::stappler::db::internals::scheduleAyncDbTask(Callback<Function<void (const stappler::db::Transaction &)> (memory::pool_t *)> const&)": "STStorage.h",
		"::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&)": "STStorage.h",
		"::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)": "STStorage.h",
		"::stappler::db::messages::_addDebugMessage(stappler::mem_pool::Value&&)": "STStorage.h",
		"::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&)": "STStorage.h",
		"::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)": "STStorage.h",
		"::stappler::db::messages::_addErrorMessage(stappler::mem_pool::Value&&)": "STStorage.h",
		"::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&)": "STStorage.h",
		"::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)": "STStorage.h",
		"::stappler::db::messages::broadcast(stappler::mem_pool::Bytes const&)": "STStorage.h",
		"::stappler::db::messages::broadcast(stappler::mem_pool::Value const&)": "STStorage.h",
		"::stappler::db::messages::debug<typename>(Args &&...)": "STStorage.h",
		"::stappler::db::messages::error<typename>(Args &&...)": "STStorage.h",
		"::stappler::db::messages::isDebugEnabled()": "STStorage.h",
		"::stappler::db::messages::local<typename>(Args &&...)": "STStorage.h",
		"::stappler::db::messages::setDebugEnabled(bool)": "STStorage.h",
		"::stappler::db::operator!=(Conflict::Flags const&,std::underlying_type<Conflict::Flags>::type const&)": "STStorageWorker.h",
		"::stappler::db::operator!=(ContinueToken::Flags const&,std::underlying_type<ContinueToken::Flags>::type const&)": "STContinueToken.h",
		"::stappler::db::operator!=(InputConfig::Require const&,std::underlying_type<InputConfig::Require>::type const&)": "STStorage.h",
		"::stappler::db::operator!=(QueryFieldResolver::Meta const&,std::underlying_type<QueryFieldResolver::Meta>::type const&)": "STStorageQueryList.h",
		"::stappler::db::operator!=(QueryList::Flags const&,std::underlying_type<QueryList::Flags>::type const&)": "STStorageQueryList.h",
		"::stappler::db::operator!=(Scheme::Options const&,std::underlying_type<Scheme::Options>::type const&)": "STStorageScheme.h",
		"::stappler::db::operator!=(stappler::db::Flags const&,std::underlying_type<Flags>::type const&)": "STStorageField.h",
		"::stappler::db::operator!=(stappler::db::Resolve const&,std::underlying_type<Resolve>::type const&)": "STStorageQuery.h",
		"::stappler::db::operator!=(stappler::db::UpdateFlags const&,std::underlying_type<UpdateFlags>::type const&)": "STStorageWorker.h",
		"::stappler::db::operator!=(std::underlying_type<Conflict::Flags>::type const&,Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator!=(std::underlying_type<ContinueToken::Flags>::type const&,ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator!=(std::underlying_type<Flags>::type const&,stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator!=(std::underlying_type<InputConfig::Require>::type const&,InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator!=(std::underlying_type<QueryFieldResolver::Meta>::type const&,QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator!=(std::underlying_type<QueryList::Flags>::type const&,QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator!=(std::underlying_type<Resolve>::type const&,stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator!=(std::underlying_type<Scheme::Options>::type const&,Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator!=(std::underlying_type<UpdateFlags>::type const&,stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::operator&(Conflict::Flags const&,Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator&(ContinueToken::Flags const&,ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator&(InputConfig::Require const&,InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator&(QueryFieldResolver::Meta const&,QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator&(QueryList::Flags const&,QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator&(Scheme::Options const&,Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator&(stappler::db::Flags const&,stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator&(stappler::db::Resolve const&,stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator&(stappler::db::UpdateFlags const&,stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::operator&=(Conflict::Flags&,Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator&=(ContinueToken::Flags&,ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator&=(InputConfig::Require&,InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator&=(QueryFieldResolver::Meta&,QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator&=(QueryList::Flags&,QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator&=(Scheme::Options&,Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator&=(stappler::db::Flags&,stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator&=(stappler::db::Resolve&,stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator&=(stappler::db::UpdateFlags&,stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::operator==(Conflict::Flags const&,std::underlying_type<Conflict::Flags>::type const&)": "STStorageWorker.h",
		"::stappler::db::operator==(ContinueToken::Flags const&,std::underlying_type<ContinueToken::Flags>::type const&)": "STContinueToken.h",
		"::stappler::db::operator==(InputConfig::Require const&,std::underlying_type<InputConfig::Require>::type const&)": "STStorage.h",
		"::stappler::db::operator==(QueryFieldResolver::Meta const&,std::underlying_type<QueryFieldResolver::Meta>::type const&)": "STStorageQueryList.h",
		"::stappler::db::operator==(QueryList::Flags const&,std::underlying_type<QueryList::Flags>::type const&)": "STStorageQueryList.h",
		"::stappler::db::operator==(Scheme::Options const&,std::underlying_type<Scheme::Options>::type const&)": "STStorageScheme.h",
		"::stappler::db::operator==(stappler::db::Flags const&,std::underlying_type<Flags>::type const&)": "STStorageField.h",
		"::stappler::db::operator==(stappler::db::Resolve const&,std::underlying_type<Resolve>::type const&)": "STStorageQuery.h",
		"::stappler::db::operator==(stappler::db::UpdateFlags const&,std::underlying_type<UpdateFlags>::type const&)": "STStorageWorker.h",
		"::stappler::db::operator==(std::underlying_type<Conflict::Flags>::type const&,Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator==(std::underlying_type<ContinueToken::Flags>::type const&,ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator==(std::underlying_type<Flags>::type const&,stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator==(std::underlying_type<InputConfig::Require>::type const&,InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator==(std::underlying_type<QueryFieldResolver::Meta>::type const&,QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator==(std::underlying_type<QueryList::Flags>::type const&,QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator==(std::underlying_type<Resolve>::type const&,stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator==(std::underlying_type<Scheme::Options>::type const&,Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator==(std::underlying_type<UpdateFlags>::type const&,stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::operator^(Conflict::Flags const&,Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator^(ContinueToken::Flags const&,ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator^(InputConfig::Require const&,InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator^(QueryFieldResolver::Meta const&,QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator^(QueryList::Flags const&,QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator^(Scheme::Options const&,Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator^(stappler::db::Flags const&,stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator^(stappler::db::Resolve const&,stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator^(stappler::db::UpdateFlags const&,stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::operator^=(Conflict::Flags&,Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator^=(ContinueToken::Flags&,ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator^=(InputConfig::Require&,InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator^=(QueryFieldResolver::Meta&,QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator^=(QueryList::Flags&,QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator^=(Scheme::Options&,Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator^=(stappler::db::Flags&,stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator^=(stappler::db::Resolve&,stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator^=(stappler::db::UpdateFlags&,stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::operator|(Conflict::Flags const&,Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator|(ContinueToken::Flags const&,ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator|(InputConfig::Require const&,InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator|(QueryFieldResolver::Meta const&,QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator|(QueryList::Flags const&,QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator|(Scheme::Options const&,Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator|(stappler::db::Flags const&,stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator|(stappler::db::Resolve const&,stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator|(stappler::db::UpdateFlags const&,stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::operator|=(Conflict::Flags&,Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator|=(ContinueToken::Flags&,ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator|=(InputConfig::Require&,InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator|=(QueryFieldResolver::Meta&,QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator|=(QueryList::Flags&,QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator|=(Scheme::Options&,Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator|=(stappler::db::Flags&,stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator|=(stappler::db::Resolve&,stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator|=(stappler::db::UpdateFlags&,stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::operator~(Conflict::Flags const&)": "STStorageWorker.h",
		"::stappler::db::operator~(ContinueToken::Flags const&)": "STContinueToken.h",
		"::stappler::db::operator~(InputConfig::Require const&)": "STStorage.h",
		"::stappler::db::operator~(QueryFieldResolver::Meta const&)": "STStorageQueryList.h",
		"::stappler::db::operator~(QueryList::Flags const&)": "STStorageQueryList.h",
		"::stappler::db::operator~(Scheme::Options const&)": "STStorageScheme.h",
		"::stappler::db::operator~(stappler::db::Flags const&)": "STStorageField.h",
		"::stappler::db::operator~(stappler::db::Resolve const&)": "STStorageQuery.h",
		"::stappler::db::operator~(stappler::db::UpdateFlags const&)": "STStorageWorker.h",
		"::stappler::db::pq::Driver": "STPqDriver.h",
		"::stappler::db::pq::Driver::Driver(stappler::StringView,void const*)": "STPqDriver.h",
		"::stappler::db::pq::Driver::Status": "STPqDriver.h",
		"::stappler::db::pq::Driver::TransactionStatus": "STPqDriver.h",
		"::stappler::db::pq::Driver::_customTypes": "STPqDriver.h",
		"::stappler::db::pq::Driver::_external": "STPqDriver.h",
		"::stappler::db::pq::Driver::_handle": "STPqDriver.h",
		"::stappler::db::pq::Driver::_init": "STPqDriver.h",
		"::stappler::db::pq::Driver::_storageTypes": "STPqDriver.h",
		"::stappler::db::pq::Driver::acquireInterface(stappler::db::sql::Driver::Handle,stappler::mempool::base::pool_t*) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::clearResult(stappler::db::sql::Driver::Result) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::connect(Map<stappler::StringView, stappler::StringView> const&) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::consumeNotifications(stappler::db::sql::Driver::Handle,Callback<void (stappler::StringView)> const&) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::doConnect(char const* const*,char const* const*,int) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::exec(stappler::db::sql::Driver::Connection,char const*) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::exec(stappler::db::sql::Driver::Connection,char const*,int,char const* const*,int const*,int const*,int) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::finish(stappler::db::sql::Driver::Handle) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getCmdTuples(stappler::db::sql::Driver::Result) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getConnection(stappler::db::sql::Driver::Handle) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getLength(stappler::db::sql::Driver::Result,size_t,size_t) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getNFields(stappler::db::sql::Driver::Result) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getNTuples(stappler::db::sql::Driver::Result) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getName(stappler::db::sql::Driver::Result,size_t) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getResultErrorMessage(stappler::db::sql::Driver::Result) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getStatus(stappler::db::sql::Driver::Result) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getStatusMessage(stappler::db::pq::Driver::Status) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getTransactionStatus(stappler::db::sql::Driver::Connection) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getType(stappler::db::sql::Driver::Result,size_t) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getTypeById(uint32_t) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getTypeNameById(uint32_t) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::getValue(stappler::db::sql::Driver::Result,size_t,size_t) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::init(stappler::db::sql::Driver::Handle,Vector<stappler::StringView> const&)": "STPqDriver.h",
		"::stappler::db::pq::Driver::isBinaryFormat(stappler::db::sql::Driver::Result,size_t) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::isIdle(stappler::db::sql::Driver::Connection) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::isNotificationsSupported() const": "STPqDriver.h",
		"::stappler::db::pq::Driver::isNull(stappler::db::sql::Driver::Result,size_t,size_t) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::isValid(stappler::db::sql::Driver::Connection) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::isValid(stappler::db::sql::Driver::Handle) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::listenForNotifications(stappler::db::sql::Driver::Handle) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::open(stappler::StringView,void const*)": "STPqDriver.h",
		"::stappler::db::pq::Driver::operator bool() const": "STPqDriver.h",
		"::stappler::db::pq::Driver::performWithStorage(stappler::db::sql::Driver::Handle,Callback<void (const db::Adapter &)> const&) const": "STPqDriver.h",
		"::stappler::db::pq::Driver::~Driver()": "STPqDriver.h",
		"::stappler::db::pq::Handle": "STPqHandle.h",
		"::stappler::db::pq::Handle::Handle(stappler::db::pq::Driver const*,Driver::Handle)": "STPqHandle.h",
		"::stappler::db::pq::Handle::Handle(stappler::db::pq::Handle const&)": "STPqHandle.h",
		"::stappler::db::pq::Handle::Handle(stappler::db::pq::Handle&&)": "STPqHandle.h",
		"::stappler::db::pq::Handle::ViewIdVec": "STPqHandle.h",
		"::stappler::db::pq::Handle::beginTransaction()": "STPqHandle.h",
		"::stappler::db::pq::Handle::beginTransaction_pg(stappler::db::pq::TransactionLevel)": "STPqHandle.h",
		"::stappler::db::pq::Handle::cancelTransaction_pg()": "STPqHandle.h",
		"::stappler::db::pq::Handle::close()": "STPqHandle.h",
		"::stappler::db::pq::Handle::conn": "STPqHandle.h",
		"::stappler::db::pq::Handle::driver": "STPqHandle.h",
		"::stappler::db::pq::Handle::endTransaction()": "STPqHandle.h",
		"::stappler::db::pq::Handle::endTransaction_pg()": "STPqHandle.h",
		"::stappler::db::pq::Handle::getConnection() const": "STPqHandle.h",
		"::stappler::db::pq::Handle::getDriver() const": "STPqHandle.h",
		"::stappler::db::pq::Handle::getHandle() const": "STPqHandle.h",
		"::stappler::db::pq::Handle::handle": "STPqHandle.h",
		"::stappler::db::pq::Handle::init(BackendInterface::Config const&,Map<stappler::StringView, const stappler::db::sql::SqlHandle::Scheme *> const&)": "STPqHandle.h",
		"::stappler::db::pq::Handle::isNotificationsSupported() const": "STPqHandle.h",
		"::stappler::db::pq::Handle::isSuccess() const": "STPqHandle.h",
		"::stappler::db::pq::Handle::lastError": "STPqHandle.h",
		"::stappler::db::pq::Handle::lastErrorInfo": "STPqHandle.h",
		"::stappler::db::pq::Handle::level": "STPqHandle.h",
		"::stappler::db::pq::Handle::makeQuery(Callback<void (sql::SqlQuery &)> const&)": "STPqHandle.h",
		"::stappler::db::pq::Handle::operator bool() const": "STPqHandle.h",
		"::stappler::db::pq::Handle::operator=(stappler::db::pq::Handle const&)": "STPqHandle.h",
		"::stappler::db::pq::Handle::operator=(stappler::db::pq::Handle&&)": "STPqHandle.h",
		"::stappler::db::pq::Handle::performSimpleQuery(stappler::StringView const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STPqHandle.h",
		"::stappler::db::pq::Handle::performSimpleSelect(stappler::StringView const&,Callback<void (stappler::db::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STPqHandle.h",
		"::stappler::db::pq::Handle::selectQuery(db::sql::SqlQuery const&,Callback<bool (stappler::db::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::Binder": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::binary": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindBytes(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindCoderSource(db::Binder&,stappler::mem_pool::StringStream&,stappler::CoderSource const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindDataField(db::Binder&,stappler::mem_pool::StringStream&,db::Binder::DataField const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindDouble(db::Binder&,stappler::mem_pool::StringStream&,double)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindDoubleVector(stappler::db::pq::PgQueryInterface::Binder&,stappler::mem_pool::StringStream&,Vector<double> const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindFullText(db::Binder&,stappler::mem_pool::StringStream&,db::Binder::FullTextField const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindFullTextData(db::Binder&,stappler::mem_pool::StringStream&,db::FullTextData const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindFullTextRank(db::Binder&,stappler::mem_pool::StringStream&,db::Binder::FullTextRank const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindInt(db::Binder&,stappler::mem_pool::StringStream&,int64_t)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindIntVector(stappler::db::pq::PgQueryInterface::Binder&,stappler::mem_pool::StringStream&,Vector<int64_t> const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindMoveBytes(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Bytes&&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindMoveString(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::String&&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindString(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::String const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindStringVector(stappler::db::pq::PgQueryInterface::Binder&,stappler::mem_pool::StringStream&,Vector<stappler::StringView> const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindStringView(db::Binder&,stappler::mem_pool::StringStream&,stappler::StringView const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindTypeString(db::Binder&,stappler::mem_pool::StringStream&,db::Binder::TypeString const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindUInt(db::Binder&,stappler::mem_pool::StringStream&,uint64_t)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::bindValue(db::Binder&,stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::clear()": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::params": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::push(stappler::StringView const&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::push(stappler::mem_pool::Bytes&&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::push(stappler::mem_pool::String&&)": "STPqHandle.h",
		"::stappler::db::pq::PgQueryInterface::push(stappler::mem_pool::StringStream&,stappler::mem_pool::Value const&,bool,bool)": "STPqHandle.h",
		"::stappler::db::pq::ResultCursor": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::ResultCursor(stappler::db::pq::Driver const*,Driver::Result)": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::clear()": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::currentRow": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::driver": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::err": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::getAffectedRows() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::getError() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::getFieldName(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::getFieldsCount() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::getInfo() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::getRowsHint() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::isBinaryFormat(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::isEmpty() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::isEnded() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::isNull(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::isSuccess() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::next()": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::nrows": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::pgsql_is_success(Driver::Status)": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::reset()": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::result": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::toBool(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::toBytes(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::toDouble(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::toId() const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::toInteger(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::toString(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::toTypedData(size_t) const": "STPqDriver.h",
		"::stappler::db::pq::ResultCursor::~ResultCursor()": "STPqDriver.h",
		"::stappler::db::pq::TransactionLevel": "STPqHandle.h",
		"::stappler::db::setStorageRoot(stappler::db::StorageRoot*)": "STStorageConfig.h",
		"::stappler::db::sql::Driver": "STSqlDriver.h",
		"::stappler::db::sql::Driver::Connection": "STSqlDriver.h",
		"::stappler::db::sql::Driver::Handle": "STSqlDriver.h",
		"::stappler::db::sql::Driver::Result": "STSqlDriver.h",
		"::stappler::db::sql::Driver::_dbCtrl": "STSqlDriver.h",
		"::stappler::db::sql::Driver::_driverPath": "STSqlDriver.h",
		"::stappler::db::sql::Driver::acquireInterface(stappler::db::sql::Driver::Handle,stappler::mempool::base::pool_t*) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::connect(Map<stappler::StringView, stappler::StringView> const&) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::consumeNotifications(stappler::db::sql::Driver::Handle,Callback<void (stappler::StringView)> const&) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::finish(stappler::db::sql::Driver::Handle) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::getConnection(stappler::db::sql::Driver::Handle) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::getDriverName() const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::init(stappler::db::sql::Driver::Handle,Vector<stappler::StringView> const&)": "STSqlDriver.h",
		"::stappler::db::sql::Driver::isIdle(stappler::db::sql::Driver::Connection) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::isNotificationsSupported() const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::isValid(stappler::db::sql::Driver::Connection) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::isValid(stappler::db::sql::Driver::Handle) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::listenForNotifications(stappler::db::sql::Driver::Handle) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::open(stappler::mempool::base::pool_t*,stappler::StringView,void const*)": "STSqlDriver.h",
		"::stappler::db::sql::Driver::performWithStorage(stappler::db::sql::Driver::Handle,Callback<void (const db::Adapter &)> const&) const": "STSqlDriver.h",
		"::stappler::db::sql::Driver::setDbCtrl(Function<void (bool)>&&)": "STSqlDriver.h",
		"::stappler::db::sql::Driver::~Driver()": "STSqlDriver.h",
		"::stappler::db::sql::Result": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::Comparation": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::Field": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::Operator": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::QueryList": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::Scheme": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::Worker": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::_bcasts": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::addToView(db::FieldView const&,stappler::db::sql::SqlHandle::Scheme const*,uint64_t,stappler::mem_pool::Value const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::authorizeUser(db::Auth const&,stappler::StringView const&,stappler::StringView const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::broadcast(stappler::mem_pool::Bytes const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::cleanupRefSet(stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,uint64_t,stappler::db::sql::SqlHandle::Field const&,Vector<int64_t> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::clear(stappler::CoderSource const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::count(stappler::db::sql::SqlHandle::Worker&,db::Query const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::create(stappler::db::sql::SqlHandle::Worker&,stappler::mem_pool::Value&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::field(db::Action,stappler::db::sql::SqlHandle::Worker&,stappler::mem_pool::Value const&,stappler::db::sql::SqlHandle::Field const&,stappler::mem_pool::Value&&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::field(db::Action,stappler::db::sql::SqlHandle::Worker&,uint64_t,stappler::db::sql::SqlHandle::Field const&,stappler::mem_pool::Value&&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::finalizeBroadcast()": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::foreach(stappler::db::sql::SqlHandle::Worker&,stappler::db::Query const&,Callback<bool (stappler::mem_pool::Value &)> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::get(stappler::CoderSource const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getArrayCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getArrayField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getDeltaData(stappler::db::sql::SqlHandle::Scheme const&,db::FieldView const&,stappler::Time const&,uint64_t)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getDeltaData(stappler::db::sql::SqlHandle::Scheme const&,stappler::Time const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getDeltaValue(stappler::db::sql::SqlHandle::Scheme const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getDeltaValue(stappler::db::sql::SqlHandle::Scheme const&,db::FieldView const&,uint64_t)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getFileCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,uint64_t,stappler::db::sql::SqlHandle::Field const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getFileField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,uint64_t,stappler::db::sql::SqlHandle::Field const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getHistory(db::FieldView const&,stappler::db::sql::SqlHandle::Scheme const*,uint64_t,stappler::Time const&,bool)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getHistory(stappler::db::sql::SqlHandle::Scheme const&,stappler::Time const&,bool)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getKeyValueSchemeName()": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getNameForDelta(stappler::db::sql::SqlHandle::Scheme const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getObjectCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,uint64_t,stappler::db::sql::SqlHandle::Field const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getObjectField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,uint64_t,stappler::db::sql::SqlHandle::Field const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getReferenceParents(stappler::db::sql::SqlHandle::Scheme const&,uint64_t,stappler::db::sql::SqlHandle::Scheme const*,stappler::db::sql::SqlHandle::Field const*)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getSetCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&,db::Query const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getSetField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&,db::Query const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getSimpleCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getSimpleField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getViewCount(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&,db::Query const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::getViewField(stappler::db::sql::SqlHandle::Worker&,stappler::db::sql::SqlQuery&,uint64_t,stappler::db::sql::SqlHandle::Field const&,db::Query const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::insertIntoArray(stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,int64_t,stappler::db::sql::SqlHandle::Field const&,stappler::mem_pool::Value&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::insertIntoRefSet(stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,int64_t,stappler::db::sql::SqlHandle::Field const&,Vector<int64_t> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::insertIntoSet(stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,int64_t,db::FieldObject const&,stappler::db::sql::SqlHandle::Field const&,stappler::mem_pool::Value const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::isNotificationsSupported() const": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::isSuccess() const": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::makeQuery(stappler::Callback<void (SqlQuery &)> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::makeSessionsCleanup()": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::patch(stappler::db::sql::SqlHandle::Worker&,uint64_t,stappler::mem_pool::Value const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::performPostUpdate(db::Transaction const&,stappler::db::sql::SqlQuery&,stappler::db::sql::SqlHandle::Scheme const&,stappler::mem_pool::Value&,int64_t,stappler::mem_pool::Value const&,bool)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::performQuery(stappler::db::sql::SqlQuery const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::performQueryList(stappler::db::sql::SqlHandle::QueryList const&,size_t,bool)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::performQueryListForIds(stappler::db::sql::SqlHandle::QueryList const&,size_t)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::performSimpleQuery(stappler::StringView const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::performSimpleSelect(stappler::StringView const&,Callback<void (stappler::db::sql::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::processBroadcasts(Callback<void (stappler::BytesView)> const&,int64_t)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::remove(stappler::db::sql::SqlHandle::Worker&,uint64_t)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::removeFromView(db::FieldView const&,stappler::db::sql::SqlHandle::Scheme const*,uint64_t)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::save(stappler::db::sql::SqlHandle::Worker&,uint64_t,stappler::mem_pool::Value const&,Vector<stappler::mem_pool::String> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::select(stappler::db::sql::SqlHandle::Worker&,db::Query const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::selectQuery(stappler::db::sql::SqlQuery const&,Callback<bool (stappler::db::sql::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::selectQueryId(stappler::db::sql::SqlQuery const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::selectValueQuery(stappler::db::sql::SqlHandle::Field const&,stappler::db::sql::SqlQuery const&,Vector<const stappler::db::sql::SqlHandle::Field *> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::selectValueQuery(stappler::db::sql::SqlHandle::Scheme const&,stappler::db::sql::SqlQuery const&,Vector<const stappler::db::sql::SqlHandle::Field *> const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::selectValueQuery(stappler::mem_pool::Value&,stappler::db::FieldView const&,stappler::db::sql::SqlQuery const&)": "STSqlHandle.h",
		"::stappler::db::sql::SqlHandle::set(stappler::CoderSource const&,stappler::mem_pool::Value const&,stappler::TimeInterval)": "STSqlHandle.h",
		"::stappler::db::sql::SqlQuery": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::Context": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::Context::Context(stappler::db::sql::SqlQuery&,stappler::db::Scheme const&,stappler::db::Worker const&,db::Query const&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::Context::_this": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::Context::getAlt(stappler::StringView)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::Context::hasAltLimit": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::Context::softLimitField": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::Context::softLimitIsFts": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::SqlQuery(db::QueryInterface*)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::TypeString": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::_fulltextQueries": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::clear()": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::getFullTextQuery(db::Scheme const&,db::Field const&,db::Query::Select const&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::getInterface() const": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::getQuery() const": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeFullTextRank(stappler::sql::Query<stappler::db::Binder, stappler::memory::PoolInterface>::Select&,db::Scheme const&,db::Query const&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeOrdering(SqlQuery::SelectFrom&,db::Scheme const&,db::Query const&,bool)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQuery(stappler::db::sql::SqlQuery::Context&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQuery(stappler::db::sql::SqlQuery::Context&,db::Scheme const&,uint64_t,db::Field const&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQueryArray(db::QueryList const&,db::Field const*)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQueryDelta(db::Scheme const&,stappler::Time const&,Set<const db::Field *> const&,bool)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQueryFile(db::QueryList const&,db::Field const*)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQueryList(db::QueryList const&,bool,size_t)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQueryListItem(stappler::sql::Query<stappler::db::Binder, stappler::memory::PoolInterface>::GenericQuery&,db::QueryList const&,size_t,bool,db::Field const*,bool)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQueryReqest(SqlQuery::SelectFrom&,db::QueryList::Item const&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeQueryViewDelta(db::QueryList const&,stappler::Time const&,Set<const db::Field *> const&,bool)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeSelectFrom(stappler::sql::Query<stappler::db::Binder, stappler::memory::PoolInterface>::GenericQuery&,db::QueryList::Item const&,bool,stappler::StringView const&,stappler::StringView const&,bool)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeSelectFrom(stappler::sql::Query<stappler::db::Binder, stappler::memory::PoolInterface>::Select&,stappler::db::sql::SqlQuery::Context&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeWhere(SqlQuery::SelectWhere&,db::Operator,db::Scheme const&,db::Query const&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeWhere(SqlQuery::WhereContinue&,db::Operator,db::Scheme const&,db::Query const&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeWhere(SqlQuery::WhereContinue&,db::Operator,db::Scheme const&,db::Query::Select const&)": "STSqlQuery.h",
		"::stappler::db::sql::SqlQuery::writeWhere(SqlQuery::WhereContinue&,db::Operator,db::Scheme const&,db::Worker::ConditionData const&)": "STSqlQuery.h",
		"::stappler::db::sqlite::Driver": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::Driver(stappler::StringView)": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::_init": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::acquireInterface(stappler::db::sql::Driver::Handle,stappler::mempool::base::pool_t*) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::connect(Map<stappler::StringView, stappler::StringView> const&) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::finish(stappler::db::sql::Driver::Handle) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::getConnection(stappler::db::sql::Driver::Handle) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::getDbName(stappler::db::sql::Driver::Handle) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::getInfo(stappler::db::sql::Driver::Connection,int) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::init(stappler::db::sql::Driver::Handle,Vector<stappler::StringView> const&)": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::isIdle(stappler::db::sql::Driver::Connection) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::isNotificationsSupported() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::isValid(stappler::db::sql::Driver::Connection) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::isValid(stappler::db::sql::Driver::Handle) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::open(stappler::StringView)": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::performWithStorage(stappler::db::sql::Driver::Handle,Callback<void (const db::Adapter &)> const&) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::setUserId(stappler::db::sql::Driver::Handle,int64_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::Driver::~Driver()": "STSqliteDriver.h",
		"::stappler::db::sqlite::Handle": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::Handle(stappler::db::sqlite::Driver const*,Driver::Handle)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::Handle(stappler::db::sqlite::Handle const&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::Handle(stappler::db::sqlite::Handle&&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::ViewIdVec": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::_profile": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::beginTransaction()": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::close()": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::conn": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::driver": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::endTransaction()": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::getConnection() const": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::getDriver() const": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::getHandle() const": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::handle": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::init(BackendInterface::Config const&,Map<stappler::StringView, const stappler::db::sql::SqlHandle::Scheme *> const&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::isSuccess() const": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::lastError": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::level": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::makeQuery(Callback<void (sql::SqlQuery &)> const&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::operator bool() const": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::operator=(stappler::db::sqlite::Handle const&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::operator=(stappler::db::sqlite::Handle&&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::performSimpleQuery(stappler::StringView const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::performSimpleSelect(stappler::StringView const&,Callback<void (sql::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::Handle::selectQuery(db::sql::SqlQuery const&,Callback<bool (sql::Result &)> const&,Callback<void (const stappler::mem_pool::Value &)> const&)": "STSqliteHandle.h",
		"::stappler::db::sqlite::ResultCursor": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::ResultCursor(stappler::db::sqlite::Driver const*,Driver::Connection,Driver::Result,int)": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::clear()": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::conn": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::driver": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::err": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::getAffectedRows() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::getError() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::getFieldName(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::getFieldsCount() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::getInfo() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::getRowsHint() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::getType(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::isBinaryFormat(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::isEmpty() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::isEnded() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::isNull(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::isSuccess() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::next()": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::reset()": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::result": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::statusIsSuccess(int)": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::toBool(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::toBytes(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::toDouble(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::toId() const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::toInteger(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::toString(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::toTypedData(size_t) const": "STSqliteDriver.h",
		"::stappler::db::sqlite::ResultCursor::~ResultCursor()": "STSqliteDriver.h",
		"::stappler::db::sqlite::TransactionLevel": "STSqliteHandle.h",
		"::stappler::epsilon<typename>()": "SPCore.h",
		"::stappler::filepath::_merge<typename>(stappler::StringView,stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::absolute<typename>(stappler::StringView,bool)": "SPFilepath.h",
		"::stappler::filepath::canonical<typename>(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::extensionCount(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::extensionForContentType(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::fullExtension(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::isAboveRoot(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::isAbsolute(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::isBundled(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::isCanonical(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::lastComponent(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::lastComponent(stappler::StringView,size_t)": "SPFilepath.h",
		"::stappler::filepath::lastExtension(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::merge(memory::vector<StringView> const&)": "SPFilepath.h",
		"::stappler::filepath::merge(memory::vector<memory::string> const&)": "SPFilepath.h",
		"::stappler::filepath::merge(std::vector<StringView> const&)": "SPFilepath.h",
		"::stappler::filepath::merge(std::vector<std::string> const&)": "SPFilepath.h",
		"::stappler::filepath::merge<typename,class>(stappler::StringView,stappler::StringView,Args &&...)": "SPFilepath.h",
		"::stappler::filepath::merge<typename>(stappler::memory::PoolInterface::StringType&&)": "SPFilepath.h",
		"::stappler::filepath::merge<typename>(stappler::memory::StandartInterface::StringType&&)": "SPFilepath.h",
		"::stappler::filepath::name(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::reconstructPath<typename>(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::replace<typename>(stappler::StringView,stappler::StringView,stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::root(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::split(stappler::StringView,Callback<void (stappler::StringView)> const&)": "SPFilepath.h",
		"::stappler::filepath::split<typename>(stappler::StringView)": "SPFilepath.h",
		"::stappler::filepath::validatePath(stappler::StringView)": "SPFilepath.h",
		"::stappler::filesystem::Access": "SPFilesystem.h",
		"::stappler::filesystem::File": "SPFilesystem.h",
		"::stappler::filesystem::File::": "SPFilesystem.h",
		"::stappler::filesystem::File::File()": "SPFilesystem.h",
		"::stappler::filesystem::File::File(FILE*,stappler::filesystem::File::Flags)": "SPFilesystem.h",
		"::stappler::filesystem::File::File(stappler::filesystem::File const&)": "SPFilesystem.h",
		"::stappler::filesystem::File::File(stappler::filesystem::File&&)": "SPFilesystem.h",
		"::stappler::filesystem::File::File(void*)": "SPFilesystem.h",
		"::stappler::filesystem::File::File(void*,size_t)": "SPFilesystem.h",
		"::stappler::filesystem::File::Flags": "SPFilesystem.h",
		"::stappler::filesystem::File::_buf": "SPFilesystem.h",
		"::stappler::filesystem::File::_flags": "SPFilesystem.h",
		"::stappler::filesystem::File::_isBundled": "SPFilesystem.h",
		"::stappler::filesystem::File::_nativeFile": "SPFilesystem.h",
		"::stappler::filesystem::File::_platformFile": "SPFilesystem.h",
		"::stappler::filesystem::File::_size": "SPFilesystem.h",
		"::stappler::filesystem::File::close()": "SPFilesystem.h",
		"::stappler::filesystem::File::close_remove()": "SPFilesystem.h",
		"::stappler::filesystem::File::close_rename(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::File::eof() const": "SPFilesystem.h",
		"::stappler::filesystem::File::int_type": "SPFilesystem.h",
		"::stappler::filesystem::File::is_open() const": "SPFilesystem.h",
		"::stappler::filesystem::File::open_tmp(char const*,bool)": "SPFilesystem.h",
		"::stappler::filesystem::File::operator bool() const": "SPFilesystem.h",
		"::stappler::filesystem::File::operator=(stappler::filesystem::File const&)": "SPFilesystem.h",
		"::stappler::filesystem::File::operator=(stappler::filesystem::File&&)": "SPFilesystem.h",
		"::stappler::filesystem::File::path() const": "SPFilesystem.h",
		"::stappler::filesystem::File::read(uint8_t*,size_t)": "SPFilesystem.h",
		"::stappler::filesystem::File::seek(int64_t,io::Seek)": "SPFilesystem.h",
		"::stappler::filesystem::File::set_tmp_path(char const*)": "SPFilesystem.h",
		"::stappler::filesystem::File::size() const": "SPFilesystem.h",
		"::stappler::filesystem::File::streamsize": "SPFilesystem.h",
		"::stappler::filesystem::File::tell() const": "SPFilesystem.h",
		"::stappler::filesystem::File::traits_type": "SPFilesystem.h",
		"::stappler::filesystem::File::xsgetc()": "SPFilesystem.h",
		"::stappler::filesystem::File::xsgetn(char*,stappler::filesystem::File::streamsize)": "SPFilesystem.h",
		"::stappler::filesystem::File::xsputc(stappler::filesystem::File::int_type)": "SPFilesystem.h",
		"::stappler::filesystem::File::xsputn(char const*,stappler::filesystem::File::streamsize)": "SPFilesystem.h",
		"::stappler::filesystem::File::~File()": "SPFilesystem.h",
		"::stappler::filesystem::Stat": "SPFilesystem.h",
		"::stappler::filesystem::Stat::atime": "SPFilesystem.h",
		"::stappler::filesystem::Stat::ctime": "SPFilesystem.h",
		"::stappler::filesystem::Stat::isDir": "SPFilesystem.h",
		"::stappler::filesystem::Stat::mtime": "SPFilesystem.h",
		"::stappler::filesystem::Stat::size": "SPFilesystem.h",
		"::stappler::filesystem::cachesPath<typename>(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::cachesPathReadOnly<typename>(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::copy(stappler::StringView,stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::currentDir<typename>(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::documentsPath<typename>(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::documentsPathReadOnly<typename>(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::exists(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::ftw(stappler::StringView,Callback<void (stappler::StringView, bool)> const&,int,bool)": "SPFilesystem.h",
		"::stappler::filesystem::ftw_b(stappler::StringView,Callback<bool (stappler::StringView, bool)> const&,int,bool)": "SPFilesystem.h",
		"::stappler::filesystem::mkdir(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::mkdir_recursive(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::move(stappler::StringView,stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::native::access_fn(stappler::StringView,stappler::filesystem::Access)": "SPFilesystem.h",
		"::stappler::filesystem::native::fopen_fn(stappler::StringView,stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::native::ftw_b_fn(stappler::StringView,Callback<bool (stappler::StringView, bool)> const&,int,bool)": "SPFilesystem.h",
		"::stappler::filesystem::native::ftw_fn(stappler::StringView,Callback<void (stappler::StringView, bool)> const&,int,bool)": "SPFilesystem.h",
		"::stappler::filesystem::native::getcwd_fn<typename>()": "SPFilesystem.h",
		"::stappler::filesystem::native::mkdir_fn(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::native::nativeToPosix<typename>(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::native::posixToNative<typename>(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::native::remove_fn(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::native::rename_fn(stappler::StringView,stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::native::stat_fn(stappler::StringView,stappler::filesystem::Stat&)": "SPFilesystem.h",
		"::stappler::filesystem::native::touch_fn(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::openForReading(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_close(void*)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_eof(void*)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_exists(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_ftw(stappler::StringView,Callback<void (stappler::StringView, bool)> const&,int,bool,bool)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_ftw_b(stappler::StringView,Callback<bool (stappler::StringView, bool)> const&,int,bool,bool)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_getApplicationPath<typename>()": "SPFilesystem.h",
		"::stappler::filesystem::platform::_getCachesPath<typename>(bool)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_getDocumentsPath<typename>(bool)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_getWritablePath<typename>(bool)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_openForReading(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_read(void*,uint8_t*,size_t)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_seek(void*,int64_t,io::Seek)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_stat(stappler::StringView,stappler::filesystem::Stat&,bool)": "SPFilesystem.h",
		"::stappler::filesystem::platform::_tell(void*)": "SPFilesystem.h",
		"::stappler::filesystem::readIntoBuffer(uint8_t*,stappler::StringView,size_t,size_t)": "SPFilesystem.h",
		"::stappler::filesystem::readIntoMemory<typename>(stappler::StringView,size_t,size_t)": "SPFilesystem.h",
		"::stappler::filesystem::readTextFile<typename>(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::readWithConsumer(io::Consumer const&,uint8_t*,size_t,stappler::StringView,size_t,size_t)": "SPFilesystem.h",
		"::stappler::filesystem::readWithConsumer<size_t>(io::Consumer const&,stappler::StringView,size_t,size_t)": "SPFilesystem.h",
		"::stappler::filesystem::remove(stappler::StringView,bool,bool)": "SPFilesystem.h",
		"::stappler::filesystem::stat(stappler::StringView,stappler::filesystem::Stat&)": "SPFilesystem.h",
		"::stappler::filesystem::touch(stappler::StringView)": "SPFilesystem.h",
		"::stappler::filesystem::writablePath<typename>(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::writablePathReadOnly<typename>(stappler::StringView,bool)": "SPFilesystem.h",
		"::stappler::filesystem::write(stappler::StringView,uint8_t const*,size_t)": "SPFilesystem.h",
		"::stappler::filesystem::write<typename>(stappler::StringView,BytesView const&)": "SPFilesystem.h",
		"::stappler::geom::Anchor::BottomLeft": "SPVec2.h",
		"::stappler::geom::Anchor::BottomRight": "SPVec2.h",
		"::stappler::geom::Anchor::Middle": "SPVec2.h",
		"::stappler::geom::Anchor::MiddleBottom": "SPVec2.h",
		"::stappler::geom::Anchor::MiddleLeft": "SPVec2.h",
		"::stappler::geom::Anchor::MiddleRight": "SPVec2.h",
		"::stappler::geom::Anchor::MiddleTop": "SPVec2.h",
		"::stappler::geom::Anchor::TopLeft": "SPVec2.h",
		"::stappler::geom::Anchor::TopRight": "SPVec2.h",
		"::stappler::geom::AngleIsConvex(stappler::geom::HalfEdge const*,stappler::geom::HalfEdge const*)": "SPTessTypes.h",
		"::stappler::geom::Autofit": "SPFontStyle.h",
		"::stappler::geom::CharLayout": "SPFontStyle.h",
		"::stappler::geom::CharLayout::AnchorMask": "SPFontStyle.h",
		"::stappler::geom::CharLayout::CharMask": "SPFontStyle.h",
		"::stappler::geom::CharLayout::SourceMask": "SPFontStyle.h",
		"::stappler::geom::CharLayout::SourceMax": "SPFontStyle.h",
		"::stappler::geom::CharLayout::charID": "SPFontStyle.h",
		"::stappler::geom::CharLayout::getAnchorForObject(uint32_t)": "SPFontStyle.h",
		"::stappler::geom::CharLayout::getObjectId(uint16_t,char16_t,stappler::geom::SpriteAnchor)": "SPFontStyle.h",
		"::stappler::geom::CharLayout::getObjectId(uint32_t,stappler::geom::SpriteAnchor)": "SPFontStyle.h",
		"::stappler::geom::CharLayout::operator char16_t() const": "SPFontStyle.h",
		"::stappler::geom::CharLayout::xAdvance": "SPFontStyle.h",
		"::stappler::geom::CharSpec": "SPFontStyle.h",
		"::stappler::geom::CharSpec::advance": "SPFontStyle.h",
		"::stappler::geom::CharSpec::charID": "SPFontStyle.h",
		"::stappler::geom::CharSpec::face": "SPFontStyle.h",
		"::stappler::geom::CharSpec::pos": "SPFontStyle.h",
		"::stappler::geom::CharTexture": "SPFontStyle.h",
		"::stappler::geom::CharTexture::bitmap": "SPFontStyle.h",
		"::stappler::geom::CharTexture::bitmapRows": "SPFontStyle.h",
		"::stappler::geom::CharTexture::bitmapWidth": "SPFontStyle.h",
		"::stappler::geom::CharTexture::charID": "SPFontStyle.h",
		"::stappler::geom::CharTexture::fontID": "SPFontStyle.h",
		"::stappler::geom::CharTexture::height": "SPFontStyle.h",
		"::stappler::geom::CharTexture::pitch": "SPFontStyle.h",
		"::stappler::geom::CharTexture::width": "SPFontStyle.h",
		"::stappler::geom::CharTexture::x": "SPFontStyle.h",
		"::stappler::geom::CharTexture::y": "SPFontStyle.h",
		"::stappler::geom::Color": "SPColor.h",
		"::stappler::geom::Color3B": "SPColor.h",
		"::stappler::geom::Color3B::BLACK": "SPColor.h",
		"::stappler::geom::Color3B::Color3B()": "SPColor.h",
		"::stappler::geom::Color3B::Color3B(stappler::geom::Color4B const&)": "SPColor.h",
		"::stappler::geom::Color3B::Color3B(stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::Color3B::Color3B(uint32_t)": "SPColor.h",
		"::stappler::geom::Color3B::Color3B(uint8_t,uint8_t,uint8_t)": "SPColor.h",
		"::stappler::geom::Color3B::WHITE": "SPColor.h",
		"::stappler::geom::Color3B::b": "SPColor.h",
		"::stappler::geom::Color3B::equals(stappler::geom::Color3B const&)": "SPColor.h",
		"::stappler::geom::Color3B::g": "SPColor.h",
		"::stappler::geom::Color3B::getColorByName(stappler::StringView,stappler::geom::Color3B const&)": "SPColor.h",
		"::stappler::geom::Color3B::operator!=(stappler::geom::Color3B const&) const": "SPColor.h",
		"::stappler::geom::Color3B::operator!=(stappler::geom::Color4B const&) const": "SPColor.h",
		"::stappler::geom::Color3B::operator!=(stappler::geom::Color4F const&) const": "SPColor.h",
		"::stappler::geom::Color3B::operator==(stappler::geom::Color3B const&) const": "SPColor.h",
		"::stappler::geom::Color3B::operator==(stappler::geom::Color4B const&) const": "SPColor.h",
		"::stappler::geom::Color3B::operator==(stappler::geom::Color4F const&) const": "SPColor.h",
		"::stappler::geom::Color3B::progress(stappler::geom::Color3B const&,stappler::geom::Color3B const&,float)": "SPColor.h",
		"::stappler::geom::Color3B::r": "SPColor.h",
		"::stappler::geom::Color4B": "SPColor.h",
		"::stappler::geom::Color4B::BLACK": "SPColor.h",
		"::stappler::geom::Color4B::Color4B()": "SPColor.h",
		"::stappler::geom::Color4B::Color4B(stappler::geom::Color3B const&)": "SPColor.h",
		"::stappler::geom::Color4B::Color4B(stappler::geom::Color3B const&,uint8_t)": "SPColor.h",
		"::stappler::geom::Color4B::Color4B(stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::Color4B::Color4B(uint8_t,uint8_t,uint8_t,uint8_t)": "SPColor.h",
		"::stappler::geom::Color4B::WHITE": "SPColor.h",
		"::stappler::geom::Color4B::a": "SPColor.h",
		"::stappler::geom::Color4B::b": "SPColor.h",
		"::stappler::geom::Color4B::black(uint8_t)": "SPColor.h",
		"::stappler::geom::Color4B::g": "SPColor.h",
		"::stappler::geom::Color4B::getColorByName(stappler::StringView,stappler::geom::Color4B const&)": "SPColor.h",
		"::stappler::geom::Color4B::operator!=(stappler::geom::Color3B const&) const": "SPColor.h",
		"::stappler::geom::Color4B::operator!=(stappler::geom::Color4B const&) const": "SPColor.h",
		"::stappler::geom::Color4B::operator!=(stappler::geom::Color4F const&) const": "SPColor.h",
		"::stappler::geom::Color4B::operator==(stappler::geom::Color3B const&) const": "SPColor.h",
		"::stappler::geom::Color4B::operator==(stappler::geom::Color4B const&) const": "SPColor.h",
		"::stappler::geom::Color4B::operator==(stappler::geom::Color4F const&) const": "SPColor.h",
		"::stappler::geom::Color4B::progress(stappler::geom::Color4B const&,stappler::geom::Color4B const&,float)": "SPColor.h",
		"::stappler::geom::Color4B::r": "SPColor.h",
		"::stappler::geom::Color4B::white(uint8_t)": "SPColor.h",
		"::stappler::geom::Color4F": "SPColor.h",
		"::stappler::geom::Color4F::BLACK": "SPColor.h",
		"::stappler::geom::Color4F::Color4F()": "SPColor.h",
		"::stappler::geom::Color4F::Color4F(float,float,float,float)": "SPColor.h",
		"::stappler::geom::Color4F::Color4F(stappler::geom::Color3B const&)": "SPColor.h",
		"::stappler::geom::Color4F::Color4F(stappler::geom::Color3B const&,uint8_t)": "SPColor.h",
		"::stappler::geom::Color4F::Color4F(stappler::geom::Color4B const&)": "SPColor.h",
		"::stappler::geom::Color4F::ONE": "SPColor.h",
		"::stappler::geom::Color4F::WHITE": "SPColor.h",
		"::stappler::geom::Color4F::ZERO": "SPColor.h",
		"::stappler::geom::Color4F::a": "SPColor.h",
		"::stappler::geom::Color4F::b": "SPColor.h",
		"::stappler::geom::Color4F::equals(stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::Color4F::g": "SPColor.h",
		"::stappler::geom::Color4F::getColor() const": "SPColor.h",
		"::stappler::geom::Color4F::getOpacity() const": "SPColor.h",
		"::stappler::geom::Color4F::operator Vec4() const": "SPColor.h",
		"::stappler::geom::Color4F::operator!=(stappler::geom::Color3B const&) const": "SPColor.h",
		"::stappler::geom::Color4F::operator!=(stappler::geom::Color4B const&) const": "SPColor.h",
		"::stappler::geom::Color4F::operator!=(stappler::geom::Color4F const&) const": "SPColor.h",
		"::stappler::geom::Color4F::operator==(stappler::geom::Color3B const&) const": "SPColor.h",
		"::stappler::geom::Color4F::operator==(stappler::geom::Color4B const&) const": "SPColor.h",
		"::stappler::geom::Color4F::operator==(stappler::geom::Color4F const&) const": "SPColor.h",
		"::stappler::geom::Color4F::progress(stappler::geom::Color4F const&,stappler::geom::Color4F const&,float)": "SPColor.h",
		"::stappler::geom::Color4F::r": "SPColor.h",
		"::stappler::geom::Color4F::setMasked(stappler::geom::Color4F const&,stappler::geom::ColorMask)": "SPColor.h",
		"::stappler::geom::Color4F::setUnmasked(stappler::geom::Color4F const&,stappler::geom::ColorMask)": "SPColor.h",
		"::stappler::geom::Color::Amber_100": "SPColor.h",
		"::stappler::geom::Color::Amber_200": "SPColor.h",
		"::stappler::geom::Color::Amber_300": "SPColor.h",
		"::stappler::geom::Color::Amber_400": "SPColor.h",
		"::stappler::geom::Color::Amber_50": "SPColor.h",
		"::stappler::geom::Color::Amber_500": "SPColor.h",
		"::stappler::geom::Color::Amber_600": "SPColor.h",
		"::stappler::geom::Color::Amber_700": "SPColor.h",
		"::stappler::geom::Color::Amber_800": "SPColor.h",
		"::stappler::geom::Color::Amber_900": "SPColor.h",
		"::stappler::geom::Color::Amber_A100": "SPColor.h",
		"::stappler::geom::Color::Amber_A200": "SPColor.h",
		"::stappler::geom::Color::Amber_A400": "SPColor.h",
		"::stappler::geom::Color::Amber_A700": "SPColor.h",
		"::stappler::geom::Color::Black": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_100": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_200": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_300": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_400": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_50": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_500": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_600": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_700": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_800": "SPColor.h",
		"::stappler::geom::Color::BlueGrey_900": "SPColor.h",
		"::stappler::geom::Color::Blue_100": "SPColor.h",
		"::stappler::geom::Color::Blue_200": "SPColor.h",
		"::stappler::geom::Color::Blue_300": "SPColor.h",
		"::stappler::geom::Color::Blue_400": "SPColor.h",
		"::stappler::geom::Color::Blue_50": "SPColor.h",
		"::stappler::geom::Color::Blue_500": "SPColor.h",
		"::stappler::geom::Color::Blue_600": "SPColor.h",
		"::stappler::geom::Color::Blue_700": "SPColor.h",
		"::stappler::geom::Color::Blue_800": "SPColor.h",
		"::stappler::geom::Color::Blue_900": "SPColor.h",
		"::stappler::geom::Color::Blue_A100": "SPColor.h",
		"::stappler::geom::Color::Blue_A200": "SPColor.h",
		"::stappler::geom::Color::Blue_A400": "SPColor.h",
		"::stappler::geom::Color::Blue_A700": "SPColor.h",
		"::stappler::geom::Color::Brown_100": "SPColor.h",
		"::stappler::geom::Color::Brown_200": "SPColor.h",
		"::stappler::geom::Color::Brown_300": "SPColor.h",
		"::stappler::geom::Color::Brown_400": "SPColor.h",
		"::stappler::geom::Color::Brown_50": "SPColor.h",
		"::stappler::geom::Color::Brown_500": "SPColor.h",
		"::stappler::geom::Color::Brown_600": "SPColor.h",
		"::stappler::geom::Color::Brown_700": "SPColor.h",
		"::stappler::geom::Color::Brown_800": "SPColor.h",
		"::stappler::geom::Color::Brown_900": "SPColor.h",
		"::stappler::geom::Color::Color()": "SPColor.h",
		"::stappler::geom::Color::Color(stappler::geom::Color const&)": "SPColor.h",
		"::stappler::geom::Color::Color(stappler::geom::Color&&)": "SPColor.h",
		"::stappler::geom::Color::Color(stappler::geom::Color3B const&)": "SPColor.h",
		"::stappler::geom::Color::Color(stappler::geom::Color4B const&)": "SPColor.h",
		"::stappler::geom::Color::Color(stappler::geom::Color::Tone,stappler::geom::Color::Level)": "SPColor.h",
		"::stappler::geom::Color::Color(uint32_t)": "SPColor.h",
		"::stappler::geom::Color::Color(uint32_t,int16_t)": "SPColor.h",
		"::stappler::geom::Color::Cyan_100": "SPColor.h",
		"::stappler::geom::Color::Cyan_200": "SPColor.h",
		"::stappler::geom::Color::Cyan_300": "SPColor.h",
		"::stappler::geom::Color::Cyan_400": "SPColor.h",
		"::stappler::geom::Color::Cyan_50": "SPColor.h",
		"::stappler::geom::Color::Cyan_500": "SPColor.h",
		"::stappler::geom::Color::Cyan_600": "SPColor.h",
		"::stappler::geom::Color::Cyan_700": "SPColor.h",
		"::stappler::geom::Color::Cyan_800": "SPColor.h",
		"::stappler::geom::Color::Cyan_900": "SPColor.h",
		"::stappler::geom::Color::Cyan_A100": "SPColor.h",
		"::stappler::geom::Color::Cyan_A200": "SPColor.h",
		"::stappler::geom::Color::Cyan_A400": "SPColor.h",
		"::stappler::geom::Color::Cyan_A700": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_100": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_200": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_300": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_400": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_50": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_500": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_600": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_700": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_800": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_900": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_A100": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_A200": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_A400": "SPColor.h",
		"::stappler::geom::Color::DeepOrange_A700": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_100": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_200": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_300": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_400": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_50": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_500": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_600": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_700": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_800": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_900": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_A100": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_A200": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_A400": "SPColor.h",
		"::stappler::geom::Color::DeepPurple_A700": "SPColor.h",
		"::stappler::geom::Color::Green_100": "SPColor.h",
		"::stappler::geom::Color::Green_200": "SPColor.h",
		"::stappler::geom::Color::Green_300": "SPColor.h",
		"::stappler::geom::Color::Green_400": "SPColor.h",
		"::stappler::geom::Color::Green_50": "SPColor.h",
		"::stappler::geom::Color::Green_500": "SPColor.h",
		"::stappler::geom::Color::Green_600": "SPColor.h",
		"::stappler::geom::Color::Green_700": "SPColor.h",
		"::stappler::geom::Color::Green_800": "SPColor.h",
		"::stappler::geom::Color::Green_900": "SPColor.h",
		"::stappler::geom::Color::Green_A100": "SPColor.h",
		"::stappler::geom::Color::Green_A200": "SPColor.h",
		"::stappler::geom::Color::Green_A400": "SPColor.h",
		"::stappler::geom::Color::Green_A700": "SPColor.h",
		"::stappler::geom::Color::Grey_100": "SPColor.h",
		"::stappler::geom::Color::Grey_200": "SPColor.h",
		"::stappler::geom::Color::Grey_300": "SPColor.h",
		"::stappler::geom::Color::Grey_400": "SPColor.h",
		"::stappler::geom::Color::Grey_50": "SPColor.h",
		"::stappler::geom::Color::Grey_500": "SPColor.h",
		"::stappler::geom::Color::Grey_600": "SPColor.h",
		"::stappler::geom::Color::Grey_700": "SPColor.h",
		"::stappler::geom::Color::Grey_800": "SPColor.h",
		"::stappler::geom::Color::Grey_900": "SPColor.h",
		"::stappler::geom::Color::Indigo_100": "SPColor.h",
		"::stappler::geom::Color::Indigo_200": "SPColor.h",
		"::stappler::geom::Color::Indigo_300": "SPColor.h",
		"::stappler::geom::Color::Indigo_400": "SPColor.h",
		"::stappler::geom::Color::Indigo_50": "SPColor.h",
		"::stappler::geom::Color::Indigo_500": "SPColor.h",
		"::stappler::geom::Color::Indigo_600": "SPColor.h",
		"::stappler::geom::Color::Indigo_700": "SPColor.h",
		"::stappler::geom::Color::Indigo_800": "SPColor.h",
		"::stappler::geom::Color::Indigo_900": "SPColor.h",
		"::stappler::geom::Color::Indigo_A100": "SPColor.h",
		"::stappler::geom::Color::Indigo_A200": "SPColor.h",
		"::stappler::geom::Color::Indigo_A400": "SPColor.h",
		"::stappler::geom::Color::Indigo_A700": "SPColor.h",
		"::stappler::geom::Color::Level": "SPColor.h",
		"::stappler::geom::Color::LightBlue_100": "SPColor.h",
		"::stappler::geom::Color::LightBlue_200": "SPColor.h",
		"::stappler::geom::Color::LightBlue_300": "SPColor.h",
		"::stappler::geom::Color::LightBlue_400": "SPColor.h",
		"::stappler::geom::Color::LightBlue_50": "SPColor.h",
		"::stappler::geom::Color::LightBlue_500": "SPColor.h",
		"::stappler::geom::Color::LightBlue_600": "SPColor.h",
		"::stappler::geom::Color::LightBlue_700": "SPColor.h",
		"::stappler::geom::Color::LightBlue_800": "SPColor.h",
		"::stappler::geom::Color::LightBlue_900": "SPColor.h",
		"::stappler::geom::Color::LightBlue_A100": "SPColor.h",
		"::stappler::geom::Color::LightBlue_A200": "SPColor.h",
		"::stappler::geom::Color::LightBlue_A400": "SPColor.h",
		"::stappler::geom::Color::LightBlue_A700": "SPColor.h",
		"::stappler::geom::Color::LightGreen_100": "SPColor.h",
		"::stappler::geom::Color::LightGreen_200": "SPColor.h",
		"::stappler::geom::Color::LightGreen_300": "SPColor.h",
		"::stappler::geom::Color::LightGreen_400": "SPColor.h",
		"::stappler::geom::Color::LightGreen_50": "SPColor.h",
		"::stappler::geom::Color::LightGreen_500": "SPColor.h",
		"::stappler::geom::Color::LightGreen_600": "SPColor.h",
		"::stappler::geom::Color::LightGreen_700": "SPColor.h",
		"::stappler::geom::Color::LightGreen_800": "SPColor.h",
		"::stappler::geom::Color::LightGreen_900": "SPColor.h",
		"::stappler::geom::Color::LightGreen_A100": "SPColor.h",
		"::stappler::geom::Color::LightGreen_A200": "SPColor.h",
		"::stappler::geom::Color::LightGreen_A400": "SPColor.h",
		"::stappler::geom::Color::LightGreen_A700": "SPColor.h",
		"::stappler::geom::Color::Lime_100": "SPColor.h",
		"::stappler::geom::Color::Lime_200": "SPColor.h",
		"::stappler::geom::Color::Lime_300": "SPColor.h",
		"::stappler::geom::Color::Lime_400": "SPColor.h",
		"::stappler::geom::Color::Lime_50": "SPColor.h",
		"::stappler::geom::Color::Lime_500": "SPColor.h",
		"::stappler::geom::Color::Lime_600": "SPColor.h",
		"::stappler::geom::Color::Lime_700": "SPColor.h",
		"::stappler::geom::Color::Lime_800": "SPColor.h",
		"::stappler::geom::Color::Lime_900": "SPColor.h",
		"::stappler::geom::Color::Lime_A100": "SPColor.h",
		"::stappler::geom::Color::Lime_A200": "SPColor.h",
		"::stappler::geom::Color::Lime_A400": "SPColor.h",
		"::stappler::geom::Color::Lime_A700": "SPColor.h",
		"::stappler::geom::Color::Orange_100": "SPColor.h",
		"::stappler::geom::Color::Orange_200": "SPColor.h",
		"::stappler::geom::Color::Orange_300": "SPColor.h",
		"::stappler::geom::Color::Orange_400": "SPColor.h",
		"::stappler::geom::Color::Orange_50": "SPColor.h",
		"::stappler::geom::Color::Orange_500": "SPColor.h",
		"::stappler::geom::Color::Orange_600": "SPColor.h",
		"::stappler::geom::Color::Orange_700": "SPColor.h",
		"::stappler::geom::Color::Orange_800": "SPColor.h",
		"::stappler::geom::Color::Orange_900": "SPColor.h",
		"::stappler::geom::Color::Orange_A100": "SPColor.h",
		"::stappler::geom::Color::Orange_A200": "SPColor.h",
		"::stappler::geom::Color::Orange_A400": "SPColor.h",
		"::stappler::geom::Color::Orange_A700": "SPColor.h",
		"::stappler::geom::Color::Pink_100": "SPColor.h",
		"::stappler::geom::Color::Pink_200": "SPColor.h",
		"::stappler::geom::Color::Pink_300": "SPColor.h",
		"::stappler::geom::Color::Pink_400": "SPColor.h",
		"::stappler::geom::Color::Pink_50": "SPColor.h",
		"::stappler::geom::Color::Pink_500": "SPColor.h",
		"::stappler::geom::Color::Pink_600": "SPColor.h",
		"::stappler::geom::Color::Pink_700": "SPColor.h",
		"::stappler::geom::Color::Pink_800": "SPColor.h",
		"::stappler::geom::Color::Pink_900": "SPColor.h",
		"::stappler::geom::Color::Pink_A100": "SPColor.h",
		"::stappler::geom::Color::Pink_A200": "SPColor.h",
		"::stappler::geom::Color::Pink_A400": "SPColor.h",
		"::stappler::geom::Color::Pink_A700": "SPColor.h",
		"::stappler::geom::Color::Purple_100": "SPColor.h",
		"::stappler::geom::Color::Purple_200": "SPColor.h",
		"::stappler::geom::Color::Purple_300": "SPColor.h",
		"::stappler::geom::Color::Purple_400": "SPColor.h",
		"::stappler::geom::Color::Purple_50": "SPColor.h",
		"::stappler::geom::Color::Purple_500": "SPColor.h",
		"::stappler::geom::Color::Purple_600": "SPColor.h",
		"::stappler::geom::Color::Purple_700": "SPColor.h",
		"::stappler::geom::Color::Purple_800": "SPColor.h",
		"::stappler::geom::Color::Purple_900": "SPColor.h",
		"::stappler::geom::Color::Purple_A100": "SPColor.h",
		"::stappler::geom::Color::Purple_A200": "SPColor.h",
		"::stappler::geom::Color::Purple_A400": "SPColor.h",
		"::stappler::geom::Color::Purple_A700": "SPColor.h",
		"::stappler::geom::Color::Red_100": "SPColor.h",
		"::stappler::geom::Color::Red_200": "SPColor.h",
		"::stappler::geom::Color::Red_300": "SPColor.h",
		"::stappler::geom::Color::Red_400": "SPColor.h",
		"::stappler::geom::Color::Red_50": "SPColor.h",
		"::stappler::geom::Color::Red_500": "SPColor.h",
		"::stappler::geom::Color::Red_600": "SPColor.h",
		"::stappler::geom::Color::Red_700": "SPColor.h",
		"::stappler::geom::Color::Red_800": "SPColor.h",
		"::stappler::geom::Color::Red_900": "SPColor.h",
		"::stappler::geom::Color::Red_A100": "SPColor.h",
		"::stappler::geom::Color::Red_A200": "SPColor.h",
		"::stappler::geom::Color::Red_A400": "SPColor.h",
		"::stappler::geom::Color::Red_A700": "SPColor.h",
		"::stappler::geom::Color::Teal_100": "SPColor.h",
		"::stappler::geom::Color::Teal_200": "SPColor.h",
		"::stappler::geom::Color::Teal_300": "SPColor.h",
		"::stappler::geom::Color::Teal_400": "SPColor.h",
		"::stappler::geom::Color::Teal_50": "SPColor.h",
		"::stappler::geom::Color::Teal_500": "SPColor.h",
		"::stappler::geom::Color::Teal_600": "SPColor.h",
		"::stappler::geom::Color::Teal_700": "SPColor.h",
		"::stappler::geom::Color::Teal_800": "SPColor.h",
		"::stappler::geom::Color::Teal_900": "SPColor.h",
		"::stappler::geom::Color::Teal_A100": "SPColor.h",
		"::stappler::geom::Color::Teal_A200": "SPColor.h",
		"::stappler::geom::Color::Teal_A400": "SPColor.h",
		"::stappler::geom::Color::Teal_A700": "SPColor.h",
		"::stappler::geom::Color::Tone": "SPColor.h",
		"::stappler::geom::Color::White": "SPColor.h",
		"::stappler::geom::Color::Yellow_100": "SPColor.h",
		"::stappler::geom::Color::Yellow_200": "SPColor.h",
		"::stappler::geom::Color::Yellow_300": "SPColor.h",
		"::stappler::geom::Color::Yellow_400": "SPColor.h",
		"::stappler::geom::Color::Yellow_50": "SPColor.h",
		"::stappler::geom::Color::Yellow_500": "SPColor.h",
		"::stappler::geom::Color::Yellow_600": "SPColor.h",
		"::stappler::geom::Color::Yellow_700": "SPColor.h",
		"::stappler::geom::Color::Yellow_800": "SPColor.h",
		"::stappler::geom::Color::Yellow_900": "SPColor.h",
		"::stappler::geom::Color::Yellow_A100": "SPColor.h",
		"::stappler::geom::Color::Yellow_A200": "SPColor.h",
		"::stappler::geom::Color::Yellow_A400": "SPColor.h",
		"::stappler::geom::Color::Yellow_A700": "SPColor.h",
		"::stappler::geom::Color::_index": "SPColor.h",
		"::stappler::geom::Color::_value": "SPColor.h",
		"::stappler::geom::Color::asColor3B() const": "SPColor.h",
		"::stappler::geom::Color::asColor4B() const": "SPColor.h",
		"::stappler::geom::Color::asColor4F() const": "SPColor.h",
		"::stappler::geom::Color::b() const": "SPColor.h",
		"::stappler::geom::Color::darker(uint8_t) const": "SPColor.h",
		"::stappler::geom::Color::g() const": "SPColor.h",
		"::stappler::geom::Color::getById(uint16_t)": "SPColor.h",
		"::stappler::geom::Color::getColorByName(stappler::StringView const&,stappler::geom::Color const&)": "SPColor.h",
		"::stappler::geom::Color::getColorIndex(uint32_t)": "SPColor.h",
		"::stappler::geom::Color::index() const": "SPColor.h",
		"::stappler::geom::Color::level() const": "SPColor.h",
		"::stappler::geom::Color::lighter(uint8_t) const": "SPColor.h",
		"::stappler::geom::Color::medium() const": "SPColor.h",
		"::stappler::geom::Color::name<typename>() const": "SPColor.h",
		"::stappler::geom::Color::next() const": "SPColor.h",
		"::stappler::geom::Color::operator Color3B() const": "SPColor.h",
		"::stappler::geom::Color::operator Color4B() const": "SPColor.h",
		"::stappler::geom::Color::operator Color4F() const": "SPColor.h",
		"::stappler::geom::Color::operator!=(stappler::geom::Color const&) const": "SPColor.h",
		"::stappler::geom::Color::operator=(stappler::geom::Color const&)": "SPColor.h",
		"::stappler::geom::Color::operator=(stappler::geom::Color&&)": "SPColor.h",
		"::stappler::geom::Color::operator==(stappler::geom::Color const&) const": "SPColor.h",
		"::stappler::geom::Color::previous() const": "SPColor.h",
		"::stappler::geom::Color::progress(stappler::geom::Color const&,stappler::geom::Color const&,float)": "SPColor.h",
		"::stappler::geom::Color::r() const": "SPColor.h",
		"::stappler::geom::Color::specific(stappler::geom::Color::Level) const": "SPColor.h",
		"::stappler::geom::Color::specific(uint8_t) const": "SPColor.h",
		"::stappler::geom::Color::text() const": "SPColor.h",
		"::stappler::geom::Color::tone() const": "SPColor.h",
		"::stappler::geom::Color::value() const": "SPColor.h",
		"::stappler::geom::ColorMask": "SPColor.h",
		"::stappler::geom::DrawStyle": "SPTessLine.h",
		"::stappler::geom::Edge": "SPTessTypes.h",
		"::stappler::geom::Edge::Edge()": "SPTessTypes.h",
		"::stappler::geom::Edge::direction": "SPTessTypes.h",
		"::stappler::geom::Edge::getDstVec() const": "SPTessTypes.h",
		"::stappler::geom::Edge::getLeftOrg() const": "SPTessTypes.h",
		"::stappler::geom::Edge::getLeftVec() const": "SPTessTypes.h",
		"::stappler::geom::Edge::getLeftWinding() const": "SPTessTypes.h",
		"::stappler::geom::Edge::getNegative()": "SPTessTypes.h",
		"::stappler::geom::Edge::getOrgVec() const": "SPTessTypes.h",
		"::stappler::geom::Edge::getPostitive()": "SPTessTypes.h",
		"::stappler::geom::Edge::getRightOrg() const": "SPTessTypes.h",
		"::stappler::geom::Edge::getRightVec() const": "SPTessTypes.h",
		"::stappler::geom::Edge::getRightWinding() const": "SPTessTypes.h",
		"::stappler::geom::Edge::invalidated": "SPTessTypes.h",
		"::stappler::geom::Edge::inverted": "SPTessTypes.h",
		"::stappler::geom::Edge::left": "SPTessTypes.h",
		"::stappler::geom::Edge::node": "SPTessTypes.h",
		"::stappler::geom::Edge::right": "SPTessTypes.h",
		"::stappler::geom::Edge::updateInfo()": "SPTessTypes.h",
		"::stappler::geom::EdgeAllocBatch": "SPTessTypes.h",
		"::stappler::geom::EdgeAngle(stappler::geom::Vec2 const&)": "SPTessTypes.h",
		"::stappler::geom::EdgeAngle(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPTessTypes.h",
		"::stappler::geom::EdgeAngleIsBelowTolerance(float,float)": "SPTessTypes.h",
		"::stappler::geom::EdgeDict": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::EdgeDict(memory::pool_t*,uint32_t)": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::checkForIntersects(stappler::geom::HalfEdge*,stappler::geom::Vec2&,stappler::geom::IntersectionEvent&,float) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::checkForIntersects(stappler::geom::Vertex*,stappler::geom::Vec2&,stappler::geom::IntersectionEvent&,float) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::event": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::getEdgeBelow(stappler::geom::Edge const*) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::getEdgeBelow(stappler::geom::Vec2 const&,uint32_t) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::nodes": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::pool": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::pop(stappler::geom::EdgeDictNode const*)": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::push(stappler::geom::Edge*,int16_t)": "SPTessTypes.h",
		"::stappler::geom::EdgeDict::update(stappler::geom::Vertex*,float)": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::current() const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::dst() const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::dstX() const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::dstY() const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::edge": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::helper": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::horizontal": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::norm": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::operator<(stappler::geom::Edge const&) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::operator<(stappler::geom::EdgeDictNode const&) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::operator<(stappler::geom::Vec2 const&) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::operator<=(stappler::geom::EdgeDictNode const&) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::operator==(stappler::geom::EdgeDictNode const&) const": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::org": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::value": "SPTessTypes.h",
		"::stappler::geom::EdgeDictNode::windingAbove": "SPTessTypes.h",
		"::stappler::geom::EdgeDirection(stappler::geom::Vec2 const&)": "SPTessTypes.h",
		"::stappler::geom::EdgeGoesLeft(stappler::geom::HalfEdge const*)": "SPTessTypes.h",
		"::stappler::geom::EdgeGoesRight(stappler::geom::HalfEdge const*)": "SPTessTypes.h",
		"::stappler::geom::EdgeSetPrealloc": "SPTessTypes.h",
		"::stappler::geom::EmplaceCharInterface": "SPFontStyle.h",
		"::stappler::geom::EmplaceCharInterface::getHeight": "SPFontStyle.h",
		"::stappler::geom::EmplaceCharInterface::getWidth": "SPFontStyle.h",
		"::stappler::geom::EmplaceCharInterface::getX": "SPFontStyle.h",
		"::stappler::geom::EmplaceCharInterface::getY": "SPFontStyle.h",
		"::stappler::geom::EmplaceCharInterface::setTex": "SPFontStyle.h",
		"::stappler::geom::EmplaceCharInterface::setX": "SPFontStyle.h",
		"::stappler::geom::EmplaceCharInterface::setY": "SPFontStyle.h",
		"::stappler::geom::EnumSize": "SPFontStyle.h",
		"::stappler::geom::Extent2": "SPGeometry.h",
		"::stappler::geom::Extent2::Extent2()": "SPGeometry.h",
		"::stappler::geom::Extent2::Extent2(stappler::geom::Extent2 const&)": "SPGeometry.h",
		"::stappler::geom::Extent2::Extent2(stappler::geom::Size2 const&)": "SPGeometry.h",
		"::stappler::geom::Extent2::Extent2(stappler::geom::Vec2 const&)": "SPGeometry.h",
		"::stappler::geom::Extent2::Extent2(uint32_t,uint32_t)": "SPGeometry.h",
		"::stappler::geom::Extent2::ZERO": "SPGeometry.h",
		"::stappler::geom::Extent2::height": "SPGeometry.h",
		"::stappler::geom::Extent2::operator Size2() const": "SPGeometry.h",
		"::stappler::geom::Extent2::operator!=(stappler::geom::Extent2 const&) const": "SPGeometry.h",
		"::stappler::geom::Extent2::operator<=>(stappler::geom::Extent2 const&) const": "SPGeometry.h",
		"::stappler::geom::Extent2::operator=(stappler::geom::Extent2 const&)": "SPGeometry.h",
		"::stappler::geom::Extent2::operator=(stappler::geom::Size2 const&)": "SPGeometry.h",
		"::stappler::geom::Extent2::operator=(stappler::geom::Vec2 const&)": "SPGeometry.h",
		"::stappler::geom::Extent2::operator==(stappler::geom::Extent2 const&) const": "SPGeometry.h",
		"::stappler::geom::Extent2::width": "SPGeometry.h",
		"::stappler::geom::Extent3": "SPGeometry.h",
		"::stappler::geom::Extent3::Extent3()": "SPGeometry.h",
		"::stappler::geom::Extent3::Extent3(stappler::geom::Extent2 const&)": "SPGeometry.h",
		"::stappler::geom::Extent3::Extent3(stappler::geom::Extent2,uint32_t)": "SPGeometry.h",
		"::stappler::geom::Extent3::Extent3(stappler::geom::Extent3 const&)": "SPGeometry.h",
		"::stappler::geom::Extent3::Extent3(stappler::geom::Size3 const&)": "SPGeometry.h",
		"::stappler::geom::Extent3::Extent3(stappler::geom::Vec3 const&)": "SPGeometry.h",
		"::stappler::geom::Extent3::Extent3(uint32_t,uint32_t,uint32_t)": "SPGeometry.h",
		"::stappler::geom::Extent3::ZERO": "SPGeometry.h",
		"::stappler::geom::Extent3::depth": "SPGeometry.h",
		"::stappler::geom::Extent3::height": "SPGeometry.h",
		"::stappler::geom::Extent3::operator Size3() const": "SPGeometry.h",
		"::stappler::geom::Extent3::operator!=(stappler::geom::Extent3 const&) const": "SPGeometry.h",
		"::stappler::geom::Extent3::operator<=>(stappler::geom::Extent3 const&) const": "SPGeometry.h",
		"::stappler::geom::Extent3::operator=(stappler::geom::Extent2 const&)": "SPGeometry.h",
		"::stappler::geom::Extent3::operator=(stappler::geom::Extent3 const&)": "SPGeometry.h",
		"::stappler::geom::Extent3::operator=(stappler::geom::Size3 const&)": "SPGeometry.h",
		"::stappler::geom::Extent3::operator=(stappler::geom::Vec3 const&)": "SPGeometry.h",
		"::stappler::geom::Extent3::operator==(stappler::geom::Extent3 const&) const": "SPGeometry.h",
		"::stappler::geom::Extent3::width": "SPGeometry.h",
		"::stappler::geom::FaceEdge": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::_degenerate": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::_direction": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::_displaced": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::_next": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::_origin": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::_splitVertex": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::_value": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::_vertex": "SPTessTypes.h",
		"::stappler::geom::FaceEdge::foreach(Callback<void (const stappler::geom::FaceEdge &)> const&) const": "SPTessTypes.h",
		"::stappler::geom::FloatEq(float,float,float)": "SPTessTypes.h",
		"::stappler::geom::FontAtlasValue": "SPFontStyle.h",
		"::stappler::geom::FontAtlasValue::pos": "SPFontStyle.h",
		"::stappler::geom::FontAtlasValue::tex": "SPFontStyle.h",
		"::stappler::geom::FontGrade": "SPFontStyle.h",
		"::stappler::geom::FontGrade::Heavy": "SPFontStyle.h",
		"::stappler::geom::FontGrade::Normal": "SPFontStyle.h",
		"::stappler::geom::FontGrade::Reduced": "SPFontStyle.h",
		"::stappler::geom::FontGrade::Thin": "SPFontStyle.h",
		"::stappler::geom::FontLayoutId": "SPFontStyle.h",
		"::stappler::geom::FontLayoutParameters": "SPFontStyle.h",
		"::stappler::geom::FontLayoutParameters::fontGrade": "SPFontStyle.h",
		"::stappler::geom::FontLayoutParameters::fontStretch": "SPFontStyle.h",
		"::stappler::geom::FontLayoutParameters::fontStyle": "SPFontStyle.h",
		"::stappler::geom::FontLayoutParameters::fontWeight": "SPFontStyle.h",
		"::stappler::geom::FontLayoutParameters::operator!=(stappler::geom::FontLayoutParameters const&) const": "SPFontStyle.h",
		"::stappler::geom::FontLayoutParameters::operator==(stappler::geom::FontLayoutParameters const&) const": "SPFontStyle.h",
		"::stappler::geom::FontMetrics": "SPFontStyle.h",
		"::stappler::geom::FontMetrics::ascender": "SPFontStyle.h",
		"::stappler::geom::FontMetrics::descender": "SPFontStyle.h",
		"::stappler::geom::FontMetrics::height": "SPFontStyle.h",
		"::stappler::geom::FontMetrics::size": "SPFontStyle.h",
		"::stappler::geom::FontMetrics::underlinePosition": "SPFontStyle.h",
		"::stappler::geom::FontMetrics::underlineThickness": "SPFontStyle.h",
		"::stappler::geom::FontParameters": "SPFontStyle.h",
		"::stappler::geom::FontParameters::create(stappler::StringView,memory::pool_t*)": "SPFontStyle.h",
		"::stappler::geom::FontParameters::fontFamily": "SPFontStyle.h",
		"::stappler::geom::FontParameters::fontVariant": "SPFontStyle.h",
		"::stappler::geom::FontParameters::getConfigName<typename>(bool) const": "SPFontStyle.h",
		"::stappler::geom::FontParameters::getFontConfigName<typename>(stappler::StringView,stappler::geom::FontSize,stappler::geom::FontStyle,stappler::geom::FontWeight,stappler::geom::FontStretch,stappler::geom::FontGrade,stappler::geom::FontVariant,bool)": "SPFontStyle.h",
		"::stappler::geom::FontParameters::getSmallCaps() const": "SPFontStyle.h",
		"::stappler::geom::FontParameters::listStyleType": "SPFontStyle.h",
		"::stappler::geom::FontParameters::operator!=(stappler::geom::FontParameters const&) const": "SPFontStyle.h",
		"::stappler::geom::FontParameters::operator==(stappler::geom::FontParameters const&) const": "SPFontStyle.h",
		"::stappler::geom::FontParameters::persistent": "SPFontStyle.h",
		"::stappler::geom::FontSize": "SPFontStyle.h",
		"::stappler::geom::FontSize::FontSize()": "SPFontStyle.h",
		"::stappler::geom::FontSize::FontSize(stappler::geom::FontSize const&)": "SPFontStyle.h",
		"::stappler::geom::FontSize::FontSize(uint16_t)": "SPFontStyle.h",
		"::stappler::geom::FontSize::Large": "SPFontStyle.h",
		"::stappler::geom::FontSize::Medium": "SPFontStyle.h",
		"::stappler::geom::FontSize::Small": "SPFontStyle.h",
		"::stappler::geom::FontSize::XLarge": "SPFontStyle.h",
		"::stappler::geom::FontSize::XSmall": "SPFontStyle.h",
		"::stappler::geom::FontSize::XXLarge": "SPFontStyle.h",
		"::stappler::geom::FontSize::XXSmall": "SPFontStyle.h",
		"::stappler::geom::FontSize::get() const": "SPFontStyle.h",
		"::stappler::geom::FontSize::make(float)": "SPFontStyle.h",
		"::stappler::geom::FontSize::operator!=(stappler::geom::FontSize const&) const": "SPFontStyle.h",
		"::stappler::geom::FontSize::operator*(float) const": "SPFontStyle.h",
		"::stappler::geom::FontSize::operator-=(stappler::geom::FontSize)": "SPFontStyle.h",
		"::stappler::geom::FontSize::operator/(float) const": "SPFontStyle.h",
		"::stappler::geom::FontSize::operator==(stappler::geom::FontSize const&) const": "SPFontStyle.h",
		"::stappler::geom::FontSize::progress(stappler::geom::FontSize,stappler::geom::FontSize,float)": "SPFontStyle.h",
		"::stappler::geom::FontSize::scale(float) const": "SPFontStyle.h",
		"::stappler::geom::FontSize::val() const": "SPFontStyle.h",
		"::stappler::geom::FontSize::value": "SPFontStyle.h",
		"::stappler::geom::FontSpecializationVector": "SPFontStyle.h",
		"::stappler::geom::FontSpecializationVector::density": "SPFontStyle.h",
		"::stappler::geom::FontSpecializationVector::fontSize": "SPFontStyle.h",
		"::stappler::geom::FontSpecializationVector::getSpecializationArgs<typename>() const": "SPFontStyle.h",
		"::stappler::geom::FontSpecializationVector::operator!=(stappler::geom::FontSpecializationVector const&) const": "SPFontStyle.h",
		"::stappler::geom::FontSpecializationVector::operator==(stappler::geom::FontSpecializationVector const&) const": "SPFontStyle.h",
		"::stappler::geom::FontStretch": "SPFontStyle.h",
		"::stappler::geom::FontStretch::Condensed": "SPFontStyle.h",
		"::stappler::geom::FontStretch::Expanded": "SPFontStyle.h",
		"::stappler::geom::FontStretch::ExtraCondensed": "SPFontStyle.h",
		"::stappler::geom::FontStretch::ExtraExpanded": "SPFontStyle.h",
		"::stappler::geom::FontStretch::Normal": "SPFontStyle.h",
		"::stappler::geom::FontStretch::SemiCondensed": "SPFontStyle.h",
		"::stappler::geom::FontStretch::SemiExpanded": "SPFontStyle.h",
		"::stappler::geom::FontStretch::UltraCondensed": "SPFontStyle.h",
		"::stappler::geom::FontStretch::UltraExpanded": "SPFontStyle.h",
		"::stappler::geom::FontStyle": "SPFontStyle.h",
		"::stappler::geom::FontStyle::FromDegrees(float)": "SPFontStyle.h",
		"::stappler::geom::FontStyle::Italic": "SPFontStyle.h",
		"::stappler::geom::FontStyle::Normal": "SPFontStyle.h",
		"::stappler::geom::FontStyle::Oblique": "SPFontStyle.h",
		"::stappler::geom::FontVariableAxis": "SPFontStyle.h",
		"::stappler::geom::FontVariant": "SPFontStyle.h",
		"::stappler::geom::FontWeight": "SPFontStyle.h",
		"::stappler::geom::FontWeight::Black": "SPFontStyle.h",
		"::stappler::geom::FontWeight::Bold": "SPFontStyle.h",
		"::stappler::geom::FontWeight::ExtraBold": "SPFontStyle.h",
		"::stappler::geom::FontWeight::ExtraLight": "SPFontStyle.h",
		"::stappler::geom::FontWeight::Heavy": "SPFontStyle.h",
		"::stappler::geom::FontWeight::Light": "SPFontStyle.h",
		"::stappler::geom::FontWeight::Medium": "SPFontStyle.h",
		"::stappler::geom::FontWeight::Normal": "SPFontStyle.h",
		"::stappler::geom::FontWeight::Regular": "SPFontStyle.h",
		"::stappler::geom::FontWeight::SemiBold": "SPFontStyle.h",
		"::stappler::geom::FontWeight::Thin": "SPFontStyle.h",
		"::stappler::geom::HalfEdge": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::_leftNext": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::_mark": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::_originNext": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::_realWinding": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::_winding": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::copyOrigin(stappler::geom::HalfEdge const*)": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::edgeOffset": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::foreachOnFace(Callback<void (const stappler::geom::HalfEdge &)> const&) const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::foreachOnFace(Callback<void (stappler::geom::HalfEdge &)> const&)": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::foreachOnVertex(Callback<void (const stappler::geom::HalfEdge &)> const&) const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::foreachOnVertex(Callback<void (stappler::geom::HalfEdge &)> const&)": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getDestinationNext() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getDestinationPrev() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getDirection() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getDstVec() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getEdge() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getIndex() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getLeftLoopNext() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getLeftLoopPrev() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getLength() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getNormVec() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getOrgVec() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getOriginNext() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getOriginPrev() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getRightLoopNext() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::getRightLoopPrev() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::goesLeft() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::goesRight() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::isRight": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::joinEdgeLoops(stappler::geom::HalfEdge*,stappler::geom::HalfEdge*)": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::origin": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::setOrigin(stappler::geom::Vertex const*)": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::splitEdgeLoops(stappler::geom::HalfEdge*,stappler::geom::HalfEdge*,stappler::geom::Vertex*)": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::sym() const": "SPTessTypes.h",
		"::stappler::geom::HalfEdge::vertex": "SPTessTypes.h",
		"::stappler::geom::Helper": "SPTessTypes.h",
		"::stappler::geom::Helper::e1": "SPTessTypes.h",
		"::stappler::geom::Helper::e2": "SPTessTypes.h",
		"::stappler::geom::Helper::type": "SPTessTypes.h",
		"::stappler::geom::Hyphens": "SPFontStyle.h",
		"::stappler::geom::IntersectionEvent": "SPTessTypes.h",
		"::stappler::geom::LineCup": "SPTessLine.h",
		"::stappler::geom::LineDrawer": "SPTessLine.h",
		"::stappler::geom::LineDrawer::BufferNode": "SPTessLine.h",
		"::stappler::geom::LineDrawer::BufferNode::next": "SPTessLine.h",
		"::stappler::geom::LineDrawer::BufferNode::point": "SPTessLine.h",
		"::stappler::geom::LineDrawer::BufferNode::prev": "SPTessLine.h",
		"::stappler::geom::LineDrawer::LineDrawer(float,Rc<stappler::geom::Tesselator>&&,Rc<stappler::geom::Tesselator>&&,float,stappler::geom::LineJoin,stappler::geom::LineCup)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::_miterLimit": "SPTessLine.h",
		"::stappler::geom::LineDrawer::angularError": "SPTessLine.h",
		"::stappler::geom::LineDrawer::buffer": "SPTessLine.h",
		"::stappler::geom::LineDrawer::count": "SPTessLine.h",
		"::stappler::geom::LineDrawer::distanceError": "SPTessLine.h",
		"::stappler::geom::LineDrawer::drawArc(float,float,float,bool,bool,float,float)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::drawBegin(float,float)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::drawClose(bool)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::drawCubicBezier(float,float,float,float,float,float)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::drawLine(float,float)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::drawQuadBezier(float,float,float,float)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::fill": "SPTessLine.h",
		"::stappler::geom::LineDrawer::fillCursor": "SPTessLine.h",
		"::stappler::geom::LineDrawer::lineCup": "SPTessLine.h",
		"::stappler::geom::LineDrawer::lineJoin": "SPTessLine.h",
		"::stappler::geom::LineDrawer::origin": "SPTessLine.h",
		"::stappler::geom::LineDrawer::push(float,float)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::pushStroke(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPTessLine.h",
		"::stappler::geom::LineDrawer::stroke": "SPTessLine.h",
		"::stappler::geom::LineDrawer::strokeCursor": "SPTessLine.h",
		"::stappler::geom::LineDrawer::strokeWidth": "SPTessLine.h",
		"::stappler::geom::LineDrawer::style": "SPTessLine.h",
		"::stappler::geom::LineDrawer::target": "SPTessLine.h",
		"::stappler::geom::LineJoin": "SPTessLine.h",
		"::stappler::geom::ListStyleType": "SPFontStyle.h",
		"::stappler::geom::Margin": "SPPadding.h",
		"::stappler::geom::Mat4": "SPMat4.h",
		"::stappler::geom::Mat4::IDENTITY": "SPMat4.h",
		"::stappler::geom::Mat4::INVALID": "SPMat4.h",
		"::stappler::geom::Mat4::Mat4()": "SPMat4.h",
		"::stappler::geom::Mat4::Mat4(float,float,float,float,float,float)": "SPMat4.h",
		"::stappler::geom::Mat4::Mat4(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)": "SPMat4.h",
		"::stappler::geom::Mat4::Mat4(stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::ROTATION_Z_180": "SPMat4.h",
		"::stappler::geom::Mat4::ROTATION_Z_270": "SPMat4.h",
		"::stappler::geom::Mat4::ROTATION_Z_90": "SPMat4.h",
		"::stappler::geom::Mat4::ZERO": "SPMat4.h",
		"::stappler::geom::Mat4::add(float)": "SPMat4.h",
		"::stappler::geom::Mat4::add(float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::add(stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::add(stappler::geom::Mat4 const&,stappler::geom::Mat4 const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createBillboard(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createBillboard(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createLookAt(float,float,float,float,float,float,float,float,float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createLookAt(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createOrthographic(float,float,float,float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createOrthographicOffCenter(float,float,float,float,float,float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createPerspective(float,float,float,float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createRotation(stappler::geom::Quaternion const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createRotation(stappler::geom::Vec3 const&,float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createRotationX(float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createRotationY(float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createRotationZ(float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createScale(float,float,float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createScale(stappler::geom::Vec3 const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createTranslation(float,float,float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::createTranslation(stappler::geom::Vec3 const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::decompose(float*,float*,float*) const": "SPMat4.h",
		"::stappler::geom::Mat4::decompose(stappler::geom::Vec3*,stappler::geom::Quaternion*,stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::determinant() const": "SPMat4.h",
		"::stappler::geom::Mat4::getBackVector(stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getDownVector(stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getForwardVector(stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getInversed() const": "SPMat4.h",
		"::stappler::geom::Mat4::getLeftVector(stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getNegated() const": "SPMat4.h",
		"::stappler::geom::Mat4::getRightVector(stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getRotation(float*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getRotation(stappler::geom::Quaternion*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getScale(float*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getScale(stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getTranslation(float*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getTranslation(stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::getTransposed() const": "SPMat4.h",
		"::stappler::geom::Mat4::getUpVector(stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::inverse()": "SPMat4.h",
		"::stappler::geom::Mat4::isIdentity() const": "SPMat4.h",
		"::stappler::geom::Mat4::m": "SPMat4.h",
		"::stappler::geom::Mat4::multiply(float)": "SPMat4.h",
		"::stappler::geom::Mat4::multiply(float,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::multiply(stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::multiply(stappler::geom::Mat4 const&,float,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::multiply(stappler::geom::Mat4 const&,stappler::geom::Mat4 const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::negate()": "SPMat4.h",
		"::stappler::geom::Mat4::operator!=(stappler::geom::Mat4 const&) const": "SPMat4.h",
		"::stappler::geom::Mat4::operator*(stappler::geom::Mat4 const&) const": "SPMat4.h",
		"::stappler::geom::Mat4::operator*=(stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::operator+(stappler::geom::Mat4 const&) const": "SPMat4.h",
		"::stappler::geom::Mat4::operator+=(stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::operator-() const": "SPMat4.h",
		"::stappler::geom::Mat4::operator-(stappler::geom::Mat4 const&) const": "SPMat4.h",
		"::stappler::geom::Mat4::operator-=(stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::operator==(stappler::geom::Mat4 const&) const": "SPMat4.h",
		"::stappler::geom::Mat4::rotate(stappler::geom::Quaternion const&)": "SPMat4.h",
		"::stappler::geom::Mat4::rotate(stappler::geom::Quaternion const&,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::rotate(stappler::geom::Vec3 const&,float)": "SPMat4.h",
		"::stappler::geom::Mat4::rotate(stappler::geom::Vec3 const&,float,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::rotateX(float)": "SPMat4.h",
		"::stappler::geom::Mat4::rotateX(float,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::rotateY(float)": "SPMat4.h",
		"::stappler::geom::Mat4::rotateY(float,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::rotateZ(float)": "SPMat4.h",
		"::stappler::geom::Mat4::rotateZ(float,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::scale(float)": "SPMat4.h",
		"::stappler::geom::Mat4::scale(float,float,float)": "SPMat4.h",
		"::stappler::geom::Mat4::scale(float,float,float,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::scale(float,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::scale(stappler::geom::Vec3 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::scale(stappler::geom::Vec3 const&,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::subtract(stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::subtract(stappler::geom::Mat4 const&,stappler::geom::Mat4 const&,stappler::geom::Mat4*)": "SPMat4.h",
		"::stappler::geom::Mat4::transformPoint(stappler::geom::Vec2 const&) const": "SPMat4.h",
		"::stappler::geom::Mat4::transformPoint(stappler::geom::Vec2*) const": "SPMat4.h",
		"::stappler::geom::Mat4::transformVector(float,float,float,float,float*) const": "SPMat4.h",
		"::stappler::geom::Mat4::transformVector(float,float,float,float,stappler::geom::Vec4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::transformVector(stappler::geom::Vec4 const&,stappler::geom::Vec3*) const": "SPMat4.h",
		"::stappler::geom::Mat4::transformVector(stappler::geom::Vec4 const&,stappler::geom::Vec4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::transformVector(stappler::geom::Vec4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::translate(float,float,float)": "SPMat4.h",
		"::stappler::geom::Mat4::translate(float,float,float,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::translate(stappler::geom::Vec3 const&)": "SPMat4.h",
		"::stappler::geom::Mat4::translate(stappler::geom::Vec3 const&,stappler::geom::Mat4*) const": "SPMat4.h",
		"::stappler::geom::Mat4::transpose()": "SPMat4.h",
		"::stappler::geom::Metric": "SPFontStyle.h",
		"::stappler::geom::Metric::Metric()": "SPFontStyle.h",
		"::stappler::geom::Metric::Metric(float,stappler::geom::Metric::Units)": "SPFontStyle.h",
		"::stappler::geom::Metric::Units": "SPFontStyle.h",
		"::stappler::geom::Metric::isAuto() const": "SPFontStyle.h",
		"::stappler::geom::Metric::isFixed() const": "SPFontStyle.h",
		"::stappler::geom::Metric::metric": "SPFontStyle.h",
		"::stappler::geom::Metric::readStyleValue(stappler::StringView,bool,bool)": "SPFontStyle.h",
		"::stappler::geom::Metric::value": "SPFontStyle.h",
		"::stappler::geom::ObjectAllocator": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::ObjectAllocator(memory::pool_t*)": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_boundaries": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_edgesOfInterests": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_exportVertexes": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_faceEdges": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_freeEdges": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_freeFaces": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_freeVertexes": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_pool": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_vertexOffset": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::_vertexes": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::allocEdge()": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::allocFaceEdge()": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::allocVertex()": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::preallocateEdges(uint32_t)": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::preallocateFaceEdges(uint32_t)": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::preallocateVertexes(uint32_t)": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::releaseEdge(stappler::geom::Edge*)": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::releaseVertex(stappler::geom::Vertex*)": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::releaseVertex(uint32_t,uint32_t)": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::removeEdgeFromVec(memory::vector<HalfEdge *>&,stappler::geom::HalfEdge*)": "SPTessTypes.h",
		"::stappler::geom::ObjectAllocator::trimVertexes()": "SPTessTypes.h",
		"::stappler::geom::Padding": "SPPadding.h",
		"::stappler::geom::Padding::Padding()": "SPPadding.h",
		"::stappler::geom::Padding::Padding(float)": "SPPadding.h",
		"::stappler::geom::Padding::Padding(float,float)": "SPPadding.h",
		"::stappler::geom::Padding::Padding(float,float,float)": "SPPadding.h",
		"::stappler::geom::Padding::Padding(float,float,float,float)": "SPPadding.h",
		"::stappler::geom::Padding::Padding(stappler::geom::Padding const&)": "SPPadding.h",
		"::stappler::geom::Padding::bottom": "SPPadding.h",
		"::stappler::geom::Padding::getBottomLeft(stappler::geom::Size2 const&) const": "SPPadding.h",
		"::stappler::geom::Padding::getBottomRight(stappler::geom::Size2 const&) const": "SPPadding.h",
		"::stappler::geom::Padding::getTopLeft(stappler::geom::Size2 const&) const": "SPPadding.h",
		"::stappler::geom::Padding::getTopRight(stappler::geom::Size2 const&) const": "SPPadding.h",
		"::stappler::geom::Padding::horizontal() const": "SPPadding.h",
		"::stappler::geom::Padding::left": "SPPadding.h",
		"::stappler::geom::Padding::operator!=(stappler::geom::Padding const&) const": "SPPadding.h",
		"::stappler::geom::Padding::operator*(float)": "SPPadding.h",
		"::stappler::geom::Padding::operator*=(float)": "SPPadding.h",
		"::stappler::geom::Padding::operator/(float)": "SPPadding.h",
		"::stappler::geom::Padding::operator/=(float)": "SPPadding.h",
		"::stappler::geom::Padding::operator==(stappler::geom::Padding const&) const": "SPPadding.h",
		"::stappler::geom::Padding::right": "SPPadding.h",
		"::stappler::geom::Padding::set(float)": "SPPadding.h",
		"::stappler::geom::Padding::set(float,float)": "SPPadding.h",
		"::stappler::geom::Padding::set(float,float,float)": "SPPadding.h",
		"::stappler::geom::Padding::set(float,float,float,float)": "SPPadding.h",
		"::stappler::geom::Padding::setBottom(float)": "SPPadding.h",
		"::stappler::geom::Padding::setLeft(float)": "SPPadding.h",
		"::stappler::geom::Padding::setRight(float)": "SPPadding.h",
		"::stappler::geom::Padding::setTop(float)": "SPPadding.h",
		"::stappler::geom::Padding::top": "SPPadding.h",
		"::stappler::geom::Padding::vertical() const": "SPPadding.h",
		"::stappler::geom::Quaternion": "SPQuaternion.h",
		"::stappler::geom::Quaternion::IDENTITY": "SPQuaternion.h",
		"::stappler::geom::Quaternion::Quaternion()": "SPQuaternion.h",
		"::stappler::geom::Quaternion::Quaternion(float,float,float,float)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::Quaternion(stappler::geom::Mat4 const&)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::Quaternion(stappler::geom::Quaternion const&)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::Quaternion(stappler::geom::Vec3 const&)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::Quaternion(stappler::geom::Vec3 const&,float)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::ZERO": "SPQuaternion.h",
		"::stappler::geom::Quaternion::conjugate()": "SPQuaternion.h",
		"::stappler::geom::Quaternion::getConjugated() const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::getInversed() const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::getNormalized() const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::inverse()": "SPQuaternion.h",
		"::stappler::geom::Quaternion::isIdentity() const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::isZero() const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::lerp(stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,float,stappler::geom::Quaternion*)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::multiply(stappler::geom::Quaternion const&)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::multiply(stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,stappler::geom::Quaternion*)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::normalize()": "SPQuaternion.h",
		"::stappler::geom::Quaternion::operator!=(stappler::geom::Quaternion const&) const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::operator*(stappler::geom::Quaternion const&) const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::operator*(stappler::geom::Vec3 const&) const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::operator*=(stappler::geom::Quaternion const&)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::operator==(stappler::geom::Quaternion const&) const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::slerp(stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,float,stappler::geom::Quaternion*)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::squad(stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,stappler::geom::Quaternion const&,float,stappler::geom::Quaternion*)": "SPQuaternion.h",
		"::stappler::geom::Quaternion::toAxisAngle(stappler::geom::Vec3*) const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::toEulerAngles() const": "SPQuaternion.h",
		"::stappler::geom::Quaternion::w": "SPQuaternion.h",
		"::stappler::geom::Quaternion::x": "SPQuaternion.h",
		"::stappler::geom::Quaternion::y": "SPQuaternion.h",
		"::stappler::geom::Quaternion::z": "SPQuaternion.h",
		"::stappler::geom::QueueHandle": "SPTessTypes.h",
		"::stappler::geom::Rect": "SPGeometry.h",
		"::stappler::geom::Rect::Rect()": "SPGeometry.h",
		"::stappler::geom::Rect::Rect(float,float,float,float)": "SPGeometry.h",
		"::stappler::geom::Rect::Rect(stappler::geom::Rect const&)": "SPGeometry.h",
		"::stappler::geom::Rect::Rect(stappler::geom::Vec2 const&,stappler::geom::Size2 const&)": "SPGeometry.h",
		"::stappler::geom::Rect::Rect<typename>(stappler::geom::Rect const&,Functor const&)": "SPGeometry.h",
		"::stappler::geom::Rect::ZERO": "SPGeometry.h",
		"::stappler::geom::Rect::containsPoint(stappler::geom::Vec2 const&) const": "SPGeometry.h",
		"::stappler::geom::Rect::equals(stappler::geom::Rect const&) const": "SPGeometry.h",
		"::stappler::geom::Rect::getMaxX() const": "SPGeometry.h",
		"::stappler::geom::Rect::getMaxY() const": "SPGeometry.h",
		"::stappler::geom::Rect::getMidX() const": "SPGeometry.h",
		"::stappler::geom::Rect::getMidY() const": "SPGeometry.h",
		"::stappler::geom::Rect::getMinX() const": "SPGeometry.h",
		"::stappler::geom::Rect::getMinY() const": "SPGeometry.h",
		"::stappler::geom::Rect::intersectsCircle(stappler::geom::Vec2 const&,float) const": "SPGeometry.h",
		"::stappler::geom::Rect::intersectsRect(stappler::geom::Rect const&) const": "SPGeometry.h",
		"::stappler::geom::Rect::merge(stappler::geom::Rect const&)": "SPGeometry.h",
		"::stappler::geom::Rect::operator=(stappler::geom::Rect const&)": "SPGeometry.h",
		"::stappler::geom::Rect::origin": "SPGeometry.h",
		"::stappler::geom::Rect::size": "SPGeometry.h",
		"::stappler::geom::Rect::unionWithRect(stappler::geom::Rect const&) const": "SPGeometry.h",
		"::stappler::geom::Size2": "SPGeometry.h",
		"::stappler::geom::Size2::Size2()": "SPGeometry.h",
		"::stappler::geom::Size2::Size2(float,float)": "SPGeometry.h",
		"::stappler::geom::Size2::Size2(stappler::geom::Size2 const&)": "SPGeometry.h",
		"::stappler::geom::Size2::Size2(stappler::geom::Vec2 const&)": "SPGeometry.h",
		"::stappler::geom::Size2::Size2<typename>(stappler::geom::Size2 const&,Functor const&)": "SPGeometry.h",
		"::stappler::geom::Size2::ZERO": "SPGeometry.h",
		"::stappler::geom::Size2::fuzzyEquals(stappler::geom::Size2 const&,float) const": "SPGeometry.h",
		"::stappler::geom::Size2::height": "SPGeometry.h",
		"::stappler::geom::Size2::operator Vec2() const": "SPGeometry.h",
		"::stappler::geom::Size2::operator*(float) const": "SPGeometry.h",
		"::stappler::geom::Size2::operator+(stappler::geom::Size2 const&) const": "SPGeometry.h",
		"::stappler::geom::Size2::operator-(stappler::geom::Size2 const&) const": "SPGeometry.h",
		"::stappler::geom::Size2::operator/(float) const": "SPGeometry.h",
		"::stappler::geom::Size2::operator=(stappler::geom::Size2 const&)": "SPGeometry.h",
		"::stappler::geom::Size2::operator=(stappler::geom::Vec2 const&)": "SPGeometry.h",
		"::stappler::geom::Size2::setSize(float,float)": "SPGeometry.h",
		"::stappler::geom::Size2::width": "SPGeometry.h",
		"::stappler::geom::Size3": "SPGeometry.h",
		"::stappler::geom::Size3::Size3()": "SPGeometry.h",
		"::stappler::geom::Size3::Size3(float,float,float)": "SPGeometry.h",
		"::stappler::geom::Size3::Size3(stappler::geom::Size3 const&)": "SPGeometry.h",
		"::stappler::geom::Size3::Size3(stappler::geom::Vec3 const&)": "SPGeometry.h",
		"::stappler::geom::Size3::Size3<typename>(stappler::geom::Size3 const&,Functor const&)": "SPGeometry.h",
		"::stappler::geom::Size3::ZERO": "SPGeometry.h",
		"::stappler::geom::Size3::depth": "SPGeometry.h",
		"::stappler::geom::Size3::fuzzyEquals(stappler::geom::Size3 const&,float) const": "SPGeometry.h",
		"::stappler::geom::Size3::height": "SPGeometry.h",
		"::stappler::geom::Size3::operator Vec3() const": "SPGeometry.h",
		"::stappler::geom::Size3::operator*(float) const": "SPGeometry.h",
		"::stappler::geom::Size3::operator+(stappler::geom::Size3 const&) const": "SPGeometry.h",
		"::stappler::geom::Size3::operator-(stappler::geom::Size3 const&) const": "SPGeometry.h",
		"::stappler::geom::Size3::operator/(float) const": "SPGeometry.h",
		"::stappler::geom::Size3::operator=(stappler::geom::Size3 const&)": "SPGeometry.h",
		"::stappler::geom::Size3::operator=(stappler::geom::Vec3 const&)": "SPGeometry.h",
		"::stappler::geom::Size3::width": "SPGeometry.h",
		"::stappler::geom::SpriteAnchor": "SPFontStyle.h",
		"::stappler::geom::TessResult": "SPTess.h",
		"::stappler::geom::TessResult::nfaces": "SPTess.h",
		"::stappler::geom::TessResult::nvertexes": "SPTess.h",
		"::stappler::geom::TessResult::pushTriangle": "SPTess.h",
		"::stappler::geom::TessResult::pushVertex": "SPTess.h",
		"::stappler::geom::TessResult::target": "SPTess.h",
		"::stappler::geom::TessVerboseInfo": "SPTessTypes.h",
		"::stappler::geom::Tesselator": "SPTess.h",
		"::stappler::geom::Tesselator::Cursor": "SPTess.h",
		"::stappler::geom::Tesselator::Cursor::closed": "SPTess.h",
		"::stappler::geom::Tesselator::Cursor::count": "SPTess.h",
		"::stappler::geom::Tesselator::Cursor::edge": "SPTess.h",
		"::stappler::geom::Tesselator::Cursor::isClockwise": "SPTess.h",
		"::stappler::geom::Tesselator::Cursor::origin": "SPTess.h",
		"::stappler::geom::Tesselator::Cursor::root": "SPTess.h",
		"::stappler::geom::Tesselator::RelocateRule": "SPTess.h",
		"::stappler::geom::Tesselator::_data": "SPTess.h",
		"::stappler::geom::Tesselator::beginContour(bool)": "SPTess.h",
		"::stappler::geom::Tesselator::closeContour(stappler::geom::Tesselator::Cursor&)": "SPTess.h",
		"::stappler::geom::Tesselator::closeStrokeContour(stappler::geom::Tesselator::Cursor&)": "SPTess.h",
		"::stappler::geom::Tesselator::getAntialiasValue() const": "SPTess.h",
		"::stappler::geom::Tesselator::getRelocateRule() const": "SPTess.h",
		"::stappler::geom::Tesselator::getWindingRule() const": "SPTess.h",
		"::stappler::geom::Tesselator::init(memory::pool_t*)": "SPTess.h",
		"::stappler::geom::Tesselator::preallocate(uint32_t)": "SPTess.h",
		"::stappler::geom::Tesselator::prepare(stappler::geom::TessResult&)": "SPTess.h",
		"::stappler::geom::Tesselator::pushStrokeBottom(stappler::geom::Tesselator::Cursor&,stappler::geom::Vec2 const&)": "SPTess.h",
		"::stappler::geom::Tesselator::pushStrokeTop(stappler::geom::Tesselator::Cursor&,stappler::geom::Vec2 const&)": "SPTess.h",
		"::stappler::geom::Tesselator::pushStrokeVertex(stappler::geom::Tesselator::Cursor&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPTess.h",
		"::stappler::geom::Tesselator::pushVertex(stappler::geom::Tesselator::Cursor&,stappler::geom::Vec2 const&)": "SPTess.h",
		"::stappler::geom::Tesselator::setAntialiasValue(float)": "SPTess.h",
		"::stappler::geom::Tesselator::setRelocateRule(stappler::geom::Tesselator::RelocateRule)": "SPTess.h",
		"::stappler::geom::Tesselator::setWindingRule(stappler::geom::Winding)": "SPTess.h",
		"::stappler::geom::Tesselator::write(stappler::geom::TessResult&)": "SPTess.h",
		"::stappler::geom::Tesselator::~Tesselator()": "SPTess.h",
		"::stappler::geom::TextAlign": "SPFontStyle.h",
		"::stappler::geom::TextDecoration": "SPFontStyle.h",
		"::stappler::geom::TextParameters": "SPFontStyle.h",
		"::stappler::geom::TextParameters::color": "SPFontStyle.h",
		"::stappler::geom::TextParameters::hyphens": "SPFontStyle.h",
		"::stappler::geom::TextParameters::opacity": "SPFontStyle.h",
		"::stappler::geom::TextParameters::operator!=(stappler::geom::TextParameters const&) const": "SPFontStyle.h",
		"::stappler::geom::TextParameters::operator==(stappler::geom::TextParameters const&) const": "SPFontStyle.h",
		"::stappler::geom::TextParameters::textDecoration": "SPFontStyle.h",
		"::stappler::geom::TextParameters::textTransform": "SPFontStyle.h",
		"::stappler::geom::TextParameters::verticalAlign": "SPFontStyle.h",
		"::stappler::geom::TextParameters::whiteSpace": "SPFontStyle.h",
		"::stappler::geom::TextTransform": "SPFontStyle.h",
		"::stappler::geom::TransformRect(stappler::geom::Rect const&,stappler::geom::Mat4 const&)": "SPGeometry.h",
		"::stappler::geom::URect": "SPGeometry.h",
		"::stappler::geom::URect::URect()": "SPGeometry.h",
		"::stappler::geom::URect::URect(stappler::geom::UVec2 const&,stappler::geom::Extent2 const&)": "SPGeometry.h",
		"::stappler::geom::URect::URect(uint32_t,uint32_t,uint32_t,uint32_t)": "SPGeometry.h",
		"::stappler::geom::URect::containsPoint(stappler::geom::UVec2 const&) const": "SPGeometry.h",
		"::stappler::geom::URect::getMaxX() const": "SPGeometry.h",
		"::stappler::geom::URect::getMaxY() const": "SPGeometry.h",
		"::stappler::geom::URect::getMidX() const": "SPGeometry.h",
		"::stappler::geom::URect::getMidY() const": "SPGeometry.h",
		"::stappler::geom::URect::getMinX() const": "SPGeometry.h",
		"::stappler::geom::URect::getMinY() const": "SPGeometry.h",
		"::stappler::geom::URect::height": "SPGeometry.h",
		"::stappler::geom::URect::intersectsRect(stappler::geom::URect const&) const": "SPGeometry.h",
		"::stappler::geom::URect::operator!=(stappler::geom::URect const&) const": "SPGeometry.h",
		"::stappler::geom::URect::operator==(stappler::geom::URect const&) const": "SPGeometry.h",
		"::stappler::geom::URect::origin() const": "SPGeometry.h",
		"::stappler::geom::URect::width": "SPGeometry.h",
		"::stappler::geom::URect::x": "SPGeometry.h",
		"::stappler::geom::URect::y": "SPGeometry.h",
		"::stappler::geom::UVec2": "SPGeometry.h",
		"::stappler::geom::UVec2::operator!=(stappler::geom::UVec2 const&) const": "SPGeometry.h",
		"::stappler::geom::UVec2::operator==(stappler::geom::UVec2 const&) const": "SPGeometry.h",
		"::stappler::geom::UVec2::x": "SPGeometry.h",
		"::stappler::geom::UVec2::y": "SPGeometry.h",
		"::stappler::geom::Vec2": "SPVec2.h",
		"::stappler::geom::Vec2::Dimansions": "SPVec2.h",
		"::stappler::geom::Vec2::ONE": "SPVec2.h",
		"::stappler::geom::Vec2::UNIT_X": "SPVec2.h",
		"::stappler::geom::Vec2::UNIT_Y": "SPVec2.h",
		"::stappler::geom::Vec2::Vec2()": "SPVec2.h",
		"::stappler::geom::Vec2::Vec2(float,float)": "SPVec2.h",
		"::stappler::geom::Vec2::Vec2(stappler::geom::Extent2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::Vec2(stappler::geom::Size2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::Vec2(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::Vec2(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::Vec2<typename>(stappler::geom::Vec2 const&,Functor const&)": "SPVec2.h",
		"::stappler::geom::Vec2::Vec2<typename>(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,Functor const&)": "SPVec2.h",
		"::stappler::geom::Vec2::ZERO": "SPVec2.h",
		"::stappler::geom::Vec2::add(float const&)": "SPVec2.h",
		"::stappler::geom::Vec2::add(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::add(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)": "SPVec2.h",
		"::stappler::geom::Vec2::angle(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::bitop<typename>(stappler::geom::Vec2 const&,Functor const&)": "SPVec2.h",
		"::stappler::geom::Vec2::bitop<typename>(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,Functor const&)": "SPVec2.h",
		"::stappler::geom::Vec2::clamp(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::clamp(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)": "SPVec2.h",
		"::stappler::geom::Vec2::cross(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::cross(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::distance(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::distanceSquared(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::dot(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::dot(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::fill(float)": "SPVec2.h",
		"::stappler::geom::Vec2::forAngle(float const)": "SPVec2.h",
		"::stappler::geom::Vec2::fuzzyEquals(stappler::geom::Vec2 const&,float) const": "SPVec2.h",
		"::stappler::geom::Vec2::getAngle() const": "SPVec2.h",
		"::stappler::geom::Vec2::getAngle(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::getClampPoint(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::getIntersectPoint(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::getMidpoint(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::getNormalized() const": "SPVec2.h",
		"::stappler::geom::Vec2::getPerp() const": "SPVec2.h",
		"::stappler::geom::Vec2::getRPerp() const": "SPVec2.h",
		"::stappler::geom::Vec2::getSegmentIntersectPoint<typename>(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,Callback const&)": "SPVec2.h",
		"::stappler::geom::Vec2::isCounterClockwise(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::isLineIntersect(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,float*,float*)": "SPVec2.h",
		"::stappler::geom::Vec2::isLineOverlap(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::isLineParallel(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::isSegmentIntersect(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::isSegmentOverlap(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*,stappler::geom::Vec2*)": "SPVec2.h",
		"::stappler::geom::Vec2::isValid() const": "SPVec2.h",
		"::stappler::geom::Vec2::isWithinDistance(stappler::geom::Vec2 const&,float) const": "SPVec2.h",
		"::stappler::geom::Vec2::length() const": "SPVec2.h",
		"::stappler::geom::Vec2::lengthSquared() const": "SPVec2.h",
		"::stappler::geom::Vec2::negate()": "SPVec2.h",
		"::stappler::geom::Vec2::normalize()": "SPVec2.h",
		"::stappler::geom::Vec2::operator*=(float const&)": "SPVec2.h",
		"::stappler::geom::Vec2::operator*=(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::operator+=(float const&)": "SPVec2.h",
		"::stappler::geom::Vec2::operator+=(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::operator-=(float const&)": "SPVec2.h",
		"::stappler::geom::Vec2::operator-=(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::operator/=(float const&)": "SPVec2.h",
		"::stappler::geom::Vec2::operator/=(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::project(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::rotate(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::rotate(stappler::geom::Vec2 const&,float)": "SPVec2.h",
		"::stappler::geom::Vec2::rotateByAngle(stappler::geom::Vec2 const&,float) const": "SPVec2.h",
		"::stappler::geom::Vec2::scale(float const&)": "SPVec2.h",
		"::stappler::geom::Vec2::scale(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::scale(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)": "SPVec2.h",
		"::stappler::geom::Vec2::subtract(float const&)": "SPVec2.h",
		"::stappler::geom::Vec2::subtract(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::subtract(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)": "SPVec2.h",
		"::stappler::geom::Vec2::unrotate(stappler::geom::Vec2 const&) const": "SPVec2.h",
		"::stappler::geom::Vec2::unscale(float const&)": "SPVec2.h",
		"::stappler::geom::Vec2::unscale(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::Vec2::unscale(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2*)": "SPVec2.h",
		"::stappler::geom::Vec2::x": "SPVec2.h",
		"::stappler::geom::Vec2::y": "SPVec2.h",
		"::stappler::geom::Vec3": "SPVec3.h",
		"::stappler::geom::Vec3::Dimansions": "SPVec3.h",
		"::stappler::geom::Vec3::ONE": "SPVec3.h",
		"::stappler::geom::Vec3::UNIT_X": "SPVec3.h",
		"::stappler::geom::Vec3::UNIT_Y": "SPVec3.h",
		"::stappler::geom::Vec3::UNIT_Z": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3()": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3(float,float,float)": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3(stappler::geom::Extent3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3(stappler::geom::Size3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3(stappler::geom::Vec2 const&,float)": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3<typename>(stappler::geom::Vec3 const&,Functor const&)": "SPVec3.h",
		"::stappler::geom::Vec3::Vec3<typename>(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,Functor const&)": "SPVec3.h",
		"::stappler::geom::Vec3::ZERO": "SPVec3.h",
		"::stappler::geom::Vec3::add(float const&)": "SPVec3.h",
		"::stappler::geom::Vec3::add(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::add(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)": "SPVec3.h",
		"::stappler::geom::Vec3::angle(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::bitop<typename>(stappler::geom::Vec3 const&,Functor const&)": "SPVec3.h",
		"::stappler::geom::Vec3::bitop<typename>(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,Functor const&)": "SPVec3.h",
		"::stappler::geom::Vec3::clamp(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::clamp(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)": "SPVec3.h",
		"::stappler::geom::Vec3::cross(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::cross(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)": "SPVec3.h",
		"::stappler::geom::Vec3::distance(stappler::geom::Vec3 const&) const": "SPVec3.h",
		"::stappler::geom::Vec3::distanceSquared(stappler::geom::Vec3 const&) const": "SPVec3.h",
		"::stappler::geom::Vec3::dot(stappler::geom::Vec3 const&) const": "SPVec3.h",
		"::stappler::geom::Vec3::dot(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::fill(float)": "SPVec3.h",
		"::stappler::geom::Vec3::fuzzyEquals(stappler::geom::Vec3 const&,float) const": "SPVec3.h",
		"::stappler::geom::Vec3::getNormalized() const": "SPVec3.h",
		"::stappler::geom::Vec3::isValid() const": "SPVec3.h",
		"::stappler::geom::Vec3::isWithinDistance(stappler::geom::Vec3 const&,float) const": "SPVec3.h",
		"::stappler::geom::Vec3::length() const": "SPVec3.h",
		"::stappler::geom::Vec3::lengthSquared() const": "SPVec3.h",
		"::stappler::geom::Vec3::negate()": "SPVec3.h",
		"::stappler::geom::Vec3::normalize()": "SPVec3.h",
		"::stappler::geom::Vec3::operator*=(float const&)": "SPVec3.h",
		"::stappler::geom::Vec3::operator*=(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::operator+=(float const&)": "SPVec3.h",
		"::stappler::geom::Vec3::operator+=(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::operator-=(float const&)": "SPVec3.h",
		"::stappler::geom::Vec3::operator-=(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::operator/=(float const&)": "SPVec3.h",
		"::stappler::geom::Vec3::operator/=(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::scale(float const&)": "SPVec3.h",
		"::stappler::geom::Vec3::scale(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::scale(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)": "SPVec3.h",
		"::stappler::geom::Vec3::subtract(float const&)": "SPVec3.h",
		"::stappler::geom::Vec3::subtract(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::subtract(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)": "SPVec3.h",
		"::stappler::geom::Vec3::unscale(float const&)": "SPVec3.h",
		"::stappler::geom::Vec3::unscale(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::Vec3::unscale(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&,stappler::geom::Vec3*)": "SPVec3.h",
		"::stappler::geom::Vec3::x": "SPVec3.h",
		"::stappler::geom::Vec3::xy() const": "SPVec3.h",
		"::stappler::geom::Vec3::y": "SPVec3.h",
		"::stappler::geom::Vec3::z": "SPVec3.h",
		"::stappler::geom::Vec4": "SPVec4.h",
		"::stappler::geom::Vec4::Dimansions": "SPVec4.h",
		"::stappler::geom::Vec4::ONE": "SPVec4.h",
		"::stappler::geom::Vec4::UNIT_W": "SPVec4.h",
		"::stappler::geom::Vec4::UNIT_X": "SPVec4.h",
		"::stappler::geom::Vec4::UNIT_Y": "SPVec4.h",
		"::stappler::geom::Vec4::UNIT_Z": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4()": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4(float,float,float,float)": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4(stappler::geom::Vec2 const&,float,float)": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4(stappler::geom::Vec3 const&,float)": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4<typename>(stappler::geom::Vec4 const&,Functor const&)": "SPVec4.h",
		"::stappler::geom::Vec4::Vec4<typename>(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,Functor const&)": "SPVec4.h",
		"::stappler::geom::Vec4::ZERO": "SPVec4.h",
		"::stappler::geom::Vec4::add(float const&)": "SPVec4.h",
		"::stappler::geom::Vec4::add(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::add(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)": "SPVec4.h",
		"::stappler::geom::Vec4::angle(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::bitop<typename>(stappler::geom::Vec4 const&,Functor const&)": "SPVec4.h",
		"::stappler::geom::Vec4::bitop<typename>(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,Functor const&)": "SPVec4.h",
		"::stappler::geom::Vec4::clamp(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::clamp(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)": "SPVec4.h",
		"::stappler::geom::Vec4::distance(stappler::geom::Vec4 const&) const": "SPVec4.h",
		"::stappler::geom::Vec4::distanceSquared(stappler::geom::Vec4 const&) const": "SPVec4.h",
		"::stappler::geom::Vec4::dot(stappler::geom::Vec4 const&) const": "SPVec4.h",
		"::stappler::geom::Vec4::dot(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::fill(float)": "SPVec4.h",
		"::stappler::geom::Vec4::fuzzyEquals(stappler::geom::Vec4 const&,float) const": "SPVec4.h",
		"::stappler::geom::Vec4::getNormalized() const": "SPVec4.h",
		"::stappler::geom::Vec4::isValid() const": "SPVec4.h",
		"::stappler::geom::Vec4::isWithinDistance(stappler::geom::Vec4 const&,float) const": "SPVec4.h",
		"::stappler::geom::Vec4::length() const": "SPVec4.h",
		"::stappler::geom::Vec4::lengthSquared() const": "SPVec4.h",
		"::stappler::geom::Vec4::negate()": "SPVec4.h",
		"::stappler::geom::Vec4::normalize()": "SPVec4.h",
		"::stappler::geom::Vec4::operator*=(float const&)": "SPVec4.h",
		"::stappler::geom::Vec4::operator*=(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::operator+=(float const&)": "SPVec4.h",
		"::stappler::geom::Vec4::operator+=(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::operator-=(float const&)": "SPVec4.h",
		"::stappler::geom::Vec4::operator-=(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::operator/=(float const&)": "SPVec4.h",
		"::stappler::geom::Vec4::operator/=(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::scale(float const&)": "SPVec4.h",
		"::stappler::geom::Vec4::scale(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::scale(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)": "SPVec4.h",
		"::stappler::geom::Vec4::subtract(float const&)": "SPVec4.h",
		"::stappler::geom::Vec4::subtract(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::subtract(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)": "SPVec4.h",
		"::stappler::geom::Vec4::unscale(float const&)": "SPVec4.h",
		"::stappler::geom::Vec4::unscale(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::Vec4::unscale(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&,stappler::geom::Vec4*)": "SPVec4.h",
		"::stappler::geom::Vec4::w": "SPVec4.h",
		"::stappler::geom::Vec4::x": "SPVec4.h",
		"::stappler::geom::Vec4::xy() const": "SPVec4.h",
		"::stappler::geom::Vec4::xyz() const": "SPVec4.h",
		"::stappler::geom::Vec4::y": "SPVec4.h",
		"::stappler::geom::Vec4::z": "SPVec4.h",
		"::stappler::geom::VerboseFlag": "SPTess.h",
		"::stappler::geom::VertEq(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,float)": "SPTessTypes.h",
		"::stappler::geom::VertEq(stappler::geom::Vertex const*,stappler::geom::Vertex const*,float)": "SPTessTypes.h",
		"::stappler::geom::VertLeq(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPTessTypes.h",
		"::stappler::geom::VertLeq(stappler::geom::Vertex const*,stappler::geom::Vertex const*)": "SPTessTypes.h",
		"::stappler::geom::Vertex": "SPTessTypes.h",
		"::stappler::geom::Vertex::_edge": "SPTessTypes.h",
		"::stappler::geom::Vertex::_exportIdx": "SPTessTypes.h",
		"::stappler::geom::Vertex::_origin": "SPTessTypes.h",
		"::stappler::geom::Vertex::_queueHandle": "SPTessTypes.h",
		"::stappler::geom::Vertex::_uniqueIdx": "SPTessTypes.h",
		"::stappler::geom::Vertex::foreach(Callback<void (const stappler::geom::HalfEdge &)> const&) const": "SPTessTypes.h",
		"::stappler::geom::Vertex::insertBefore(stappler::geom::HalfEdge*)": "SPTessTypes.h",
		"::stappler::geom::Vertex::relocate(stappler::geom::Vec2 const&)": "SPTessTypes.h",
		"::stappler::geom::Vertex::removeFromList(stappler::geom::Vertex*)": "SPTessTypes.h",
		"::stappler::geom::VertexAllocBatch": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Elem": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Elem::key": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Elem::node": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Handle": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::Heap(memory::pool_t*,uint32_t)": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::empty() const": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::extractMin()": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::floatDown(int)": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::floatUp(int)": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::freeList": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::getMin() const": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::handles": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::init()": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::initialized": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::insert(stappler::geom::VertexPriorityQueue::Key)": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::max": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::nodes": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::pool": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::remove(stappler::geom::VertexPriorityQueue::Handle)": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::size": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Heap::~Heap()": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::InvalidHandle": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Key": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Node": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::Node::handle": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::VertexPriorityQueue(memory::pool_t*,memory::vector<Vertex *> const&)": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::empty() const": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::extractMin()": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::freeList": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::getMin() const": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::heap": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::init()": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::initialized": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::insert(stappler::geom::VertexPriorityQueue::Key)": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::keys": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::max": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::order": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::pool": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::remove(stappler::geom::VertexPriorityQueue::Handle)": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::size": "SPTessTypes.h",
		"::stappler::geom::VertexPriorityQueue::~VertexPriorityQueue()": "SPTessTypes.h",
		"::stappler::geom::VertexSetPrealloc": "SPTessTypes.h",
		"::stappler::geom::VertexType": "SPTessTypes.h",
		"::stappler::geom::VerticalAlign": "SPFontStyle.h",
		"::stappler::geom::WhiteSpace": "SPFontStyle.h",
		"::stappler::geom::Winding": "SPTess.h",
		"::stappler::geom::_ApplyTrait<float>::Bitset": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<float>::_ApplyTrait<float>": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<float>::apply<typename>(float const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<float>::apply<typename>(float const&,float const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<float>::bitop<typename>(float const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<float>::bitop<typename>(float const&,float const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<typename>": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<typename>::Bitset": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<typename>::apply<typename>(T const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<typename>::apply<typename>(T const&,T const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<typename>::bitop<typename>(T const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::_ApplyTrait<typename>::bitop<typename>(T const&,T const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::_StructFieldCount<float>::Count": "SPGeom.h",
		"::stappler::geom::_StructFieldCount<float>::_StructFieldCount<float>": "SPGeom.h",
		"::stappler::geom::_StructFieldCount<typename>": "SPGeom.h",
		"::stappler::geom::_StructFieldCount<typename>::Count": "SPGeom.h",
		"::stappler::geom::_abs<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_ceil<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_equal<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_floor<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_fract<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_greaterThan<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_greaterThanEqual<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_inversesqrt<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_isinf<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_isnan<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_lessThan<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_lessThanEqual<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_max<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_min<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_mod<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_notEqual<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_round<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_sign<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::_step<typename>(T const&,T const&)": "SPGeom.h",
		"::stappler::geom::_trunc<typename>(T const&)": "SPGeom.h",
		"::stappler::geom::apply<typename,typename>(T const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::apply<typename,typename>(T const&,T const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::bitop<typename,typename>(T const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::bitop<typename,typename>(T const&,T const&,Functor const&)": "SPGeom.h",
		"::stappler::geom::emplaceChars(stappler::geom::EmplaceCharInterface const&,SpanView<void *> const&,float)": "SPFontStyle.h",
		"::stappler::geom::fill(float)": "SPGeom.h",
		"::stappler::geom::fill<typename>(float)": "SPGeom.h",
		"::stappler::geom::getBisectVec(simd::f32x4 const&)": "SPTessSimd.hpp",
		"::stappler::geom::getNormalizedVec(float const[2],float const[2],float const[2])": "SPTessSimd.hpp",
		"::stappler::geom::getVertexNormal(float const[2],float const[],float const[],float[4])": "SPTessSimd.hpp",
		"::stappler::geom::isWindingInside(stappler::geom::Winding,int16_t)": "SPTessTypes.h",
		"::stappler::geom::operator!=(stappler::geom::ColorMask const&,std::underlying_type<ColorMask>::type const&)": "SPColor.h",
		"::stappler::geom::operator!=(stappler::geom::DrawStyle const&,std::underlying_type<DrawStyle>::type const&)": "SPTessLine.h",
		"::stappler::geom::operator!=(stappler::geom::FontVariableAxis const&,std::underlying_type<FontVariableAxis>::type const&)": "SPFontStyle.h",
		"::stappler::geom::operator!=(std::underlying_type<ColorMask>::type const&,stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator!=(std::underlying_type<DrawStyle>::type const&,stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator!=(std::underlying_type<FontVariableAxis>::type const&,stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::operator&(stappler::geom::ColorMask const&,stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator&(stappler::geom::DrawStyle const&,stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator&(stappler::geom::FontVariableAxis const&,stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::operator&=(stappler::geom::ColorMask&,stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator&=(stappler::geom::DrawStyle&,stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator&=(stappler::geom::FontVariableAxis&,stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::operator*(float const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::operator*(float const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::operator*(float const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::operator*(float,stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::operator*(stappler::geom::Color4B const&,stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::operator*(stappler::geom::Color4F const&,float)": "SPColor.h",
		"::stappler::geom::operator*(stappler::geom::Color4F const&,stappler::geom::Color4B const&)": "SPColor.h",
		"::stappler::geom::operator*(stappler::geom::Color4F const&,stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::operator*(stappler::geom::Mat4 const&,stappler::geom::Vec2 const&)": "SPMat4.h",
		"::stappler::geom::operator*(stappler::geom::Mat4 const&,stappler::geom::Vec3 const&)": "SPMat4.h",
		"::stappler::geom::operator*(stappler::geom::Mat4 const&,stappler::geom::Vec4 const&)": "SPMat4.h",
		"::stappler::geom::operator*(stappler::geom::Vec2 const&,float const&)": "SPVec2.h",
		"::stappler::geom::operator*(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::operator*(stappler::geom::Vec3 const&,float const&)": "SPVec3.h",
		"::stappler::geom::operator*(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::operator*(stappler::geom::Vec4 const&,float const&)": "SPVec4.h",
		"::stappler::geom::operator*(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::operator*=(stappler::geom::Vec4&,stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::operator+(float const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::operator+(float const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::operator+(float const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::operator+(stappler::geom::Color4F const&,stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::operator+(stappler::geom::Vec2 const&,float const&)": "SPVec2.h",
		"::stappler::geom::operator+(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::operator+(stappler::geom::Vec3 const&,float const&)": "SPVec3.h",
		"::stappler::geom::operator+(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::operator+(stappler::geom::Vec4 const&,float const&)": "SPVec4.h",
		"::stappler::geom::operator+(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::operator-(stappler::geom::Color4F const&,stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::operator-(stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::operator-(stappler::geom::Vec2 const&,float const&)": "SPVec2.h",
		"::stappler::geom::operator-(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::operator-(stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::operator-(stappler::geom::Vec3 const&,float const&)": "SPVec3.h",
		"::stappler::geom::operator-(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::operator-(stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::operator-(stappler::geom::Vec4 const&,float const&)": "SPVec4.h",
		"::stappler::geom::operator-(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::operator/(stappler::geom::Color4B const&,stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::operator/(stappler::geom::Color4F const&,stappler::geom::Color4B const&)": "SPColor.h",
		"::stappler::geom::operator/(stappler::geom::Color4F const&,stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::operator/(stappler::geom::Vec2 const&,float const&)": "SPVec2.h",
		"::stappler::geom::operator/(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::operator/(stappler::geom::Vec3 const&,float const&)": "SPVec3.h",
		"::stappler::geom::operator/(stappler::geom::Vec3 const&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::operator/(stappler::geom::Vec4 const&,float const&)": "SPVec4.h",
		"::stappler::geom::operator/(stappler::geom::Vec4 const&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::operator<(stappler::geom::CharLayout const&,char16_t const&)": "SPFontStyle.h",
		"::stappler::geom::operator<(stappler::geom::CharLayout const&,stappler::geom::CharLayout const&)": "SPFontStyle.h",
		"::stappler::geom::operator<<(std::basic_ostream<char>&,stappler::geom::Mat4 const&)": "SPMat4.h",
		"::stappler::geom::operator<<(std::basic_ostream<char>&,stappler::geom::Vec2 const&)": "SPVec2.h",
		"::stappler::geom::operator<<(std::basic_ostream<char>&,stappler::geom::Vec3 const&)": "SPVec3.h",
		"::stappler::geom::operator<<(std::basic_ostream<char>&,stappler::geom::Vec4 const&)": "SPVec4.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Color const&)": "SPColor.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Color3B const&)": "SPColor.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Color4B const&)": "SPColor.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Color4F const&)": "SPColor.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Edge const&)": "SPTessTypes.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::EdgeDictNode const&)": "SPTessTypes.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Extent2 const&)": "SPGeometry.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Extent3 const&)": "SPGeometry.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::FaceEdge const&)": "SPTessTypes.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::HalfEdge const&)": "SPTessTypes.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::IntersectionEvent const&)": "SPTessTypes.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Rect const&)": "SPGeometry.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Size2 const&)": "SPGeometry.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Size3 const&)": "SPGeometry.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::VerboseFlag)": "SPTessTypes.h",
		"::stappler::geom::operator<<(std::ostream&,stappler::geom::Vertex const&)": "SPTessTypes.h",
		"::stappler::geom::operator<=(stappler::geom::CharLayout const&,char16_t const&)": "SPFontStyle.h",
		"::stappler::geom::operator<=(stappler::geom::CharLayout const&,stappler::geom::CharLayout const&)": "SPFontStyle.h",
		"::stappler::geom::operator==(stappler::geom::ColorMask const&,std::underlying_type<ColorMask>::type const&)": "SPColor.h",
		"::stappler::geom::operator==(stappler::geom::DrawStyle const&,std::underlying_type<DrawStyle>::type const&)": "SPTessLine.h",
		"::stappler::geom::operator==(stappler::geom::FontVariableAxis const&,std::underlying_type<FontVariableAxis>::type const&)": "SPFontStyle.h",
		"::stappler::geom::operator==(std::underlying_type<ColorMask>::type const&,stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator==(std::underlying_type<DrawStyle>::type const&,stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator==(std::underlying_type<FontVariableAxis>::type const&,stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::operator>(stappler::geom::CharLayout const&,char16_t const&)": "SPFontStyle.h",
		"::stappler::geom::operator>(stappler::geom::CharLayout const&,stappler::geom::CharLayout const&)": "SPFontStyle.h",
		"::stappler::geom::operator>=(stappler::geom::CharLayout const&,char16_t const&)": "SPFontStyle.h",
		"::stappler::geom::operator>=(stappler::geom::CharLayout const&,stappler::geom::CharLayout const&)": "SPFontStyle.h",
		"::stappler::geom::operator^(stappler::geom::ColorMask const&,stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator^(stappler::geom::DrawStyle const&,stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator^(stappler::geom::FontVariableAxis const&,stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::operator^=(stappler::geom::ColorMask&,stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator^=(stappler::geom::DrawStyle&,stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator^=(stappler::geom::FontVariableAxis&,stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::operator|(stappler::geom::ColorMask const&,stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator|(stappler::geom::DrawStyle const&,stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator|(stappler::geom::FontVariableAxis const&,stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::operator|=(stappler::geom::ColorMask&,stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator|=(stappler::geom::DrawStyle&,stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator|=(stappler::geom::FontVariableAxis&,stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::operator~(stappler::geom::ColorMask const&)": "SPColor.h",
		"::stappler::geom::operator~(stappler::geom::DrawStyle const&)": "SPTessLine.h",
		"::stappler::geom::operator~(stappler::geom::FontVariableAxis const&)": "SPFontStyle.h",
		"::stappler::geom::readColor(stappler::StringView const&,stappler::geom::Color3B&)": "SPColor.h",
		"::stappler::geom::readColor(stappler::StringView const&,stappler::geom::Color4B&)": "SPColor.h",
		"::stappler::getBacktrace(size_t,Callback<void (stappler::StringView)> const&)": "SPCommon.h",
		"::stappler::halffloat::decode(uint16_t)": "SPHalfFloat.h",
		"::stappler::halffloat::encode(float)": "SPHalfFloat.h",
		"::stappler::halffloat::nan()": "SPHalfFloat.h",
		"::stappler::halffloat::neginf()": "SPHalfFloat.h",
		"::stappler::halffloat::posinf()": "SPHalfFloat.h",
		"::stappler::hash::hash32(char const*,uint32_t,uint32_t)": "SPHash.h",
		"::stappler::hash::hash64(char const*,size_t,uint64_t)": "SPHash.h",
		"::stappler::hash::hashSize(char const*,size_t,uint64_t)": "SPHash.h",
		"::stappler::hash::xxh32": "SPHash.h",
		"::stappler::hash::xxh32::PRIME1": "SPHash.h",
		"::stappler::hash::xxh32::PRIME2": "SPHash.h",
		"::stappler::hash::xxh32::PRIME3": "SPHash.h",
		"::stappler::hash::xxh32::PRIME4": "SPHash.h",
		"::stappler::hash::xxh32::PRIME5": "SPHash.h",
		"::stappler::hash::xxh32::avalanche(uint32_t const)": "SPHash.h",
		"::stappler::hash::xxh32::avalanche_step(uint32_t const,int const,uint32_t const)": "SPHash.h",
		"::stappler::hash::xxh32::endian32(char const*)": "SPHash.h",
		"::stappler::hash::xxh32::fetch32(char const*,uint32_t const)": "SPHash.h",
		"::stappler::hash::xxh32::finalize(uint32_t,char const*,uint32_t)": "SPHash.h",
		"::stappler::hash::xxh32::h16bytes(char const*,uint32_t,uint32_t const)": "SPHash.h",
		"::stappler::hash::xxh32::h16bytes(char const*,uint32_t,uint32_t,uint32_t,uint32_t,uint32_t)": "SPHash.h",
		"::stappler::hash::xxh32::hash(char const*,uint32_t,uint32_t)": "SPHash.h",
		"::stappler::hash::xxh32::rotl(uint32_t,int)": "SPHash.h",
		"::stappler::hash::xxh32::round(uint32_t,uint32_t const)": "SPHash.h",
		"::stappler::hash::xxh64": "SPHash.h",
		"::stappler::hash::xxh64::PRIME1": "SPHash.h",
		"::stappler::hash::xxh64::PRIME2": "SPHash.h",
		"::stappler::hash::xxh64::PRIME3": "SPHash.h",
		"::stappler::hash::xxh64::PRIME4": "SPHash.h",
		"::stappler::hash::xxh64::PRIME5": "SPHash.h",
		"::stappler::hash::xxh64::endian32(char const*)": "SPHash.h",
		"::stappler::hash::xxh64::endian64(char const*)": "SPHash.h",
		"::stappler::hash::xxh64::fetch32(char const*)": "SPHash.h",
		"::stappler::hash::xxh64::fetch64(char const*,uint64_t const)": "SPHash.h",
		"::stappler::hash::xxh64::finalize(uint64_t,char const*,uint64_t)": "SPHash.h",
		"::stappler::hash::xxh64::h32bytes(char const*,uint64_t,uint64_t const)": "SPHash.h",
		"::stappler::hash::xxh64::h32bytes(char const*,uint64_t,uint64_t,uint64_t,uint64_t,uint64_t)": "SPHash.h",
		"::stappler::hash::xxh64::hash(char const*,uint64_t,uint64_t)": "SPHash.h",
		"::stappler::hash::xxh64::mix1(uint64_t const,uint64_t const,int)": "SPHash.h",
		"::stappler::hash::xxh64::mix2(uint64_t const,uint64_t const)": "SPHash.h",
		"::stappler::hash::xxh64::mix3(uint64_t const,uint64_t const)": "SPHash.h",
		"::stappler::hash::xxh64::rotl(uint64_t,int)": "SPHash.h",
		"::stappler::html::Parser<typename,typename,typename,typename>": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::CharType": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::Chars<CharType...>": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::Group<GroupId>": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::GroupId": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::LtChar": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::OrigCharType": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::Parser(ReaderType&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::Range<CharType,CharType>": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::StringReader": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::Tag": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::cancel()": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::canceled": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::current": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::lowercase": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onBeginTag(TagType&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onEndTag(TagType&,bool)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onInlineTag(TagType&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onPopTag(TagType&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onPushTag(TagType&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onReadAttributeName(stappler::html::Parser::StringReader&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onReadAttributeValue(stappler::html::Parser::StringReader&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onReadTagName(stappler::html::Parser::StringReader&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onTagAttribute(TagType&,stappler::html::Parser::StringReader&,stappler::html::Parser::StringReader&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::onTagContent(TagType&,stappler::html::Parser::StringReader&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::parse(stappler::html::Parser::StringReader const&,bool)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::reader": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::shouldParseTag(TagType&)": "SPHtmlParser.h",
		"::stappler::html::Parser<typename,typename,typename,typename>::tagStack": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onBeginTag<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onBeginTag<typename>(typeof (& C::onBeginTag))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onEndTag<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onEndTag<typename>(typeof (& C::onEndTag))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onInlineTag<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onInlineTag<typename>(typeof (& C::onInlineTag))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onPopTag<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onPopTag<typename>(typeof (& C::onPopTag))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onPushTag<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onPushTag<typename>(typeof (& C::onPushTag))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onReadAttributeName<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onReadAttributeName<typename>(typeof (& C::onReadAttributeName))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onReadAttributeValue<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onReadAttributeValue<typename>(typeof (& C::onReadAttributeValue))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onReadTagName<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onReadTagName<typename>(typeof (& C::onReadTagName))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onTagAttribute<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onTagAttribute<typename>(typeof (& C::onTagAttribute))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onTagContent<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_onTagContent<typename>(typeof (& C::onTagContent))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_shouldLowercaseTokens<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_shouldLowercaseTokens<typename>(typeof (& C::shouldLowercaseTokens))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_shouldParseTag<typename>()": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::CallTest_shouldParseTag<typename>(typeof (& C::shouldParseTag))": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::failure": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onBeginTag": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onEndTag": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onInlineTag": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onPopTag": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onPushTag": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onReadAttributeName": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onReadAttributeValue": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onReadTagName": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onTagAttribute": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::onTagContent": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::shouldLowercaseTokens": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::shouldParseTag": "SPHtmlParser.h",
		"::stappler::html::ParserTraits<typename>::success": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::StringReader": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::Tag(stappler::html::Tag::StringReader const&)": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::closable": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::content": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::getName() const": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::hasContent() const": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::isClosable() const": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::name": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::setClosable(bool)": "SPHtmlParser.h",
		"::stappler::html::Tag<typename>::setHasContent(bool)": "SPHtmlParser.h",
		"::stappler::html::Tag_readAttrName<typename>(StringReader&,bool)": "SPHtmlParser.h",
		"::stappler::html::Tag_readAttrValue<typename>(StringReader&,bool)": "SPHtmlParser.h",
		"::stappler::html::Tag_readName<typename>(StringReader&,bool)": "SPHtmlParser.h",
		"::stappler::html::parse<typename,typename,typename>(ReaderType&,StringReader const&,bool,bool)": "SPHtmlParser.h",
		"::stappler::idn::toAscii<typename>(stappler::StringView,bool)": "SPIdn.h",
		"::stappler::idn::toUnicode<typename>(stappler::StringView,bool)": "SPIdn.h",
		"::stappler::inCharGroup(stappler::CharGroupId,char16_t)": "SPCharGroup.h",
		"::stappler::inCharGroupMask(stappler::CharGroupId,char16_t)": "SPCharGroup.h",
		"::stappler::io::Buffer": "SPIOBuffer.h",
		"::stappler::io::Buffer::Buffer<typename,typename>(T&)": "SPIOBuffer.h",
		"::stappler::io::Buffer::capacity() const": "SPIOBuffer.h",
		"::stappler::io::Buffer::capacity_ptr": "SPIOBuffer.h",
		"::stappler::io::Buffer::clear() const": "SPIOBuffer.h",
		"::stappler::io::Buffer::clear_ptr": "SPIOBuffer.h",
		"::stappler::io::Buffer::data() const": "SPIOBuffer.h",
		"::stappler::io::Buffer::data_ptr": "SPIOBuffer.h",
		"::stappler::io::Buffer::prepare(size_t&) const": "SPIOBuffer.h",
		"::stappler::io::Buffer::prepare_ptr": "SPIOBuffer.h",
		"::stappler::io::Buffer::ptr": "SPIOBuffer.h",
		"::stappler::io::Buffer::save(uint8_t*,size_t,size_t) const": "SPIOBuffer.h",
		"::stappler::io::Buffer::save_ptr": "SPIOBuffer.h",
		"::stappler::io::Buffer::size() const": "SPIOBuffer.h",
		"::stappler::io::Buffer::size_ptr": "SPIOBuffer.h",
		"::stappler::io::BufferTraits<StackBuffer<Size>>::BufferTraits<StackBuffer<Size>>": "SPBuffer.h",
		"::stappler::io::BufferTraits<StackBuffer<Size>>::CapacityFn(void*)": "SPBuffer.h",
		"::stappler::io::BufferTraits<StackBuffer<Size>>::ClearFn(void*)": "SPBuffer.h",
		"::stappler::io::BufferTraits<StackBuffer<Size>>::DataFn(void*)": "SPBuffer.h",
		"::stappler::io::BufferTraits<StackBuffer<Size>>::PrepareFn(void*,size_t&)": "SPBuffer.h",
		"::stappler::io::BufferTraits<StackBuffer<Size>>::SaveFn(void*,uint8_t*,size_t,size_t)": "SPBuffer.h",
		"::stappler::io::BufferTraits<StackBuffer<Size>>::SizeFn(void*)": "SPBuffer.h",
		"::stappler::io::BufferTraits<StackBuffer<Size>>::type": "SPBuffer.h",
		"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::BufferTraits<stappler::BufferTemplate<Interface>>": "SPBuffer.h",
		"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::CapacityFn(void*)": "SPBuffer.h",
		"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::ClearFn(void*)": "SPBuffer.h",
		"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::DataFn(void*)": "SPBuffer.h",
		"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::PrepareFn(void*,size_t&)": "SPBuffer.h",
		"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::SaveFn(void*,uint8_t*,size_t,size_t)": "SPBuffer.h",
		"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::SizeFn(void*)": "SPBuffer.h",
		"::stappler::io::BufferTraits<stappler::BufferTemplate<Interface>>::type": "SPBuffer.h",
		"::stappler::io::Consumer": "SPIOConsumer.h",
		"::stappler::io::Consumer::Consumer<typename,typename>(T&)": "SPIOConsumer.h",
		"::stappler::io::Consumer::flush() const": "SPIOConsumer.h",
		"::stappler::io::Consumer::flush_ptr": "SPIOConsumer.h",
		"::stappler::io::Consumer::ptr": "SPIOConsumer.h",
		"::stappler::io::Consumer::write(stappler::io::Buffer const&) const": "SPIOConsumer.h",
		"::stappler::io::Consumer::write(uint8_t const*,size_t) const": "SPIOConsumer.h",
		"::stappler::io::Consumer::write_ptr": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraits<typename>": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraits<typename>::FlushFn(void*)": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraits<typename>::WriteFn(void*,uint8_t const*,size_t)": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraits<typename>::traits_type": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsOverload<class>": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsOverload<class>::FlushFn(void*)": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsOverload<class>::WriteFn(void*,uint8_t const*,size_t)": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsReolution<typename>": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsReolution<typename>::type": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsStream": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsStream::FlushFn(void*)": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsStream::WriteFn(void*,uint8_t const*,size_t)": "SPIOConsumer.h",
		"::stappler::io::ConsumerTraitsStream::stream_type": "SPIOConsumer.h",
		"::stappler::io::FlushFunction<typename>(T&)": "SPIOConsumer.h",
		"::stappler::io::Producer": "SPIOProducer.h",
		"::stappler::io::Producer::Producer<typename,typename>(T&)": "SPIOProducer.h",
		"::stappler::io::Producer::ptr": "SPIOProducer.h",
		"::stappler::io::Producer::read(stappler::io::Buffer const&,size_t) const": "SPIOProducer.h",
		"::stappler::io::Producer::read(uint8_t*,size_t) const": "SPIOProducer.h",
		"::stappler::io::Producer::read_ptr": "SPIOProducer.h",
		"::stappler::io::Producer::seek(int64_t,stappler::io::Seek) const": "SPIOProducer.h",
		"::stappler::io::Producer::seekAndRead<typename>(size_t,T&&,size_t) const": "SPIOProducer.h",
		"::stappler::io::Producer::seek_ptr": "SPIOProducer.h",
		"::stappler::io::Producer::tell() const": "SPIOProducer.h",
		"::stappler::io::Producer::tell_ptr": "SPIOProducer.h",
		"::stappler::io::ProducerTraits<CoderSource>::ProducerTraits<CoderSource>": "SPSha.h",
		"::stappler::io::ProducerTraits<CoderSource>::ReadFn(void*,uint8_t*,size_t)": "SPSha.h",
		"::stappler::io::ProducerTraits<CoderSource>::SeekFn(void*,int64_t,stappler::io::Seek)": "SPSha.h",
		"::stappler::io::ProducerTraits<CoderSource>::TellFn(void*)": "SPSha.h",
		"::stappler::io::ProducerTraits<CoderSource>::type": "SPSha.h",
		"::stappler::io::ProducerTraits<filesystem::File>::ProducerTraits<filesystem::File>": "SPFilesystem.h",
		"::stappler::io::ProducerTraits<filesystem::File>::ReadFn(void*,uint8_t*,size_t)": "SPFilesystem.h",
		"::stappler::io::ProducerTraits<filesystem::File>::SeekFn(void*,int64_t,stappler::io::Seek)": "SPFilesystem.h",
		"::stappler::io::ProducerTraits<filesystem::File>::TellFn(void*)": "SPFilesystem.h",
		"::stappler::io::ProducerTraits<filesystem::File>::type": "SPFilesystem.h",
		"::stappler::io::ProducerTraits<typename>": "SPIOProducer.h",
		"::stappler::io::ProducerTraits<typename>::ReadFn(void*,uint8_t*,size_t)": "SPIOProducer.h",
		"::stappler::io::ProducerTraits<typename>::SeekFn(void*,int64_t,stappler::io::Seek)": "SPIOProducer.h",
		"::stappler::io::ProducerTraits<typename>::TellFn(void*)": "SPIOProducer.h",
		"::stappler::io::ProducerTraits<typename>::traits_type": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsOverload<class>": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsOverload<class>::ReadFn(void*,uint8_t*,size_t)": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsOverload<class>::SeekFn(void*,int64_t,stappler::io::Seek)": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsOverload<class>::TellFn(void*)": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsResolution<typename>": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsResolution<typename>::type": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsStream": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsStream::ReadFn(void*,uint8_t*,size_t)": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsStream::SeekFn(void*,int64_t,stappler::io::Seek)": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsStream::TellFn(void*)": "SPIOProducer.h",
		"::stappler::io::ProducerTraitsStream::stream_type": "SPIOProducer.h",
		"::stappler::io::ReadFunction<class>(T&,uint8_t*,size_t)": "SPIOProducer.h",
		"::stappler::io::Seek": "SPIOCommon.h",
		"::stappler::io::SeekFunction<class>(T&,int64_t,stappler::io::Seek)": "SPIOProducer.h",
		"::stappler::io::TellFunction<class>(T&)": "SPIOProducer.h",
		"::stappler::io::WriteFunction<typename>(T&,uint8_t const*,size_t)": "SPIOConsumer.h",
		"::stappler::io::clear_fn": "SPIOCommon.h",
		"::stappler::io::data_fn": "SPIOCommon.h",
		"::stappler::io::flush_fn": "SPIOCommon.h",
		"::stappler::io::prepare_fn": "SPIOCommon.h",
		"::stappler::io::read(stappler::io::Producer const&,Callback<void (const stappler::io::Buffer &)> const&)": "SPIO.h",
		"::stappler::io::read(stappler::io::Producer const&,stappler::io::Buffer const&,Callback<void (const stappler::io::Buffer &)> const&)": "SPIO.h",
		"::stappler::io::read(stappler::io::Producer const&,stappler::io::Consumer const&)": "SPIO.h",
		"::stappler::io::read(stappler::io::Producer const&,stappler::io::Consumer const&,Callback<void (const stappler::io::Buffer &)> const&)": "SPIO.h",
		"::stappler::io::read(stappler::io::Producer const&,stappler::io::Consumer const&,stappler::io::Buffer const&)": "SPIO.h",
		"::stappler::io::read(stappler::io::Producer const&,stappler::io::Consumer const&,stappler::io::Buffer const&,Callback<void (const stappler::io::Buffer &)> const&)": "SPIO.h",
		"::stappler::io::read_fn": "SPIOCommon.h",
		"::stappler::io::save_fn": "SPIOCommon.h",
		"::stappler::io::seek_fn": "SPIOCommon.h",
		"::stappler::io::size_fn": "SPIOCommon.h",
		"::stappler::io::tread<typename>(stappler::io::Producer const&,T const&)": "SPIO.h",
		"::stappler::io::tread<typename>(stappler::io::Producer const&,stappler::io::Buffer const&,T const&)": "SPIO.h",
		"::stappler::io::tread<typename>(stappler::io::Producer const&,stappler::io::Consumer const&,T const&)": "SPIO.h",
		"::stappler::io::tread<typename>(stappler::io::Producer const&,stappler::io::Consumer const&,stappler::io::Buffer const&,T const&)": "SPIO.h",
		"::stappler::io::write_fn": "SPIOCommon.h",
		"::stappler::isnan<typename>(T&&)": "SPCore.h",
		"::stappler::log::CustomLog": "SPLog.h",
		"::stappler::log::CustomLog::CustomLog(stappler::log::CustomLog const&)": "SPLog.h",
		"::stappler::log::CustomLog::CustomLog(stappler::log::CustomLog&&)": "SPLog.h",
		"::stappler::log::CustomLog::CustomLog(stappler::log::CustomLog::log_fn)": "SPLog.h",
		"::stappler::log::CustomLog::Type": "SPLog.h",
		"::stappler::log::CustomLog::VA": "SPLog.h",
		"::stappler::log::CustomLog::VA::": "SPLog.h",
		"::stappler::log::CustomLog::VA::VA()": "SPLog.h",
		"::stappler::log::CustomLog::VA::args": "SPLog.h",
		"::stappler::log::CustomLog::VA::format": "SPLog.h",
		"::stappler::log::CustomLog::VA::text": "SPLog.h",
		"::stappler::log::CustomLog::fn": "SPLog.h",
		"::stappler::log::CustomLog::log_fn": "SPLog.h",
		"::stappler::log::CustomLog::manager": "SPLog.h",
		"::stappler::log::CustomLog::operator=(stappler::log::CustomLog const&)": "SPLog.h",
		"::stappler::log::CustomLog::operator=(stappler::log::CustomLog&&)": "SPLog.h",
		"::stappler::log::CustomLog::~CustomLog()": "SPLog.h",
		"::stappler::log::LogType": "SPLog.h",
		"::stappler::log::debug<typename>(stappler::StringView const&,Args &&...)": "SPLog.h",
		"::stappler::log::error<typename>(stappler::StringView const&,Args &&...)": "SPLog.h",
		"::stappler::log::fatal<typename>(stappler::StringView const&,Args &&...)": "SPLog.h",
		"::stappler::log::format(stappler::log::LogType,stappler::StringView const&,char const*,...)": "SPLog.h",
		"::stappler::log::info<typename>(stappler::StringView const&,Args &&...)": "SPLog.h",
		"::stappler::log::setLogFilterMask(std::bitset<6>&&)": "SPLog.h",
		"::stappler::log::text(stappler::log::LogType,stappler::StringView const&,stappler::StringView const&)": "SPLog.h",
		"::stappler::log::verbose<typename>(stappler::StringView const&,Args &&...)": "SPLog.h",
		"::stappler::log::warn<typename>(stappler::StringView const&,Args &&...)": "SPLog.h",
		"::stappler::makeSpanView<typename,size_t>(std::array<Type, Size> const&)": "SPSpanView.h",
		"::stappler::makeSpanView<typename>(Type const*,size_t)": "SPSpanView.h",
		"::stappler::makeSpanView<typename>(memory::vector<Type> const&)": "SPSpanView.h",
		"::stappler::makeSpanView<typename>(std::vector<Type> const&)": "SPSpanView.h",
		"::stappler::math::MATH_FLOAT_SMALL": "SPCore.h",
		"::stappler::math::MATH_TOLERANCE": "SPCore.h",
		"::stappler::math::MovingAverage<size_t,typename>": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::MovingAverage()": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::_current": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::_values": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::addValue(T)": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::dropValues()": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::getAverage(bool) const": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::range(bool)": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::reset(T const&)": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::size() const": "SPMovingAverage.h",
		"::stappler::math::MovingAverage<size_t,typename>::step(T)": "SPMovingAverage.h",
		"::stappler::math::align<typename>(T,T)": "SPCore.h",
		"::stappler::math::clamp<class,class>(T const&,T const&,T const&,Compare)": "SPCore.h",
		"::stappler::math::clamp<class>(T const&,T const&,T const&)": "SPCore.h",
		"::stappler::math::clamp_distance<class,class>(T const&,T const&,T const&,Compare)": "SPCore.h",
		"::stappler::math::clamp_distance<class,class>(T const&,T const&,T const&,Compare,T const&)": "SPCore.h",
		"::stappler::math::clamp_distance<class>(T const&,T const&,T const&)": "SPCore.h",
		"::stappler::math::clamp_distance<class>(T const&,T const&,T const&,T const&)": "SPCore.h",
		"::stappler::math::lerp<typename>(T const&,T const&,float)": "SPCore.h",
		"::stappler::math::npot(uint32_t)": "SPCore.h",
		"::stappler::math::npot(uint64_t)": "SPCore.h",
		"::stappler::math::smooth<typename>(T const&,T const&,float,float)": "SPCore.h",
		"::stappler::math::to_deg<typename>(T)": "SPCore.h",
		"::stappler::math::to_rad<typename>(T)": "SPCore.h",
		"::stappler::maxOf<class>()": "SPCore.h",
		"::stappler::mem_pool::AllocBase": "SPMemory.h",
		"::stappler::mem_pool::Array": "SPMemory.h",
		"::stappler::mem_pool::Bitmap": "SPBitmap.h",
		"::stappler::mem_pool::Bytes": "SPMemory.h",
		"::stappler::mem_pool::CharGroupId": "SPMemory.h",
		"::stappler::mem_pool::Dictionary": "SPMemory.h",
		"::stappler::mem_pool::EncodeFormat": "SPMemory.h",
		"::stappler::mem_pool::Function<typename>": "SPMemory.h",
		"::stappler::mem_pool::Interface": "SPString.h",
		"::stappler::mem_pool::Map<typename,typename,typename>": "SPMemory.h",
		"::stappler::mem_pool::Mutex": "SPMemory.h",
		"::stappler::mem_pool::NetworkHandle": "SPNetworkHandle.h",
		"::stappler::mem_pool::OutputStream": "SPMemory.h",
		"::stappler::mem_pool::Ref": "SPRef.h",
		"::stappler::mem_pool::Set<typename,typename>": "SPMemory.h",
		"::stappler::mem_pool::String": "SPString.h",
		"::stappler::mem_pool::StringStream": "SPString.h",
		"::stappler::mem_pool::Subscription": "SPSubscription.h",
		"::stappler::mem_pool::Value": "SPMemory.h",
		"::stappler::mem_pool::Vector<typename>": "SPMemory.h",
		"::stappler::mem_pool::WideString": "SPString.h",
		"::stappler::mem_pool::allocator": "SPMemory.h",
		"::stappler::mem_pool::dict<typename,typename,typename>": "SPMemory.h",
		"::stappler::mem_pool::emplace_ordered(Vector<stappler::mem_pool::Value>&,stappler::mem_pool::Value const&)": "SPMemory.h",
		"::stappler::mem_pool::emplace_ordered<typename>(Vector<T>&,T)": "SPMemory.h",
		"::stappler::mem_pool::exists_ordered<typename>(Vector<T>&,T const&)": "SPMemory.h",
		"::stappler::mem_pool::perform<typename>(Callback const&,memory::pool_t*)": "SPMemory.h",
		"::stappler::mem_pool::pool": "SPMemory.h",
		"::stappler::mem_pool::to_string::toString<typename,typename>(T,Args &&...)": "SPString.h",
		"::stappler::mem_pool::to_string::toString<typename>(T const&)": "SPString.h",
		"::stappler::mem_pool::to_string::toStringStream<typename,typename>(mem_pool::StringStream&,T,Args &&...)": "SPString.h",
		"::stappler::mem_pool::to_string::toStringStream<typename>(mem_pool::StringStream&,T)": "SPString.h",
		"::stappler::mem_std::AllocBase": "SPMemory.h",
		"::stappler::mem_std::Array": "SPMemory.h",
		"::stappler::mem_std::Bitmap": "SPBitmap.h",
		"::stappler::mem_std::Bytes": "SPMemory.h",
		"::stappler::mem_std::Dictionary": "SPMemory.h",
		"::stappler::mem_std::EncodeFormat": "SPMemory.h",
		"::stappler::mem_std::Function<typename>": "SPMemory.h",
		"::stappler::mem_std::HashMap<typename,typename>": "SPMemory.h",
		"::stappler::mem_std::HashSet<typename>": "SPMemory.h",
		"::stappler::mem_std::Interface": "SPString.h",
		"::stappler::mem_std::Map<typename,typename,typename>": "SPMemory.h",
		"::stappler::mem_std::Mutex": "SPMemory.h",
		"::stappler::mem_std::NetworkHandle": "SPNetworkHandle.h",
		"::stappler::mem_std::OutputStream": "SPMemory.h",
		"::stappler::mem_std::Ref": "SPRef.h",
		"::stappler::mem_std::Set<typename,typename>": "SPMemory.h",
		"::stappler::mem_std::String": "SPString.h",
		"::stappler::mem_std::StringStream": "SPString.h",
		"::stappler::mem_std::Subscription": "SPSubscription.h",
		"::stappler::mem_std::Value": "SPMemory.h",
		"::stappler::mem_std::Vector<typename>": "SPMemory.h",
		"::stappler::mem_std::WideString": "SPString.h",
		"::stappler::mem_std::allocator": "SPMemory.h",
		"::stappler::mem_std::emplace_ordered(Vector<stappler::mem_std::Value>&,stappler::mem_std::Value const&)": "SPMemory.h",
		"::stappler::mem_std::emplace_ordered<typename>(Vector<T>&,T)": "SPMemory.h",
		"::stappler::mem_std::exists_ordered<typename>(Vector<T>&,T const&)": "SPMemory.h",
		"::stappler::mem_std::perform<typename>(Callback const&,memory::pool_t*)": "SPMemory.h",
		"::stappler::mem_std::pool": "SPMemory.h",
		"::stappler::mem_std::to_string::toString<typename,typename>(T,Args &&...)": "SPString.h",
		"::stappler::mem_std::to_string::toString<typename>(T const&)": "SPString.h",
		"::stappler::mem_std::to_string::toStringStream<typename,typename>(mem_std::StringStream&,T,Args &&...)": "SPString.h",
		"::stappler::mem_std::to_string::toStringStream<typename>(mem_std::StringStream&,T)": "SPString.h",
		"::stappler::memleak::foreachBacktrace(RefBase<memory::PoolInterface> const*,Callback<void (uint64_t, stappler::Time, const std::vector<std::string> &)> const&)": "SPRef.h",
		"::stappler::memleak::foreachBacktrace(RefBase<memory::StandartInterface> const*,Callback<void (uint64_t, stappler::Time, const std::vector<std::string> &)> const&)": "SPRef.h",
		"::stappler::memleak::getNextRefId()": "SPRef.h",
		"::stappler::memleak::releaseBacktrace(RefBase<memory::PoolInterface> const*,uint64_t)": "SPRef.h",
		"::stappler::memleak::releaseBacktrace(RefBase<memory::StandartInterface> const*,uint64_t)": "SPRef.h",
		"::stappler::memleak::retainBacktrace(RefBase<memory::PoolInterface> const*)": "SPRef.h",
		"::stappler::memleak::retainBacktrace(RefBase<memory::StandartInterface> const*)": "SPRef.h",
		"::stappler::memory::AllocBase": "SPMemAlloc.h",
		"::stappler::memory::AllocBase::operator delete(void*)": "SPMemAlloc.h",
		"::stappler::memory::AllocBase::operator new(size_t)": "SPMemAlloc.h",
		"::stappler::memory::AllocBase::operator new(size_t,std::nothrow_t const&)": "SPMemAlloc.h",
		"::stappler::memory::AllocBase::operator new(size_t,void*)": "SPMemAlloc.h",
		"::stappler::memory::AllocPool": "SPMemAlloc.h",
		"::stappler::memory::AllocPool::cleanupObjectFromPool<typename>(void*)": "SPMemAlloc.h",
		"::stappler::memory::AllocPool::getCurrentPool()": "SPMemAlloc.h",
		"::stappler::memory::AllocPool::isCustomPool(stappler::mempool::base::pool_t*)": "SPMemAlloc.h",
		"::stappler::memory::AllocPool::operator delete(void*)": "SPMemAlloc.h",
		"::stappler::memory::AllocPool::operator new(size_t)": "SPMemAlloc.h",
		"::stappler::memory::AllocPool::operator new(size_t,stappler::mempool::base::pool_t*)": "SPMemAlloc.h",
		"::stappler::memory::AllocPool::operator new(size_t,void*)": "SPMemAlloc.h",
		"::stappler::memory::AllocPool::registerCleanupDestructor<typename>(T*,stappler::mempool::base::pool_t*)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::AllocFlag": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::Allocator()": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::Allocator(stappler::mempool::base::pool_t*)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::Allocator<class>(Allocator<B> const&)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::Allocator<class>(Allocator<B>&&)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::__allocate(size_t&)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::__allocate(size_t,size_t&)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::__deallocate(T*,size_t,size_t)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::address(stappler::memory::Allocator::const_reference) const": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::address(stappler::memory::Allocator::reference) const": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::allocate(size_t)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::const_pointer": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::const_reference": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::const_void_pointer": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::construct<typename>(stappler::memory::Allocator::pointer,Args &&...)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::copy(T*,T const*,size_t)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::copy_rewrite(T*,size_t,T const*,size_t)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::deallocate(T*,size_t)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::destroy(stappler::memory::Allocator::pointer)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::destroy(stappler::memory::Allocator::pointer,size_t)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::difference_type": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::flip(stappler::memory::Allocator::AllocFlag)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::getPool() const": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::max_size() const": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::move(T*,T*,size_t)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::move_rewrite(T*,size_t,T*,size_t)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::operator pool_t*() const": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::operator!=<class>(Allocator<B> const&) const": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::operator=<class>(Allocator<B> const&)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::operator=<class>(Allocator<B>&&)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::operator==<class>(Allocator<B> const&) const": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::pointer": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::pool": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::pool_ptr(stappler::mempool::base::pool_t*)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::rebind<class>": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::rebind<class>::other": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::reference": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::reset(stappler::memory::Allocator::AllocFlag)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::set(stappler::memory::Allocator::AllocFlag)": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::size_type": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::test(stappler::memory::Allocator::AllocFlag) const": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::value_type": "SPMemAlloc.h",
		"::stappler::memory::Allocator<class>::void_pointer": "SPMemAlloc.h",
		"::stappler::memory::Allocator_SelectFirst<A,Args...>::Allocator_SelectFirst<A,Args...>": "SPMemAlloc.h",
		"::stappler::memory::Allocator_SelectFirst<A,Args...>::type": "SPMemAlloc.h",
		"::stappler::memory::Allocator_protect_construct<typename>": "SPMemAlloc.h",
		"::stappler::memory::Allocator_protect_construct<typename>::value": "SPMemAlloc.h",
		"::stappler::memory::PoolInterface": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::AllocBaseType": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::ArrayType<typename>": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::BasicStringType<typename>": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::BytesType": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::DictionaryType<typename>": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::FunctionType<typename>": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::MapType<typename,typename,typename>": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::SetType<typename,typename>": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::StringStreamType": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::StringType": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::VectorType<typename>": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::WideStringType": "SPMemInterface.h",
		"::stappler::memory::PoolInterface::usesMemoryPool()": "SPMemInterface.h",
		"::stappler::memory::PriorityQueue<typename>": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::AlignedStorage": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::AlignedStorage::buffer": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockFnPtr": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface::clear()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface::lock()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface::lockFn": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface::lockPtr": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface::operator!=(stappler::memory::PriorityQueue::LockInterface const&) const": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface::operator==(stappler::memory::PriorityQueue::LockInterface const&) const": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface::unlock()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::LockInterface::unlockFn": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::Node": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::Node::block": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::Node::next": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::Node::priority": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::Node::storage": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::NodeInterface": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::NodeInterface::first": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::NodeInterface::last": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::NodeInterface::lock": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::PreallocatedNodes": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::PriorityQueue()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::PriorityQueue(PriorityQueue<Value>&&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::PriorityQueue(const PriorityQueue<Value>&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::PriorityType": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::StorageBlock": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::StorageBlock::nodes": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::StorageBlock::used": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::StorageNodes": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::_capacity": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::_free": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::_preallocated": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::_queue": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::allocateBlock(std::unique_lock<LockInterface>&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::allocateNode()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::capacity() const": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::clear()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::deallocateBlock(std::unique_lock<LockInterface>&,stappler::memory::PriorityQueue::StorageBlock*)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::empty()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::empty<class>(std::unique_lock<T>&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::foreach(callback<void (stappler::memory::PriorityQueue::PriorityType, const Value &)> const&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::freeNode(stappler::memory::PriorityQueue::Node*)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::free_capacity()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::initNodes(stappler::memory::PriorityQueue::Node*,stappler::memory::PriorityQueue::Node*,stappler::memory::PriorityQueue::StorageBlock*)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::operator=(PriorityQueue<Value>&&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::operator=(const PriorityQueue<Value>&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::popNode()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::pop_direct(callback<void (stappler::memory::PriorityQueue::PriorityType, Value &&)> const&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::pop_prefix(callback<void (stappler::memory::PriorityQueue::PriorityType, Value &&)> const&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::push<typename>(stappler::memory::PriorityQueue::PriorityType,bool,Args &&...)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::pushNode(stappler::memory::PriorityQueue::Node*,bool)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::setFreeLocking(stappler::memory::PriorityQueue::LockFnPtr,stappler::memory::PriorityQueue::LockFnPtr,void*)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::setFreeLocking(std::mutex&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::setLocking(stappler::memory::PriorityQueue::LockFnPtr,stappler::memory::PriorityQueue::LockFnPtr,void*)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::setLocking(std::mutex&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::setQueueLocking(stappler::memory::PriorityQueue::LockFnPtr,stappler::memory::PriorityQueue::LockFnPtr,void*)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::setQueueLocking(std::mutex&)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue<typename>::~PriorityQueue()": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue_lock_noOp(void*)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue_lock_std_mutex(void*)": "SPMemPriorityQueue.h",
		"::stappler::memory::PriorityQueue_unlock_std_mutex(void*)": "SPMemPriorityQueue.h",
		"::stappler::memory::SUCCESS": "SPMemPoolApi.h",
		"::stappler::memory::StandartInterface": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::AllocBaseType": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::ArrayType<typename>": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::BasicStringType<typename>": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::BytesType": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::DictionaryType<typename>": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::FunctionType<typename>": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::MapType<typename,typename,typename>": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::SetType<typename,typename>": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::StringStreamType": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::StringType": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::VectorType<typename>": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::WideStringType": "SPMemInterface.h",
		"::stappler::memory::StandartInterface::usesMemoryPool()": "SPMemInterface.h",
		"::stappler::memory::Storage<typename>": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::Image": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::Image::_value": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::Storage()": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::Storage(stappler::nullptr_t)": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::_storage": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::addr()": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::addr() const": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::ptr()": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::ptr() const": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::ref()": "SPMemAlloc.h",
		"::stappler::memory::Storage<typename>::ref() const": "SPMemAlloc.h",
		"::stappler::memory::__basic_string_fill<CharType,InputIterator,false>::__basic_string_fill<CharType,InputIterator,false>": "SPMemString.h",
		"::stappler::memory::__basic_string_fill<CharType,InputIterator,false>::fill(basic_string<CharType>&,InputIterator,InputIterator)": "SPMemString.h",
		"::stappler::memory::__basic_string_fill<CharType,InputIterator,true>::__basic_string_fill<CharType,InputIterator,true>": "SPMemString.h",
		"::stappler::memory::__basic_string_fill<CharType,InputIterator,true>::fill(basic_string<CharType>&,InputIterator,InputIterator)": "SPMemString.h",
		"::stappler::memory::basic_ostringbuf<typename>": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::_buf": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::allocator_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::basic_ostringbuf(CharType*,stappler::memory::basic_ostringbuf::size_type,stappler::memory::basic_ostringbuf::allocator_type const&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::basic_ostringbuf(basic_ostringbuf<CharType>&&,stappler::memory::basic_ostringbuf::allocator_type const&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::basic_ostringbuf(const basic_ostringbuf<CharType>&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::basic_ostringbuf(stappler::memory::basic_ostringbuf::size_type,stappler::memory::basic_ostringbuf::allocator_type const&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::char_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::clear()": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::data()": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::data() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::empty() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::get_allocator() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::int_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::make_flush()": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::mem_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::operator=(basic_ostringbuf<CharType>&&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::operator=(const basic_ostringbuf<CharType>&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::overflow(stappler::memory::basic_ostringbuf::int_type)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::reserve(size_t)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::size() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::size_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::storage_allocator_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::storage_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::str() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::streambuf_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::string_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::sync()": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::traits_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf<typename>::~basic_ostringbuf()": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringbuf_bufsize": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::_buf": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::allocator_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::basic_ostringstream(CharType*,stappler::memory::basic_ostringstream::size_type,stappler::memory::basic_ostringstream::allocator_type const&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::basic_ostringstream(basic_ostringstream<CharType>&&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::basic_ostringstream(const basic_ostringstream<CharType>&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::basic_ostringstream(stappler::memory::basic_ostringstream::size_type,stappler::memory::basic_ostringstream::allocator_type const&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::char_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::clear()": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::data()": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::data() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::empty() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::get_allocator() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::int_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::off_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::operator=(basic_ostringstream<CharType>&&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::operator=(const basic_ostringstream<CharType>&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::ostream_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::pos_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::rdbuf() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::reserve(size_t)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::size() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::size_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::str() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::string_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::stringbuf_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::swap(basic_ostringstream<CharType>&)": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::traits_type": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::weak() const": "SPMemStringStream.h",
		"::stappler::memory::basic_ostringstream<typename>::~basic_ostringstream()": "SPMemStringStream.h",
		"::stappler::memory::basic_string<CharType>::npos": "SPMemString.h",
		"::stappler::memory::basic_string<typename>": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::_mem": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::allocator_type": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::append(InitializerList<stappler::memory::basic_string::charT>)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::append(const basic_string<CharType>&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::append(const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::append(stappler::memory::basic_string::charT const*)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::append(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::append(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::append<class>(InputIterator,InputIterator)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign(InitializerList<stappler::memory::basic_string::charT>)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign(basic_string<CharType>&&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign(const basic_string<CharType>&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign(const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign(stappler::memory::basic_string::charT const*)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign<class>(InputIterator,InputIterator)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign_weak(CharType const*)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign_weak(CharType const*,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign_wrap(CharType*,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::assign_wrap(CharType*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::at(stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::at(stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::back()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::back() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(InitializerList<stappler::memory::basic_string::charT>,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(basic_string<CharType>&&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(basic_string<CharType>&&,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::self const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::self const&,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::self const&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string<class>(InputIterator,InputIterator,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string<int>(stappler::memory::basic_string::charT const(&)[N],stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::basic_string<int>(stappler::memory::basic_string::charT(&)[N],stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::begin()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::begin() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::c_str() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::capacity() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::cbegin() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::cend() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::charT": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::clear()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::compare(const basic_string<CharType>&) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::charT const*) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,const basic_string<CharType>&) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::compare(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::const_iterator": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::const_pointer": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::const_reference": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::const_reverse_iterator": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::copy(stappler::memory::basic_string::charT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::crbegin() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::crend() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::data()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::data() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::emplace_back(CharType)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::empty() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::end()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::end() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::erase(stappler::memory::basic_string::const_iterator)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::erase(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::erase(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::extract()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find(_CharT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_not_of(_CharT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_not_of(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_not_of(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_not_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_not_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_not_of(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_of(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_of(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_first_of(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_not_of(_CharT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_not_of(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_not_of(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_not_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_not_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_not_of(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_of(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_of(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_of(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::find_last_of(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::front()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::front() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::get_allocator() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::const_iterator,std::initializer_list<charT>)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,const basic_string<CharType>&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::insert<class>(stappler::memory::basic_string::const_iterator,InputIt,InputIt)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::is_weak() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::iterator": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::length() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::make_weak(CharType const*,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::make_weak(CharType const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::mem_type": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::npos": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator+=(InitializerList<stappler::memory::basic_string::charT>)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator+=(const basic_string<CharType>&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator+=(stappler::memory::basic_string::charT const*)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator+=(stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator=(InitializerList<stappler::memory::basic_string::charT>)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator=(basic_string<CharType>&&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator=(const basic_string<CharType>&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator=(stappler::memory::basic_string::charT const*)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator=(stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator[](stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::operator[](stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::pointer": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::pop_back()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::push_back(CharType)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rbegin()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rbegin() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::reference": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rend()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rend() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,InitializerList<stappler::memory::basic_string::charT>)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,const basic_string<CharType>&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::charT const*)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,const basic_string<CharType>&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,const basic_string<CharType>&,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::replace<class>(stappler::memory::basic_string::const_iterator,stappler::memory::basic_string::const_iterator,InputIt,InputIt)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::reserve(stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::resize(stappler::memory::basic_string::size_type)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::resize(stappler::memory::basic_string::size_type,stappler::memory::basic_string::charT)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::reverse_iterator": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rfind(_CharT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rfind(const _CharT*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rfind(const basic_string<CharType>&,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rfind(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rfind(stappler::memory::basic_string::charT const*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::rfind(stappler::memory::basic_string::charT,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::self": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::shrink_to_fit()": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::size() const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::size_type": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::substr(stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type) const": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::traits_type": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::value_type": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::wrap(CharType*,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::wrap(CharType*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::basic_string<typename>::wrap(CharType*,stappler::memory::basic_string::size_type,stappler::memory::basic_string::size_type,stappler::memory::basic_string::allocator_type const&)": "SPMemString.h",
		"::stappler::memory::bytes": "SPMemVector.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::FunctionPointer": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback(callback<type-parameter-0-0 (type-parameter-0-1...)> const&)": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback(callback<type-parameter-0-0 (type-parameter-0-1...)>&&)": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback(stappler::nullptr_t)": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback<ReturnType(ArgumentTypes...)>": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback<typename,typename>(FunctionType(ClassType::*))": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::callback<typename>(FunctionT const&)": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::mCallback": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::mFunctor": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::makeMemberFunction<typename,typename,typename>(FunctionType(ClassType::*))": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator bool() const": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator()(ArgumentTypes...) const": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=(callback<type-parameter-0-0 (type-parameter-0-1...)> const&)": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=(callback<type-parameter-0-0 (type-parameter-0-1...)>&&)": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=(stappler::nullptr_t)": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=<typename,typename>(FunctionType(ClassType::*))": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::operator=<typename>(FunctionT const&)": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::signature_type": "SPMemFunction.h",
		"::stappler::memory::callback<ReturnType(ArgumentTypes...)>::~callback()": "SPMemFunction.h",
		"::stappler::memory::check_signature<Func,Ret(Args...),typenamestd::enable_if<std::is_convertible<decltype(std::declval<Func>()(std::declval<Args>()...)),Ret>::value,void>::type>::check_signature<Func,Ret(Args...),typenamestd::enable_if<std::is_convertible<decltype(std::declval<Func>()(std::declval<Args>()...)),Ret>::value,void>::type>": "SPMemFunction.h",
		"::stappler::memory::check_signature<typename,typename,typename>": "SPMemFunction.h",
		"::stappler::memory::dict<typename,typename,typename>": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::_comp": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::_data": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::allocator_type": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::begin()": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::begin() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::cbegin() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::cend() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::clear()": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::comparator_type": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::const_iterator": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::const_pointer": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::const_reference": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::const_reverse_iterator": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::count<class>(K const&) const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::crbegin() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::crend() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict()": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict(Comp const&,stappler::memory::dict::allocator_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict(InitializerList<stappler::memory::dict::value_type>,Comp const&,stappler::memory::dict::allocator_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict(InitializerList<stappler::memory::dict::value_type>,stappler::memory::dict::allocator_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict(const dict<Key, Value, Comp>&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict(const dict<Key, Value, Comp>&,stappler::memory::dict::allocator_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict(dict<Key, Value, Comp>&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict(dict<Key, Value, Comp>&&,stappler::memory::dict::allocator_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict(stappler::memory::dict::allocator_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict<class>(InputIterator,InputIterator,Comp const&,stappler::memory::dict::allocator_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::dict<class>(InputIterator,InputIterator,stappler::memory::dict::allocator_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::difference_type": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_assign<class,class>(stappler::memory::dict::iterator,T&&,Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_count<class>(K const&) const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_equal_check<typename,typename>(L const&,R const&) const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_erase<class>(K const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_find<class>(K const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_find<class>(K const&) const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_insert<class,class>(Pair<A, B> const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_insert<class,class>(Pair<A, B>&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_insert<class,class>(stappler::memory::dict::const_iterator,Pair<A, B> const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_insert<class,class>(stappler::memory::dict::const_iterator,Pair<A, B>&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_insert_or_assign<typename,class>(K&&,M&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_insert_or_assign<typename,class>(stappler::memory::dict::const_iterator,K&&,M&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_try_emplace<typename,typename>(K&&,Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::do_try_emplace<typename,typename>(stappler::memory::dict::const_iterator,K&&,Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::emplace<class>(Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::emplace_hint<class>(stappler::memory::dict::const_iterator,Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::empty() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::end()": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::end() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::equal_range<class>(K const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::equal_range<class>(K const&) const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::erase(stappler::memory::dict::const_iterator)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::erase(stappler::memory::dict::const_iterator,stappler::memory::dict::const_iterator)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::erase(stappler::memory::dict::iterator)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::erase<class>(K const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::find<class>(K const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::find<class>(K const&) const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::get_allocator() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::insert(InitializerList<stappler::memory::dict::value_type>)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::insert<class>(InputIt,InputIt)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::insert<class>(P&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::insert<class>(stappler::memory::dict::const_iterator,P&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::insert_or_assign<class>(stappler::memory::dict::const_iterator,stappler::memory::dict::key_type const&,M&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::insert_or_assign<class>(stappler::memory::dict::const_iterator,stappler::memory::dict::key_type&&,M&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::insert_or_assign<class>(stappler::memory::dict::key_type const&,M&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::insert_or_assign<class>(stappler::memory::dict::key_type&&,M&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::iterator": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::key_compare": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::key_type": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::lower_bound<class>(K const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::lower_bound<class>(K const&) const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::mapped_type": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::operator=(InitializerList<stappler::memory::dict::value_type>)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::operator=(const dict<Key, Value, Comp>&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::operator=(dict<Key, Value, Comp>&&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::pointer": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::rbegin()": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::rbegin() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::reference": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::rend()": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::rend() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::reserve(stappler::memory::dict::size_type)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::reverse_iterator": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::size() const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::size_type": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::try_emplace<class>(stappler::memory::dict::const_iterator,stappler::memory::dict::key_type const&,Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::try_emplace<class>(stappler::memory::dict::const_iterator,stappler::memory::dict::key_type&&,Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::try_emplace<class>(stappler::memory::dict::key_type const&,Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::try_emplace<class>(stappler::memory::dict::key_type&&,Args &&...)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::upper_bound<class>(K const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::upper_bound<class>(K const&) const": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>::comp": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>::operator()(T const&,stappler::memory::dict::value_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>::operator()(stappler::memory::dict::value_type const&,T const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::value_comparator<typename>::operator()(stappler::memory::dict::value_type const&,stappler::memory::dict::value_type const&)": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::value_type": "SPMemDict.h",
		"::stappler::memory::dict<typename,typename,typename>::vector_type": "SPMemDict.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::OptBufferSize": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::allocator_type": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::clear()": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::copy_pointer": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::destroy_pointer": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function(function<type-parameter-0-0 (type-parameter-0-1...)> const&,stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type const&)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function(function<type-parameter-0-0 (type-parameter-0-1...)>&&,stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type const&)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function(stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type const&)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function(stappler::nullptr_t,stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type const&)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::function<ReturnType(ArgumentTypes...)>": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits::copy": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits::destroy": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits::invoke": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::functor_traits::move": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::get_allocator() const": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::invoke_pointer": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::mAllocator": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::mBuffer": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::mCallback": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::makeFreeFunction<typename>(FunctionT&&,stappler::memory::function<type-parameter-0-0 (type-parameter-0-1...)>::allocator_type&,uint8_t*)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::makeFunctionTraits<typename>()": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::move_pointer": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator bool() const": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator!=(stappler::nullptr_t) const": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator()(ArgumentTypes...) const": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator=(function<type-parameter-0-0 (type-parameter-0-1...)> const&)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator=(function<type-parameter-0-0 (type-parameter-0-1...)>&&)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator=(stappler::nullptr_t)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator=<typename>(FunctionT&&)": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::operator==(stappler::nullptr_t) const": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::signature_type": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::traits_callback": "SPMemFunction.h",
		"::stappler::memory::function<ReturnType(ArgumentTypes...)>::~function()": "SPMemFunction.h",
		"::stappler::memory::impl::mem_large<typename,size_t>": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::_allocated": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::_ptr": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::_used": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::allocator": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::assign(stappler::memory::impl::mem_large::allocator&,stappler::memory::impl::mem_large::const_pointer,stappler::memory::impl::mem_large::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::assign_mem(stappler::memory::impl::mem_large::pointer,stappler::memory::impl::mem_large::size_type,stappler::memory::impl::mem_large::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::assign_weak(stappler::memory::impl::mem_large::const_pointer,stappler::memory::impl::mem_large::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::assign_weak(stappler::memory::impl::mem_large::pointer,stappler::memory::impl::mem_large::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::capacity() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::clear_dealloc(stappler::memory::impl::mem_large::allocator&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::const_pointer": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::data()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::data() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::drop_unused()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::empty() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::extract()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::force_clear()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::grow_alloc(stappler::memory::impl::mem_large::allocator&,stappler::memory::impl::mem_large::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::is_weak() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::mem_large()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::mem_large(stappler::memory::impl::mem_large::self const&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::mem_large(stappler::memory::impl::mem_large::self&&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::modify_size(intptr_t)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::move_assign(stappler::memory::impl::mem_large::allocator&,stappler::memory::impl::mem_large::pointer,stappler::memory::impl::mem_large::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::operator=(stappler::memory::impl::mem_large::self const&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::operator=(stappler::memory::impl::mem_large::self&&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::pointer": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::reserve(stappler::memory::impl::mem_large::allocator&,stappler::memory::impl::mem_large::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::self": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::set_size(size_t)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::size() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_large<typename,size_t>::size_type": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::allocator": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::assign(stappler::memory::impl::mem_small::allocator&,stappler::memory::impl::mem_small::const_pointer,stappler::memory::impl::mem_small::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::capacity() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::const_pointer": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::data()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::data() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::drop_unused()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::force_clear()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::max_capacity()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::modify_size(intptr_t)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::move_assign(stappler::memory::impl::mem_small::allocator&,stappler::memory::impl::mem_small::pointer,stappler::memory::impl::mem_small::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::pointer": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::self": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::set_size(size_t)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::size() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::size_type": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_small<typename,size_t>::storage": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::_allocator": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::allocator": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::assign(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, false>::const_pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, false>::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::base": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::clear()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::const_pointer": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::get_soo_size()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::mem_soo_iface(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, false>::allocator const&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::mem_soo_iface<Type,Extra,false>": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::perform_move(mem_soo_iface<type-parameter-0-0, Extra, false>&&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::pointer": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::reserve(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, false>::size_type,bool)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::reserve_block_optimal()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::size_type": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,false>::~mem_soo_iface()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::_allocator": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::_large": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::_small": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::allocator": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::assign(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::const_pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::assign_mem(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::assign_weak(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::const_pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::assign_weak(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::pointer,stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::capacity() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::clear()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::clear_dealloc(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::allocator&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::const_pointer": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::data()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::data() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::empty() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::extract()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::force_clear()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::get_soo_size()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::is_large() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::is_small() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::is_weak() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::large_mem": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::mem_soo_iface(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::allocator const&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::mem_soo_iface<Type,Extra,true>": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::modify_size(intptr_t)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::perform_move(mem_soo_iface<type-parameter-0-0, Extra, true>&&)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::pointer": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::reserve(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type,bool)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::set_large_flag()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::set_large_flag_force()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::set_size(stappler::memory::impl::mem_soo_iface<type-parameter-0-0, Extra, true>::size_type)": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::set_small_flag()": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::size() const": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::size_type": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::small_mem": "SPMemStorageMem.hpp",
		"::stappler::memory::impl::mem_soo_iface<Type,Extra,true>::~mem_soo_iface()": "SPMemStorageMem.hpp",
		"::stappler::memory::is_char_pointer<char*>::Type": "SPMemString.h",
		"::stappler::memory::is_char_pointer<char*>::is_char_pointer<char*>": "SPMemString.h",
		"::stappler::memory::is_char_pointer<char16_t*>::Type": "SPMemString.h",
		"::stappler::memory::is_char_pointer<char16_t*>::is_char_pointer<char16_t*>": "SPMemString.h",
		"::stappler::memory::is_char_pointer<char32_t*>::Type": "SPMemString.h",
		"::stappler::memory::is_char_pointer<char32_t*>::is_char_pointer<char32_t*>": "SPMemString.h",
		"::stappler::memory::is_char_pointer<constchar*>::Type": "SPMemString.h",
		"::stappler::memory::is_char_pointer<constchar*>::is_char_pointer<constchar*>": "SPMemString.h",
		"::stappler::memory::is_char_pointer<constchar16_t*>::Type": "SPMemString.h",
		"::stappler::memory::is_char_pointer<constchar16_t*>::is_char_pointer<constchar16_t*>": "SPMemString.h",
		"::stappler::memory::is_char_pointer<constchar32_t*>::Type": "SPMemString.h",
		"::stappler::memory::is_char_pointer<constchar32_t*>::is_char_pointer<constchar32_t*>": "SPMemString.h",
		"::stappler::memory::is_char_pointer<typename>": "SPMemString.h",
		"::stappler::memory::map<typename,typename,typename>": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::_tree": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::allocator_type": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::at(Key const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::at(Key const&) const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::begin()": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::begin() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::capacity() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::cbegin() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::cend() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::clear()": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::const_iterator": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::const_pointer": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::const_reference": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::const_reverse_iterator": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::count<class>(K const&) const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::crbegin() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::crend() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::difference_type": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::do_assign<class,class>(stappler::memory::map::iterator,T&&,Args &&...)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::do_insert<class,class>(Pair<A, B> const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::do_insert<class,class>(Pair<A, B>&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::do_insert<class,class>(stappler::memory::map::const_iterator,Pair<A, B> const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::do_insert<class,class>(stappler::memory::map::const_iterator,Pair<A, B>&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::emplace<class>(Args &&...)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::emplace_hint<class>(stappler::memory::map::const_iterator,Args &&...)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::empty() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::end()": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::end() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::equal_range<class>(K const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::equal_range<class>(K const&) const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::erase(stappler::memory::map::const_iterator)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::erase(stappler::memory::map::const_iterator,stappler::memory::map::const_iterator)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::erase(stappler::memory::map::key_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::find<class>(K const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::find<class>(K const&) const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::get_allocator() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::insert(InitializerList<stappler::memory::map::value_type>)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::insert<class>(InputIt,InputIt)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::insert<class>(P&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::insert<class>(stappler::memory::map::const_iterator,P&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::insert_or_assign<class>(stappler::memory::map::const_iterator,stappler::memory::map::key_type const&,M&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::insert_or_assign<class>(stappler::memory::map::const_iterator,stappler::memory::map::key_type&&,M&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::insert_or_assign<class>(stappler::memory::map::key_type const&,M&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::insert_or_assign<class>(stappler::memory::map::key_type&&,M&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::iterator": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::key_compare": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::key_type": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::lower_bound<class>(K const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::lower_bound<class>(K const&) const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map()": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map(Comp const&,stappler::memory::map::allocator_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map(InitializerList<stappler::memory::map::value_type>,Comp const&,stappler::memory::map::allocator_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map(InitializerList<stappler::memory::map::value_type>,stappler::memory::map::allocator_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map(const map<Key, Value, Comp>&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map(const map<Key, Value, Comp>&,stappler::memory::map::allocator_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map(map<Key, Value, Comp>&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map(map<Key, Value, Comp>&&,stappler::memory::map::allocator_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map(stappler::memory::map::allocator_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map<class>(InputIterator,InputIterator,Comp const&,stappler::memory::map::allocator_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::map<class>(InputIterator,InputIterator,stappler::memory::map::allocator_type const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::mapped_type": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::memory_persistent() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::operator=(InitializerList<stappler::memory::map::value_type>)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::operator=(const map<Key, Value, Comp>&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::operator=(map<Key, Value, Comp>&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::operator[](Key const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::operator[](Key&&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::pointer": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::rbegin()": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::rbegin() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::reference": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::rend()": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::rend() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::reserve(size_t)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::reverse_iterator": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::set_memory_persistent(bool)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::shrink_to_fit()": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::size() const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::size_type": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::swap(map<Key, Value, Comp>&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::tree_type": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::try_emplace<class>(stappler::memory::map::const_iterator,stappler::memory::map::key_type const&,Args &&...)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::try_emplace<class>(stappler::memory::map::const_iterator,stappler::memory::map::key_type&&,Args &&...)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::try_emplace<class>(stappler::memory::map::key_type const&,Args &&...)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::try_emplace<class>(stappler::memory::map::key_type&&,Args &&...)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::upper_bound<class>(K const&)": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::upper_bound<class>(K const&) const": "SPMemMap.h",
		"::stappler::memory::map<typename,typename,typename>::value_type": "SPMemMap.h",
		"::stappler::memory::mem_sso_test<data::ValueTemplate<Interface>>::mem_sso_test<data::ValueTemplate<Interface>>": "SPDataValue.h",
		"::stappler::memory::mem_sso_test<data::ValueTemplate<Interface>>::value": "SPDataValue.h",
		"::stappler::memory::operator!=<class>(CharT const*,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator!=<class>(basic_string<CharT> const&,CharT const*)": "SPMemString.h",
		"::stappler::memory::operator!=<class>(basic_string<CharT> const&,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator!=<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)": "SPMemDict.h",
		"::stappler::memory::operator!=<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)": "SPMemMap.h",
		"::stappler::memory::operator!=<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)": "SPMemSet.h",
		"::stappler::memory::operator!=<typename>(vector<_Tp> const&,vector<_Tp> const&)": "SPMemVector.h",
		"::stappler::memory::operator+<class>(CharT const*,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator+<class>(CharT const*,basic_string<CharT>&&)": "SPMemString.h",
		"::stappler::memory::operator+<class>(CharT,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator+<class>(CharT,basic_string<CharT>&&)": "SPMemString.h",
		"::stappler::memory::operator+<class>(basic_string<CharT> const&,CharT const*)": "SPMemString.h",
		"::stappler::memory::operator+<class>(basic_string<CharT> const&,CharT)": "SPMemString.h",
		"::stappler::memory::operator+<class>(basic_string<CharT> const&,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator+<class>(basic_string<CharT> const&,basic_string<CharT>&&)": "SPMemString.h",
		"::stappler::memory::operator+<class>(basic_string<CharT>&&,CharT const*)": "SPMemString.h",
		"::stappler::memory::operator+<class>(basic_string<CharT>&&,CharT)": "SPMemString.h",
		"::stappler::memory::operator+<class>(basic_string<CharT>&&,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator+<class>(basic_string<CharT>&&,basic_string<CharT>&&)": "SPMemString.h",
		"::stappler::memory::operator<(vector<uint8_t> const&,vector<uint8_t> const&)": "SPMemVector.h",
		"::stappler::memory::operator<<<typename>(std::basic_ostream<CharType>&,basic_ostringstream<CharType> const&)": "SPMemStringStream.h",
		"::stappler::memory::operator<<<typename>(std::basic_ostream<CharType>&,basic_string<CharType> const&)": "SPMemString.h",
		"::stappler::memory::operator<<class>(CharT const*,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator<<class>(basic_string<CharT> const&,CharT const*)": "SPMemString.h",
		"::stappler::memory::operator<<class>(basic_string<CharT> const&,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator<<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)": "SPMemDict.h",
		"::stappler::memory::operator<<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)": "SPMemMap.h",
		"::stappler::memory::operator<<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)": "SPMemSet.h",
		"::stappler::memory::operator<<typename>(vector<_Tp> const&,vector<_Tp> const&)": "SPMemVector.h",
		"::stappler::memory::operator<=<class>(CharT const*,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator<=<class>(basic_string<CharT> const&,CharT const*)": "SPMemString.h",
		"::stappler::memory::operator<=<class>(basic_string<CharT> const&,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator<=<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)": "SPMemDict.h",
		"::stappler::memory::operator<=<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)": "SPMemMap.h",
		"::stappler::memory::operator<=<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)": "SPMemSet.h",
		"::stappler::memory::operator<=<typename>(vector<_Tp> const&,vector<_Tp> const&)": "SPMemVector.h",
		"::stappler::memory::operator==<class>(CharT const*,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator==<class>(basic_string<CharT> const&,CharT const*)": "SPMemString.h",
		"::stappler::memory::operator==<class>(basic_string<CharT> const&,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator==<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)": "SPMemDict.h",
		"::stappler::memory::operator==<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)": "SPMemMap.h",
		"::stappler::memory::operator==<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)": "SPMemSet.h",
		"::stappler::memory::operator==<typename>(vector<_Tp> const&,vector<_Tp> const&)": "SPMemVector.h",
		"::stappler::memory::operator><class>(CharT const*,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator><class>(basic_string<CharT> const&,CharT const*)": "SPMemString.h",
		"::stappler::memory::operator><class>(basic_string<CharT> const&,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator><typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)": "SPMemDict.h",
		"::stappler::memory::operator><typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)": "SPMemMap.h",
		"::stappler::memory::operator><typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)": "SPMemSet.h",
		"::stappler::memory::operator><typename>(vector<_Tp> const&,vector<_Tp> const&)": "SPMemVector.h",
		"::stappler::memory::operator>=<class>(CharT const*,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator>=<class>(basic_string<CharT> const&,CharT const*)": "SPMemString.h",
		"::stappler::memory::operator>=<class>(basic_string<CharT> const&,basic_string<CharT> const&)": "SPMemString.h",
		"::stappler::memory::operator>=<typename,typename,typename>(dict<Key, Value, Comp> const&,dict<Key, Value, Comp> const&)": "SPMemDict.h",
		"::stappler::memory::operator>=<typename,typename,typename>(map<Key, Value, Comp> const&,map<Key, Value, Comp> const&)": "SPMemMap.h",
		"::stappler::memory::operator>=<typename,typename>(set<_Tp, Comp> const&,set<_Tp, Comp> const&)": "SPMemSet.h",
		"::stappler::memory::operator>=<typename>(vector<_Tp> const&,vector<_Tp> const&)": "SPMemVector.h",
		"::stappler::memory::ostringstream": "SPMemStringStream.h",
		"::stappler::memory::pointer_iterator<class,class,class>": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::current": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::difference_type": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::iterator": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::iterator_category": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator pointer_iterator<value_type,const value_type*,const value_type&>() const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator!=(stappler::memory::pointer_iterator::iterator const&) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator*() const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator++()": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator++(int)": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator+=(stappler::memory::pointer_iterator::size_type)": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator-(stappler::memory::pointer_iterator::iterator const&) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator-(stappler::memory::pointer_iterator::pointer) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator--()": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator--(int)": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator-=(stappler::memory::pointer_iterator::size_type)": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator->() const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator<(stappler::memory::pointer_iterator::iterator const&) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator<=(stappler::memory::pointer_iterator::iterator const&) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator=(stappler::memory::pointer_iterator::iterator const&)": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator==(stappler::memory::pointer_iterator::iterator const&) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator>(stappler::memory::pointer_iterator::iterator const&) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator>=(stappler::memory::pointer_iterator::iterator const&) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::operator[](stappler::memory::pointer_iterator::size_type) const": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::pointer": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::pointer_iterator()": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::pointer_iterator(stappler::memory::pointer_iterator::iterator const&)": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::pointer_iterator(stappler::memory::pointer_iterator::pointer)": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::reference": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::size_type": "SPMemPointerIterator.h",
		"::stappler::memory::pointer_iterator<class,class,class>::value_type": "SPMemPointerIterator.h",
		"::stappler::memory::pool::context<typename>": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::_owns": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::_pool": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::context(const context<_Pool>&)": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::context(context<_Pool>&&)": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::context(stappler::memory::pool::context::pool_type&)": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::context(stappler::memory::pool::context::pool_type&,uint32_t)": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::operator bool() const": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::operator=(const context<_Pool>&)": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::operator=(context<_Pool>&&)": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::owns() const": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::pool() const": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::pool_type": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::pop()": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::push()": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::push(uint32_t)": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::swap(context<_Pool>&)": "SPMemPoolApi.h",
		"::stappler::memory::pool::context<typename>::~context()": "SPMemPoolApi.h",
		"::stappler::memory::pool::get<typename>(stappler::StringView const&)": "SPMemUserData.h",
		"::stappler::memory::pool::get<typename>(stappler::mempool::base::pool_t*,stappler::StringView const&)": "SPMemUserData.h",
		"::stappler::memory::pool::store(stappler::mempool::base::pool_t*,void*,stappler::StringView const&,memory::function<void ()>&&)": "SPMemUserData.h",
		"::stappler::memory::pool::store(void*,stappler::StringView const&,memory::function<void ()>&&)": "SPMemUserData.h",
		"::stappler::memory::rbtree::Node<typename>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Node<typename>::cast(stappler::memory::rbtree::NodeBase const*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Node<typename>::cast(stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Node<typename>::value": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::Flag": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::Flag::color": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::Flag::index": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::Flag::prealloc": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::Flag::size": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::NodeBase()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::NodeBase(stappler::memory::rbtree::NodeColor)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::decrement(stappler::memory::rbtree::NodeBase const*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::decrement(stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::flag": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::getColor() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::getIndex() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::getSize() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::increment(stappler::memory::rbtree::NodeBase const*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::increment(stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::insert(stappler::memory::rbtree::NodeBase*,stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::isPrealloc() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::left": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::max(stappler::memory::rbtree::NodeBase const*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::max(stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::min(stappler::memory::rbtree::NodeBase const*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::min(stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::parent": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::remove(stappler::memory::rbtree::NodeBase*,stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::replace(stappler::memory::rbtree::NodeBase*,stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::right": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::setColor(stappler::memory::rbtree::NodeColor)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::setIndex(uintptr_t)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::setPrealloc(bool)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeBase::setSize(uintptr_t)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::NodeColor": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Storage<typename>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::current": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::isLeft": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::key": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::parent": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::InsertData::val": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::Tree(Comp const&,stappler::memory::rbtree::Tree::value_allocator_type const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::Tree(Tree<Key, Value, Comp>&&,stappler::memory::rbtree::Tree::value_allocator_type const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::Tree(const Tree<Key, Value, Comp>&,stappler::memory::rbtree::Tree::value_allocator_type const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::_allocator": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::_comp": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::_header": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::_size": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::_tmp": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::allocateNode()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::allocateTmp(size_t)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::base_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::begin()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::begin() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::capacity() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::cbegin() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::cend() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::clear()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::clear_visit(Node<Value>*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::clone(const Tree<Key, Value, Comp>&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::clone_visit(Node<Value> const*,Node<Value>*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::comparator_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareEqKey(Key const&,Key const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareEqValue(Value const&,Value const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareLtKey(Key const&,Key const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareLtTransparent<typename,typename>(A const&,B const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::compareLtValue(Value const&,Value const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::const_iterator": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::const_node_ptr": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::const_reverse_iterator": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructAssign<typename>(Node<Value>*,M const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructAssign<typename>(Node<Value>*,M&&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructEmplace<typename,typename>(K&&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructKey(Key const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructKey(Key&&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::constructNode<typename>(Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::count<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::count_impl<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::count_unique<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::crbegin() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::crend() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::deleteNode(stappler::memory::rbtree::NodeBase*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::destroyNode(Node<Value>*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::emplace<typename>(Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::emplace_hint<typename>(stappler::memory::rbtree::Tree::const_iterator,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::empty() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::end()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::end() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::equal_range<class>(K const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::equal_range<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::erase(stappler::memory::rbtree::Tree::const_iterator)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::erase(stappler::memory::rbtree::Tree::const_iterator,stappler::memory::rbtree::Tree::const_iterator)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::erase_unique(Key const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::extract(Storage<Value> const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::extract(Value const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::extract(stappler::memory::rbtree::NodeBase const*) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::find<class>(K const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::find<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::find_impl<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique(stappler::memory::rbtree::Tree::InsertData&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique_search(stappler::memory::rbtree::Tree::InsertData&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique_tryHint(stappler::memory::rbtree::Tree::InsertData&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique_tryLeft(stappler::memory::rbtree::Tree::InsertData&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPositionUnique_tryRight(stappler::memory::rbtree::Tree::InsertData&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::getInsertPosition_tryRoot(stappler::memory::rbtree::Tree::InsertData&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::get_allocator() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::insertNodeUnique<typename>(Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::insertNodeUniqueHint<typename>(stappler::memory::rbtree::Tree::const_iterator,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::insert_or_assign<typename,class>(K&&,M&&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::insert_or_assign<typename,class>(stappler::memory::rbtree::Tree::const_iterator,K&&,M&&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::iterator": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::left()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::left() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::lower_bound<class>(K const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::lower_bound<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::lower_bound_ptr<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::makeInsert(Node<Value>*,stappler::memory::rbtree::NodeBase*,bool)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::memory_persistent() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::node_allocator_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::node_ptr": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::node_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::operator=(Tree<Key, Value, Comp>&&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::operator=(const Tree<Key, Value, Comp>&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::rbegin()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::rbegin() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::releaseTmp()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::rend()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::rend() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::reserve(size_t)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::reverse_iterator": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::right()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::right() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::root()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::root() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::set_memory_persistent(bool)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::setleft(stappler::memory::rbtree::Tree::base_type)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::setright(stappler::memory::rbtree::Tree::base_type)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::setroot(stappler::memory::rbtree::Tree::base_type)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::shrink_to_fit()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::size() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::swap(Tree<Key, Value, Comp>&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::tryAssignNodeUnique<typename,typename>(K&&,M&&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::tryAssignNodeUniqueHint<typename,typename>(stappler::memory::rbtree::Tree::const_iterator,K&&,M&&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::tryInsertNodeUnique<typename,typename>(K&&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::tryInsertNodeUniqueHint<typename,typename>(stappler::memory::rbtree::Tree::const_iterator,K&&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::try_emplace<typename,typename>(K&&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::try_emplace<typename,typename>(stappler::memory::rbtree::Tree::const_iterator,K&&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::upper_bound<class>(K const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::upper_bound<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::upper_bound_ptr<class>(K const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::value_allocator_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::value_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::Tree<typename,typename,typename>::~Tree()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeComparator<Key,Comp,typenameComp::is_transparent>::TreeComparator<Key,Comp,typenameComp::is_transparent>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeComparator<Key,Comp,typenameComp::is_transparent>::compare<typename,typename>(A const&,B const&,Comp const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeComparator<typename,typename,typename>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeComparator<typename,typename,typename>::compare(Key const&,Key const&,Comp const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeComparator<typename,typename,typename>::compare<typename,typename>(A const&,B const&,Comp const&,typename Comp::is_transparent*)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::TreeConstIterator()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::TreeConstIterator(stappler::memory::rbtree::TreeConstIterator::iterator const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::TreeConstIterator(stappler::memory::rbtree::TreeConstIterator::node_ptr)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::_node": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::constcast() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::difference_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::iterator": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::iterator_category": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::link_ptr": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::node_ptr": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::node_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::operator!=(stappler::memory::rbtree::TreeConstIterator::self const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::operator*() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::operator++()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::operator++(int)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::operator--()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::operator--(int)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::operator->() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::operator==(stappler::memory::rbtree::TreeConstIterator::self const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::pointer": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::reference": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::self": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeConstIterator<typename>::value_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::TreeIterator()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::TreeIterator(stappler::memory::rbtree::TreeIterator::node_ptr)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::_node": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::difference_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::iterator_category": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::link_ptr": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::node_ptr": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::node_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::operator!=(stappler::memory::rbtree::TreeIterator::self const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::operator*() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::operator++()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::operator++(int)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::operator--()": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::operator--(int)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::operator->() const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::operator==(stappler::memory::rbtree::TreeIterator::self const&) const": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::pointer": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::reference": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::self": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeIterator<typename>::value_type": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Key>::TreeKeyExtractor<Key,Key>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Key>::construct<typename,typename>(A&,Node<Key>*,Key const&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Key>::construct<typename,typename>(A&,Node<Key>*,Key&&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Key>::extract(Key const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<Key,Value>>::TreeKeyExtractor<Key,Pair<Key,Value>>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<Key,Value>>::construct<typename,typename>(A&,Node<Pair<Key, Value>>*,Key const&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<Key,Value>>::construct<typename,typename>(A&,Node<Pair<Key, Value>>*,Key&&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<Key,Value>>::extract(Pair<Key, Value> const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<constKey,Value>>::TreeKeyExtractor<Key,Pair<constKey,Value>>": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<constKey,Value>>::construct<typename,typename>(A&,Node<Pair<const Key, Value>>*,Key const&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<constKey,Value>>::construct<typename,typename>(A&,Node<Pair<const Key, Value>>*,Key&&,Args &&...)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::TreeKeyExtractor<Key,Pair<constKey,Value>>::extract(Pair<const Key, Value> const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::operator!=<typename>(TreeIterator<Value> const&,TreeConstIterator<Value> const&)": "SPMemRbtree.h",
		"::stappler::memory::rbtree::operator==<typename>(TreeIterator<Value> const&,TreeConstIterator<Value> const&)": "SPMemRbtree.h",
		"::stappler::memory::set<typename,typename>": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::_tree": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::allocator_type": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::begin()": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::begin() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::capacity() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::cbegin() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::cend() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::clear()": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::const_iterator": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::const_pointer": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::const_reference": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::const_reverse_iterator": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::count<class>(K const&) const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::crbegin() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::crend() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::difference_type": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::emplace<class>(Args &&...)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::emplace_hint<class>(stappler::memory::set::const_iterator,Args &&...)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::empty() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::end()": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::end() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::equal_range<class>(K const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::equal_range<class>(K const&) const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::erase(stappler::memory::set::const_iterator)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::erase(stappler::memory::set::const_iterator,stappler::memory::set::const_iterator)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::erase(stappler::memory::set::key_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::find<class>(K const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::find<class>(K const&) const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::get_allocator() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::insert(InitializerList<stappler::memory::set::value_type>)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::insert(stappler::memory::set::const_iterator,stappler::memory::set::value_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::insert(stappler::memory::set::const_iterator,stappler::memory::set::value_type&&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::insert(stappler::memory::set::value_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::insert(stappler::memory::set::value_type&&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::insert<class>(InputIt,InputIt)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::iterator": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::key_compare": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::key_type": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::lower_bound<class>(K const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::lower_bound<class>(K const&) const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::memory_persistent() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::operator=(InitializerList<stappler::memory::set::value_type>)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::operator=(const set<Value, Comp>&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::operator=(set<Value, Comp>&&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::pointer": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::rbegin()": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::rbegin() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::reference": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::rend()": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::rend() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::reserve(size_t)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::reverse_iterator": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set()": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set(InitializerList<stappler::memory::set::value_type>,stappler::memory::set::allocator_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set(InitializerList<stappler::memory::set::value_type>,stappler::memory::set::key_compare const&,stappler::memory::set::allocator_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set(const set<Value, Comp>&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set(const set<Value, Comp>&,stappler::memory::set::allocator_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set(set<Value, Comp>&&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set(set<Value, Comp>&&,stappler::memory::set::allocator_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set(stappler::memory::set::allocator_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set(stappler::memory::set::key_compare const&,stappler::memory::set::allocator_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set<class>(InputIterator,InputIterator,stappler::memory::set::allocator_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set<class>(InputIterator,InputIterator,stappler::memory::set::key_compare const&,stappler::memory::set::allocator_type const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::set_memory_persistent(bool)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::shrink_to_fit()": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::size() const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::size_type": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::swap(set<Value, Comp>&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::tree_type": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::upper_bound<class>(K const&)": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::upper_bound<class>(K const&) const": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::value_compare": "SPMemSet.h",
		"::stappler::memory::set<typename,typename>::value_type": "SPMemSet.h",
		"::stappler::memory::string": "SPMemString.h",
		"::stappler::memory::swap<typename,typename>(set<_Tp, Comp>&,set<_Tp, Comp>&)": "SPMemSet.h",
		"::stappler::memory::u16string": "SPMemString.h",
		"::stappler::memory::u32string": "SPMemString.h",
		"::stappler::memory::uuid": "SPMemUuid.h",
		"::stappler::memory::uuid::FormattedLength": "SPMemUuid.h",
		"::stappler::memory::uuid::_uuid": "SPMemUuid.h",
		"::stappler::memory::uuid::array() const": "SPMemUuid.h",
		"::stappler::memory::uuid::bytes<typename>() const": "SPMemUuid.h",
		"::stappler::memory::uuid::data() const": "SPMemUuid.h",
		"::stappler::memory::uuid::format(char*,stappler::memory::uuid::uuid_t const&)": "SPMemUuid.h",
		"::stappler::memory::uuid::generate()": "SPMemUuid.h",
		"::stappler::memory::uuid::operator=(memory::string const&)": "SPMemUuid.h",
		"::stappler::memory::uuid::operator=(memory::vector<uint8_t> const&)": "SPMemUuid.h",
		"::stappler::memory::uuid::operator=(stappler::memory::uuid const&)": "SPMemUuid.h",
		"::stappler::memory::uuid::operator=(std::string const&)": "SPMemUuid.h",
		"::stappler::memory::uuid::operator=(std::vector<uint8_t> const&)": "SPMemUuid.h",
		"::stappler::memory::uuid::parse(stappler::memory::uuid::uuid_t&,char const*)": "SPMemUuid.h",
		"::stappler::memory::uuid::size() const": "SPMemUuid.h",
		"::stappler::memory::uuid::str<typename>() const": "SPMemUuid.h",
		"::stappler::memory::uuid::uuid()": "SPMemUuid.h",
		"::stappler::memory::uuid::uuid(stappler::BytesView)": "SPMemUuid.h",
		"::stappler::memory::uuid::uuid(stappler::StringView)": "SPMemUuid.h",
		"::stappler::memory::uuid::uuid(stappler::memory::uuid const&)": "SPMemUuid.h",
		"::stappler::memory::uuid::uuid(stappler::memory::uuid::uuid_t const&)": "SPMemUuid.h",
		"::stappler::memory::uuid::uuid_t": "SPMemUuid.h",
		"::stappler::memory::vector<typename>": "SPMemVector.h",
		"::stappler::memory::vector<typename>::_mem": "SPMemVector.h",
		"::stappler::memory::vector<typename>::allocator_type": "SPMemVector.h",
		"::stappler::memory::vector<typename>::assign(InitializerList<Type>)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::assign(stappler::memory::vector::size_type,Type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::assign<class>(InputIt,InputIt)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::assign_strong(Type*,stappler::memory::vector::size_type)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::assign_weak(Type const*,stappler::memory::vector::size_type)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::at(stappler::memory::vector::size_type)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::at(stappler::memory::vector::size_type) const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::back()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::back() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::begin()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::begin() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::capacity() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::cbegin() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::cend() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::clear()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::const_iterator": "SPMemVector.h",
		"::stappler::memory::vector<typename>::const_pointer": "SPMemVector.h",
		"::stappler::memory::vector<typename>::const_reference": "SPMemVector.h",
		"::stappler::memory::vector<typename>::const_reverse_iterator": "SPMemVector.h",
		"::stappler::memory::vector<typename>::crbegin() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::crend() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::data()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::data() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::emplace<class>(stappler::memory::vector::const_iterator,Args &&...)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::emplace_back<class>(Args &&...)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::empty() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::end()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::end() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::erase(stappler::memory::vector::const_iterator)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::erase(stappler::memory::vector::const_iterator,stappler::memory::vector::const_iterator)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::force_clear()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::front()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::front() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::get_allocator() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::insert(stappler::memory::vector::const_iterator,InitializerList<Type>)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::insert(stappler::memory::vector::const_iterator,Type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::insert(stappler::memory::vector::const_iterator,Type&&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::insert(stappler::memory::vector::const_iterator,stappler::memory::vector::size_type,Type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::insert<class>(stappler::memory::vector::const_iterator,InputIt,InputIt)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::is_weak() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::iterator": "SPMemVector.h",
		"::stappler::memory::vector<typename>::make_weak(Type const*,stappler::memory::vector::size_type,stappler::memory::vector::allocator_type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::mem_type": "SPMemVector.h",
		"::stappler::memory::vector<typename>::operator=(InitializerList<Type>)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::operator=(const vector<Type>&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::operator=(vector<Type>&&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::operator[](stappler::memory::vector::size_type)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::operator[](stappler::memory::vector::size_type) const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::pointer": "SPMemVector.h",
		"::stappler::memory::vector<typename>::pop_back()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::push_back(Type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::push_back(Type&&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::rbegin()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::rbegin() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::reference": "SPMemVector.h",
		"::stappler::memory::vector<typename>::rend()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::rend() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::reserve(stappler::memory::vector::size_type)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::reserve_block_optimal()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::resize(stappler::memory::vector::size_type)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::resize(stappler::memory::vector::size_type,stappler::memory::vector::value_type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::reverse_iterator": "SPMemVector.h",
		"::stappler::memory::vector<typename>::self": "SPMemVector.h",
		"::stappler::memory::vector<typename>::shrink_to_fit()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::size() const": "SPMemVector.h",
		"::stappler::memory::vector<typename>::size_type": "SPMemVector.h",
		"::stappler::memory::vector<typename>::value_type": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector()": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector(InitializerList<Type>,stappler::memory::vector::allocator_type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector(const vector<Type>&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector(const vector<Type>&,stappler::memory::vector::allocator_type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector(stappler::memory::vector::allocator_type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector(stappler::memory::vector::size_type,Type const&,stappler::memory::vector::allocator_type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector(stappler::memory::vector::size_type,stappler::memory::vector::allocator_type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector(vector<Type>&&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector(vector<Type>&&,stappler::memory::vector::allocator_type const&)": "SPMemVector.h",
		"::stappler::memory::vector<typename>::vector<class>(InputIt,InputIt,stappler::memory::vector::allocator_type const&)": "SPMemVector.h",
		"::stappler::memory::weak_string": "SPMemString.h",
		"::stappler::mempool::apr::SPAprDefined": "SPMemPoolConfig.h",
		"::stappler::mempool::base::PoolFlags": "SPMemPoolInterface.h",
		"::stappler::mempool::base::allocator::create(bool)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::allocator::create(void*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::allocator::createWithMmap(uint32_t)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::allocator::destroy(stappler::mempool::base::allocator_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::allocator::max_free_set(stappler::mempool::base::allocator_t*,size_t)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::allocator::owner_get(stappler::mempool::base::allocator_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::allocator::owner_set(stappler::mempool::base::allocator_t*,stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::allocator_t": "SPMemPoolInterface.h",
		"::stappler::mempool::base::cleanup_fn": "SPMemPoolInterface.h",
		"::stappler::mempool::base::get_mapped_regions_count()": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::Info": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::PoolFlags": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::acquire()": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::alloc(stappler::mempool::base::pool_t*,size_t&)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::calloc(stappler::mempool::base::pool_t*,size_t,size_t)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::cleanup_kill(stappler::mempool::base::pool_t*,void*,stappler::mempool::base::cleanup_fn)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::cleanup_register(stappler::mempool::base::pool_t*,memory::function<void ()>&&)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::cleanup_register(stappler::mempool::base::pool_t*,void*,stappler::mempool::base::cleanup_fn)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::clear(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::create(stappler::mempool::base::allocator_t*,stappler::mempool::base::pool::PoolFlags)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::create(stappler::mempool::base::pool::PoolFlags)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::create(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::createTagged(char const*,stappler::mempool::base::pool::PoolFlags)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::createTagged(stappler::mempool::base::pool_t*,char const*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::debug_begin(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::debug_end()": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::debug_foreach(void*,void(*)(void*,stappler::mempool::base::pool_t*))": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::destroy(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::foreach_info(void*,bool(*)(void*,stappler::mempool::base::pool_t*,uint32_t,void const*))": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::free(stappler::mempool::base::pool_t*,void*,size_t)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::get_active_count()": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::get_allocated_bytes(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::get_allocator(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::get_return_bytes(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::get_tag(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::info()": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::initialize()": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::isThreadSafeAsParent(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::isThreadSafeForAllocations(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::palloc(stappler::mempool::base::pool_t*,size_t)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::pmemdup(stappler::mempool::base::pool_t*,void const*,size_t)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::pop()": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::pstrdup(stappler::mempool::base::pool_t*,char const*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::push(stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::push(stappler::mempool::base::pool_t*,uint32_t,void const*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::terminate()": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::userdata_get(void**,char const*,size_t,stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::userdata_get(void**,char const*,stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::userdata_set(void const*,char const*,stappler::mempool::base::cleanup_fn,stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool::userdata_setn(void const*,char const*,stappler::mempool::base::cleanup_fn,stappler::mempool::base::pool_t*)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::pool_t": "SPMemPoolInterface.h",
		"::stappler::mempool::base::sp_mmap(void*,size_t,int,int,int,off_t)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::sp_munmap(void*,size_t)": "SPMemPoolInterface.h",
		"::stappler::mempool::base::status_t": "SPMemPoolInterface.h",
		"::stappler::mempool::custom::ALLOCATOR_MAX_FREE_UNLIMITED": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::ALLOCATOR_MMAP_RESERVED": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::AllocManager": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::AllocFn": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::alloc(size_t&,stappler::mempool::custom::AllocManager::AllocFn)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::alloc_buffer": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::allocated": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::buffered": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::free(void*,size_t,stappler::mempool::custom::AllocManager::AllocFn)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::free_buffered": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::get_alloc()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::get_return()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::increment_alloc(size_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::increment_return(size_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::opts": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::pool": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::ptr": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::reset(void*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::returned": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::AllocManager::tag": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::AllocMutex": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::Allocator(bool)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::alloc(uint32_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::allocated": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::allocationTracker": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::buf": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::current": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::free(stappler::mempool::custom::MemNode*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::getAllocatorsCount()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::last": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::lock()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::max": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::mmapCurrent": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::mmapMax": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::mmapPtr": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::mmapdes": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::mutex": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::owner": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::run_mmap(uint64_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::set_max(uint32_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::unlock()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Allocator::~Allocator()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::BOUNDARY_INDEX": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::BOUNDARY_SIZE": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::BlockThreshold": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::Cleanup": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Cleanup::Callback": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Cleanup::data": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Cleanup::fn": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Cleanup::next": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Cleanup::run(stappler::mempool::custom::Cleanup**)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashEntry": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashEntry::hash": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashEntry::key": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashEntry::klen": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashEntry::next": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashEntry::val": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashFunc": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashIndex": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashIndex::_next": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashIndex::_self": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashIndex::ht": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashIndex::index": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashIndex::next()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashIndex::self(void const**,size_t*,void**)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::array": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::clear()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::copy(stappler::mempool::custom::Pool*) const": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::count": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::first(stappler::mempool::custom::Pool*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::foreach(stappler::mempool::custom::HashTable::foreach_fn,void*) const": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::foreach_fn": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::free": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::get(void const*,size_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::hash_func": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::init(stappler::mempool::custom::HashTable*,stappler::mempool::custom::Pool*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::iterator": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::make(stappler::mempool::custom::Pool*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::make(stappler::mempool::custom::Pool*,stappler::mempool::custom::HashFunc)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::max": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::merge(stappler::mempool::custom::Pool*,stappler::mempool::custom::HashTable const*) const": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::merge(stappler::mempool::custom::Pool*,stappler::mempool::custom::HashTable const*,stappler::mempool::custom::HashTable::merge_fn,void const*) const": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::merge_fn": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::pool": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::seed": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::set(void const*,size_t,void const*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::HashTable::size() const": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MAX_INDEX": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::MIN_ALLOC": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::MemAddr": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemAddr::address": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemAddr::next": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemAddr::size": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::endp": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::first_avail": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::free_index": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::free_space() const": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::index": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::insert(stappler::mempool::custom::MemNode*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::next": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::ref": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::MemNode::remove()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::POOL_MAGIC": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::Pool": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::Pool()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::Pool(stappler::mempool::custom::Allocator*,stappler::mempool::custom::MemNode*,bool)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::Pool(stappler::mempool::custom::Pool*,stappler::mempool::custom::Allocator*,stappler::mempool::custom::MemNode*,bool)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::active": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::alloc(size_t&)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::allocator": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::allocmngr": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::calloc(size_t,size_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::child": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::cleanup_kill(void*,Cleanup::Callback)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::cleanup_register(void const*,Cleanup::Callback)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::cleanup_run(void*,Cleanup::Callback)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::cleanups": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::clear()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::create(stappler::mempool::custom::Allocator*,stappler::mempool::custom::PoolFlags)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::destroy(stappler::mempool::custom::Pool*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::free(void*,size_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::free_cleanups": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::getPoolsCount()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::lock()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::make_child()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::make_child(stappler::mempool::custom::Allocator*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::palloc(size_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::parent": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::pmemdup(void const*,size_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::pre_cleanup_register(void const*,Cleanup::Callback)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::pre_cleanups": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::pstrdup(char const*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::ref": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::self": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::self_first_avail": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::sibling": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::tag": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::threadSafe": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::unlock()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::user_data": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::userdata_get(void**,char const*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::userdata_get(void**,char const*,size_t)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::userdata_set(void const*,char const*,Cleanup::Callback)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::userdata_setn(void const*,char const*,Cleanup::Callback)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::Pool::~Pool()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::PoolFlags": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::SIZEOF_MEMNODE": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::SIZEOF_POOL": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::SPALIGN(size_t,uint32_t)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::SPALIGN_DEFAULT(size_t)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::SUCCESS": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::Status": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::clear(stappler::mempool::custom::Pool*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::create(stappler::mempool::custom::Pool*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::destroy(stappler::mempool::custom::Pool*)": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::initialize()": "SPMemPoolStruct.h",
		"::stappler::mempool::custom::operator!=(stappler::mempool::custom::PoolFlags const&,std::underlying_type<PoolFlags>::type const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator!=(std::underlying_type<PoolFlags>::type const&,stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator&(stappler::mempool::custom::PoolFlags const&,stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator&=(stappler::mempool::custom::PoolFlags&,stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator==(stappler::mempool::custom::PoolFlags const&,std::underlying_type<PoolFlags>::type const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator==(std::underlying_type<PoolFlags>::type const&,stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator^(stappler::mempool::custom::PoolFlags const&,stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator^=(stappler::mempool::custom::PoolFlags&,stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator|(stappler::mempool::custom::PoolFlags const&,stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator|=(stappler::mempool::custom::PoolFlags&,stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::operator~(stappler::mempool::custom::PoolFlags const&)": "SPMemPoolConfig.h",
		"::stappler::mempool::custom::terminate()": "SPMemPoolStruct.h",
		"::stappler::minOf<class>()": "SPCore.h",
		"::stappler::nan<typename>()": "SPCore.h",
		"::stappler::network::AuthData<typename>": "SPNetworkData.h",
		"::stappler::network::AuthData<typename>::String": "SPNetworkData.h",
		"::stappler::network::AuthData<typename>::authMethod": "SPNetworkData.h",
		"::stappler::network::AuthData<typename>::data": "SPNetworkData.h",
		"::stappler::network::AuthData<typename>::proxyAddress": "SPNetworkData.h",
		"::stappler::network::AuthData<typename>::proxyAuth": "SPNetworkData.h",
		"::stappler::network::AuthMethod": "SPNetworkData.h",
		"::stappler::network::Context<typename>": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::code": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::curl": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::error": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::handle": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::headers": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::headersData": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::inputFile": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::inputPos": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::mailTo": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::origHandle": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::outputFile": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::share": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::success": "SPNetworkContext.h",
		"::stappler::network::Context<typename>::userdata": "SPNetworkContext.h",
		"::stappler::network::DefaultCertPath": "SPNetworkData.h",
		"::stappler::network::Handle<typename>": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::Bytes": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::DataType": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::Handle()": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::Handle(Handle<Interface>&&)": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::IOCallback": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::ProgressCallback": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::String": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::StringStream": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::Value": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::getData()": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::init(stappler::network::Method,stappler::StringView)": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::operator=(Handle<Interface>&&)": "SPNetworkHandle.h",
		"::stappler::network::Handle<typename>::perform()": "SPNetworkHandle.h",
		"::stappler::network::HandleData<typename>": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::Bytes": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::Function<typename>": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::HeaderCallback": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::HeaderMap": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::IOCallback": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::Map<typename,typename>": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::ProgressCallback": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::String": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::StringStream": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::Value": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::Vector<typename>": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::addHeader(stappler::StringView,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::addMailTo(stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::auth": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::clearHeaders()": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::clearMailTo()": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getCookieFile() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getDebugData() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getError() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getErrorCode() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getHeaderCallback() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getMethod() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getReceiveDataSource() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getReceivedHeaderInt(stappler::StringView) const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getReceivedHeaderString(stappler::StringView) const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getRecievedHeaders() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getRequestHeaders() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getResponseCode() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getResponseContentType() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getSendDataSource() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getUrl() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::getUserAgent() const": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::process": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::receive": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::reset(stappler::network::Method,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::send": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setAuthority(stappler::StringView,stappler::StringView,stappler::network::AuthMethod)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setConnectTimeout(int)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setCookieFile(stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setDebug(bool)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setDownloadProgress(stappler::network::HandleData::ProgressCallback&&)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setHeaderCallback(stappler::network::HandleData::HeaderCallback&&)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setLowSpeedLimit(int,size_t)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setMailFrom(stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setPrivateKeyAuth(crypto::PrivateKey const&)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setPrivateKeyAuth(stappler::BytesView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setProxy(stappler::StringView,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setReceiveCallback(stappler::network::HandleData::IOCallback&&)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setReceiveFile(stappler::StringView,bool)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setResumeDownload(bool)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setResumeOffset(uint64_t)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setReuse(bool)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSendCallback(stappler::network::HandleData::IOCallback&&,size_t,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSendData(stappler::BytesView,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSendData(stappler::StringView,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSendData(stappler::network::HandleData::Bytes&&,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSendData(stappler::network::HandleData::Value const&,data::EncodeFormat)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSendData(uint8_t const*,size_t,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSendFile(stappler::StringView,stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSendSize(size_t)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setShared(bool)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setSilent(bool)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setUploadProgress(stappler::network::HandleData::ProgressCallback&&)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setUrl(stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setUserAgent(stappler::StringView)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::setVerifyTls(bool)": "SPNetworkData.h",
		"::stappler::network::HandleData<typename>::~HandleData()": "SPNetworkData.h",
		"::stappler::network::Method": "SPNetworkData.h",
		"::stappler::network::MultiHandle<typename>": "SPNetworkHandle.h",
		"::stappler::network::MultiHandle<typename>::addHandle(Handle<Interface>*,void*)": "SPNetworkHandle.h",
		"::stappler::network::MultiHandle<typename>::pending": "SPNetworkHandle.h",
		"::stappler::network::MultiHandle<typename>::perform(Callback<bool (Handle<Interface> *, void *)> const&)": "SPNetworkHandle.h",
		"::stappler::network::ProcessData<typename>": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::Function<typename>": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::ProgressCallback": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::String": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::StringStream": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::connectTimeout": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::cookieFile": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::debug": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::debugData": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::downloadProgress": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::downloadProgressTiming": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::downloadProgressValue": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::error": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::errorCode": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::lowSpeedLimit": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::lowSpeedTime": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::performed": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::responseCode": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::reuse": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::shared": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::sharedHandle": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::silent": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::uploadProgress": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::uploadProgressTiming": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::uploadProgressValue": "SPNetworkData.h",
		"::stappler::network::ProcessData<typename>::verifyTsl": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::Bytes": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::DataSource": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::Function<typename>": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::HeaderCallback": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::IOCallback": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::Map<typename,typename>": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::String": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::Vector<typename>": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::contentType": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::data": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::headerCallback": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::headers": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::offset": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::parsed": "SPNetworkData.h",
		"::stappler::network::ReceiveData<typename>::resumeDownload": "SPNetworkData.h",
		"::stappler::network::SendData<typename>": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::Bytes": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::DataSource": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::Function<typename>": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::IOCallback": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::Map<typename,typename>": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::String": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::Vector<typename>": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::data": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::from": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::headers": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::method": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::offset": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::recipients": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::size": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::url": "SPNetworkData.h",
		"::stappler::network::SendData<typename>::userAgent": "SPNetworkData.h",
		"::stappler::network::finalize<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)": "SPNetworkContext.h",
		"::stappler::network::getActiveHandles()": "SPNetworkData.h",
		"::stappler::network::perform<typename>(HandleData<Interface>&,Callback<bool (CURL *)> const&,Callback<bool (CURL *)> const&)": "SPNetworkContext.h",
		"::stappler::network::prepare<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)": "SPNetworkContext.h",
		"::stappler::nullptr_t": "SPCore.h",
		"::stappler::operator!=(stappler::CharGroupId const&,std::underlying_type<CharGroupId>::type const&)": "SPCharGroup.h",
		"::stappler::operator!=(std::underlying_type<CharGroupId>::type const&,stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::operator!=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator!=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator!=<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator!=<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator!=<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator!=<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator!=<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator!=<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator\"\"_mksec(unsigned long long)": "SPTime.h",
		"::stappler::operator\"\"_msec(unsigned long long)": "SPTime.h",
		"::stappler::operator\"\"_sec(unsigned long long)": "SPTime.h",
		"::stappler::operator&(stappler::CharGroupId const&,stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::operator&=(stappler::CharGroupId&,stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::operator+<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator+<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C>&&)": "SPStringView.h",
		"::stappler::operator+<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator+<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C>&&)": "SPStringView.h",
		"::stappler::operator+<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator+<typename>(typename memory::PoolInterface::BasicStringType<C>&&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator+<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator+<typename>(typename memory::StandartInterface::BasicStringType<C>&&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (StringViewBase<char16_t>)> const&,StringViewBase<char16_t>)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (StringViewBase<char16_t>)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (StringViewBase<char16_t>)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,StringViewBase<char>)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,char const*)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,double)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (StringViewBase<char>)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,stappler::StringViewUtf8)": "SPStringView.h",
		"::stappler::operator<<(Callback<void (stappler::StringViewUtf8)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewBase<char16_t>)> const&,StringViewBase<char16_t>)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewBase<char16_t>)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewBase<char16_t>)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,StringViewBase<char>)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,char const*)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,double)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewBase<char>)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewUtf8)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewUtf8)> const&,stappler::StringViewUtf8)": "SPStringView.h",
		"::stappler::operator<<(memory::function<void (StringViewUtf8)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<(std::basic_ostream<char>&,stappler::StringViewUtf8 const&)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewBase<char16_t>)> const&,StringViewBase<char16_t>)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewBase<char16_t>)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewBase<char16_t>)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,StringViewBase<char>)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,char const*)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,double)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewBase<char>)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewUtf8)> const&,int64_t)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewUtf8)> const&,stappler::StringViewUtf8)": "SPStringView.h",
		"::stappler::operator<<(std::function<void (StringViewUtf8)> const&,uint64_t)": "SPStringView.h",
		"::stappler::operator<<<size_t>(Callback<void (StringViewBase<char>)> const&,char const[N],StringViewBase<char>)": "SPStringView.h",
		"::stappler::operator<<<size_t>(memory::function<void (StringViewBase<char>)> const&,char const[N],StringViewBase<char>)": "SPStringView.h",
		"::stappler::operator<<<size_t>(std::function<void (StringViewBase<char>)> const&,char const[N],StringViewBase<char>)": "SPStringView.h",
		"::stappler::operator<<<typename>(Callback<void (StringViewBase<Char>)> const&,StringViewBase<Char>,StringViewBase<Char>)": "SPStringView.h",
		"::stappler::operator<<<typename>(Callback<void (StringViewBase<Char>)> const&,int64_t,StringViewBase<Char>)": "SPStringView.h",
		"::stappler::operator<<<typename>(Callback<void (StringViewBase<Char>)> const&,uint64_t,StringViewBase<Char>)": "SPStringView.h",
		"::stappler::operator<<<typename>(std::basic_ostream<C>&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator<<stappler::Endian>(BytesViewTemplate<Endianess> const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator<<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator<<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator<<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator<<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator<<typename>(SpanView<_Tp> const&,SpanView<_Tp> const&)": "SPSpanView.h",
		"::stappler::operator<<typename>(StringViewBase<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator<<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator<<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator<<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator<<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator<=<stappler::Endian>(BytesViewTemplate<Endianess> const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator<=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator<=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator<=<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator<=<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator<=<typename>(SpanView<_Tp> const&,SpanView<_Tp> const&)": "SPSpanView.h",
		"::stappler::operator<=<typename>(StringViewBase<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator<=<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator<=<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator<=<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator<=<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator==(stappler::CharGroupId const&,std::underlying_type<CharGroupId>::type const&)": "SPCharGroup.h",
		"::stappler::operator==(std::underlying_type<CharGroupId>::type const&,stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::operator==<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator==<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator==<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator==<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator==<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator==<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator==<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator==<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator><stappler::Endian>(BytesViewTemplate<Endianess> const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator><stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator><stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator><stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator><stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator><typename>(SpanView<_Tp> const&,SpanView<_Tp> const&)": "SPSpanView.h",
		"::stappler::operator><typename>(StringViewBase<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator><typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator><typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator><typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator><typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator>=<stappler::Endian>(BytesViewTemplate<Endianess> const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator>=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::PoolInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator>=<stappler::Endian>(BytesViewTemplate<Endianess> const&,memory::StandartInterface::BytesType const&)": "SPBytesView.h",
		"::stappler::operator>=<stappler::Endian>(memory::PoolInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator>=<stappler::Endian>(memory::StandartInterface::BytesType const&,BytesViewTemplate<Endianess> const&)": "SPBytesView.h",
		"::stappler::operator>=<typename>(SpanView<_Tp> const&,SpanView<_Tp> const&)": "SPSpanView.h",
		"::stappler::operator>=<typename>(StringViewBase<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator>=<typename>(StringViewBase<C> const&,typename memory::PoolInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator>=<typename>(StringViewBase<C> const&,typename memory::StandartInterface::BasicStringType<C> const&)": "SPStringView.h",
		"::stappler::operator>=<typename>(typename memory::PoolInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator>=<typename>(typename memory::StandartInterface::BasicStringType<C> const&,StringViewBase<C> const&)": "SPStringView.h",
		"::stappler::operator^(stappler::CharGroupId const&,stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::operator^=(stappler::CharGroupId&,stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::operator|(stappler::CharGroupId const&,stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::operator|=(stappler::CharGroupId&,stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::operator~(stappler::CharGroupId const&)": "SPCharGroup.h",
		"::stappler::pair<typename>(Args &&...)": "SPCore.h",
		"::stappler::progress(geom::Color const&,geom::Color const&,float)": "SPColor.h",
		"::stappler::progress(geom::Color3B const&,geom::Color3B const&,float)": "SPColor.h",
		"::stappler::progress(geom::Color4B const&,geom::Color4B const&,float)": "SPColor.h",
		"::stappler::progress(geom::Color4F const&,geom::Color4F const&,float)": "SPColor.h",
		"::stappler::progress(geom::FontSize,geom::FontSize,float)": "SPFontStyle.h",
		"::stappler::progress<class>(T const&,T const&,float)": "SPCore.h",
		"::stappler::reinterpretValue<class,class,typename std::enable_if<sizeof(T) == sizeof(V)>::type*>(V)": "SPCore.h",
		"::stappler::s_IdnTld": "SPUrlTld.hpp",
		"::stappler::search::Configuration": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::Configuration()": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::Configuration(stappler::search::Language)": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::DefaultMaxWords": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::DefaultMinWords": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::DefaultShortWord": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::fragmentCallback": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::maxWords": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::minWords": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::separator": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::shortWord": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::startFragment": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::startToken": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::stopFragment": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::HeadlineConfig::stopToken": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::Map<typename,typename>": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::PreStemCallback": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::SearchVector": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::Set<typename>": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::StemWordCallback": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::StemmerCallback": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::String": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::StringStream": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::Vector<typename>": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::WordMap": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::_customStopwords": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::_language": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::_preStem": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::_primary": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::_secondary": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::_stemmers": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::encodeSearchVector(stappler::search::Configuration::SearchVector const&,SearchData::Rank) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::getCustomStopwords() const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::getEnvForToken(stappler::search::ParserToken) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::getLanguage() const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::getPreStem() const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::getStemmer(stappler::search::ParserToken) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::isMatch(stappler::search::Configuration::SearchVector const&,stappler::StringView) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::isMatch(stappler::search::Configuration::SearchVector const&,stappler::search::SearchQuery const&) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::makeHeadline(stappler::search::Configuration::HeadlineConfig const&,stappler::StringView const&,Vector<stappler::search::Configuration::String> const&) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::makeHeadlines(stappler::search::Configuration::HeadlineConfig const&,Callback<void (const Function<bool (const stappler::StringView &, const stappler::StringView &)>)> const&,Vector<stappler::search::Configuration::String> const&,size_t) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::makeHtmlHeadlines(stappler::search::Configuration::HeadlineConfig const&,stappler::StringView const&,Vector<stappler::search::Configuration::String> const&,size_t) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::makeSearchVector(stappler::search::Configuration::SearchVector&,stappler::StringView,SearchData::Rank,size_t,Callback<void (stappler::StringView, stappler::StringView, stappler::search::ParserToken)> const&) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::parseQuery(stappler::StringView) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::setCustomStopwords(stappler::StringView const*)": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::setLanguage(stappler::search::Language)": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::setPreStem(stappler::search::Configuration::PreStemCallback&&)": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::setStemmer(stappler::search::ParserToken,stappler::search::Configuration::StemmerCallback&&)": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::stemHtml(stappler::StringView const&,stappler::search::Configuration::StemWordCallback const&) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::stemPhrase(stappler::StringView const&,stappler::search::Configuration::StemWordCallback const&) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::stemQuery(Vector<stappler::search::SearchData> const&) const": "SPSearchConfiguration.h",
		"::stappler::search::Configuration::stemWord(stappler::StringView const&,stappler::search::ParserToken,stappler::search::Configuration::StemWordCallback const&) const": "SPSearchConfiguration.h",
		"::stappler::search::Distance": "SPSearchDistance.h",
		"::stappler::search::Distance::Distance()": "SPSearchDistance.h",
		"::stappler::search::Distance::Distance(stappler::StringView const&,stappler::StringView const&,size_t)": "SPSearchDistance.h",
		"::stappler::search::Distance::Distance(stappler::search::Distance const&)": "SPSearchDistance.h",
		"::stappler::search::Distance::Distance(stappler::search::Distance&&)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Array": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Size": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Size::size": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Size::vec": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Storage()": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Storage(stappler::search::Distance::Storage const&)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Storage(stappler::search::Distance::Storage&&)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Struct": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Struct::get(uint8_t) const": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Struct::set(uint8_t,stappler::search::Distance::Value)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Struct::v1": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Struct::v2": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Struct::v3": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Struct::v4": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::Vec": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::_array": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::_bytes": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::_size": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::at(size_t) const": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::capacity() const": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::clear()": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::emplace_back(stappler::search::Distance::Value)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::empty() const": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::isVecStorage() const": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::isVecStorage(size_t) const": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::merge(stappler::search::Distance::Storage const&,stappler::search::Distance::Storage const&)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::operator=(stappler::search::Distance::Storage const&)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::operator=(stappler::search::Distance::Storage&&)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::reserve(size_t)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::reverse()": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::set(size_t,stappler::search::Distance::Value)": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::size() const": "SPSearchDistance.h",
		"::stappler::search::Distance::Storage::~Storage()": "SPSearchDistance.h",
		"::stappler::search::Distance::Value": "SPSearchDistance.h",
		"::stappler::search::Distance::_storage": "SPSearchDistance.h",
		"::stappler::search::Distance::diff_canonical(size_t,bool) const": "SPSearchDistance.h",
		"::stappler::search::Distance::diff_original(size_t,bool) const": "SPSearchDistance.h",
		"::stappler::search::Distance::empty() const": "SPSearchDistance.h",
		"::stappler::search::Distance::info() const": "SPSearchDistance.h",
		"::stappler::search::Distance::nmatch() const": "SPSearchDistance.h",
		"::stappler::search::Distance::operator=(stappler::search::Distance const&)": "SPSearchDistance.h",
		"::stappler::search::Distance::operator=(stappler::search::Distance&&)": "SPSearchDistance.h",
		"::stappler::search::Distance::size() const": "SPSearchDistance.h",
		"::stappler::search::Language": "SPSearchParser.h",
		"::stappler::search::ParserStatus": "SPSearchParser.h",
		"::stappler::search::ParserToken": "SPSearchParser.h",
		"::stappler::search::SearchData": "SPSearchParser.h",
		"::stappler::search::SearchData::Language": "SPSearchParser.h",
		"::stappler::search::SearchData::Rank": "SPSearchParser.h",
		"::stappler::search::SearchData::Type": "SPSearchParser.h",
		"::stappler::search::SearchData::buffer": "SPSearchParser.h",
		"::stappler::search::SearchData::getLanguage() const": "SPSearchParser.h",
		"::stappler::search::SearchData::language": "SPSearchParser.h",
		"::stappler::search::SearchData::rank": "SPSearchParser.h",
		"::stappler::search::SearchData::type": "SPSearchParser.h",
		"::stappler::search::SearchIndex": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::DefaultSep": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::FilterCallback": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::Heuristic()": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::Heuristic(stappler::search::SearchIndex::Heuristic::TagCallback const&,bool)": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::SizeCallback": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::TagCallback": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::excludeEqualMatches": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::fullMatchScore": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::operator()(stappler::search::SearchIndex const&,SearchIndex::ResultNode const&)": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::positionScore": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::tagScore": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Heuristic::wordScore": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::HeuristicCallback": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Node": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Node::alignment": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Node::canonical": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Node::id": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Node::tag": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Result": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Result::nodes": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Result::ref": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::ResultNode": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::ResultNode::matches": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::ResultNode::node": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::ResultNode::score": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::ResultToken": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::ResultToken::match": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::ResultToken::slice": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::ResultToken::word": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Slice": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Slice::size": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Slice::start": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Token": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Token::index": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::Token::slice": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::TokenCallback": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::TokenType": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::TokenizerCallback": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::_nodes": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::_tokenizer": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::_tokens": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::add(stappler::StringView const&,int64_t,int64_t)": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::convertToken(stappler::search::SearchIndex::Node const&,stappler::search::SearchIndex::ResultToken const&) const": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::init(stappler::search::SearchIndex::TokenizerCallback const&)": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::makeStringView(stappler::search::SearchIndex::Token const&) const": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::makeStringView(uint32_t,stappler::search::SearchIndex::Slice const&) const": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::onToken(Vector<stappler::search::SearchIndex::Token>&,stappler::StringView const&,uint32_t,stappler::search::SearchIndex::Slice const&)": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::performSearch(stappler::StringView const&,size_t,stappler::search::SearchIndex::HeuristicCallback const&,stappler::search::SearchIndex::FilterCallback const&)": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::print() const": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::reserve(size_t)": "SPSearchIndex.h",
		"::stappler::search::SearchIndex::resolveToken(stappler::search::SearchIndex::Node const&,stappler::search::SearchIndex::ResultToken const&) const": "SPSearchIndex.h",
		"::stappler::search::SearchOp": "SPSearchParser.h",
		"::stappler::search::SearchQuery": "SPSearchParser.h",
		"::stappler::search::SearchQuery::Block": "SPSearchParser.h",
		"::stappler::search::SearchQuery::Format": "SPSearchParser.h",
		"::stappler::search::SearchQuery::SearchQuery()": "SPSearchParser.h",
		"::stappler::search::SearchQuery::SearchQuery(stappler::StringView,size_t,stappler::StringView)": "SPSearchParser.h",
		"::stappler::search::SearchQuery::SearchQuery(stappler::search::SearchOp,stappler::StringView)": "SPSearchParser.h",
		"::stappler::search::SearchQuery::args": "SPSearchParser.h",
		"::stappler::search::SearchQuery::block": "SPSearchParser.h",
		"::stappler::search::SearchQuery::clear()": "SPSearchParser.h",
		"::stappler::search::SearchQuery::describe(std::ostream&,size_t) const": "SPSearchParser.h",
		"::stappler::search::SearchQuery::encode(Callback<void (stappler::StringView)> const&,stappler::search::SearchQuery::Format) const": "SPSearchParser.h",
		"::stappler::search::SearchQuery::foreach(Callback<void (stappler::StringView, stappler::StringView)> const&) const": "SPSearchParser.h",
		"::stappler::search::SearchQuery::offset": "SPSearchParser.h",
		"::stappler::search::SearchQuery::op": "SPSearchParser.h",
		"::stappler::search::SearchQuery::source": "SPSearchParser.h",
		"::stappler::search::SearchQuery::value": "SPSearchParser.h",
		"::stappler::search::UrlToken": "SPSearchParser.h",
		"::stappler::search::detectLanguage(stappler::StringView const&)": "SPSearchParser.h",
		"::stappler::search::getLanguageName(stappler::search::Language)": "SPSearchParser.h",
		"::stappler::search::getParserTokenName(stappler::search::ParserToken)": "SPSearchParser.h",
		"::stappler::search::getStemmer(stappler::search::Language)": "SPSearchParser.h",
		"::stappler::search::isComplexWord(stappler::search::ParserToken)": "SPSearchParser.h",
		"::stappler::search::isStopword(stappler::StringView const&,stappler::StringView const*)": "SPSearchParser.h",
		"::stappler::search::isStopword(stappler::StringView const&,stappler::search::Language)": "SPSearchParser.h",
		"::stappler::search::isStopword(stappler::StringView const&,stappler::search::StemmerEnv*)": "SPSearchParser.h",
		"::stappler::search::isWordPart(stappler::search::ParserToken)": "SPSearchParser.h",
		"::stappler::search::normalizeWord(stappler::StringView const&)": "SPSearchParser.h",
		"::stappler::search::parseHtml(stappler::StringView,Callback<void (stappler::StringView)> const&)": "SPSearchParser.h",
		"::stappler::search::parseLanguage(stappler::StringView const&)": "SPSearchParser.h",
		"::stappler::search::parsePhrase(stappler::StringView,Callback<stappler::search::ParserStatus (stappler::StringView, stappler::search::ParserToken)> const&)": "SPSearchParser.h",
		"::stappler::search::parseUrl(stappler::StringView&,Callback<void (stappler::StringViewUtf8, stappler::search::UrlToken)> const&)": "SPSearchParser.h",
		"::stappler::search::stemWord(stappler::StringView,Callback<void (stappler::StringView)> const&,stappler::search::Language)": "SPSearchParser.h",
		"::stappler::search::stemWord(stappler::StringView,Callback<void (stappler::StringView)> const&,stappler::search::StemmerEnv*)": "SPSearchParser.h",
		"::stappler::simd::add(float const[4],float const&,float[4])": "SPSIMD.h",
		"::stappler::simd::add(float const[4],float const[4],float[4])": "SPSIMD.h",
		"::stappler::simd::add(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::add1(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::addMat4(float const[16],float const[16],float[16])": "SPSIMD.h",
		"::stappler::simd::addMat4Scalar(float const[16],float,float[16])": "SPSIMD.h",
		"::stappler::simd::crossVec3(float const[3],float const[3],float[3])": "SPSIMD.h",
		"::stappler::simd::div(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::divide(float const[4],float const&,float[4])": "SPSIMD.h",
		"::stappler::simd::divide(float const[4],float const[4],float[4])": "SPSIMD.h",
		"::stappler::simd::f32x4": "SPSIMD.h",
		"::stappler::simd::isVec2BboxIntersects(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&,stappler::simd::f32x4&)": "SPSIMD.h",
		"::stappler::simd::load(float const[4])": "SPSIMD.h",
		"::stappler::simd::load(float)": "SPSIMD.h",
		"::stappler::simd::load(float,float,float,float)": "SPSIMD.h",
		"::stappler::simd::load1(float)": "SPSIMD.h",
		"::stappler::simd::mul(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::mul1(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::multiply(float const[4],float const&,float[4])": "SPSIMD.h",
		"::stappler::simd::multiply(float const[4],float const[4],float[4])": "SPSIMD.h",
		"::stappler::simd::multiplyMat4(float const[16],float const[16],float[16])": "SPSIMD.h",
		"::stappler::simd::multiplyMat4Scalar(float const[16],float,float[16])": "SPSIMD.h",
		"::stappler::simd::negateMat4(float const[16],float[16])": "SPSIMD.h",
		"::stappler::simd::rsqrt(stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::rsqrt1(stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::store(float[4],stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::store1(float*,stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::sub(float const[4],float const&,float[4])": "SPSIMD.h",
		"::stappler::simd::sub(float const[4],float const[4],float[4])": "SPSIMD.h",
		"::stappler::simd::sub(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::sub1(stappler::simd::f32x4 const&,stappler::simd::f32x4 const&)": "SPSIMD.h",
		"::stappler::simd::subtractMat4(float const[16],float const[16],float[16])": "SPSIMD.h",
		"::stappler::simd::transformVec4(float const[16],float const[4],float[4])": "SPSIMD.h",
		"::stappler::simd::transformVec4Components(float const[16],float,float,float,float,float[4])": "SPSIMD.h",
		"::stappler::simd::transposeMat4(float const[16],float[16])": "SPSIMD.h",
		"::stappler::sp_time_exp_t": "SPTime.h",
		"::stappler::sp_time_exp_t::encodeCTime(char*) const": "SPTime.h",
		"::stappler::sp_time_exp_t::encodeIso8601(char*,size_t) const": "SPTime.h",
		"::stappler::sp_time_exp_t::encodeRfc822(char*) const": "SPTime.h",
		"::stappler::sp_time_exp_t::get() const": "SPTime.h",
		"::stappler::sp_time_exp_t::geti() const": "SPTime.h",
		"::stappler::sp_time_exp_t::gmt_get() const": "SPTime.h",
		"::stappler::sp_time_exp_t::gmt_geti() const": "SPTime.h",
		"::stappler::sp_time_exp_t::ltz_get() const": "SPTime.h",
		"::stappler::sp_time_exp_t::ltz_geti() const": "SPTime.h",
		"::stappler::sp_time_exp_t::read(stappler::StringView)": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t()": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t(int64_t)": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t(int64_t,bool)": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t(int64_t,int32_t)": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t(int64_t,int32_t,bool)": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t(stappler::Time)": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t(stappler::Time,bool)": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t(stappler::Time,int32_t)": "SPTime.h",
		"::stappler::sp_time_exp_t::sp_time_exp_t(stappler::Time,int32_t,bool)": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_gmt_e": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_gmt_type": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_gmtoff": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_hour": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_isdst": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_mday": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_min": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_mon": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_sec": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_usec": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_wday": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_yday": "SPTime.h",
		"::stappler::sp_time_exp_t::tm_year": "SPTime.h",
		"::stappler::sql::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>": "SPSql.h",
		"::stappler::sql::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>::writeBind(Query<Binder, Interface>&,Binder&,Callback<void (typename Query<Binder, Interface>::Select &)> const&)": "SPSql.h",
		"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>": "SPSql.h",
		"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::Field&)": "SPSql.h",
		"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>": "SPSql.h",
		"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::RawString&)": "SPSql.h",
		"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>": "SPSql.h",
		"::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::RawStringView&)": "SPSql.h",
		"::stappler::sql::BinderTraits<typename,typename,typename>": "SPSql.h",
		"::stappler::sql::BinderTraits<typename,typename,typename>::writeBind<typename>(Query<Binder, Interface>&,Binder&,V&&)": "SPSql.h",
		"::stappler::sql::Comparation": "SPSql.h",
		"::stappler::sql::Delete::returning()": "SPSqlUpdate.hpp",
		"::stappler::sql::Delete::where()": "SPSqlUpdate.hpp",
		"::stappler::sql::Delete::where<typename,typename,typename>(Args &&...)": "SPSqlUpdate.hpp",
		"::stappler::sql::DeleteWhere::returning()": "SPSqlUpdate.hpp",
		"::stappler::sql::FieldsClause<typename>::aggregate(stappler::StringView const&,stappler::sql::Query::Field const&)": "SPSqlSelect.hpp",
		"::stappler::sql::FieldsClause<typename>::field(stappler::sql::Query::Field const&)": "SPSqlSelect.hpp",
		"::stappler::sql::FieldsClause<typename>::fields<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSqlSelect.hpp",
		"::stappler::sql::GenericQuery::insert(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::GenericQuery::insert(stappler::StringView const&,stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::GenericQuery::remove(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::GenericQuery::remove(stappler::StringView const&,stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::GenericQuery::select(stappler::sql::Query::Distinct)": "SPSql.h",
		"::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)": "SPSql.h",
		"::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSql.h",
		"::stappler::sql::GenericQuery::update(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::GenericQuery::update(stappler::StringView const&,stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::GenericQuery::with<typename,typename,typename>(stappler::StringView const&,Callback const&)": "SPSql.h",
		"::stappler::sql::Insert::values<typename,typename,typename>(Args &&...)": "SPSqlInsert.hpp",
		"::stappler::sql::InsertConflict::doNothing()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertConflict::doUpdate()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertPostConflict::returning()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertUpdateValues::excluded(stappler::StringView)": "SPSqlInsert.hpp",
		"::stappler::sql::InsertUpdateValues::excluded(stappler::StringView,stappler::StringView)": "SPSqlInsert.hpp",
		"::stappler::sql::InsertUpdateValues::returning()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertUpdateValues::where()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertUpdateValues::where<typename,typename,typename>(Args &&...)": "SPSqlInsert.hpp",
		"::stappler::sql::InsertValues::def()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertValues::next()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertValues::onConflict(stappler::StringView const&)": "SPSqlInsert.hpp",
		"::stappler::sql::InsertValues::onConflictDoNothing()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertValues::returning()": "SPSqlInsert.hpp",
		"::stappler::sql::InsertValues::value<typename,typename,typename>(Value&&)": "SPSqlInsert.hpp",
		"::stappler::sql::InsertValues::values<typename,typename,typename>(Args &&...)": "SPSqlInsert.hpp",
		"::stappler::sql::InsertWhereValues::returning()": "SPSqlInsert.hpp",
		"::stappler::sql::Nulls": "SPSql.h",
		"::stappler::sql::Operator": "SPSql.h",
		"::stappler::sql::Ordering": "SPSql.h",
		"::stappler::sql::PatternComparator<typename>": "SPSql.h",
		"::stappler::sql::PatternComparator<typename>::Type": "SPSql.h",
		"::stappler::sql::PatternComparator<typename>::cmp": "SPSql.h",
		"::stappler::sql::PatternComparator<typename>::value": "SPSql.h",
		"::stappler::sql::Profile": "SPSql.h",
		"::stappler::sql::Query<typename,typename>": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Delete": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Delete::returning()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Delete::where()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Delete::where<typename>(Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::DeleteWhere": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::DeleteWhere::returning()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Distinct": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Expand<typename>": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Expand<typename>::fields(Clause&,stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Expand<typename>::fields<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Expand<typename>::from(Clause&,stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Expand<typename>::from<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Expand<typename>::values(Clause&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename,typename>(Clause&,Value&&,VArgs &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename>(Clause&,Value&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::Field(char const*)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::Field(memory::string const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::Field(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::Field(stappler::StringView const&,bool)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::Field(std::string const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::Field<typename,typename>(SourceString&&,FieldString&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::alias": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::all()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::all(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::as(char const*)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::as(memory::string const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::as(std::string const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::from(char const*)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::from(memory::string const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::from(std::string const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::name": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::plain": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Field::source": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::FieldsClause<typename>": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::FieldsClause<typename>::aggregate(stappler::StringView const&,stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::FieldsClause<typename>::field(stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::FieldsClause<typename>::fields<typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::FinalizationState": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::insert(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::insert(stappler::StringView const&,stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::remove(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::remove(stappler::StringView const&,stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::select(stappler::sql::Query::Distinct)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::update(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::update(stappler::StringView const&,stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::GenericQuery::with<typename>(stappler::StringView const&,Callback const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Insert": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Insert::values<typename>(Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertConflict": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertConflict::doNothing()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertConflict::doUpdate()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertPostConflict": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertPostConflict::returning()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertUpdateValues": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertUpdateValues::excluded(stappler::StringView)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertUpdateValues::excluded(stappler::StringView,stappler::StringView)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertUpdateValues::returning()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertUpdateValues::where()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertUpdateValues::where<typename>(Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertValues": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertValues::def()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertValues::next()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertValues::onConflict(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertValues::onConflictDoNothing()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertValues::returning()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertValues::value<typename>(Value&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertValues::values<typename>(Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertWhereValues": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::InsertWhereValues::returning()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Query()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::QueryHandle": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::QueryHandle::QueryHandle(Query<Binder, Interface>*,stappler::sql::Query::State)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::QueryHandle::finalize()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::QueryHandle::query": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::QueryHandle::state": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::RawString": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::RawString::data": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::RawStringView": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::RawStringView::data": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Returning": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Returning::all()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Returning::count()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Returning::count(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Select": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Select::all()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Select::count()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Select::count(stappler::sql::Query::String const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Select::from()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Select::from(stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Select::from<typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::forUpdate()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::from(stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::from<typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::fullJoinOn<typename>(stappler::StringView const&,Callback const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::group(stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::innerJoinOn<typename>(stappler::StringView const&,Callback const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::leftJoinOn<typename>(stappler::StringView const&,Callback const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::rightJoinOn<typename>(stappler::StringView const&,Callback const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::where()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectFrom::where<typename>(Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectGroup": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectGroup::field(stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectGroup::fields<typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectGroup::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectOrder": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectOrder::forUpdate()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectOrder::limit(size_t)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectOrder::limit(size_t,size_t)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectOrder::offset(size_t)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectPost": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectPost::forUpdate()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectWhere": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectWhere::forUpdate()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectWhere::group(stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SelectWhere::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SetClause<typename>": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SetClause<typename>::def(stappler::StringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,Value&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,stappler::StringView const&,Value&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::State": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Stream": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::String": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Update": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Update::returning()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Update::where()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::Update::where<typename>(Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::UpdateWhere": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::UpdateWhere::returning()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereBegin": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereBegin::where()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereBegin::where<typename>(Args &&...)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereBegin::whereParentesis<typename>(Callback const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereClause<typename>": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereClause<typename>::parenthesis<typename>(stappler::sql::Operator,Callback const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::WhereContinue": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::binder": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::finalization": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::finalize()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::getBinder()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::getStream()": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::getTarget() const": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::insert(stappler::StringView const&)": "SPSqlInsert.hpp",
		"::stappler::sql::Query<typename,typename>::insert(stappler::StringView const&,stappler::StringView const&)": "SPSqlInsert.hpp",
		"::stappler::sql::Query<typename,typename>::profile": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::remove(stappler::StringView const&)": "SPSqlUpdate.hpp",
		"::stappler::sql::Query<typename,typename>::remove(stappler::StringView const&,stappler::StringView const&)": "SPSqlUpdate.hpp",
		"::stappler::sql::Query<typename,typename>::select(stappler::sql::Query::Distinct)": "SPSqlSelect.hpp",
		"::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)": "SPSqlSelect.hpp",
		"::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSqlSelect.hpp",
		"::stappler::sql::Query<typename,typename>::setProfile(stappler::sql::Profile)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::stream": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::subquery": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::target": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::update(stappler::StringView const&)": "SPSqlUpdate.hpp",
		"::stappler::sql::Query<typename,typename>::update(stappler::StringView const&,stappler::StringView const&)": "SPSqlUpdate.hpp",
		"::stappler::sql::Query<typename,typename>::with<typename>(stappler::StringView const&,Callback const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::writeBind(Callback<void (stappler::sql::Query::Select &)> const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::writeBind(stappler::StringView const&,stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&,bool)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawString const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawStringView const&)": "SPSql.h",
		"::stappler::sql::Query<typename,typename>::writeBind<typename>(Value&&)": "SPSql.h",
		"::stappler::sql::QueryHandle::finalize()": "SPSql.h",
		"::stappler::sql::Query_writeComparation<typename,typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::sql::Comparation,Value1&&,Value2&&)": "SPSqlWhere.hpp",
		"::stappler::sql::Query_writeComparation<typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::sql::Comparation,Value1&&)": "SPSqlWhere.hpp",
		"::stappler::sql::Query_writeComparationBetween<typename,typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,Value1&&,Value2&&)": "SPSqlWhere.hpp",
		"::stappler::sql::Query_writeComparationStr<typename,typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::StringView const&,Value1&&,stappler::StringView const&,Value2&&,stappler::StringView const&)": "SPSqlWhere.hpp",
		"::stappler::sql::Query_writeComparationStr<typename,typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::StringView const&,Value1&&)": "SPSqlWhere.hpp",
		"::stappler::sql::Query_writeComparationStrNoArg<typename,typename>(Query<Binder, Interface>&,typename Interface::StringStreamType&,const typename Query<Binder, Interface>::Field&,stappler::StringView const&)": "SPSqlWhere.hpp",
		"::stappler::sql::Query_writeFieldName<typename>(typename Interface::StringStreamType&,stappler::StringView const&,bool)": "SPSqlWhere.hpp",
		"::stappler::sql::Query_writeOperator<typename>(Stream&,stappler::sql::Operator)": "SPSqlWhere.hpp",
		"::stappler::sql::Query_writeOrderSt<typename,typename>(typename Interface::StringStreamType&,Query<Binder, Interface>&,stappler::sql::Ordering,const typename Query<Binder, Interface>::Field&,stappler::sql::Nulls)": "SPSqlSelect.hpp",
		"::stappler::sql::Returning::all()": "SPSqlInsert.hpp",
		"::stappler::sql::Returning::count()": "SPSqlInsert.hpp",
		"::stappler::sql::Returning::count(stappler::StringView const&)": "SPSqlInsert.hpp",
		"::stappler::sql::Select::all()": "SPSqlSelect.hpp",
		"::stappler::sql::Select::count()": "SPSqlSelect.hpp",
		"::stappler::sql::Select::count(stappler::sql::Query::String const&)": "SPSqlSelect.hpp",
		"::stappler::sql::Select::from()": "SPSqlSelect.hpp",
		"::stappler::sql::Select::from(stappler::sql::Query::Field const&)": "SPSqlSelect.hpp",
		"::stappler::sql::Select::from<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::forUpdate()": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::from(stappler::sql::Query::Field const&)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::from<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::fullJoinOn<typename,typename,typename>(stappler::StringView const&,Callback const&)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::group(stappler::sql::Query::Field const&)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::innerJoinOn<typename,typename,typename>(stappler::StringView const&,Callback const&)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::leftJoinOn<typename,typename,typename>(stappler::StringView const&,Callback const&)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::rightJoinOn<typename,typename,typename>(stappler::StringView const&,Callback const&)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::where()": "SPSqlSelect.hpp",
		"::stappler::sql::SelectFrom::where<typename,typename,typename>(Args &&...)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectGroup::field(stappler::sql::Query::Field const&)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectGroup::fields<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectGroup::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectOrder::forUpdate()": "SPSqlSelect.hpp",
		"::stappler::sql::SelectOrder::limit(size_t)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectOrder::limit(size_t,size_t)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectOrder::offset(size_t)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectPost::forUpdate()": "SPSqlSelect.hpp",
		"::stappler::sql::SelectWhere::forUpdate()": "SPSqlSelect.hpp",
		"::stappler::sql::SelectWhere::group(stappler::sql::Query::Field const&)": "SPSqlSelect.hpp",
		"::stappler::sql::SelectWhere::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)": "SPSqlSelect.hpp",
		"::stappler::sql::SetClause<typename>::def(stappler::StringView const&)": "SPSqlWhere.hpp",
		"::stappler::sql::SetClause<typename>::set<typename,typename,typename>(stappler::StringView const&,Value&&)": "SPSqlWhere.hpp",
		"::stappler::sql::SetClause<typename>::set<typename,typename,typename>(stappler::StringView const&,stappler::StringView const&,Value&&)": "SPSqlWhere.hpp",
		"::stappler::sql::SimpleBinder<typename>": "SPSql.h",
		"::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,PatternComparator<data::ValueTemplate<Interface>> const&)": "SPSql.h",
		"::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,const typename Interface::BytesType&)": "SPSql.h",
		"::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,const typename Interface::StringType&)": "SPSql.h",
		"::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,data::ValueTemplate<Interface> const&)": "SPSql.h",
		"::stappler::sql::Update::returning()": "SPSqlUpdate.hpp",
		"::stappler::sql::Update::where()": "SPSqlUpdate.hpp",
		"::stappler::sql::Update::where<typename,typename,typename>(Args &&...)": "SPSqlUpdate.hpp",
		"::stappler::sql::UpdateWhere::returning()": "SPSqlUpdate.hpp",
		"::stappler::sql::WhereBegin::where()": "SPSqlWhere.hpp",
		"::stappler::sql::WhereBegin::where<typename,typename,typename>(Args &&...)": "SPSqlWhere.hpp",
		"::stappler::sql::WhereBegin::whereParentesis<typename,typename,typename>(Callback const&)": "SPSqlWhere.hpp",
		"::stappler::sql::WhereClause<typename>::parenthesis<typename,typename,typename>(stappler::sql::Operator,Callback const&)": "SPSqlWhere.hpp",
		"::stappler::sql::WhereClause<typename>::where<typename,typename,typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)": "SPSqlWhere.hpp",
		"::stappler::sql::WhereClause<typename>::where<typename,typename,typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)": "SPSqlWhere.hpp",
		"::stappler::sql::WhereClause<typename>::where<typename,typename,typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)": "SPSqlWhere.hpp",
		"::stappler::sql::WhereClause<typename>::where<typename,typename,typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)": "SPSqlWhere.hpp",
		"::stappler::sql::decodeComparation(stappler::StringView)": "SPSql.h",
		"::stappler::sql::encodeComparation(stappler::sql::Comparation)": "SPSql.h",
		"::stappler::sql::makePatternComparator<typename>(stappler::sql::Comparation,T&&)": "SPSqlWhere.hpp",
		"::stappler::string::InterfaceForString<consttypenamememory::PoolInterface::StringType>::InterfaceForString<consttypenamememory::PoolInterface::StringType>": "SPString.h",
		"::stappler::string::InterfaceForString<consttypenamememory::PoolInterface::StringType>::Type": "SPString.h",
		"::stappler::string::InterfaceForString<consttypenamememory::PoolInterface::WideStringType>::InterfaceForString<consttypenamememory::PoolInterface::WideStringType>": "SPString.h",
		"::stappler::string::InterfaceForString<consttypenamememory::PoolInterface::WideStringType>::Type": "SPString.h",
		"::stappler::string::InterfaceForString<consttypenamememory::StandartInterface::StringType>::InterfaceForString<consttypenamememory::StandartInterface::StringType>": "SPString.h",
		"::stappler::string::InterfaceForString<consttypenamememory::StandartInterface::StringType>::Type": "SPString.h",
		"::stappler::string::InterfaceForString<consttypenamememory::StandartInterface::WideStringType>::InterfaceForString<consttypenamememory::StandartInterface::WideStringType>": "SPString.h",
		"::stappler::string::InterfaceForString<consttypenamememory::StandartInterface::WideStringType>::Type": "SPString.h",
		"::stappler::string::InterfaceForString<typenamememory::PoolInterface::StringType>::InterfaceForString<typenamememory::PoolInterface::StringType>": "SPString.h",
		"::stappler::string::InterfaceForString<typenamememory::PoolInterface::StringType>::Type": "SPString.h",
		"::stappler::string::InterfaceForString<typenamememory::PoolInterface::WideStringType>::InterfaceForString<typenamememory::PoolInterface::WideStringType>": "SPString.h",
		"::stappler::string::InterfaceForString<typenamememory::PoolInterface::WideStringType>::Type": "SPString.h",
		"::stappler::string::InterfaceForString<typenamememory::StandartInterface::StringType>::InterfaceForString<typenamememory::StandartInterface::StringType>": "SPString.h",
		"::stappler::string::InterfaceForString<typenamememory::StandartInterface::StringType>::Type": "SPString.h",
		"::stappler::string::InterfaceForString<typenamememory::StandartInterface::WideStringType>::InterfaceForString<typenamememory::StandartInterface::WideStringType>": "SPString.h",
		"::stappler::string::InterfaceForString<typenamememory::StandartInterface::WideStringType>::Type": "SPString.h",
		"::stappler::string::Sha256": "SPString.h",
		"::stappler::string::Sha512": "SPString.h",
		"::stappler::string::StringTraits<typename>": "SPString.h",
		"::stappler::string::StringTraits<typename>::Set<typename>": "SPString.h",
		"::stappler::string::StringTraits<typename>::String": "SPString.h",
		"::stappler::string::StringTraits<typename>::StringStream": "SPString.h",
		"::stappler::string::StringTraits<typename>::Vector<typename>": "SPString.h",
		"::stappler::string::StringTraits<typename>::WideString": "SPString.h",
		"::stappler::string::StringTraits<typename>::isUrlencodeChar(char)": "SPString.h",
		"::stappler::string::StringTraits<typename>::split<typename>(stappler::string::StringTraits::String const&,stappler::string::StringTraits::String const&,T&&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toKoi8r(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toUtf16(char32_t)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toUtf16(stappler::StringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toUtf16Html(stappler::StringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toUtf8(char16_t)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toUtf8(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::tolower(stappler::StringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::tolower(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::tolower(stappler::string::StringTraits::String&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::tolower(stappler::string::StringTraits::WideString&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toupper(stappler::StringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toupper(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toupper(stappler::string::StringTraits::String&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::toupper(stappler::string::StringTraits::WideString&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::trim(stappler::string::StringTraits::String&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::trim(stappler::string::StringTraits::WideString&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::urldecode(stappler::StringView const&)": "SPString.h",
		"::stappler::string::StringTraits<typename>::urlencode(stappler::StringView const&)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::String": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::StringStream": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::ToStringTraits<memory::PoolInterface>": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::WideString": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::toString(char const*)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::toString(stappler::StringView const&)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::toString(stappler::string::ToStringTraits<stappler::memory::PoolInterface>::String const&)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::toString<class>(T)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::toString<typename,typename>(T,Args &&...)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::toStringStream<typename,typename>(stappler::string::ToStringTraits<stappler::memory::PoolInterface>::StringStream&,T,Args &&...)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::PoolInterface>::toStringStream<typename>(stappler::string::ToStringTraits<stappler::memory::PoolInterface>::StringStream&,T)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::String": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::StringStream": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::ToStringTraits<memory::StandartInterface>": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::WideString": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::toString(char const*)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::toString(stappler::StringView const&)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::toString(stappler::string::ToStringTraits<stappler::memory::StandartInterface>::String const&)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::toString<class>(T)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::toString<typename,typename>(T,Args &&...)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::toStringStream<typename,typename>(stappler::string::ToStringTraits<stappler::memory::StandartInterface>::StringStream&,T,Args &&...)": "SPString.h",
		"::stappler::string::ToStringTraits<memory::StandartInterface>::toStringStream<typename>(stappler::string::ToStringTraits<stappler::memory::StandartInterface>::StringStream&,T)": "SPString.h",
		"::stappler::string::_footprint_size(stappler::StringView const&)": "SPString.h",
		"::stappler::string::_footprint_size(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::_make_footprint(stappler::StringView const&,uint8_t*)": "SPString.h",
		"::stappler::string::_make_footprint(stappler::WideStringView const&,uint8_t*)": "SPString.h",
		"::stappler::string::_to_decimal(int64_t,char*)": "SPUnicode.h",
		"::stappler::string::_to_decimal(int64_t,char16_t*)": "SPUnicode.h",
		"::stappler::string::_to_decimal(uint64_t,char*)": "SPUnicode.h",
		"::stappler::string::_to_decimal(uint64_t,char16_t*)": "SPUnicode.h",
		"::stappler::string::charToKoi8r(char16_t)": "SPString.h",
		"::stappler::string::char_const_ptr_const_ref_t": "SPUnicode.h",
		"::stappler::string::char_const_ptr_ref_t": "SPUnicode.h",
		"::stappler::string::char_const_ptr_t": "SPUnicode.h",
		"::stappler::string::char_ptr_ref_t": "SPUnicode.h",
		"::stappler::string::char_ptr_t": "SPUnicode.h",
		"::stappler::string::compare<typename,typename,typename>(L const&,R const&)": "SPStringView.h",
		"::stappler::string::compareCaseInsensivive<typename,typename,typename>(L const&,R const&)": "SPStringView.h",
		"::stappler::string::footprint<typename>(stappler::StringView const&)": "SPString.h",
		"::stappler::string::footprint<typename>(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::footprint_3(char16_t)": "SPString.h",
		"::stappler::string::footprint_4(char16_t)": "SPString.h",
		"::stappler::string::getUtf16HtmlLength(stappler::StringView const&)": "SPString.h",
		"::stappler::string::getUtf16Length(char32_t)": "SPString.h",
		"::stappler::string::getUtf16Length(stappler::StringView const&)": "SPString.h",
		"::stappler::string::getUtf8Length(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::hash32(stappler::StringView const&)": "SPString.h",
		"::stappler::string::hash64(stappler::StringView const&)": "SPString.h",
		"::stappler::string::isValidUtf8(stappler::StringView)": "SPString.h",
		"::stappler::string::isspace(char)": "SPUnicode.h",
		"::stappler::string::isspace(char16_t)": "SPUnicode.h",
		"::stappler::string::isspace(stappler::string::char_const_ptr_t)": "SPUnicode.h",
		"::stappler::string::length<typename>(_CharT const*)": "SPStringView.h",
		"::stappler::string::length<typename>(_CharT const*,size_t)": "SPStringView.h",
		"::stappler::string::read(char const*)": "SPString.h",
		"::stappler::string::split<typename>(stappler::StringView const&,stappler::StringView const&,T&&)": "SPString.h",
		"::stappler::string::stdlibHashSigned<typename>(StringType const&)": "SPString.h",
		"::stappler::string::stdlibHashUnsigned<typename>(StringType const&)": "SPString.h",
		"::stappler::string::toKoi8r<typename>(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::toUtf16<typename>(char32_t)": "SPString.h",
		"::stappler::string::toUtf16<typename>(stappler::StringView const&)": "SPString.h",
		"::stappler::string::toUtf16Html<typename>(stappler::StringView const&)": "SPString.h",
		"::stappler::string::toUtf8<typename>(char16_t)": "SPString.h",
		"::stappler::string::toUtf8<typename>(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::tolower(char&,char&)": "SPUnicode.h",
		"::stappler::string::tolower(char16_t)": "SPUnicode.h",
		"::stappler::string::tolower<typename,typename>(StringType&)": "SPString.h",
		"::stappler::string::tolower<typename>(stappler::StringView const&)": "SPString.h",
		"::stappler::string::tolower<typename>(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::tolower_buf(char*,size_t)": "SPUnicode.h",
		"::stappler::string::tolower_buf(char16_t*,size_t)": "SPUnicode.h",
		"::stappler::string::toupper(char&,char&)": "SPUnicode.h",
		"::stappler::string::toupper(char16_t)": "SPUnicode.h",
		"::stappler::string::toupper<typename,typename>(StringType&)": "SPString.h",
		"::stappler::string::toupper<typename>(stappler::StringView const&)": "SPString.h",
		"::stappler::string::toupper<typename>(stappler::WideStringView const&)": "SPString.h",
		"::stappler::string::toupper_buf(char*,size_t)": "SPUnicode.h",
		"::stappler::string::toupper_buf(char16_t*,size_t)": "SPUnicode.h",
		"::stappler::string::trim<typename,typename>(StringType&)": "SPString.h",
		"::stappler::string::urldecode<typename>(Storage&,stappler::StringView const&)": "SPString.h",
		"::stappler::string::urldecode<typename>(stappler::StringView const&)": "SPString.h",
		"::stappler::string::urlencode<typename>(stappler::StringView const&)": "SPString.h",
		"::stappler::string::utf16Encode(std::basic_ostream<char16_t>&,char32_t)": "SPString.h",
		"::stappler::string::utf16Encode<typename>(StringType&,char32_t)": "SPString.h",
		"::stappler::string::utf8Decode(stappler::string::char_const_ptr_ref_t)": "SPString.h",
		"::stappler::string::utf8Encode(std::ostream&,char16_t)": "SPString.h",
		"::stappler::string::utf8Encode(std::ostream&,char32_t)": "SPString.h",
		"::stappler::string::utf8Encode<typename>(StringType&,char16_t)": "SPString.h",
		"::stappler::string::utf8Encode<typename>(StringType&,char32_t)": "SPString.h",
		"::stappler::string::utf8HtmlDecode(stappler::string::char_const_ptr_ref_t)": "SPString.h",
		"::stappler::thread::Task": "SPThreadTask.h",
		"::stappler::thread::Task::CompleteCallback": "SPThreadTask.h",
		"::stappler::thread::Task::ExecuteCallback": "SPThreadTask.h",
		"::stappler::thread::Task::PrepareCallback": "SPThreadTask.h",
		"::stappler::thread::Task::PriorityType": "SPThreadTask.h",
		"::stappler::thread::Task::Ref": "SPThreadTask.h",
		"::stappler::thread::Task::Task()": "SPThreadTask.h",
		"::stappler::thread::Task::_complete": "SPThreadTask.h",
		"::stappler::thread::Task::_execute": "SPThreadTask.h",
		"::stappler::thread::Task::_isSuccessful": "SPThreadTask.h",
		"::stappler::thread::Task::_prepare": "SPThreadTask.h",
		"::stappler::thread::Task::_priority": "SPThreadTask.h",
		"::stappler::thread::Task::_refs": "SPThreadTask.h",
		"::stappler::thread::Task::_tag": "SPThreadTask.h",
		"::stappler::thread::Task::addCompleteCallback(stappler::thread::Task::CompleteCallback const&)": "SPThreadTask.h",
		"::stappler::thread::Task::addCompleteCallback(stappler::thread::Task::CompleteCallback&&)": "SPThreadTask.h",
		"::stappler::thread::Task::addExecuteCallback(stappler::thread::Task::ExecuteCallback const&)": "SPThreadTask.h",
		"::stappler::thread::Task::addExecuteCallback(stappler::thread::Task::ExecuteCallback&&)": "SPThreadTask.h",
		"::stappler::thread::Task::addPrepareCallback(stappler::thread::Task::PrepareCallback const&)": "SPThreadTask.h",
		"::stappler::thread::Task::addPrepareCallback(stappler::thread::Task::PrepareCallback&&)": "SPThreadTask.h",
		"::stappler::thread::Task::addRef(stappler::thread::Task::Ref*)": "SPThreadTask.h",
		"::stappler::thread::Task::execute()": "SPThreadTask.h",
		"::stappler::thread::Task::getCompleteTasks() const": "SPThreadTask.h",
		"::stappler::thread::Task::getExecuteTasks() const": "SPThreadTask.h",
		"::stappler::thread::Task::getPrepareTasks() const": "SPThreadTask.h",
		"::stappler::thread::Task::getPriority() const": "SPThreadTask.h",
		"::stappler::thread::Task::getTag() const": "SPThreadTask.h",
		"::stappler::thread::Task::init(stappler::thread::Task::CompleteCallback const&,stappler::thread::Task::Ref*)": "SPThreadTask.h",
		"::stappler::thread::Task::init(stappler::thread::Task::CompleteCallback&&,stappler::thread::Task::Ref*)": "SPThreadTask.h",
		"::stappler::thread::Task::init(stappler::thread::Task::ExecuteCallback const&,stappler::thread::Task::CompleteCallback const&,stappler::thread::Task::Ref*)": "SPThreadTask.h",
		"::stappler::thread::Task::init(stappler::thread::Task::ExecuteCallback&&,stappler::thread::Task::CompleteCallback&&,stappler::thread::Task::Ref*)": "SPThreadTask.h",
		"::stappler::thread::Task::init(stappler::thread::Task::PrepareCallback const&,stappler::thread::Task::ExecuteCallback const&,stappler::thread::Task::CompleteCallback const&,stappler::thread::Task::Ref*)": "SPThreadTask.h",
		"::stappler::thread::Task::init(stappler::thread::Task::PrepareCallback&&,stappler::thread::Task::ExecuteCallback&&,stappler::thread::Task::CompleteCallback&&,stappler::thread::Task::Ref*)": "SPThreadTask.h",
		"::stappler::thread::Task::isSuccessful() const": "SPThreadTask.h",
		"::stappler::thread::Task::onComplete()": "SPThreadTask.h",
		"::stappler::thread::Task::prepare() const": "SPThreadTask.h",
		"::stappler::thread::Task::setPriority(PriorityType::Type)": "SPThreadTask.h",
		"::stappler::thread::Task::setSuccessful(bool)": "SPThreadTask.h",
		"::stappler::thread::Task::setTag(int)": "SPThreadTask.h",
		"::stappler::thread::Task::~Task()": "SPThreadTask.h",
		"::stappler::thread::TaskQueue": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::Flags": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::Ref": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::TaskMap": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::TaskQueue(stappler::StringView,std::function<void ()>&&)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_context": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_inputMutexFree": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_inputMutexQueue": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_inputQueue": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_name": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_outputCallbacks": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_outputCounter": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_outputMutex": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_outputQueue": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_tasksCounter": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::_wakeup": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::cancelWorkers()": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::finalize()": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::getName() const": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::getOutputCounter() const": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::getOwner()": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::getThreadCount() const": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::getThreadIds() const": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::lock()": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::onMainThread(Rc<stappler::thread::Task>&&)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::onMainThread(std::function<void ()>&&,stappler::thread::TaskQueue::Ref*)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::onMainThreadWorker(Rc<stappler::thread::Task>&&)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::perform(Rc<stappler::thread::Task>&&,bool)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::perform(stappler::thread::TaskQueue::TaskMap&&)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::perform(std::function<void ()>&&,stappler::thread::TaskQueue::Ref*,bool)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::performAll(stappler::thread::TaskQueue::Flags)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::performAsync(Rc<stappler::thread::Task>&&)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::popTask(uint32_t)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::spawnWorkers(stappler::thread::TaskQueue::Flags)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::spawnWorkers(stappler::thread::TaskQueue::Flags,uint32_t,uint16_t,stappler::StringView)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::unlock()": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::update(uint32_t*)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::wait(stappler::TimeInterval,uint32_t*)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::wait(uint32_t*)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::waitForAll(stappler::TimeInterval)": "SPThreadTaskQueue.h",
		"::stappler::thread::TaskQueue::~TaskQueue()": "SPThreadTaskQueue.h",
		"::stappler::thread::ThreadInfo": "SPThread.h",
		"::stappler::thread::ThreadInfo::detouched": "SPThread.h",
		"::stappler::thread::ThreadInfo::getThreadLocal()": "SPThread.h",
		"::stappler::thread::ThreadInfo::mainThreadId": "SPThread.h",
		"::stappler::thread::ThreadInfo::managed": "SPThread.h",
		"::stappler::thread::ThreadInfo::name": "SPThread.h",
		"::stappler::thread::ThreadInfo::setMainThread()": "SPThread.h",
		"::stappler::thread::ThreadInfo::setThreadInfo(stappler::StringView)": "SPThread.h",
		"::stappler::thread::ThreadInfo::setThreadInfo(uint32_t,uint32_t,stappler::StringView,bool)": "SPThread.h",
		"::stappler::thread::ThreadInfo::threadId": "SPThread.h",
		"::stappler::thread::ThreadInfo::workerId": "SPThread.h",
		"::stappler::thread::ThreadInterface<typename>": "SPThread.h",
		"::stappler::thread::ThreadInterface<typename>::getOwner()": "SPThread.h",
		"::stappler::thread::ThreadInterface<typename>::threadDispose()": "SPThread.h",
		"::stappler::thread::ThreadInterface<typename>::threadInit()": "SPThread.h",
		"::stappler::thread::ThreadInterface<typename>::worker()": "SPThread.h",
		"::stappler::thread::ThreadInterface<typename>::workerThread(ThreadInterface<Interface>*,void const*)": "SPThread.h",
		"::stappler::thread::ThreadInterface<typename>::~ThreadInterface()": "SPThread.h",
		"::stappler::thread::operator!=(TaskQueue::Flags const&,std::underlying_type<TaskQueue::Flags>::type const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator!=(std::underlying_type<TaskQueue::Flags>::type const&,TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator&(TaskQueue::Flags const&,TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator&=(TaskQueue::Flags&,TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator==(TaskQueue::Flags const&,std::underlying_type<TaskQueue::Flags>::type const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator==(std::underlying_type<TaskQueue::Flags>::type const&,TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator^(TaskQueue::Flags const&,TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator^=(TaskQueue::Flags&,TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator|(TaskQueue::Flags const&,TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator|=(TaskQueue::Flags&,TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::thread::operator~(TaskQueue::Flags const&)": "SPThreadTaskQueue.h",
		"::stappler::toInt<typename>(E const&)": "SPCore.h",
		"::stappler::toStringConcat<typename,typename,typename>(Container const&,Sep const&)": "SPString.h",
		"::stappler::toStringConcat<typename,typename>(Container const&)": "SPString.h",
		"::stappler::toStringStreamConcat<typename,typename,typename>(StreamType&,Container const&,Sep const&)": "SPString.h",
		"::stappler::toStringStreamConcat<typename,typename>(StreamType&,Container const&)": "SPString.h",
		"::stappler::traits::SelectStringStream<memory::basic_string<char16_t>>::SelectStringStream<memory::basic_string<char16_t>>": "SPMemInterface.h",
		"::stappler::traits::SelectStringStream<memory::basic_string<char16_t>>::Type": "SPMemInterface.h",
		"::stappler::traits::SelectStringStream<memory::string>::SelectStringStream<memory::string>": "SPMemInterface.h",
		"::stappler::traits::SelectStringStream<memory::string>::Type": "SPMemInterface.h",
		"::stappler::traits::SelectStringStream<std::string>::SelectStringStream<std::string>": "SPMemInterface.h",
		"::stappler::traits::SelectStringStream<std::string>::Type": "SPMemInterface.h",
		"::stappler::traits::SelectStringStream<std::u16string>::SelectStringStream<std::u16string>": "SPMemInterface.h",
		"::stappler::traits::SelectStringStream<std::u16string>::Type": "SPMemInterface.h",
		"::stappler::unicode::isUtf8Surrogate(char)": "SPUnicode.h",
		"::stappler::unicode::utf8Decode(char const*)": "SPUnicode.h",
		"::stappler::unicode::utf8Decode(char const*,uint8_t&)": "SPUnicode.h",
		"::stappler::unicode::utf8Decode(char16_t const*)": "SPUnicode.h",
		"::stappler::unicode::utf8Decode(char16_t const*,uint8_t&)": "SPUnicode.h",
		"::stappler::unicode::utf8Encode(memory::string&,char16_t)": "SPUnicode.h",
		"::stappler::unicode::utf8Encode(std::ostream&,char16_t)": "SPUnicode.h",
		"::stappler::unicode::utf8Encode(std::string&,char16_t)": "SPUnicode.h",
		"::stappler::unicode::utf8EncodeBuf(char*,char16_t)": "SPUnicode.h",
		"::stappler::unicode::utf8EncodeLength(char16_t)": "SPUnicode.h",
		"::stappler::unicode::utf8_length_data": "SPUnicode.h",
		"::stappler::unicode::utf8_length_mask": "SPUnicode.h",
		"::stappler::valid::generatePassword<typename>(size_t)": "SPValid.h",
		"::stappler::valid::makePassword<typename>(stappler::StringView const&,stappler::StringView const&)": "SPValid.h",
		"::stappler::valid::makeRandomBytes(uint8_t*,size_t)": "SPValid.h",
		"::stappler::valid::makeRandomBytes<typename>(size_t)": "SPValid.h",
		"::stappler::valid::readIp(stappler::StringView)": "SPValid.h",
		"::stappler::valid::readIp(stappler::StringView,bool&)": "SPValid.h",
		"::stappler::valid::readIpRange(stappler::StringView)": "SPValid.h",
		"::stappler::valid::validateBase64(stappler::StringView const&)": "SPValid.h",
		"::stappler::valid::validateEmail(memory::PoolInterface::StringType&)": "SPValid.h",
		"::stappler::valid::validateEmail(memory::StandartInterface::StringType&)": "SPValid.h",
		"::stappler::valid::validateEmailWithoutNormalization(stappler::StringView)": "SPValid.h",
		"::stappler::valid::validateHexadecimial(stappler::StringView const&)": "SPValid.h",
		"::stappler::valid::validateIdentifier(stappler::StringView)": "SPValid.h",
		"::stappler::valid::validateNumber(stappler::StringView const&)": "SPValid.h",
		"::stappler::valid::validatePassord(stappler::StringView const&,stappler::BytesView const&,stappler::StringView const&)": "SPValid.h",
		"::stappler::valid::validateText(stappler::StringView)": "SPValid.h",
		"::stappler::valid::validateUrl(memory::PoolInterface::StringType&)": "SPValid.h",
		"::stappler::valid::validateUrl(memory::StandartInterface::StringType&)": "SPValid.h",
		"::stappler::vg::Interface": "SPVectorPath.h",
		"::stappler::vg::Metric": "SPSvgReader.h",
		"::stappler::vg::PathXRef": "SPVectorPath.h",
		"::stappler::vg::PathXRef::cacheId": "SPVectorPath.h",
		"::stappler::vg::PathXRef::id": "SPVectorPath.h",
		"::stappler::vg::PathXRef::mat": "SPVectorPath.h",
		"::stappler::vg::SvgReader": "SPSvgReader.h",
		"::stappler::vg::SvgReader::Parser": "SPSvgReader.h",
		"::stappler::vg::SvgReader::StringReader": "SPSvgReader.h",
		"::stappler::vg::SvgReader::SvgReader()": "SPSvgReader.h",
		"::stappler::vg::SvgReader::Tag": "SPSvgReader.h",
		"::stappler::vg::SvgReader::_defs": "SPSvgReader.h",
		"::stappler::vg::SvgReader::_drawOrder": "SPSvgReader.h",
		"::stappler::vg::SvgReader::_height": "SPSvgReader.h",
		"::stappler::vg::SvgReader::_nextId": "SPSvgReader.h",
		"::stappler::vg::SvgReader::_paths": "SPSvgReader.h",
		"::stappler::vg::SvgReader::_squareLength": "SPSvgReader.h",
		"::stappler::vg::SvgReader::_viewBox": "SPSvgReader.h",
		"::stappler::vg::SvgReader::_width": "SPSvgReader.h",
		"::stappler::vg::SvgReader::onBeginTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&)": "SPSvgReader.h",
		"::stappler::vg::SvgReader::onEndTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&,bool)": "SPSvgReader.h",
		"::stappler::vg::SvgReader::onInlineTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&)": "SPSvgReader.h",
		"::stappler::vg::SvgReader::onPopTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&)": "SPSvgReader.h",
		"::stappler::vg::SvgReader::onPushTag(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&)": "SPSvgReader.h",
		"::stappler::vg::SvgReader::onStyle(stappler::vg::SvgReader::Tag&,stappler::vg::SvgReader::StringReader&)": "SPSvgReader.h",
		"::stappler::vg::SvgReader::onStyleParameter(stappler::vg::SvgReader::Tag&,stappler::vg::SvgReader::StringReader&,stappler::vg::SvgReader::StringReader&)": "SPSvgReader.h",
		"::stappler::vg::SvgReader::onTagAttribute(stappler::vg::SvgReader::Parser&,stappler::vg::SvgReader::Tag&,stappler::vg::SvgReader::StringReader&,stappler::vg::SvgReader::StringReader&)": "SPSvgReader.h",
		"::stappler::vg::SvgTag": "SPSvgReader.h",
		"::stappler::vg::SvgTag::Shape": "SPSvgReader.h",
		"::stappler::vg::SvgTag::SvgTag(stappler::StringView&)": "SPSvgReader.h",
		"::stappler::vg::SvgTag::getPath()": "SPSvgReader.h",
		"::stappler::vg::SvgTag::id": "SPSvgReader.h",
		"::stappler::vg::SvgTag::mat": "SPSvgReader.h",
		"::stappler::vg::SvgTag::ref": "SPSvgReader.h",
		"::stappler::vg::SvgTag::rpath": "SPSvgReader.h",
		"::stappler::vg::SvgTag::shape": "SPSvgReader.h",
		"::stappler::vg::VectorImage": "SPVectorImage.h",
		"::stappler::vg::VectorImage::String": "SPVectorImage.h",
		"::stappler::vg::VectorImage::_copyOnWrite": "SPVectorImage.h",
		"::stappler::vg::VectorImage::_data": "SPVectorImage.h",
		"::stappler::vg::VectorImage::_dirty": "SPVectorImage.h",
		"::stappler::vg::VectorImage::_paths": "SPVectorImage.h",
		"::stappler::vg::VectorImage::addPath(stappler::StringView,stappler::StringView,stappler::geom::Mat4)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::addPath(stappler::vg::VectorPath const&,stappler::StringView,stappler::StringView,stappler::geom::Mat4)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::addPath(stappler::vg::VectorPath&&,stappler::StringView,stappler::StringView,stappler::geom::Mat4)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::clear()": "SPVectorImage.h",
		"::stappler::vg::VectorImage::clearDirty()": "SPVectorImage.h",
		"::stappler::vg::VectorImage::copy()": "SPVectorImage.h",
		"::stappler::vg::VectorImage::copyPath(stappler::StringView,Rc<stappler::vg::VectorPath> const&)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::getDrawOrder() const": "SPVectorImage.h",
		"::stappler::vg::VectorImage::getImageSize() const": "SPVectorImage.h",
		"::stappler::vg::VectorImage::getPath(stappler::StringView) const": "SPVectorImage.h",
		"::stappler::vg::VectorImage::getPaths() const": "SPVectorImage.h",
		"::stappler::vg::VectorImage::getViewBox() const": "SPVectorImage.h",
		"::stappler::vg::VectorImage::getViewBoxTransform() const": "SPVectorImage.h",
		"::stappler::vg::VectorImage::init(stappler::BytesView)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::init(stappler::FilePath)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::init(stappler::StringView)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::init(stappler::geom::Size2)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::init(stappler::geom::Size2,stappler::StringView)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::init(stappler::geom::Size2,stappler::vg::VectorPath&&)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::isBatchDrawing() const": "SPVectorImage.h",
		"::stappler::vg::VectorImage::isDirty() const": "SPVectorImage.h",
		"::stappler::vg::VectorImage::isSvg(stappler::BytesView)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::isSvg(stappler::FilePath)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::isSvg(stappler::StringView)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::markCopyOnWrite()": "SPVectorImage.h",
		"::stappler::vg::VectorImage::popData()": "SPVectorImage.h",
		"::stappler::vg::VectorImage::removePath(Rc<stappler::vg::VectorPathRef> const&)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::removePath(stappler::StringView)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::resetDrawOrder()": "SPVectorImage.h",
		"::stappler::vg::VectorImage::setBatchDrawing(bool)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::setDirty()": "SPVectorImage.h",
		"::stappler::vg::VectorImage::setDrawOrder(Interface::VectorType<PathXRef> const&)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::setDrawOrder(Interface::VectorType<PathXRef>&&)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::setImageSize(stappler::geom::Size2 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::setViewBoxTransform(stappler::geom::Mat4 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorImage::~VectorImage()": "SPVectorImage.h",
		"::stappler::vg::VectorImageData": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::String": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::_allowBatchDrawing": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::_image": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::_imageSize": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::_nextId": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::_order": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::_paths": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::_viewBox": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::_viewBoxTransform": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::addPath(stappler::StringView,stappler::StringView,stappler::vg::VectorPath&&,stappler::geom::Mat4)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::clear()": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::copyPath(stappler::StringView,Rc<stappler::vg::VectorPath> const&)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::draw<typename>(Callback const&) const": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::getDrawOrder() const": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::getImageSize() const": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::getNextId()": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::getPaths() const": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::getViewBox() const": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::getViewBoxTransform() const": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::init(stappler::vg::VectorImage*,stappler::geom::Size2,stappler::geom::Rect)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::init(stappler::vg::VectorImage*,stappler::geom::Size2,stappler::geom::Rect,Interface::VectorType<PathXRef>&&,Interface::MapType<String, VectorPath>&&,uint16_t)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::init(stappler::vg::VectorImageData&)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::isBatchDrawing() const": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::removePath(stappler::StringView)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::resetDrawOrder()": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::setBatchDrawing(bool)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::setDrawOrder(Interface::VectorType<PathXRef>&&)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::setImageSize(stappler::geom::Size2 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::setViewBoxTransform(stappler::geom::Mat4 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorImageData::~VectorImageData()": "SPVectorImage.h",
		"::stappler::vg::VectorPath": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Command": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::CommandData(float,bool,bool)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::CommandData(float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::a": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::b": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::f": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::p": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::v": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::x": "SPVectorPath.h",
		"::stappler::vg::VectorPath::CommandData::y": "SPVectorPath.h",
		"::stappler::vg::VectorPath::DrawStyle": "SPVectorPath.h",
		"::stappler::vg::VectorPath::LineCup": "SPVectorPath.h",
		"::stappler::vg::VectorPath::LineJoin": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::fillColor": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::isAntialiased": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::lineCup": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::lineJoin": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::miterLimit": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::strokeColor": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::strokeWidth": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::style": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::transform": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Params::winding": "SPVectorPath.h",
		"::stappler::vg::VectorPath::VectorPath()": "SPVectorPath.h",
		"::stappler::vg::VectorPath::VectorPath(size_t)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::VectorPath(stappler::vg::VectorPath const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::VectorPath(stappler::vg::VectorPath&&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::Winding": "SPVectorPath.h",
		"::stappler::vg::VectorPath::_commands": "SPVectorPath.h",
		"::stappler::vg::VectorPath::_params": "SPVectorPath.h",
		"::stappler::vg::VectorPath::_points": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addArc(stappler::geom::Rect const&,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addCircle(float,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addEllipse(float,float,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addOval(stappler::geom::Rect const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addPath(stappler::BytesView)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addPath(stappler::StringView)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addPath(stappler::vg::VectorPath const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addRect(float,float,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addRect(float,float,float,float,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addRect(stappler::geom::Rect const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::addRect(stappler::geom::Rect const&,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::applyTransform(stappler::geom::Mat4 const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::arcTo(float,float,float,bool,bool,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::arcTo(stappler::geom::Vec2 const&,float,bool,bool,stappler::geom::Vec2 const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::clear()": "SPVectorPath.h",
		"::stappler::vg::VectorPath::closePath()": "SPVectorPath.h",
		"::stappler::vg::VectorPath::commandsCount() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::count() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::cubicTo(float,float,float,float,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::cubicTo(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::dataCount() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::empty() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::encode() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getCommands() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getFillColor() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getFillOpacity() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getLineCup() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getLineJoin() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getMiterLimit() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getParams() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getPoints() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getStrokeColor() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getStrokeOpacity() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getStrokeWidth() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getStyle() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getTransform() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::getWindingRule() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::init()": "SPVectorPath.h",
		"::stappler::vg::VectorPath::init(stappler::BytesView)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::init(stappler::FilePath&&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::init(stappler::StringView const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::isAntialiased() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::lineTo(float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::lineTo(stappler::geom::Vec2 const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::moveTo(float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::moveTo(stappler::geom::Vec2 const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::operator bool() const": "SPVectorPath.h",
		"::stappler::vg::VectorPath::operator=(stappler::vg::VectorPath const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::operator=(stappler::vg::VectorPath&&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::quadTo(float,float,float,float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::quadTo(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::reserve(size_t,size_t)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setAntialiased(bool)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setFillColor(stappler::geom::Color const&,bool)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setFillColor(stappler::geom::Color3B const&,bool)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setFillColor(stappler::geom::Color4B const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setFillOpacity(uint8_t)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setLineCup(stappler::vg::VectorPath::LineCup)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setLineJoin(stappler::vg::VectorPath::LineJoin)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setMiterLimit(float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setParams(stappler::vg::VectorPath::Params const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setStrokeColor(stappler::geom::Color const&,bool)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setStrokeColor(stappler::geom::Color3B const&,bool)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setStrokeColor(stappler::geom::Color4B const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setStrokeOpacity(uint8_t)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setStrokeWidth(float)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setStyle(stappler::vg::VectorPath::DrawStyle)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setTransform(stappler::geom::Mat4 const&)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::setWindingRule(stappler::vg::VectorPath::Winding)": "SPVectorPath.h",
		"::stappler::vg::VectorPath::toString(bool) const": "SPVectorPath.h",
		"::stappler::vg::VectorPathRef": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::String": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::_copyOnWrite": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::_id": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::_image": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::_path": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::addArc(stappler::geom::Rect const&,float,float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::addCircle(float,float,float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::addOval(stappler::geom::Rect const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::addRect(stappler::geom::Rect const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::addRect(stappler::geom::Rect const&,float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::applyTransform(stappler::geom::Mat4 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::arcTo(float,float,float,bool,bool,float,float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::arcTo(stappler::geom::Vec2 const&,float,bool,bool,stappler::geom::Vec2 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::clear()": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::closePath()": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::copy()": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::count() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::cubicTo(float,float,float,float,float,float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::cubicTo(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::empty() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getFillColor() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getFillOpacity() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getId() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getPath() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getStrokeColor() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getStrokeOpacity() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getStrokeWidth() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getStyle() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getTransform() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::getWindingRule() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::init(stappler::vg::VectorImage*,stappler::vg::VectorPathRef::String const&,Rc<stappler::vg::VectorPath> const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::init(stappler::vg::VectorImage*,stappler::vg::VectorPathRef::String const&,Rc<stappler::vg::VectorPath>&&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::isAntialiased() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::lineTo(float,float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::lineTo(stappler::geom::Vec2 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::markCopyOnWrite()": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::moveTo(float,float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::moveTo(stappler::geom::Vec2 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::operator bool() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::quadTo(float,float,float,float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::quadTo(stappler::geom::Vec2 const&,stappler::geom::Vec2 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setAntialiased(bool)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setFillColor(stappler::geom::Color4B const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setFillOpacity(uint8_t)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setImage(stappler::vg::VectorImage*)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setPath(Rc<stappler::vg::VectorPath>&&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setPath(stappler::BytesView)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setPath(stappler::StringView)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setStrokeColor(stappler::geom::Color4B const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setStrokeOpacity(uint8_t)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setStrokeWidth(float)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setStyle(vg::DrawStyle)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setTransform(stappler::geom::Mat4 const&)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::setWindingRule(vg::Winding)": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::valid() const": "SPVectorImage.h",
		"::stappler::vg::VectorPathRef::~VectorPathRef()": "SPVectorImage.h",
		"::stappler::xenolith::Action": "XLAction.h",
		"::stappler::xenolith::Action::Action()": "XLAction.h",
		"::stappler::xenolith::Action::INVALID_TAG": "XLAction.h",
		"::stappler::xenolith::Action::_container": "XLAction.h",
		"::stappler::xenolith::Action::_duration": "XLAction.h",
		"::stappler::xenolith::Action::_tag": "XLAction.h",
		"::stappler::xenolith::Action::_target": "XLAction.h",
		"::stappler::xenolith::Action::getContainer() const": "XLAction.h",
		"::stappler::xenolith::Action::getDuration() const": "XLAction.h",
		"::stappler::xenolith::Action::getTag() const": "XLAction.h",
		"::stappler::xenolith::Action::getTarget() const": "XLAction.h",
		"::stappler::xenolith::Action::invalidate()": "XLAction.h",
		"::stappler::xenolith::Action::isDone() const": "XLAction.h",
		"::stappler::xenolith::Action::setContainer(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::Action::setDuration(float)": "XLAction.h",
		"::stappler::xenolith::Action::setTag(uint32_t)": "XLAction.h",
		"::stappler::xenolith::Action::setTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::Action::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::Action::step(float)": "XLAction.h",
		"::stappler::xenolith::Action::stop()": "XLAction.h",
		"::stappler::xenolith::Action::update(float)": "XLAction.h",
		"::stappler::xenolith::Action::~Action()": "XLAction.h",
		"::stappler::xenolith::ActionContainer": "XLActionManager.h",
		"::stappler::xenolith::ActionContainer::ActionContainer(stappler::xenolith::Node*)": "XLActionManager.h",
		"::stappler::xenolith::ActionContainer::paused": "XLActionManager.h",
		"::stappler::xenolith::ActionContainer::target": "XLActionManager.h",
		"::stappler::xenolith::ActionContainer::~ActionContainer()": "XLActionManager.h",
		"::stappler::xenolith::ActionEase": "XLActionEase.h",
		"::stappler::xenolith::ActionEase::_inner": "XLActionEase.h",
		"::stappler::xenolith::ActionEase::init(stappler::xenolith::ActionInterval*)": "XLActionEase.h",
		"::stappler::xenolith::ActionEase::startWithTarget(stappler::xenolith::Node*)": "XLActionEase.h",
		"::stappler::xenolith::ActionEase::stop()": "XLActionEase.h",
		"::stappler::xenolith::ActionEase::update(float)": "XLActionEase.h",
		"::stappler::xenolith::ActionEase::~ActionEase()": "XLActionEase.h",
		"::stappler::xenolith::ActionInstant": "XLAction.h",
		"::stappler::xenolith::ActionInstant::_performed": "XLAction.h",
		"::stappler::xenolith::ActionInstant::_runOnce": "XLAction.h",
		"::stappler::xenolith::ActionInstant::init(bool)": "XLAction.h",
		"::stappler::xenolith::ActionInstant::step(float)": "XLAction.h",
		"::stappler::xenolith::ActionInstant::~ActionInstant()": "XLAction.h",
		"::stappler::xenolith::ActionInterval": "XLAction.h",
		"::stappler::xenolith::ActionInterval::_elapsed": "XLAction.h",
		"::stappler::xenolith::ActionInterval::_firstTick": "XLAction.h",
		"::stappler::xenolith::ActionInterval::getElapsed()": "XLAction.h",
		"::stappler::xenolith::ActionInterval::init(float)": "XLAction.h",
		"::stappler::xenolith::ActionInterval::isDone() const": "XLAction.h",
		"::stappler::xenolith::ActionInterval::setDuration(float)": "XLAction.h",
		"::stappler::xenolith::ActionInterval::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::ActionInterval::step(float)": "XLAction.h",
		"::stappler::xenolith::ActionInterval::~ActionInterval()": "XLAction.h",
		"::stappler::xenolith::ActionManager": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::ActionManager()": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::PendingAction": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::PendingAction::action": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::PendingAction::paused": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::PendingAction::target": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::_actions": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::_current": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::_pending": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::addAction(stappler::xenolith::Action*,stappler::xenolith::Node*,bool)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::empty() const": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::getActionByTag(uint32_t,stappler::xenolith::Node const*) const": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::getNumberOfRunningActionsInTarget(stappler::xenolith::Node const*) const": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::init()": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::pauseAllRunningActions()": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::pauseTarget(stappler::xenolith::Node*)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::removeAction(stappler::xenolith::Action*)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::removeActionByTag(uint32_t,stappler::xenolith::Node*)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::removeAllActions()": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::removeAllActionsByTag(uint32_t,stappler::xenolith::Node*)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::removeAllActionsFromTarget(stappler::xenolith::Node*)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::resumeTarget(stappler::xenolith::Node*)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::resumeTargets(Vector<stappler::xenolith::Node *> const&)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::update(stappler::xenolith::UpdateTime const&)": "XLActionManager.h",
		"::stappler::xenolith::ActionManager::~ActionManager()": "XLActionManager.h",
		"::stappler::xenolith::ActionProgress": "XLAction.h",
		"::stappler::xenolith::ActionProgress::StartCallback": "XLAction.h",
		"::stappler::xenolith::ActionProgress::StopCallback": "XLAction.h",
		"::stappler::xenolith::ActionProgress::UpdateCallback": "XLAction.h",
		"::stappler::xenolith::ActionProgress::_onStart": "XLAction.h",
		"::stappler::xenolith::ActionProgress::_onStop": "XLAction.h",
		"::stappler::xenolith::ActionProgress::_onUpdate": "XLAction.h",
		"::stappler::xenolith::ActionProgress::_sourceProgress": "XLAction.h",
		"::stappler::xenolith::ActionProgress::_stopped": "XLAction.h",
		"::stappler::xenolith::ActionProgress::_targetProgress": "XLAction.h",
		"::stappler::xenolith::ActionProgress::getSourceProgress() const": "XLAction.h",
		"::stappler::xenolith::ActionProgress::getTargetProgress() const": "XLAction.h",
		"::stappler::xenolith::ActionProgress::init(float,float,float,stappler::xenolith::ActionProgress::UpdateCallback&&,stappler::xenolith::ActionProgress::StartCallback&&,stappler::xenolith::ActionProgress::StopCallback&&)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::init(float,float,stappler::xenolith::ActionProgress::UpdateCallback&&,stappler::xenolith::ActionProgress::StartCallback&&,stappler::xenolith::ActionProgress::StopCallback&&)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::init(float,stappler::xenolith::ActionProgress::UpdateCallback&&,stappler::xenolith::ActionProgress::StartCallback&&,stappler::xenolith::ActionProgress::StopCallback&&)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::setSourceProgress(float)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::setStartCallback(stappler::xenolith::ActionProgress::StartCallback&&)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::setStopCallback(stappler::xenolith::ActionProgress::StopCallback&&)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::setTargetProgress(float)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::setUpdateCallback(stappler::xenolith::ActionProgress::UpdateCallback&&)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::stop()": "XLAction.h",
		"::stappler::xenolith::ActionProgress::update(float)": "XLAction.h",
		"::stappler::xenolith::ActionProgress::~ActionProgress()": "XLAction.h",
		"::stappler::xenolith::Anchor": "XLCore.h",
		"::stappler::xenolith::Application": "XLApplication.h",
		"::stappler::xenolith::Application::CallbackInfo": "XLApplication.h",
		"::stappler::xenolith::Application::CallbackInfo::finalizeCallback": "XLApplication.h",
		"::stappler::xenolith::Application::CallbackInfo::initCallback": "XLApplication.h",
		"::stappler::xenolith::Application::CallbackInfo::updateCallback": "XLApplication.h",
		"::stappler::xenolith::Application::CommonInfo": "XLApplication.h",
		"::stappler::xenolith::Application::CommonInfo::applicationName": "XLApplication.h",
		"::stappler::xenolith::Application::CommonInfo::applicationVersion": "XLApplication.h",
		"::stappler::xenolith::Application::CommonInfo::applicationVersionCode": "XLApplication.h",
		"::stappler::xenolith::Application::CommonInfo::bundleName": "XLApplication.h",
		"::stappler::xenolith::Application::CommonInfo::locale": "XLApplication.h",
		"::stappler::xenolith::Application::CommonInfo::nativeHandle": "XLApplication.h",
		"::stappler::xenolith::Application::CommonInfo::userAgent": "XLApplication.h",
		"::stappler::xenolith::Application::CompleteCallback": "XLApplication.h",
		"::stappler::xenolith::Application::ExecuteCallback": "XLApplication.h",
		"::stappler::xenolith::Application::Task": "XLApplication.h",
		"::stappler::xenolith::Application::WaitCallbackInfo": "XLApplication.h",
		"::stappler::xenolith::Application::WaitCallbackInfo::func": "XLApplication.h",
		"::stappler::xenolith::Application::WaitCallbackInfo::immediate": "XLApplication.h",
		"::stappler::xenolith::Application::WaitCallbackInfo::target": "XLApplication.h",
		"::stappler::xenolith::Application::_activeViews": "XLApplication.h",
		"::stappler::xenolith::Application::_device": "XLApplication.h",
		"::stappler::xenolith::Application::_eventListeners": "XLApplication.h",
		"::stappler::xenolith::Application::_extensions": "XLApplication.h",
		"::stappler::xenolith::Application::_glLoop": "XLApplication.h",
		"::stappler::xenolith::Application::_glWaitCallback": "XLApplication.h",
		"::stappler::xenolith::Application::_immediateUpdate": "XLApplication.h",
		"::stappler::xenolith::Application::_info": "XLApplication.h",
		"::stappler::xenolith::Application::_instance": "XLApplication.h",
		"::stappler::xenolith::Application::_messageToken": "XLApplication.h",
		"::stappler::xenolith::Application::_resourceCache": "XLApplication.h",
		"::stappler::xenolith::Application::_shouldQuit": "XLApplication.h",
		"::stappler::xenolith::Application::_started": "XLApplication.h",
		"::stappler::xenolith::Application::_threadId": "XLApplication.h",
		"::stappler::xenolith::Application::_time": "XLApplication.h",
		"::stappler::xenolith::Application::_tmpViews": "XLApplication.h",
		"::stappler::xenolith::Application::_updatePool": "XLApplication.h",
		"::stappler::xenolith::Application::addEventListener(stappler::xenolith::EventHandlerNode const*)": "XLApplication.h",
		"::stappler::xenolith::Application::addExtension<typename>(Rc<T>&&)": "XLApplication.h",
		"::stappler::xenolith::Application::addView(stappler::xenolith::ViewInfo&&)": "XLApplication.h",
		"::stappler::xenolith::Application::dispatchEvent(stappler::xenolith::Event const&)": "XLApplication.h",
		"::stappler::xenolith::Application::end()": "XLApplication.h",
		"::stappler::xenolith::Application::getClock() const": "XLApplication.h",
		"::stappler::xenolith::Application::getExtension<typename>()": "XLApplication.h",
		"::stappler::xenolith::Application::getGlLoop() const": "XLApplication.h",
		"::stappler::xenolith::Application::getInfo() const": "XLApplication.h",
		"::stappler::xenolith::Application::getInstance()": "XLApplication.h",
		"::stappler::xenolith::Application::getQueue()": "XLApplication.h",
		"::stappler::xenolith::Application::getResourceCache() const": "XLApplication.h",
		"::stappler::xenolith::Application::handleDeviceFinalized(core::Loop const&,core::Device const&)": "XLApplication.h",
		"::stappler::xenolith::Application::handleDeviceStarted(core::Loop const&,core::Device const&)": "XLApplication.h",
		"::stappler::xenolith::Application::handleMessageToken(stappler::mem_std::String&&)": "XLApplication.h",
		"::stappler::xenolith::Application::handleRemoteNotification(stappler::mem_std::Value&&)": "XLApplication.h",
		"::stappler::xenolith::Application::init(stappler::xenolith::Application::CommonInfo&&,Rc<core::Instance>&&)": "XLApplication.h",
		"::stappler::xenolith::Application::isOnMainThread() const": "XLApplication.h",
		"::stappler::xenolith::Application::nativeDispose()": "XLApplication.h",
		"::stappler::xenolith::Application::nativeInit()": "XLApplication.h",
		"::stappler::xenolith::Application::onMessageToken": "XLApplication.h",
		"::stappler::xenolith::Application::onRemoteNotification": "XLApplication.h",
		"::stappler::xenolith::Application::openUrl(stappler::StringView) const": "XLApplication.h",
		"::stappler::xenolith::Application::perform(Rc<stappler::xenolith::Application::Task>&&)": "XLApplication.h",
		"::stappler::xenolith::Application::perform(Rc<stappler::xenolith::Application::Task>&&,bool)": "XLApplication.h",
		"::stappler::xenolith::Application::perform(stappler::xenolith::Application::ExecuteCallback&&,stappler::xenolith::Application::CompleteCallback&&,stappler::thread::TaskQueue::Ref*)": "XLApplication.h",
		"::stappler::xenolith::Application::performOnGlThread(Function<void ()>&&,stappler::thread::TaskQueue::Ref*,bool) const": "XLApplication.h",
		"::stappler::xenolith::Application::performOnMainThread(Function<void ()>&&,stappler::thread::TaskQueue::Ref*,bool)": "XLApplication.h",
		"::stappler::xenolith::Application::performOnMainThread(Rc<stappler::xenolith::Application::Task>&&,bool)": "XLApplication.h",
		"::stappler::xenolith::Application::removeAllEventListeners()": "XLApplication.h",
		"::stappler::xenolith::Application::removeEventListner(stappler::xenolith::EventHandlerNode const*)": "XLApplication.h",
		"::stappler::xenolith::Application::run(stappler::xenolith::Application::CallbackInfo const&,core::LoopInfo&&,uint32_t,stappler::TimeInterval)": "XLApplication.h",
		"::stappler::xenolith::Application::update(stappler::xenolith::Application::CallbackInfo const&,stappler::xenolith::UpdateTime const&)": "XLApplication.h",
		"::stappler::xenolith::Application::wakeup()": "XLApplication.h",
		"::stappler::xenolith::Application::~Application()": "XLApplication.h",
		"::stappler::xenolith::ApplicationExtension": "XLApplicationExtension.h",
		"::stappler::xenolith::ApplicationExtension::initialize(stappler::xenolith::Application*)": "XLApplicationExtension.h",
		"::stappler::xenolith::ApplicationExtension::invalidate(stappler::xenolith::Application*)": "XLApplicationExtension.h",
		"::stappler::xenolith::ApplicationExtension::update(stappler::xenolith::Application*,stappler::xenolith::UpdateTime const&)": "XLApplicationExtension.h",
		"::stappler::xenolith::ApplicationExtension::~ApplicationExtension()": "XLApplicationExtension.h",
		"::stappler::xenolith::CallFunc": "XLAction.h",
		"::stappler::xenolith::CallFunc::_callback": "XLAction.h",
		"::stappler::xenolith::CallFunc::init(Function<void ()>&&,bool)": "XLAction.h",
		"::stappler::xenolith::CallFunc::update(float)": "XLAction.h",
		"::stappler::xenolith::CallFunc::~CallFunc()": "XLAction.h",
		"::stappler::xenolith::Color": "XLCore.h",
		"::stappler::xenolith::Color3B": "XLCore.h",
		"::stappler::xenolith::Color4B": "XLCore.h",
		"::stappler::xenolith::Color4F": "XLCore.h",
		"::stappler::xenolith::ColorMask": "XLCore.h",
		"::stappler::xenolith::CommandFlags": "XLNodeInfo.h",
		"::stappler::xenolith::Component": "XLComponent.h",
		"::stappler::xenolith::Component::Component()": "XLComponent.h",
		"::stappler::xenolith::Component::GetNextComponentId()": "XLComponent.h",
		"::stappler::xenolith::Component::_enabled": "XLComponent.h",
		"::stappler::xenolith::Component::_frameTag": "XLComponent.h",
		"::stappler::xenolith::Component::_owner": "XLComponent.h",
		"::stappler::xenolith::Component::_running": "XLComponent.h",
		"::stappler::xenolith::Component::getFrameTag() const": "XLComponent.h",
		"::stappler::xenolith::Component::getOwner() const": "XLComponent.h",
		"::stappler::xenolith::Component::init()": "XLComponent.h",
		"::stappler::xenolith::Component::isEnabled() const": "XLComponent.h",
		"::stappler::xenolith::Component::isRunning() const": "XLComponent.h",
		"::stappler::xenolith::Component::onAdded(stappler::xenolith::Node*)": "XLComponent.h",
		"::stappler::xenolith::Component::onContentSizeDirty()": "XLComponent.h",
		"::stappler::xenolith::Component::onEnter(stappler::xenolith::Scene*)": "XLComponent.h",
		"::stappler::xenolith::Component::onExit()": "XLComponent.h",
		"::stappler::xenolith::Component::onRemoved()": "XLComponent.h",
		"::stappler::xenolith::Component::onReorderChildDirty()": "XLComponent.h",
		"::stappler::xenolith::Component::onTransformDirty(stappler::xenolith::Mat4 const&)": "XLComponent.h",
		"::stappler::xenolith::Component::setEnabled(bool)": "XLComponent.h",
		"::stappler::xenolith::Component::setFrameTag(uint64_t)": "XLComponent.h",
		"::stappler::xenolith::Component::visit(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)": "XLComponent.h",
		"::stappler::xenolith::Component::~Component()": "XLComponent.h",
		"::stappler::xenolith::DataListener<typename>": "XLSubscriptionListener.h",
		"::stappler::xenolith::DataListener<typename>::_binding": "XLSubscriptionListener.h",
		"::stappler::xenolith::DataListener<typename>::getSubscription() const": "XLSubscriptionListener.h",
		"::stappler::xenolith::DataListener<typename>::init(stappler::xenolith::SubscriptionListener::DirtyCallback&&,T*)": "XLSubscriptionListener.h",
		"::stappler::xenolith::DataListener<typename>::setSubscription(T*)": "XLSubscriptionListener.h",
		"::stappler::xenolith::DataListener<typename>::update(stappler::xenolith::UpdateTime)": "XLSubscriptionListener.h",
		"::stappler::xenolith::DataListener<typename>::~DataListener()": "XLSubscriptionListener.h",
		"::stappler::xenolith::DelayTime": "XLAction.h",
		"::stappler::xenolith::DelayTime::update(float)": "XLAction.h",
		"::stappler::xenolith::DelayTime::~DelayTime()": "XLAction.h",
		"::stappler::xenolith::Director": "XLDirector.h",
		"::stappler::xenolith::Director::Director()": "XLDirector.h",
		"::stappler::xenolith::Director::FrameRequest": "XLDirector.h",
		"::stappler::xenolith::Director::_actionManager": "XLDirector.h",
		"::stappler::xenolith::Director::_autorelease": "XLDirector.h",
		"::stappler::xenolith::Director::_avgFrameTime": "XLDirector.h",
		"::stappler::xenolith::Director::_avgFrameTimeValue": "XLDirector.h",
		"::stappler::xenolith::Director::_constraints": "XLDirector.h",
		"::stappler::xenolith::Director::_drawStat": "XLDirector.h",
		"::stappler::xenolith::Director::_generalProjection": "XLDirector.h",
		"::stappler::xenolith::Director::_inputDispatcher": "XLDirector.h",
		"::stappler::xenolith::Director::_mainLoop": "XLDirector.h",
		"::stappler::xenolith::Director::_nextScene": "XLDirector.h",
		"::stappler::xenolith::Director::_pool": "XLDirector.h",
		"::stappler::xenolith::Director::_scene": "XLDirector.h",
		"::stappler::xenolith::Director::_scheduler": "XLDirector.h",
		"::stappler::xenolith::Director::_startTime": "XLDirector.h",
		"::stappler::xenolith::Director::_time": "XLDirector.h",
		"::stappler::xenolith::Director::_view": "XLDirector.h",
		"::stappler::xenolith::Director::acquireFrame(Rc<stappler::xenolith::Director::FrameRequest> const&)": "XLDirector.h",
		"::stappler::xenolith::Director::autorelease(stappler::mem_std::Ref*)": "XLDirector.h",
		"::stappler::xenolith::Director::end()": "XLDirector.h",
		"::stappler::xenolith::Director::getActionManager() const": "XLDirector.h",
		"::stappler::xenolith::Director::getApplication() const": "XLDirector.h",
		"::stappler::xenolith::Director::getAvgFps() const": "XLDirector.h",
		"::stappler::xenolith::Director::getDirectorFrameTime() const": "XLDirector.h",
		"::stappler::xenolith::Director::getDrawStat() const": "XLDirector.h",
		"::stappler::xenolith::Director::getFps() const": "XLDirector.h",
		"::stappler::xenolith::Director::getFrameConstraints() const": "XLDirector.h",
		"::stappler::xenolith::Director::getGeneralProjection() const": "XLDirector.h",
		"::stappler::xenolith::Director::getGlLoop() const": "XLDirector.h",
		"::stappler::xenolith::Director::getInputDispatcher() const": "XLDirector.h",
		"::stappler::xenolith::Director::getLocalFrameTime() const": "XLDirector.h",
		"::stappler::xenolith::Director::getResourceCache() const": "XLDirector.h",
		"::stappler::xenolith::Director::getScene() const": "XLDirector.h",
		"::stappler::xenolith::Director::getScheduler() const": "XLDirector.h",
		"::stappler::xenolith::Director::getSpf() const": "XLDirector.h",
		"::stappler::xenolith::Director::getTextInputManager() const": "XLDirector.h",
		"::stappler::xenolith::Director::getView() const": "XLDirector.h",
		"::stappler::xenolith::Director::hasActiveInteractions()": "XLDirector.h",
		"::stappler::xenolith::Director::init(stappler::xenolith::Application*,core::FrameContraints const&,stappler::xenolith::View*)": "XLDirector.h",
		"::stappler::xenolith::Director::invalidate()": "XLDirector.h",
		"::stappler::xenolith::Director::pushDrawStat(stappler::xenolith::DrawStat const&)": "XLDirector.h",
		"::stappler::xenolith::Director::runScene(Rc<stappler::xenolith::Scene>&&)": "XLDirector.h",
		"::stappler::xenolith::Director::update(uint64_t)": "XLDirector.h",
		"::stappler::xenolith::Director::updateGeneralTransform()": "XLDirector.h",
		"::stappler::xenolith::Director::~Director()": "XLDirector.h",
		"::stappler::xenolith::DrawStat": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::cachedFramebuffers": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::cachedImageViews": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::cachedImages": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::drawCalls": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::materials": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::solidCmds": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::surfaceCmds": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::transparentCmds": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::triangles": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::vertexInputTime": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::vertexes": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStat::zPaths": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStateValues": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStateValues::enabled": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStateValues::isScissorEnabled() const": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStateValues::isViewportEnabled() const": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStateValues::operator==(stappler::xenolith::DrawStateValues const&) const": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStateValues::scissor": "XLNodeInfo.h",
		"::stappler::xenolith::DrawStateValues::viewport": "XLNodeInfo.h",
		"::stappler::xenolith::DynamicStateNode": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::StateApplyMode": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::_applyMode": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::_scissorEnabled": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::_scissorOutline": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::disableScissor()": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::enableScissor(stappler::xenolith::Padding)": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::getScissorOutline() const": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::getStateApplyMode() const": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::init()": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::isScissorEnabled() const": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::setScissorOutlone(stappler::xenolith::Padding)": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::setStateApplyMode(stappler::xenolith::DynamicStateNode::StateApplyMode)": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::updateDynamicState(stappler::xenolith::DrawStateValues const&) const": "XLDynamicStateNode.h",
		"::stappler::xenolith::DynamicStateNode::visitDraw(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)": "XLDynamicStateNode.h",
		"::stappler::xenolith::EaseBackIn": "XLActionEase.h",
		"::stappler::xenolith::EaseBackIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseBackIn::~EaseBackIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseBackInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseBackInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseBackInOut::~EaseBackInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseBackOut": "XLActionEase.h",
		"::stappler::xenolith::EaseBackOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseBackOut::~EaseBackOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseBezierAction": "XLActionEase.h",
		"::stappler::xenolith::EaseBezierAction::_p0": "XLActionEase.h",
		"::stappler::xenolith::EaseBezierAction::_p1": "XLActionEase.h",
		"::stappler::xenolith::EaseBezierAction::_p2": "XLActionEase.h",
		"::stappler::xenolith::EaseBezierAction::_p3": "XLActionEase.h",
		"::stappler::xenolith::EaseBezierAction::init(stappler::xenolith::ActionInterval*,float,float,float,float)": "XLActionEase.h",
		"::stappler::xenolith::EaseBezierAction::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseBezierAction::~EaseBezierAction()": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceIn": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceIn::~EaseBounceIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceInOut::~EaseBounceInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceOut": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseBounceOut::~EaseBounceOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionIn": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionIn::~EaseCircleActionIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionInOut::~EaseCircleActionInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionOut": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseCircleActionOut::~EaseCircleActionOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionIn": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionIn::~EaseCubicActionIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionInOut::~EaseCubicActionInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionOut": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseCubicActionOut::~EaseCubicActionOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseElastic": "XLActionEase.h",
		"::stappler::xenolith::EaseElastic::_period": "XLActionEase.h",
		"::stappler::xenolith::EaseElastic::getPeriod() const": "XLActionEase.h",
		"::stappler::xenolith::EaseElastic::init(stappler::xenolith::ActionInterval*,float)": "XLActionEase.h",
		"::stappler::xenolith::EaseElastic::setPeriod(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseElastic::~EaseElastic()": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticIn": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticIn::~EaseElasticIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticInOut::~EaseElasticInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticOut": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseElasticOut::~EaseElasticOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialIn": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialIn::~EaseExponentialIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialInOut::~EaseExponentialInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialOut": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseExponentialOut::~EaseExponentialOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseIn": "XLActionEase.h",
		"::stappler::xenolith::EaseIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseIn::~EaseIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseInOut::~EaseInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseOut": "XLActionEase.h",
		"::stappler::xenolith::EaseOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseOut::~EaseOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionIn": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionIn::~EaseQuadraticActionIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionInOut::~EaseQuadraticActionInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionOut": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuadraticActionOut::~EaseQuadraticActionOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionIn": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionIn::~EaseQuarticActionIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionInOut::~EaseQuarticActionInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionOut": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuarticActionOut::~EaseQuarticActionOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionIn": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionIn::~EaseQuinticActionIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionInOut::~EaseQuinticActionInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionOut": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseQuinticActionOut::~EaseQuinticActionOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseRateAction": "XLActionEase.h",
		"::stappler::xenolith::EaseRateAction::_rate": "XLActionEase.h",
		"::stappler::xenolith::EaseRateAction::getRate() const": "XLActionEase.h",
		"::stappler::xenolith::EaseRateAction::init(stappler::xenolith::ActionInterval*,float)": "XLActionEase.h",
		"::stappler::xenolith::EaseRateAction::setRate(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseRateAction::~EaseRateAction()": "XLActionEase.h",
		"::stappler::xenolith::EaseSineIn": "XLActionEase.h",
		"::stappler::xenolith::EaseSineIn::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseSineIn::~EaseSineIn()": "XLActionEase.h",
		"::stappler::xenolith::EaseSineInOut": "XLActionEase.h",
		"::stappler::xenolith::EaseSineInOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseSineInOut::~EaseSineInOut()": "XLActionEase.h",
		"::stappler::xenolith::EaseSineOut": "XLActionEase.h",
		"::stappler::xenolith::EaseSineOut::update(float)": "XLActionEase.h",
		"::stappler::xenolith::EaseSineOut::~EaseSineOut()": "XLActionEase.h",
		"::stappler::xenolith::Event": "XLEvent.h",
		"::stappler::xenolith::Event::Event(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*)": "XLEvent.h",
		"::stappler::xenolith::Event::Event(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::Event::EventValue,stappler::xenolith::Event::Type)": "XLEvent.h",
		"::stappler::xenolith::Event::EventValue": "XLEvent.h",
		"::stappler::xenolith::Event::EventValue::boolValue": "XLEvent.h",
		"::stappler::xenolith::Event::EventValue::dataValue": "XLEvent.h",
		"::stappler::xenolith::Event::EventValue::floatValue": "XLEvent.h",
		"::stappler::xenolith::Event::EventValue::intValue": "XLEvent.h",
		"::stappler::xenolith::Event::EventValue::objValue": "XLEvent.h",
		"::stappler::xenolith::Event::EventValue::strValue": "XLEvent.h",
		"::stappler::xenolith::Event::Type": "XLEvent.h",
		"::stappler::xenolith::Event::ZERO_STRING": "XLEvent.h",
		"::stappler::xenolith::Event::_header": "XLEvent.h",
		"::stappler::xenolith::Event::_object": "XLEvent.h",
		"::stappler::xenolith::Event::_type": "XLEvent.h",
		"::stappler::xenolith::Event::_value": "XLEvent.h",
		"::stappler::xenolith::Event::dispatch() const": "XLEvent.h",
		"::stappler::xenolith::Event::getBoolValue() const": "XLEvent.h",
		"::stappler::xenolith::Event::getCategory() const": "XLEvent.h",
		"::stappler::xenolith::Event::getDataValue() const": "XLEvent.h",
		"::stappler::xenolith::Event::getEventID() const": "XLEvent.h",
		"::stappler::xenolith::Event::getFloatValue() const": "XLEvent.h",
		"::stappler::xenolith::Event::getHeader() const": "XLEvent.h",
		"::stappler::xenolith::Event::getIntValue() const": "XLEvent.h",
		"::stappler::xenolith::Event::getObjValueImpl<class>(std::false_type const&) const": "XLEvent.h",
		"::stappler::xenolith::Event::getObjValueImpl<class>(std::true_type const&) const": "XLEvent.h",
		"::stappler::xenolith::Event::getObject() const": "XLEvent.h",
		"::stappler::xenolith::Event::getObjectValue<class>() const": "XLEvent.h",
		"::stappler::xenolith::Event::getStringValue() const": "XLEvent.h",
		"::stappler::xenolith::Event::getTarget<class>() const": "XLEvent.h",
		"::stappler::xenolith::Event::is(stappler::xenolith::EventHeader const&) const": "XLEvent.h",
		"::stappler::xenolith::Event::operator==(stappler::xenolith::EventHeader const&) const": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,bool)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,char const*)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,double)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,int64_t)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::StringView const&)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::mem_std::Ref*)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::mem_std::String const&)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::mem_std::Value const&)": "XLEvent.h",
		"::stappler::xenolith::Event::send(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::Event::EventValue,stappler::xenolith::Event::Type)": "XLEvent.h",
		"::stappler::xenolith::Event::valueIsBool() const": "XLEvent.h",
		"::stappler::xenolith::Event::valueIsData() const": "XLEvent.h",
		"::stappler::xenolith::Event::valueIsFloat() const": "XLEvent.h",
		"::stappler::xenolith::Event::valueIsInt() const": "XLEvent.h",
		"::stappler::xenolith::Event::valueIsObject() const": "XLEvent.h",
		"::stappler::xenolith::Event::valueIsString() const": "XLEvent.h",
		"::stappler::xenolith::Event::valueIsVoid() const": "XLEvent.h",
		"::stappler::xenolith::EventHandler": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::Callback": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::EventHandler()": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::_handlers": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::addHandlerNode(stappler::xenolith::EventHandlerNode*)": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::clearEvents()": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::getInterface() const": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::removeHandlerNode(stappler::xenolith::EventHandlerNode*)": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::setEventHandler(stappler::xenolith::EventHeader const&,stappler::xenolith::EventHandler::Callback&&,bool)": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::setEventHandlerForObject(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::EventHandler::Callback&&,bool)": "XLEventHandler.h",
		"::stappler::xenolith::EventHandler::~EventHandler()": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::Callback": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::EventHandlerNode(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::EventHandlerNode::Callback&&,stappler::xenolith::EventHandler*,bool)": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::_callback": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::_destroyAfterEvent": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::_eventID": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::_obj": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::_support": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::getEventID() const": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::onEvent(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::EventHandlerNode::Callback&&,stappler::xenolith::EventHandler*,bool)": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::onEventRecieved(stappler::xenolith::Event const&) const": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::setSupport(stappler::xenolith::EventHandler*)": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::shouldRecieveEventWithObject(EventHeader::EventID,stappler::mem_std::Ref*) const": "XLEventHandler.h",
		"::stappler::xenolith::EventHandlerNode::~EventHandlerNode()": "XLEventHandler.h",
		"::stappler::xenolith::EventHeader": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::Category": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::EventHeader()": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::EventHeader(stappler::StringView,stappler::StringView)": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::EventHeader(stappler::xenolith::EventHeader const&)": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::EventHeader(stappler::xenolith::EventHeader&&)": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::EventHeader(stappler::xenolith::EventHeader::Category,stappler::StringView)": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::EventID": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::_category": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::_id": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::_name": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::getCategory() const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::getCategoryForName(stappler::StringView)": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::getEventID() const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::getName() const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::isInCategory(stappler::xenolith::EventHeader::Category) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::operator int()": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::operator()(stappler::mem_std::Ref*) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::operator()<typename>(stappler::mem_std::Ref*,T const&) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::operator=(stappler::xenolith::EventHeader const&)": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::operator=(stappler::xenolith::EventHeader&&)": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::operator==(stappler::xenolith::Event const&) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,bool) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,char const*) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,double) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,int64_t) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,stappler::StringView const&) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,stappler::mem_std::Ref*) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,stappler::mem_std::String const&) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::send(stappler::mem_std::Ref*,stappler::mem_std::Value const&) const": "XLEventHeader.h",
		"::stappler::xenolith::EventHeader::~EventHeader()": "XLEventHeader.h",
		"::stappler::xenolith::EventListener": "XLEventListener.h",
		"::stappler::xenolith::EventListener::EventCallback": "XLEventListener.h",
		"::stappler::xenolith::EventListener::clear()": "XLEventListener.h",
		"::stappler::xenolith::EventListener::init()": "XLEventListener.h",
		"::stappler::xenolith::EventListener::onEvent(stappler::xenolith::EventHeader const&,stappler::xenolith::EventListener::EventCallback&&,bool)": "XLEventListener.h",
		"::stappler::xenolith::EventListener::onEventRecieved(stappler::xenolith::Event const&,stappler::xenolith::EventListener::EventCallback const&)": "XLEventListener.h",
		"::stappler::xenolith::EventListener::onEventWithObject(stappler::xenolith::EventHeader const&,stappler::mem_std::Ref*,stappler::xenolith::EventListener::EventCallback&&,bool)": "XLEventListener.h",
		"::stappler::xenolith::EventListener::~EventListener()": "XLEventListener.h",
		"::stappler::xenolith::Extent2": "XLCore.h",
		"::stappler::xenolith::Extent3": "XLCore.h",
		"::stappler::xenolith::FadeTo": "XLAction.h",
		"::stappler::xenolith::FadeTo::_endOpacity": "XLAction.h",
		"::stappler::xenolith::FadeTo::_startOpacity": "XLAction.h",
		"::stappler::xenolith::FadeTo::init(float,float)": "XLAction.h",
		"::stappler::xenolith::FadeTo::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::FadeTo::update(float)": "XLAction.h",
		"::stappler::xenolith::FadeTo::~FadeTo()": "XLAction.h",
		"::stappler::xenolith::FrameContext": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::ContextMaterialInfo": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::ContextMaterialInfo::id": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::ContextMaterialInfo::info": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::ContextMaterialInfo::revokable": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::PipelineLayoutData": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::PipelineLayoutData::layout": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::PipelineLayoutData::pipelines": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_layouts": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_materialAttachment": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_materialDependency": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_materials": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_pendingMaterialsToAdd": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_pendingMaterialsToRemove": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_queue": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_revokedIds": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::_scene": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::acquireMaterial(stappler::xenolith::MaterialInfo const&,Vector<core::MaterialImage>&&,bool)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::addMaterial(stappler::xenolith::MaterialInfo const&,core::MaterialId,bool)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::addPendingMaterial(Rc<core::Material>&&)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::getDataForMaterial(stappler::xenolith::MaterialInfo const&) const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::getImageViewForMaterial(stappler::xenolith::MaterialInfo const&,uint32_t,core::ImageData const*) const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::getMaterial(stappler::xenolith::MaterialInfo const&) const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::getMaterialInfo(Rc<core::Material> const&) const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::getPipelineForMaterial(stappler::xenolith::MaterialInfo const&) const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::init()": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::isPipelineMatch(core::GraphicPipelineData const*,stappler::xenolith::MaterialInfo const&) const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::listMaterials() const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::makeHandle(stappler::xenolith::FrameInfo&)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::onEnter(stappler::xenolith::Scene*)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::onExit()": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::readMaterials(core::MaterialAttachment*)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::revokeImages(SpanView<uint64_t>)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::submitHandle(stappler::xenolith::FrameInfo&,stappler::xenolith::FrameContextHandle*)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::submitMaterials(stappler::xenolith::FrameInfo const&)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContext::~FrameContext()": "XLFrameContext.h",
		"::stappler::xenolith::FrameContextHandle": "XLFrameContext.h",
		"::stappler::xenolith::FrameContextHandle::addState(stappler::xenolith::DrawStateValues)": "XLFrameContext.h",
		"::stappler::xenolith::FrameContextHandle::context": "XLFrameContext.h",
		"::stappler::xenolith::FrameContextHandle::director": "XLFrameContext.h",
		"::stappler::xenolith::FrameContextHandle::getCurrentState() const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContextHandle::getState(stappler::xenolith::StateId) const": "XLFrameContext.h",
		"::stappler::xenolith::FrameContextHandle::stateStack": "XLFrameContext.h",
		"::stappler::xenolith::FrameContextHandle::states": "XLFrameContext.h",
		"::stappler::xenolith::FrameInfo": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::componentsStack": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::contextStack": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::currentContext": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::depthStack": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::director": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::getComponent<typename>(uint64_t) const": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::input": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::modelTransformStack": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::pool": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::popComponent(memory::vector<Rc<Component>>*)": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::popContext()": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::pushComponent(Rc<stappler::xenolith::Component> const&)": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::pushContext(stappler::xenolith::FrameContext*)": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::request": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::resolvedInputs": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::scene": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::viewProjectionStack": "XLFrameInfo.h",
		"::stappler::xenolith::FrameInfo::zPath": "XLFrameInfo.h",
		"::stappler::xenolith::GestureData": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureData::event": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureData::getId() const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureData::input": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureData::location() const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureEvent": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::KeyMask": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::_keyMask": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::_pressedKeys": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::canHandleEvent(stappler::xenolith::InputEvent const&) const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::init(stappler::xenolith::GestureKeyRecognizer::InputCallback&&,stappler::xenolith::GestureKeyRecognizer::KeyMask&&)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::isKeyPressed(stappler::xenolith::InputKeyCode) const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureKeyRecognizer::~GestureKeyRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::_event": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::_hasMouseOver": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::_listener": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::_padding": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::_value": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::_viewHasFocus": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::_viewHasPointer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::handleInputEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::init(stappler::xenolith::GestureMouseOverRecognizer::InputCallback&&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::onEnter(stappler::xenolith::InputListener*)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::onExit()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::updateState(stappler::xenolith::InputEvent const&)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMouseOverRecognizer::~GestureMouseOverRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::_event": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::_listener": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::_onlyWithinNode": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::canHandleEvent(stappler::xenolith::InputEvent const&) const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::handleInputEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::init(stappler::xenolith::GestureMoveRecognizer::InputCallback&&,bool)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::onEnter(stappler::xenolith::InputListener*)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::onExit()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureMoveRecognizer::~GestureMoveRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::center": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::cleanup()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::density": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::distance": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::first": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::prevDistance": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::scale": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::second": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::startDistance": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinch::velocity": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::_gesture": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::_lastTime": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::_velocity": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::cancel()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::init(stappler::xenolith::GesturePinchRecognizer::InputCallback&&,stappler::xenolith::GestureRecognizer::ButtonMask&&)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePinchRecognizer::~GesturePinchRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePress": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePress::cleanup()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePress::id": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePress::limit": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePress::pos": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePress::tickCount": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePress::time": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::_continuous": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::_gesture": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::_interval": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::_lastTime": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::_notified": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::cancel()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::init(stappler::xenolith::GesturePressRecognizer::InputCallback&&,stappler::TimeInterval,bool,stappler::xenolith::GestureRecognizer::ButtonMask&&)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::update(uint64_t)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GesturePressRecognizer::~GesturePressRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::ButtonMask": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::EventMask": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::_buttonMask": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::_density": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::_eventMask": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::_events": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::_maxEvents": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::canHandleEvent(stappler::xenolith::InputEvent const&) const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::cancel()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::getEventCount() const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::getEventMask() const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::getLocation() const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::getMaxEvents() const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::getTouchById(uint32_t,uint32_t*)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::handleInputEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::hasEvent(stappler::xenolith::InputEvent const&) const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::init()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::onEnter(stappler::xenolith::InputListener*)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::onExit()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::setMaxEvents(size_t)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::update(uint64_t)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureRecognizer::~GestureRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScroll": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScroll::amount": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScroll::cleanup()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScroll::location() const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScroll::pos": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScrollRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScrollRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScrollRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScrollRecognizer::_gesture": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScrollRecognizer::handleInputEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScrollRecognizer::init(stappler::xenolith::GestureScrollRecognizer::InputCallback&&)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureScrollRecognizer::~GestureScrollRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipe": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipe::cleanup()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipe::delta": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipe::density": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipe::firstTouch": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipe::midpoint": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipe::secondTouch": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipe::velocity": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_currentTouch": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_gesture": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_includeThreshold": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_lastTime": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_swipeBegin": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_threshold": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_velocityX": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::_velocityY": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::cancel()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::init(stappler::xenolith::GestureSwipeRecognizer::InputCallback&&,float,bool,stappler::xenolith::GestureRecognizer::ButtonMask&&)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureSwipeRecognizer::~GestureSwipeRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTap": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTap::cleanup()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTap::count": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTap::id": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTap::pos": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTap::time": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::ButtonMask": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::_gesture": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::_maxTapCount": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::cancel()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::init(stappler::xenolith::GestureTapRecognizer::InputCallback&&,stappler::xenolith::GestureTapRecognizer::ButtonMask&&,uint32_t)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::registerTap()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::update(uint64_t)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTapRecognizer::~GestureTapRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::InputCallback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::_callback": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::_event": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::addEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::canHandleEvent(stappler::xenolith::InputEvent const&) const": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::init(stappler::xenolith::GestureTouchRecognizer::InputCallback&&,stappler::xenolith::GestureRecognizer::ButtonMask&&)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::removeEvent(stappler::xenolith::InputEvent const&,bool,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::removeRecognizedEvent(uint32_t)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::renewEvent(stappler::xenolith::InputEvent const&,float)": "XLGestureRecognizer.h",
		"::stappler::xenolith::GestureTouchRecognizer::~GestureTouchRecognizer()": "XLGestureRecognizer.h",
		"::stappler::xenolith::HashTraitActionContainer": "XLActionManager.h",
		"::stappler::xenolith::HashTraitActionContainer::equal(stappler::xenolith::ActionContainer const&,stappler::xenolith::ActionContainer const&)": "XLActionManager.h",
		"::stappler::xenolith::HashTraitActionContainer::equal(stappler::xenolith::ActionContainer const&,stappler::xenolith::Node const*)": "XLActionManager.h",
		"::stappler::xenolith::HashTraitActionContainer::hash(uint32_t,stappler::xenolith::ActionContainer const&)": "XLActionManager.h",
		"::stappler::xenolith::HashTraitActionContainer::hash(uint32_t,stappler::xenolith::Node const*)": "XLActionManager.h",
		"::stappler::xenolith::Hide": "XLAction.h",
		"::stappler::xenolith::Hide::update(float)": "XLAction.h",
		"::stappler::xenolith::Hide::~Hide()": "XLAction.h",
		"::stappler::xenolith::InputDispatcher": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::EventHandlersInfo": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::EventHandlersInfo::clear(bool)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::EventHandlersInfo::event": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::EventHandlersInfo::exclusive": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::EventHandlersInfo::handle(bool)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::EventHandlersInfo::listeners": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::EventHandlersInfo::processed": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::EventHandlersInfo::setExclusive(stappler::xenolith::InputListener const*)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_activeEvents": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_activeKeySyms": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_activeKeys": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_currentTime": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_events": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_hasFocus": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_inBackground": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_pointerInWindow": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_pointerLocation": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_pool": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_textInput": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::_tmpEvents": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::acquireNewStorage()": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::clearKey(stappler::xenolith::InputEventData const&)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::commitStorage(Rc<stappler::xenolith::InputListenerStorage>&&)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::getActiveEvents() const": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::getEventInfo(stappler::xenolith::InputEventData const&) const": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::getTextInputManager() const": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::handleInputEvent(stappler::xenolith::InputEventData const&)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::handleKey(stappler::xenolith::InputEventData const&,bool)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::hasFocus() const": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::init(stappler::xenolith::PoolRef*,stappler::xenolith::TextInputViewInterface*)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::isInBackground() const": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::isPointerWithinWindow() const": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::resetKey(stappler::xenolith::InputEventData const&)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::setListenerExclusive(stappler::xenolith::InputDispatcher::EventHandlersInfo&,stappler::xenolith::InputListener const*) const": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::setListenerExclusive(stappler::xenolith::InputListener const*)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::setListenerExclusiveForKey(stappler::xenolith::InputListener const*,stappler::xenolith::InputKeyCode)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::setListenerExclusiveForTouch(stappler::xenolith::InputListener const*,uint32_t)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::update(stappler::xenolith::UpdateTime const&)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::updateEventInfo(stappler::xenolith::InputEvent&,stappler::xenolith::InputEventData const&) const": "XLInputDispatcher.h",
		"::stappler::xenolith::InputDispatcher::~InputDispatcher()": "XLInputDispatcher.h",
		"::stappler::xenolith::InputEvent": "XLInput.h",
		"::stappler::xenolith::InputEvent::currentLocation": "XLInput.h",
		"::stappler::xenolith::InputEvent::currentTime": "XLInput.h",
		"::stappler::xenolith::InputEvent::data": "XLInput.h",
		"::stappler::xenolith::InputEvent::originalLocation": "XLInput.h",
		"::stappler::xenolith::InputEvent::originalModifiers": "XLInput.h",
		"::stappler::xenolith::InputEvent::originalTime": "XLInput.h",
		"::stappler::xenolith::InputEvent::previousLocation": "XLInput.h",
		"::stappler::xenolith::InputEvent::previousModifiers": "XLInput.h",
		"::stappler::xenolith::InputEvent::previousTime": "XLInput.h",
		"::stappler::xenolith::InputEventData": "XLInput.h",
		"::stappler::xenolith::InputEventName": "XLInput.h",
		"::stappler::xenolith::InputFlags": "XLInput.h",
		"::stappler::xenolith::InputKeyCode": "XLInput.h",
		"::stappler::xenolith::InputKeyComposeState": "XLInput.h",
		"::stappler::xenolith::InputListener": "XLInputListener.h",
		"::stappler::xenolith::InputListener::ButtonMask": "XLInputListener.h",
		"::stappler::xenolith::InputListener::DefaultEventFilter": "XLInputListener.h",
		"::stappler::xenolith::InputListener::EventFilter": "XLInputListener.h",
		"::stappler::xenolith::InputListener::EventMask": "XLInputListener.h",
		"::stappler::xenolith::InputListener::EventMaskKeyboard": "XLInputListener.h",
		"::stappler::xenolith::InputListener::EventMaskTouch": "XLInputListener.h",
		"::stappler::xenolith::InputListener::InputCallback<typename>": "XLInputListener.h",
		"::stappler::xenolith::InputListener::InputListener()": "XLInputListener.h",
		"::stappler::xenolith::InputListener::KeyMask": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_callbacks": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_density": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_enabled": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_eventFilter": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_eventMask": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_opacityFilter": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_owner": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_priority": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_recognizers": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_running": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_scene": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_shouldProcessEvent(stappler::xenolith::InputEvent const&) const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_swallowEvents": "XLInputListener.h",
		"::stappler::xenolith::InputListener::_touchPadding": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addEventMask(stappler::xenolith::InputListener::EventMask const&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addKeyRecognizer(InputCallback<stappler::xenolith::GestureData>&&,stappler::xenolith::InputListener::KeyMask&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addMouseOverRecognizer(InputCallback<stappler::xenolith::GestureData>&&,float)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addMoveRecognizer(InputCallback<stappler::xenolith::GestureData>&&,bool)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addPinchRecognizer(InputCallback<stappler::xenolith::GesturePinch>&&,stappler::xenolith::InputListener::ButtonMask&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addPressRecognizer(InputCallback<stappler::xenolith::GesturePress>&&,stappler::TimeInterval,bool,stappler::xenolith::InputListener::ButtonMask&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addRecognizer(stappler::xenolith::GestureRecognizer*)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addScrollRecognizer(InputCallback<stappler::xenolith::GestureScroll>&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addSwipeRecognizer(InputCallback<stappler::xenolith::GestureSwipe>&&,float,bool,stappler::xenolith::InputListener::ButtonMask&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addTapRecognizer(InputCallback<stappler::xenolith::GestureTap>&&,stappler::xenolith::InputListener::ButtonMask&&,uint32_t)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::addTouchRecognizer(InputCallback<stappler::xenolith::GestureData>&&,stappler::xenolith::InputListener::ButtonMask&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::canHandleEvent(stappler::xenolith::InputEvent const&) const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::clear()": "XLInputListener.h",
		"::stappler::xenolith::InputListener::clearSwallowAllEvents()": "XLInputListener.h",
		"::stappler::xenolith::InputListener::clearSwallowEvent(stappler::xenolith::InputEventName)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::clearSwallowEvents(stappler::xenolith::InputListener::EventMask const&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::getDensity() const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::getOpacityFilter() const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::getOwner() const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::getPriority() const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::getTouchPadding() const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::handleEvent(stappler::xenolith::InputEvent const&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::init(int32_t)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::isEnabled() const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::isRunning() const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::isSwallowAllEvents() const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::isSwallowAllEvents(stappler::xenolith::InputListener::EventMask const&) const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::isSwallowAnyEvents(stappler::xenolith::InputListener::EventMask const&) const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::isSwallowEvent(stappler::xenolith::InputEventName) const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::makeButtonMask(std::initializer_list<InputMouseButton>&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::makeEventMask(std::initializer_list<InputEventName>&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::makeKeyMask(std::initializer_list<InputKeyCode>&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::onEnter(stappler::xenolith::Scene*)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::onExit()": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setBackgroudCallback(Function<bool (bool)>&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setDensity(float)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setEnabled(bool)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setExclusive()": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setExclusiveForTouch(uint32_t)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setFocusCallback(Function<bool (bool)>&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setMouseOverCallback(Function<bool (bool)>&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setOpacityFilter(float)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setOwner(stappler::xenolith::Node*)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setPointerEnterCallback(Function<bool (bool)>&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setPriority(int32_t)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setSwallowAllEvents()": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setSwallowEvent(stappler::xenolith::InputEventName)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setSwallowEvents(stappler::xenolith::InputListener::EventMask const&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setSwallowEvents(stappler::xenolith::InputListener::EventMask&&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setTouchFilter(stappler::xenolith::InputListener::EventFilter const&)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::setTouchPadding(float)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::shouldProcessEvent(stappler::xenolith::InputEvent const&) const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::shouldSwallowEvent(stappler::xenolith::InputEvent const&) const": "XLInputListener.h",
		"::stappler::xenolith::InputListener::update(stappler::xenolith::UpdateTime)": "XLInputListener.h",
		"::stappler::xenolith::InputListener::~InputListener()": "XLInputListener.h",
		"::stappler::xenolith::InputListenerStorage": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::InputListenerStorage(stappler::xenolith::PoolRef*)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::_postSceneEvents": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::_preSceneEvents": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::_sceneEvents": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::addListener(stappler::xenolith::InputListener*)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::clear()": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::foreach<typename>(Callback const&)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::reserve(stappler::xenolith::InputListenerStorage const*)": "XLInputDispatcher.h",
		"::stappler::xenolith::InputListenerStorage::~InputListenerStorage()": "XLInputDispatcher.h",
		"::stappler::xenolith::InputModifier": "XLInput.h",
		"::stappler::xenolith::InputMouseButton": "XLInput.h",
		"::stappler::xenolith::InvalidTag": "XLNodeInfo.h",
		"::stappler::xenolith::Mat4": "XLCore.h",
		"::stappler::xenolith::MaterialInfo": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::MaterialInfo()": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::colorModes": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::description() const": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::hasImage(uint64_t) const": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::hash() const": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::images": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::operator!=(stappler::xenolith::MaterialInfo const&) const": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::operator==(stappler::xenolith::MaterialInfo const&) const": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::pipeline": "XLNodeInfo.h",
		"::stappler::xenolith::MaterialInfo::samplers": "XLNodeInfo.h",
		"::stappler::xenolith::MeshIndex": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::_indexData": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::_name": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::_vertexData": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::getIndexData() const": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::getName() const": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::getVertexData() const": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::init(core::BufferData const*)": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::init(core::BufferData const*,Rc<core::Resource> const&)": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::init(core::BufferData const*,Rc<stappler::xenolith::TemporaryResource> const&)": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::isLoaded() const": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::setBuffers(core::BufferData const*,core::BufferData const*)": "XLMeshIndex.h",
		"::stappler::xenolith::MeshIndex::~MeshIndex()": "XLMeshIndex.h",
		"::stappler::xenolith::MoveTo": "XLAction.h",
		"::stappler::xenolith::MoveTo::_endPosition": "XLAction.h",
		"::stappler::xenolith::MoveTo::_startPosition": "XLAction.h",
		"::stappler::xenolith::MoveTo::init(float,stappler::xenolith::Vec2 const&)": "XLAction.h",
		"::stappler::xenolith::MoveTo::init(float,stappler::xenolith::Vec3 const&)": "XLAction.h",
		"::stappler::xenolith::MoveTo::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::MoveTo::update(float)": "XLAction.h",
		"::stappler::xenolith::MoveTo::~MoveTo()": "XLAction.h",
		"::stappler::xenolith::Node": "XLNode.h",
		"::stappler::xenolith::Node::Node()": "XLNode.h",
		"::stappler::xenolith::Node::ZOrderMax": "XLNode.h",
		"::stappler::xenolith::Node::ZOrderMin": "XLNode.h",
		"::stappler::xenolith::Node::ZOrderTransparent": "XLNode.h",
		"::stappler::xenolith::Node::_actionManager": "XLNode.h",
		"::stappler::xenolith::Node::_anchorPoint": "XLNode.h",
		"::stappler::xenolith::Node::_cascadeColorEnabled": "XLNode.h",
		"::stappler::xenolith::Node::_cascadeOpacityEnabled": "XLNode.h",
		"::stappler::xenolith::Node::_children": "XLNode.h",
		"::stappler::xenolith::Node::_components": "XLNode.h",
		"::stappler::xenolith::Node::_contentSize": "XLNode.h",
		"::stappler::xenolith::Node::_contentSizeDirty": "XLNode.h",
		"::stappler::xenolith::Node::_dataValue": "XLNode.h",
		"::stappler::xenolith::Node::_depthIndex": "XLNode.h",
		"::stappler::xenolith::Node::_director": "XLNode.h",
		"::stappler::xenolith::Node::_displayedColor": "XLNode.h",
		"::stappler::xenolith::Node::_frameContext": "XLNode.h",
		"::stappler::xenolith::Node::_inputDensity": "XLNode.h",
		"::stappler::xenolith::Node::_inputEvents": "XLNode.h",
		"::stappler::xenolith::Node::_inverse": "XLNode.h",
		"::stappler::xenolith::Node::_is3d": "XLNode.h",
		"::stappler::xenolith::Node::_modelViewTransform": "XLNode.h",
		"::stappler::xenolith::Node::_name": "XLNode.h",
		"::stappler::xenolith::Node::_onContentSizeDirtyCallback": "XLNode.h",
		"::stappler::xenolith::Node::_onEnterCallback": "XLNode.h",
		"::stappler::xenolith::Node::_onExitCallback": "XLNode.h",
		"::stappler::xenolith::Node::_onReorderChildDirtyCallback": "XLNode.h",
		"::stappler::xenolith::Node::_onTransformDirtyCallback": "XLNode.h",
		"::stappler::xenolith::Node::_parent": "XLNode.h",
		"::stappler::xenolith::Node::_paused": "XLNode.h",
		"::stappler::xenolith::Node::_position": "XLNode.h",
		"::stappler::xenolith::Node::_realColor": "XLNode.h",
		"::stappler::xenolith::Node::_reorderChildDirty": "XLNode.h",
		"::stappler::xenolith::Node::_rotation": "XLNode.h",
		"::stappler::xenolith::Node::_rotationQuat": "XLNode.h",
		"::stappler::xenolith::Node::_running": "XLNode.h",
		"::stappler::xenolith::Node::_scale": "XLNode.h",
		"::stappler::xenolith::Node::_scene": "XLNode.h",
		"::stappler::xenolith::Node::_scheduled": "XLNode.h",
		"::stappler::xenolith::Node::_scheduler": "XLNode.h",
		"::stappler::xenolith::Node::_skew": "XLNode.h",
		"::stappler::xenolith::Node::_tag": "XLNode.h",
		"::stappler::xenolith::Node::_transform": "XLNode.h",
		"::stappler::xenolith::Node::_transformCacheDirty": "XLNode.h",
		"::stappler::xenolith::Node::_transformDirty": "XLNode.h",
		"::stappler::xenolith::Node::_transformInverseDirty": "XLNode.h",
		"::stappler::xenolith::Node::_visible": "XLNode.h",
		"::stappler::xenolith::Node::_zOrder": "XLNode.h",
		"::stappler::xenolith::Node::addChild<typename,typename>(N*,Args &&...)": "XLNode.h",
		"::stappler::xenolith::Node::addChild<typename,typename>(Rc<N> const&,Args &&...)": "XLNode.h",
		"::stappler::xenolith::Node::addChildNode(stappler::xenolith::Node*)": "XLNode.h",
		"::stappler::xenolith::Node::addChildNode(stappler::xenolith::Node*,stappler::xenolith::ZOrder)": "XLNode.h",
		"::stappler::xenolith::Node::addChildNode(stappler::xenolith::Node*,stappler::xenolith::ZOrder,uint64_t)": "XLNode.h",
		"::stappler::xenolith::Node::addComponent<typename>(C*)": "XLNode.h",
		"::stappler::xenolith::Node::addComponent<typename>(Rc<C> const&)": "XLNode.h",
		"::stappler::xenolith::Node::addComponentItem(stappler::xenolith::Component*)": "XLNode.h",
		"::stappler::xenolith::Node::addInputListener<typename>(C*)": "XLNode.h",
		"::stappler::xenolith::Node::addInputListener<typename>(Rc<C> const&)": "XLNode.h",
		"::stappler::xenolith::Node::addInputListenerItem(stappler::xenolith::InputListener*)": "XLNode.h",
		"::stappler::xenolith::Node::cleanup()": "XLNode.h",
		"::stappler::xenolith::Node::convertToNodeSpace(stappler::xenolith::Vec2 const&) const": "XLNode.h",
		"::stappler::xenolith::Node::convertToNodeSpaceAR(stappler::xenolith::Vec2 const&) const": "XLNode.h",
		"::stappler::xenolith::Node::convertToWorldSpace(stappler::xenolith::Vec2 const&) const": "XLNode.h",
		"::stappler::xenolith::Node::convertToWorldSpaceAR(stappler::xenolith::Vec2 const&) const": "XLNode.h",
		"::stappler::xenolith::Node::disableCascadeColor()": "XLNode.h",
		"::stappler::xenolith::Node::disableCascadeOpacity()": "XLNode.h",
		"::stappler::xenolith::Node::draw(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)": "XLNode.h",
		"::stappler::xenolith::Node::getActionByTag(uint32_t)": "XLNode.h",
		"::stappler::xenolith::Node::getActionManager() const": "XLNode.h",
		"::stappler::xenolith::Node::getAnchorPoint() const": "XLNode.h",
		"::stappler::xenolith::Node::getBoundingBox() const": "XLNode.h",
		"::stappler::xenolith::Node::getChainNodeToParentTransform(stappler::xenolith::Node*,stappler::xenolith::Node*,bool)": "XLNode.h",
		"::stappler::xenolith::Node::getChainParentToNodeTransform(stappler::xenolith::Node*,stappler::xenolith::Node*,bool)": "XLNode.h",
		"::stappler::xenolith::Node::getChildByTag(uint64_t) const": "XLNode.h",
		"::stappler::xenolith::Node::getChildren() const": "XLNode.h",
		"::stappler::xenolith::Node::getChildrenCount() const": "XLNode.h",
		"::stappler::xenolith::Node::getColor() const": "XLNode.h",
		"::stappler::xenolith::Node::getComponentByType<typename>() const": "XLNode.h",
		"::stappler::xenolith::Node::getComponentByType<typename>(uint32_t) const": "XLNode.h",
		"::stappler::xenolith::Node::getContentSize() const": "XLNode.h",
		"::stappler::xenolith::Node::getDataValue() const": "XLNode.h",
		"::stappler::xenolith::Node::getDepthIndex() const": "XLNode.h",
		"::stappler::xenolith::Node::getDirector() const": "XLNode.h",
		"::stappler::xenolith::Node::getDisplayedColor() const": "XLNode.h",
		"::stappler::xenolith::Node::getDisplayedOpacity() const": "XLNode.h",
		"::stappler::xenolith::Node::getFrameContext() const": "XLNode.h",
		"::stappler::xenolith::Node::getInputDensity() const": "XLNode.h",
		"::stappler::xenolith::Node::getLocalZOrder() const": "XLNode.h",
		"::stappler::xenolith::Node::getName() const": "XLNode.h",
		"::stappler::xenolith::Node::getNodeToParentTransform() const": "XLNode.h",
		"::stappler::xenolith::Node::getNodeToWorldTransform() const": "XLNode.h",
		"::stappler::xenolith::Node::getNumberOfRunningActions() const": "XLNode.h",
		"::stappler::xenolith::Node::getOpacity() const": "XLNode.h",
		"::stappler::xenolith::Node::getParent() const": "XLNode.h",
		"::stappler::xenolith::Node::getParentToNodeTransform() const": "XLNode.h",
		"::stappler::xenolith::Node::getPosition() const": "XLNode.h",
		"::stappler::xenolith::Node::getRotation() const": "XLNode.h",
		"::stappler::xenolith::Node::getRotation3D() const": "XLNode.h",
		"::stappler::xenolith::Node::getRotationQuat() const": "XLNode.h",
		"::stappler::xenolith::Node::getScale() const": "XLNode.h",
		"::stappler::xenolith::Node::getScheduler() const": "XLNode.h",
		"::stappler::xenolith::Node::getSkew() const": "XLNode.h",
		"::stappler::xenolith::Node::getTag() const": "XLNode.h",
		"::stappler::xenolith::Node::getWorldToNodeTransform() const": "XLNode.h",
		"::stappler::xenolith::Node::init()": "XLNode.h",
		"::stappler::xenolith::Node::isCascadeColorEnabled() const": "XLNode.h",
		"::stappler::xenolith::Node::isCascadeOpacityEnabled() const": "XLNode.h",
		"::stappler::xenolith::Node::isOpacityModifyRGB() const": "XLNode.h",
		"::stappler::xenolith::Node::isParent(stappler::xenolith::Node*,stappler::xenolith::Node*)": "XLNode.h",
		"::stappler::xenolith::Node::isRunning() const": "XLNode.h",
		"::stappler::xenolith::Node::isTouched(stappler::xenolith::Vec2 const&,float)": "XLNode.h",
		"::stappler::xenolith::Node::isTouchedNodeSpace(stappler::xenolith::Vec2 const&,float)": "XLNode.h",
		"::stappler::xenolith::Node::isVisible() const": "XLNode.h",
		"::stappler::xenolith::Node::onContentSizeDirty()": "XLNode.h",
		"::stappler::xenolith::Node::onEnter(stappler::xenolith::Scene*)": "XLNode.h",
		"::stappler::xenolith::Node::onExit()": "XLNode.h",
		"::stappler::xenolith::Node::onGlobalTransformDirty(stappler::xenolith::Mat4 const&)": "XLNode.h",
		"::stappler::xenolith::Node::onReorderChildDirty()": "XLNode.h",
		"::stappler::xenolith::Node::onTransformDirty(stappler::xenolith::Mat4 const&)": "XLNode.h",
		"::stappler::xenolith::Node::pause()": "XLNode.h",
		"::stappler::xenolith::Node::processParentFlags(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)": "XLNode.h",
		"::stappler::xenolith::Node::removeAllChildren(bool)": "XLNode.h",
		"::stappler::xenolith::Node::removeAllComponentByTag(uint64_t)": "XLNode.h",
		"::stappler::xenolith::Node::removeAllComponents()": "XLNode.h",
		"::stappler::xenolith::Node::removeChild(stappler::xenolith::Node*,bool)": "XLNode.h",
		"::stappler::xenolith::Node::removeChildByTag(uint64_t,bool)": "XLNode.h",
		"::stappler::xenolith::Node::removeComponent(stappler::xenolith::Component*)": "XLNode.h",
		"::stappler::xenolith::Node::removeComponentByTag(uint64_t)": "XLNode.h",
		"::stappler::xenolith::Node::removeFromParent(bool)": "XLNode.h",
		"::stappler::xenolith::Node::removeInputListener(stappler::xenolith::InputListener*)": "XLNode.h",
		"::stappler::xenolith::Node::reorderChild(stappler::xenolith::Node*,stappler::xenolith::ZOrder)": "XLNode.h",
		"::stappler::xenolith::Node::resume()": "XLNode.h",
		"::stappler::xenolith::Node::runAction<typename>(A*)": "XLNode.h",
		"::stappler::xenolith::Node::runAction<typename>(A*,uint32_t)": "XLNode.h",
		"::stappler::xenolith::Node::runAction<typename>(Rc<A> const&)": "XLNode.h",
		"::stappler::xenolith::Node::runAction<typename>(Rc<A> const&,uint32_t)": "XLNode.h",
		"::stappler::xenolith::Node::runActionObject(stappler::xenolith::Action*)": "XLNode.h",
		"::stappler::xenolith::Node::runActionObject(stappler::xenolith::Action*,uint32_t)": "XLNode.h",
		"::stappler::xenolith::Node::scheduleUpdate()": "XLNode.h",
		"::stappler::xenolith::Node::setAnchorPoint(stappler::xenolith::Vec2 const&)": "XLNode.h",
		"::stappler::xenolith::Node::setCascadeColorEnabled(bool)": "XLNode.h",
		"::stappler::xenolith::Node::setCascadeOpacityEnabled(bool)": "XLNode.h",
		"::stappler::xenolith::Node::setColor(stappler::xenolith::Color4F const&,bool)": "XLNode.h",
		"::stappler::xenolith::Node::setContentSize(stappler::xenolith::Size2 const&)": "XLNode.h",
		"::stappler::xenolith::Node::setDataValue(stappler::mem_std::Value&&)": "XLNode.h",
		"::stappler::xenolith::Node::setDepthIndex(float)": "XLNode.h",
		"::stappler::xenolith::Node::setLocalZOrder(stappler::xenolith::ZOrder)": "XLNode.h",
		"::stappler::xenolith::Node::setName(stappler::StringView)": "XLNode.h",
		"::stappler::xenolith::Node::setNodeToParentTransform(stappler::xenolith::Mat4 const&)": "XLNode.h",
		"::stappler::xenolith::Node::setOnContentSizeDirtyCallback(Function<void ()>&&)": "XLNode.h",
		"::stappler::xenolith::Node::setOnEnterCallback(Function<void (stappler::xenolith::Scene *)>&&)": "XLNode.h",
		"::stappler::xenolith::Node::setOnExitCallback(Function<void ()>&&)": "XLNode.h",
		"::stappler::xenolith::Node::setOnReorderChildDirtyCallback(Function<void ()>&&)": "XLNode.h",
		"::stappler::xenolith::Node::setOnTransformDirtyCallback(Function<void (const stappler::xenolith::Mat4 &)>&&)": "XLNode.h",
		"::stappler::xenolith::Node::setOpacity(float)": "XLNode.h",
		"::stappler::xenolith::Node::setOpacity(stappler::xenolith::OpacityValue)": "XLNode.h",
		"::stappler::xenolith::Node::setOpacityModifyRGB(bool)": "XLNode.h",
		"::stappler::xenolith::Node::setParent(stappler::xenolith::Node*)": "XLNode.h",
		"::stappler::xenolith::Node::setPosition(stappler::xenolith::Vec2 const&)": "XLNode.h",
		"::stappler::xenolith::Node::setPosition(stappler::xenolith::Vec3 const&)": "XLNode.h",
		"::stappler::xenolith::Node::setPositionX(float)": "XLNode.h",
		"::stappler::xenolith::Node::setPositionY(float)": "XLNode.h",
		"::stappler::xenolith::Node::setPositionZ(float)": "XLNode.h",
		"::stappler::xenolith::Node::setRotation(float)": "XLNode.h",
		"::stappler::xenolith::Node::setRotation(stappler::xenolith::Quaternion const&)": "XLNode.h",
		"::stappler::xenolith::Node::setRotation(stappler::xenolith::Vec3 const&)": "XLNode.h",
		"::stappler::xenolith::Node::setScale(float)": "XLNode.h",
		"::stappler::xenolith::Node::setScale(stappler::xenolith::Vec2 const&)": "XLNode.h",
		"::stappler::xenolith::Node::setScale(stappler::xenolith::Vec3 const&)": "XLNode.h",
		"::stappler::xenolith::Node::setScaleX(float)": "XLNode.h",
		"::stappler::xenolith::Node::setScaleY(float)": "XLNode.h",
		"::stappler::xenolith::Node::setScaleZ(float)": "XLNode.h",
		"::stappler::xenolith::Node::setSkewX(float)": "XLNode.h",
		"::stappler::xenolith::Node::setSkewY(float)": "XLNode.h",
		"::stappler::xenolith::Node::setTag(uint64_t)": "XLNode.h",
		"::stappler::xenolith::Node::setVisible(bool)": "XLNode.h",
		"::stappler::xenolith::Node::sortAllChildren()": "XLNode.h",
		"::stappler::xenolith::Node::stopAction(stappler::xenolith::Action*)": "XLNode.h",
		"::stappler::xenolith::Node::stopActionByTag(uint32_t)": "XLNode.h",
		"::stappler::xenolith::Node::stopAllActions()": "XLNode.h",
		"::stappler::xenolith::Node::stopAllActionsByTag(uint32_t)": "XLNode.h",
		"::stappler::xenolith::Node::transform(stappler::xenolith::Mat4 const&)": "XLNode.h",
		"::stappler::xenolith::Node::unscheduleUpdate()": "XLNode.h",
		"::stappler::xenolith::Node::update(stappler::xenolith::UpdateTime const&)": "XLNode.h",
		"::stappler::xenolith::Node::updateCascadeColor()": "XLNode.h",
		"::stappler::xenolith::Node::updateCascadeOpacity()": "XLNode.h",
		"::stappler::xenolith::Node::updateChildrenTransform()": "XLNode.h",
		"::stappler::xenolith::Node::updateColor()": "XLNode.h",
		"::stappler::xenolith::Node::updateDisplayedColor(stappler::xenolith::Color4F const&)": "XLNode.h",
		"::stappler::xenolith::Node::updateDisplayedOpacity(float)": "XLNode.h",
		"::stappler::xenolith::Node::visitDraw(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)": "XLNode.h",
		"::stappler::xenolith::Node::visitGeometry(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)": "XLNode.h",
		"::stappler::xenolith::Node::visitSelf(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags,bool)": "XLNode.h",
		"::stappler::xenolith::Node::~Node()": "XLNode.h",
		"::stappler::xenolith::NodeFlags": "XLNodeInfo.h",
		"::stappler::xenolith::OpacityValue": "XLApplicationInfo.h",
		"::stappler::xenolith::Padding": "XLCore.h",
		"::stappler::xenolith::Place": "XLAction.h",
		"::stappler::xenolith::Place::_position": "XLAction.h",
		"::stappler::xenolith::Place::init(stappler::xenolith::Vec2 const&,bool)": "XLAction.h",
		"::stappler::xenolith::Place::update(float)": "XLAction.h",
		"::stappler::xenolith::Place::~Place()": "XLAction.h",
		"::stappler::xenolith::PoolRef": "XLCore.h",
		"::stappler::xenolith::PoolRef::PoolRef(memory::pool_t*)": "XLCore.h",
		"::stappler::xenolith::PoolRef::PoolRef(stappler::xenolith::PoolRef*)": "XLCore.h",
		"::stappler::xenolith::PoolRef::_pool": "XLCore.h",
		"::stappler::xenolith::PoolRef::getPool() const": "XLCore.h",
		"::stappler::xenolith::PoolRef::palloc(size_t)": "XLCore.h",
		"::stappler::xenolith::PoolRef::perform<typename>(Callable const&)": "XLCore.h",
		"::stappler::xenolith::PoolRef::~PoolRef()": "XLCore.h",
		"::stappler::xenolith::Quaternion": "XLCore.h",
		"::stappler::xenolith::Rect": "XLCore.h",
		"::stappler::xenolith::RemoveSelf": "XLAction.h",
		"::stappler::xenolith::RemoveSelf::_isNeedCleanUp": "XLAction.h",
		"::stappler::xenolith::RemoveSelf::init(bool,bool)": "XLAction.h",
		"::stappler::xenolith::RemoveSelf::update(float)": "XLAction.h",
		"::stappler::xenolith::RemoveSelf::~RemoveSelf()": "XLAction.h",
		"::stappler::xenolith::RenderingLevel": "XLNodeInfo.h",
		"::stappler::xenolith::ResizeTo": "XLAction.h",
		"::stappler::xenolith::ResizeTo::_endSize": "XLAction.h",
		"::stappler::xenolith::ResizeTo::_startSize": "XLAction.h",
		"::stappler::xenolith::ResizeTo::init(float,stappler::xenolith::Size2 const&)": "XLAction.h",
		"::stappler::xenolith::ResizeTo::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::ResizeTo::update(float)": "XLAction.h",
		"::stappler::xenolith::ResizeTo::~ResizeTo()": "XLAction.h",
		"::stappler::xenolith::ResourceCache": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::_application": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::_images": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::_loop": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::_resources": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::_temporaries": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::acquireMeshIndex(stappler::StringView) const": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::acquireTexture(stappler::StringView) const": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::addExternalImage(stappler::StringView,core::ImageInfo&&,memory::function<void (uint8_t *, uint64_t, const core::ImageData::DataCallback &)> const&,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::addExternalImage(stappler::StringView,core::ImageInfo&&,stappler::BytesView,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::addExternalImage(stappler::StringView,core::ImageInfo&&,stappler::FilePath,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::addExternalImageByRef(stappler::StringView,core::ImageInfo&&,stappler::BytesView,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::addImage(stappler::StringView,Rc<core::ImageObject> const&)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::addResource(Rc<core::Resource> const&)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::addTemporaryResource(Rc<core::Resource>&&,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::clearResource(stappler::xenolith::TemporaryResource*)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::compileResource(stappler::xenolith::TemporaryResource*)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::getApplication() const": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::getEmptyImage() const": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::getSolidImage() const": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::getTemporaryResource(stappler::StringView) const": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::hasTemporaryResource(stappler::StringView) const": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::init(stappler::xenolith::Application*)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::initialize(core::Loop const&)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::invalidate()": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::removeResource(stappler::StringView)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::removeTemporaryResource(stappler::StringView)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::update(stappler::xenolith::UpdateTime const&)": "XLResourceCache.h",
		"::stappler::xenolith::ResourceCache::~ResourceCache()": "XLResourceCache.h",
		"::stappler::xenolith::ResourceObject": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::_resource": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::_temporary": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::_type": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::getName() const": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::getTemporary() const": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::getType() const": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::init(stappler::xenolith::ResourceType)": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::init(stappler::xenolith::ResourceType,Rc<core::Resource> const&)": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::init(stappler::xenolith::ResourceType,Rc<stappler::xenolith::TemporaryResource> const&)": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::invalidate()": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::isLoaded() const": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::onEnter(stappler::xenolith::ResourceOwner*)": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::onExit(stappler::xenolith::ResourceOwner*)": "XLResourceObject.h",
		"::stappler::xenolith::ResourceObject::~ResourceObject()": "XLResourceObject.h",
		"::stappler::xenolith::ResourceOwner": "XLResourceOwner.h",
		"::stappler::xenolith::ResourceOwner::revokeImages(SpanView<uint64_t>)": "XLResourceOwner.h",
		"::stappler::xenolith::ResourceOwner::~ResourceOwner()": "XLResourceOwner.h",
		"::stappler::xenolith::ResourceType": "XLResourceObject.h",
		"::stappler::xenolith::ScaleTo": "XLAction.h",
		"::stappler::xenolith::ScaleTo::_endScale": "XLAction.h",
		"::stappler::xenolith::ScaleTo::_startScale": "XLAction.h",
		"::stappler::xenolith::ScaleTo::init(float,float)": "XLAction.h",
		"::stappler::xenolith::ScaleTo::init(float,stappler::xenolith::Vec3 const&)": "XLAction.h",
		"::stappler::xenolith::ScaleTo::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::ScaleTo::update(float)": "XLAction.h",
		"::stappler::xenolith::ScaleTo::~ScaleTo()": "XLAction.h",
		"::stappler::xenolith::Scene": "XLScene.h",
		"::stappler::xenolith::Scene::FrameHandle": "XLScene.h",
		"::stappler::xenolith::Scene::FrameQueue": "XLScene.h",
		"::stappler::xenolith::Scene::FrameRequest": "XLScene.h",
		"::stappler::xenolith::Scene::Queue": "XLScene.h",
		"::stappler::xenolith::Scene::_constraints": "XLScene.h",
		"::stappler::xenolith::Scene::_content": "XLScene.h",
		"::stappler::xenolith::Scene::_director": "XLScene.h",
		"::stappler::xenolith::Scene::_queue": "XLScene.h",
		"::stappler::xenolith::Scene::getContent() const": "XLScene.h",
		"::stappler::xenolith::Scene::getContentSize() const": "XLScene.h",
		"::stappler::xenolith::Scene::getDirector() const": "XLScene.h",
		"::stappler::xenolith::Scene::getFrameConstraints() const": "XLScene.h",
		"::stappler::xenolith::Scene::getQueue() const": "XLScene.h",
		"::stappler::xenolith::Scene::init(Queue::Builder&&,core::FrameContraints const&)": "XLScene.h",
		"::stappler::xenolith::Scene::isClipContent() const": "XLScene.h",
		"::stappler::xenolith::Scene::makeQueue(Queue::Builder&&)": "XLScene.h",
		"::stappler::xenolith::Scene::onContentSizeDirty()": "XLScene.h",
		"::stappler::xenolith::Scene::onEnter(stappler::xenolith::Scene*)": "XLScene.h",
		"::stappler::xenolith::Scene::onExit()": "XLScene.h",
		"::stappler::xenolith::Scene::onFinished(stappler::xenolith::Director*)": "XLScene.h",
		"::stappler::xenolith::Scene::onFrameEnded(stappler::xenolith::Scene::FrameRequest&)": "XLScene.h",
		"::stappler::xenolith::Scene::onFrameStarted(stappler::xenolith::Scene::FrameRequest&)": "XLScene.h",
		"::stappler::xenolith::Scene::onPresented(stappler::xenolith::Director*)": "XLScene.h",
		"::stappler::xenolith::Scene::render(stappler::xenolith::FrameInfo&)": "XLScene.h",
		"::stappler::xenolith::Scene::renderRequest(Rc<stappler::xenolith::Scene::FrameRequest> const&)": "XLScene.h",
		"::stappler::xenolith::Scene::setClipContent(bool)": "XLScene.h",
		"::stappler::xenolith::Scene::setContent(stappler::xenolith::SceneContent*)": "XLScene.h",
		"::stappler::xenolith::Scene::setFrameConstraints(core::FrameContraints const&)": "XLScene.h",
		"::stappler::xenolith::Scene::updateContentNode(stappler::xenolith::SceneContent*)": "XLScene.h",
		"::stappler::xenolith::Scene::~Scene()": "XLScene.h",
		"::stappler::xenolith::SceneContent": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::_backButtonRetained": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::_decorationPadding": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::_inputListener": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::_retainBackButton": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::getDecorationPadding() const": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::init()": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::onBackButton()": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::onContentSizeDirty()": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::onEnter(stappler::xenolith::Scene*)": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::onExit()": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::setDecorationPadding(stappler::xenolith::Padding)": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::updateBackButtonStatus()": "XLSceneContent.h",
		"::stappler::xenolith::SceneContent::~SceneContent()": "XLSceneContent.h",
		"::stappler::xenolith::Scheduler": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::ScheduledTemporary": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::ScheduledTemporary::callback": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::ScheduledTemporary::paused": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::ScheduledTemporary::priority": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::ScheduledTemporary::target": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::Scheduler()": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::_currentNode": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::_currentTarget": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::_list": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::_locked": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::_tmp": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::empty() const": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::init()": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::pause(void*)": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::resume(void*)": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::schedulePerFrame(stappler::xenolith::SchedulerFunc&&,void*,int32_t,bool)": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::scheduleUpdate<typename>(T*,int32_t,bool)": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::unschedule(void const*)": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::unscheduleAll()": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::update(stappler::xenolith::UpdateTime const&)": "XLScheduler.h",
		"::stappler::xenolith::Scheduler::~Scheduler()": "XLScheduler.h",
		"::stappler::xenolith::SchedulerCallback": "XLScheduler.h",
		"::stappler::xenolith::SchedulerCallback::SchedulerCallback()": "XLScheduler.h",
		"::stappler::xenolith::SchedulerCallback::SchedulerCallback(stappler::xenolith::SchedulerFunc&&,bool)": "XLScheduler.h",
		"::stappler::xenolith::SchedulerCallback::callback": "XLScheduler.h",
		"::stappler::xenolith::SchedulerCallback::paused": "XLScheduler.h",
		"::stappler::xenolith::SchedulerCallback::removed": "XLScheduler.h",
		"::stappler::xenolith::SchedulerFunc": "XLScheduler.h",
		"::stappler::xenolith::SchedulerUpdate<T,typenamestd::enable_if<std::is_base_of<Ref,T>::value>::type>::SchedulerUpdate<T,typenamestd::enable_if<std::is_base_of<Ref,T>::value>::type>": "XLScheduler.h",
		"::stappler::xenolith::SchedulerUpdate<T,typenamestd::enable_if<std::is_base_of<Ref,T>::value>::type>::scheduleUpdate(stappler::xenolith::Scheduler*,T*,int32_t,bool)": "XLScheduler.h",
		"::stappler::xenolith::SchedulerUpdate<typename,typename>": "XLScheduler.h",
		"::stappler::xenolith::SchedulerUpdate<typename,typename>::scheduleUpdate(stappler::xenolith::Scheduler*,T*,int32_t,bool)": "XLScheduler.h",
		"::stappler::xenolith::Sequence": "XLAction.h",
		"::stappler::xenolith::Sequence::ActionData": "XLAction.h",
		"::stappler::xenolith::Sequence::ActionData::action": "XLAction.h",
		"::stappler::xenolith::Sequence::ActionData::maxThreshold": "XLAction.h",
		"::stappler::xenolith::Sequence::ActionData::minThreshold": "XLAction.h",
		"::stappler::xenolith::Sequence::ActionData::threshold": "XLAction.h",
		"::stappler::xenolith::Sequence::_actions": "XLAction.h",
		"::stappler::xenolith::Sequence::_currentIdx": "XLAction.h",
		"::stappler::xenolith::Sequence::_prevTime": "XLAction.h",
		"::stappler::xenolith::Sequence::addAction(Function<void ()>&&)": "XLAction.h",
		"::stappler::xenolith::Sequence::addAction(float)": "XLAction.h",
		"::stappler::xenolith::Sequence::addAction(stappler::xenolith::Action*)": "XLAction.h",
		"::stappler::xenolith::Sequence::addAction<typename>(Rc<T> const&)": "XLAction.h",
		"::stappler::xenolith::Sequence::init<typename>(Args &&...)": "XLAction.h",
		"::stappler::xenolith::Sequence::initWithActions<typename,typename>(T&&,Args &&...)": "XLAction.h",
		"::stappler::xenolith::Sequence::initWithActions<typename>(T&&)": "XLAction.h",
		"::stappler::xenolith::Sequence::reserve(size_t)": "XLAction.h",
		"::stappler::xenolith::Sequence::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::Sequence::stop()": "XLAction.h",
		"::stappler::xenolith::Sequence::update(float)": "XLAction.h",
		"::stappler::xenolith::Sequence::~Sequence()": "XLAction.h",
		"::stappler::xenolith::Show": "XLAction.h",
		"::stappler::xenolith::Show::update(float)": "XLAction.h",
		"::stappler::xenolith::Show::~Show()": "XLAction.h",
		"::stappler::xenolith::Size2": "XLCore.h",
		"::stappler::xenolith::Size3": "XLCore.h",
		"::stappler::xenolith::Spawn": "XLAction.h",
		"::stappler::xenolith::Spawn::ActionData": "XLAction.h",
		"::stappler::xenolith::Spawn::ActionData::action": "XLAction.h",
		"::stappler::xenolith::Spawn::ActionData::threshold": "XLAction.h",
		"::stappler::xenolith::Spawn::_actions": "XLAction.h",
		"::stappler::xenolith::Spawn::_currentIdx": "XLAction.h",
		"::stappler::xenolith::Spawn::_prevTime": "XLAction.h",
		"::stappler::xenolith::Spawn::addAction(Function<void ()>&&)": "XLAction.h",
		"::stappler::xenolith::Spawn::addAction(float)": "XLAction.h",
		"::stappler::xenolith::Spawn::addAction(stappler::xenolith::Action*)": "XLAction.h",
		"::stappler::xenolith::Spawn::addAction<typename>(Rc<T> const&)": "XLAction.h",
		"::stappler::xenolith::Spawn::init<typename>(Args &&...)": "XLAction.h",
		"::stappler::xenolith::Spawn::initWithActions<typename,typename>(T&&,Args &&...)": "XLAction.h",
		"::stappler::xenolith::Spawn::initWithActions<typename>(T&&)": "XLAction.h",
		"::stappler::xenolith::Spawn::reserve(size_t)": "XLAction.h",
		"::stappler::xenolith::Spawn::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::Spawn::stop()": "XLAction.h",
		"::stappler::xenolith::Spawn::update(float)": "XLAction.h",
		"::stappler::xenolith::Spawn::~Spawn()": "XLAction.h",
		"::stappler::xenolith::Speed": "XLAction.h",
		"::stappler::xenolith::Speed::Speed()": "XLAction.h",
		"::stappler::xenolith::Speed::_innerAction": "XLAction.h",
		"::stappler::xenolith::Speed::_speed": "XLAction.h",
		"::stappler::xenolith::Speed::getInnerAction() const": "XLAction.h",
		"::stappler::xenolith::Speed::getSpeed() const": "XLAction.h",
		"::stappler::xenolith::Speed::init(stappler::xenolith::ActionInterval*,float)": "XLAction.h",
		"::stappler::xenolith::Speed::isDone() const": "XLAction.h",
		"::stappler::xenolith::Speed::setInnerAction(stappler::xenolith::ActionInterval*)": "XLAction.h",
		"::stappler::xenolith::Speed::setSpeed(float)": "XLAction.h",
		"::stappler::xenolith::Speed::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::Speed::step(float)": "XLAction.h",
		"::stappler::xenolith::Speed::stop()": "XLAction.h",
		"::stappler::xenolith::Speed::~Speed()": "XLAction.h",
		"::stappler::xenolith::StateId": "XLNodeInfo.h",
		"::stappler::xenolith::SubscriptionListener": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::DirtyCallback": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::_callback": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::_dirty": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::_scheduled": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::_scheduler": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::_subscription": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::check()": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::getCallback() const": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::init(stappler::xenolith::SubscriptionListener::DirtyCallback&&)": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::onEnter(stappler::xenolith::Scene*)": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::onExit()": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::schedule()": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::setCallback(stappler::xenolith::SubscriptionListener::DirtyCallback&&)": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::setDirty()": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::unschedule()": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::update(stappler::xenolith::UpdateTime)": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::updateScheduler()": "XLSubscriptionListener.h",
		"::stappler::xenolith::SubscriptionListener::~SubscriptionListener()": "XLSubscriptionListener.h",
		"::stappler::xenolith::TapDistanceAllowed": "XLGestureRecognizer.h",
		"::stappler::xenolith::TapDistanceAllowedMulti": "XLGestureRecognizer.h",
		"::stappler::xenolith::TapIntervalAllowed": "XLGestureRecognizer.h",
		"::stappler::xenolith::TemporaryResource": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_atime": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_callbacks": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_loaded": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_meshIndexes": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_name": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_owners": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_removeOnClear": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_requested": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_resource": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_textures": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_timeout": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::_users": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::acquireMeshIndex(stappler::StringView)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::acquireTexture(stappler::StringView)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::clear()": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::getAccessTime() const": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::getName() const": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::getResource() const": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::getTimeout() const": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::getUsersCount() const": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::init(Rc<core::Resource>&&,stappler::TimeInterval,stappler::xenolith::TemporaryResourceFlags)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::invalidate()": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::isDeprecated(stappler::xenolith::UpdateTime const&) const": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::isLoaded() const": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::isRequested() const": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::load(stappler::mem_std::Ref*,Function<void (bool)>&&)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::onEnter(stappler::xenolith::ResourceOwner*,stappler::xenolith::ResourceObject*)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::onExit(stappler::xenolith::ResourceOwner*,stappler::xenolith::ResourceObject*)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::onLoaded": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::setLoaded(bool)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::setRequested(bool)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::setTimeout(stappler::TimeInterval)": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResource::~TemporaryResource()": "XLTemporaryResource.h",
		"::stappler::xenolith::TemporaryResourceFlags": "XLResourceCache.h",
		"::stappler::xenolith::TextCursor": "XLInput.h",
		"::stappler::xenolith::TextCursor::InvalidCursor": "XLInput.h",
		"::stappler::xenolith::TextCursor::TextCursor()": "XLInput.h",
		"::stappler::xenolith::TextCursor::TextCursor(stappler::xenolith::TextCursorPosition)": "XLInput.h",
		"::stappler::xenolith::TextCursor::TextCursor(stappler::xenolith::TextCursorPosition,stappler::xenolith::TextCursorLength)": "XLInput.h",
		"::stappler::xenolith::TextCursor::TextCursor(stappler::xenolith::TextCursorPosition,stappler::xenolith::TextCursorPosition)": "XLInput.h",
		"::stappler::xenolith::TextCursor::TextCursor(uint32_t)": "XLInput.h",
		"::stappler::xenolith::TextCursor::TextCursor(uint32_t,uint32_t)": "XLInput.h",
		"::stappler::xenolith::TextCursor::length": "XLInput.h",
		"::stappler::xenolith::TextCursor::operator==(stappler::xenolith::TextCursor const&) const": "XLInput.h",
		"::stappler::xenolith::TextCursor::start": "XLInput.h",
		"::stappler::xenolith::TextCursorLength": "XLInput.h",
		"::stappler::xenolith::TextCursorPosition": "XLInput.h",
		"::stappler::xenolith::TextInputHandler": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::cancel()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::getCursor() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::getKeyboardRect() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::getMarked() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::getString() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::isActive() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::isInputEnabled() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::isKeyboardVisible() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::manager": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::onInput": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::onKeyboard": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::onText": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::run(stappler::xenolith::TextInputManager*,stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor,stappler::xenolith::TextInputType)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::setCursor(stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::setMarked(stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::setString(stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputHandler::~TextInputHandler()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::TextInputManager()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_compose": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_cursor": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_handler": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_isInputEnabled": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_isKeyboardVisible": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_keyboardDuration": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_keyboardRect": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_marked": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_running": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_string": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_type": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::_view": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::canHandleInputEvent(stappler::xenolith::InputEventData const&)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::cancel()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::cursorChanged(stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::deleteBackward()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::deleteForward()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::doInsertText(stappler::WideStringView,bool)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::getCursor() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::getHandler() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::getKeyboardDuration() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::getKeyboardRect() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::getMarked() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::getString() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::getStringByRange(stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::handleInputEvent(stappler::xenolith::InputEventData const&)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::hasText()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::init(stappler::xenolith::TextInputViewInterface*)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::insertText(stappler::WideStringView,bool)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::insertText(stappler::WideStringView,stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::isInputEnabled() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::isKeyboardVisible() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::isRunning() const": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::markedChanged(stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::onKeyboardDisabled(float)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::onKeyboardEnabled(stappler::xenolith::Rect const&,float)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::onTextChanged()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::run(stappler::xenolith::TextInputHandler*,stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor,stappler::xenolith::TextInputType)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::setCursor(stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::setInputEnabled(bool)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::setMarked(stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::setMarkedText(stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::setString(stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::textChanged(stappler::WideStringView,stappler::xenolith::TextCursor,stappler::xenolith::TextCursor)": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputManager::unmarkText()": "XLTextInputManager.h",
		"::stappler::xenolith::TextInputType": "XLInput.h",
		"::stappler::xenolith::TextInputViewInterface": "XLInput.h",
		"::stappler::xenolith::TextInputViewInterface::cancelTextInput()": "XLInput.h",
		"::stappler::xenolith::TextInputViewInterface::runTextInput(stappler::WideStringView,uint32_t,uint32_t,stappler::xenolith::TextInputType)": "XLInput.h",
		"::stappler::xenolith::TextInputViewInterface::updateTextCursor(uint32_t,uint32_t)": "XLInput.h",
		"::stappler::xenolith::TextInputViewInterface::updateTextInput(stappler::WideStringView,uint32_t,uint32_t,stappler::xenolith::TextInputType)": "XLInput.h",
		"::stappler::xenolith::TextInputViewInterface::~TextInputViewInterface()": "XLInput.h",
		"::stappler::xenolith::Texture": "XLTexture.h",
		"::stappler::xenolith::Texture::_data": "XLTexture.h",
		"::stappler::xenolith::Texture::_dynamic": "XLTexture.h",
		"::stappler::xenolith::Texture::getExtent() const": "XLTexture.h",
		"::stappler::xenolith::Texture::getImageData() const": "XLTexture.h",
		"::stappler::xenolith::Texture::getIndex() const": "XLTexture.h",
		"::stappler::xenolith::Texture::getMaterialImage() const": "XLTexture.h",
		"::stappler::xenolith::Texture::getName() const": "XLTexture.h",
		"::stappler::xenolith::Texture::hasAlpha() const": "XLTexture.h",
		"::stappler::xenolith::Texture::init(Rc<core::DynamicImage> const&)": "XLTexture.h",
		"::stappler::xenolith::Texture::init(core::ImageData const*)": "XLTexture.h",
		"::stappler::xenolith::Texture::init(core::ImageData const*,Rc<core::Resource> const&)": "XLTexture.h",
		"::stappler::xenolith::Texture::init(core::ImageData const*,Rc<stappler::xenolith::TemporaryResource> const&)": "XLTexture.h",
		"::stappler::xenolith::Texture::isLoaded() const": "XLTexture.h",
		"::stappler::xenolith::Texture::~Texture()": "XLTexture.h",
		"::stappler::xenolith::TintTo": "XLAction.h",
		"::stappler::xenolith::TintTo::_from": "XLAction.h",
		"::stappler::xenolith::TintTo::_mask": "XLAction.h",
		"::stappler::xenolith::TintTo::_to": "XLAction.h",
		"::stappler::xenolith::TintTo::init(float,stappler::xenolith::Color4F const&,stappler::xenolith::ColorMask)": "XLAction.h",
		"::stappler::xenolith::TintTo::startWithTarget(stappler::xenolith::Node*)": "XLAction.h",
		"::stappler::xenolith::TintTo::update(float)": "XLAction.h",
		"::stappler::xenolith::TintTo::~TintTo()": "XLAction.h",
		"::stappler::xenolith::ToggleVisibility": "XLAction.h",
		"::stappler::xenolith::ToggleVisibility::update(float)": "XLAction.h",
		"::stappler::xenolith::ToggleVisibility::~ToggleVisibility()": "XLAction.h",
		"::stappler::xenolith::URect": "XLCore.h",
		"::stappler::xenolith::UVec2": "XLCore.h",
		"::stappler::xenolith::UpdateTime": "XLApplicationInfo.h",
		"::stappler::xenolith::UpdateTime::app": "XLApplicationInfo.h",
		"::stappler::xenolith::UpdateTime::delta": "XLApplicationInfo.h",
		"::stappler::xenolith::UpdateTime::dt": "XLApplicationInfo.h",
		"::stappler::xenolith::UpdateTime::global": "XLApplicationInfo.h",
		"::stappler::xenolith::Vec2": "XLCore.h",
		"::stappler::xenolith::Vec3": "XLCore.h",
		"::stappler::xenolith::Vec4": "XLCore.h",
		"::stappler::xenolith::View": "XLView.h",
		"::stappler::xenolith::View::AttachmentLayout": "XLView.h",
		"::stappler::xenolith::View::FrameAverageCount": "XLView.h",
		"::stappler::xenolith::View::FrameEmitter": "XLView.h",
		"::stappler::xenolith::View::FrameRequest": "XLView.h",
		"::stappler::xenolith::View::ImageStorage": "XLView.h",
		"::stappler::xenolith::View::RenderQueue": "XLView.h",
		"::stappler::xenolith::View::View()": "XLView.h",
		"::stappler::xenolith::View::_avgFrameInterval": "XLView.h",
		"::stappler::xenolith::View::_avgFrameIntervalValue": "XLView.h",
		"::stappler::xenolith::View::_backButtonCounter": "XLView.h",
		"::stappler::xenolith::View::_callbacks": "XLView.h",
		"::stappler::xenolith::View::_config": "XLView.h",
		"::stappler::xenolith::View::_constraints": "XLView.h",
		"::stappler::xenolith::View::_director": "XLView.h",
		"::stappler::xenolith::View::_frameEmitter": "XLView.h",
		"::stappler::xenolith::View::_frameIntervalMutex": "XLView.h",
		"::stappler::xenolith::View::_gen": "XLView.h",
		"::stappler::xenolith::View::_glLoop": "XLView.h",
		"::stappler::xenolith::View::_hasFocus": "XLView.h",
		"::stappler::xenolith::View::_inBackground": "XLView.h",
		"::stappler::xenolith::View::_info": "XLView.h",
		"::stappler::xenolith::View::_init": "XLView.h",
		"::stappler::xenolith::View::_lastFrameInterval": "XLView.h",
		"::stappler::xenolith::View::_lastFrameStart": "XLView.h",
		"::stappler::xenolith::View::_mainLoop": "XLView.h",
		"::stappler::xenolith::View::_mutex": "XLView.h",
		"::stappler::xenolith::View::_navigationEmpty": "XLView.h",
		"::stappler::xenolith::View::_pointerInWindow": "XLView.h",
		"::stappler::xenolith::View::_running": "XLView.h",
		"::stappler::xenolith::View::_shouldQuit": "XLView.h",
		"::stappler::xenolith::View::_thread": "XLView.h",
		"::stappler::xenolith::View::_threadId": "XLView.h",
		"::stappler::xenolith::View::_threadStarted": "XLView.h",
		"::stappler::xenolith::View::captureImage(Function<void (const core::ImageInfoData &, stappler::BytesView)>&&,Rc<core::ImageObject> const&,stappler::xenolith::View::AttachmentLayout) const": "XLView.h",
		"::stappler::xenolith::View::captureImage(stappler::StringView,Rc<core::ImageObject> const&,stappler::xenolith::View::AttachmentLayout) const": "XLView.h",
		"::stappler::xenolith::View::close()": "XLView.h",
		"::stappler::xenolith::View::end()": "XLView.h",
		"::stappler::xenolith::View::getAvgFenceTime() const": "XLView.h",
		"::stappler::xenolith::View::getAvgFrameInterval() const": "XLView.h",
		"::stappler::xenolith::View::getAvgFrameTime() const": "XLView.h",
		"::stappler::xenolith::View::getBackButtonCounter() const": "XLView.h",
		"::stappler::xenolith::View::getDirector() const": "XLView.h",
		"::stappler::xenolith::View::getExtent() const": "XLView.h",
		"::stappler::xenolith::View::getFrameContraints() const": "XLView.h",
		"::stappler::xenolith::View::getFrameInterval() const": "XLView.h",
		"::stappler::xenolith::View::getGlLoop() const": "XLView.h",
		"::stappler::xenolith::View::getLastFrameInterval() const": "XLView.h",
		"::stappler::xenolith::View::getLastFrameTime() const": "XLView.h",
		"::stappler::xenolith::View::getMainLoop() const": "XLView.h",
		"::stappler::xenolith::View::getSwapchainHandle() const": "XLView.h",
		"::stappler::xenolith::View::getSwapchainImageInfo() const": "XLView.h",
		"::stappler::xenolith::View::getSwapchainImageInfo(core::SwapchainConfig const&) const": "XLView.h",
		"::stappler::xenolith::View::getSwapchainImageViewInfo(core::ImageInfo const&) const": "XLView.h",
		"::stappler::xenolith::View::handleInputEvent(stappler::xenolith::InputEventData const&)": "XLView.h",
		"::stappler::xenolith::View::handleInputEvents(Vector<stappler::xenolith::InputEventData>&&)": "XLView.h",
		"::stappler::xenolith::View::hasFocus() const": "XLView.h",
		"::stappler::xenolith::View::init(stappler::xenolith::Application&,stappler::xenolith::ViewInfo&&)": "XLView.h",
		"::stappler::xenolith::View::invalidateTarget(Rc<stappler::xenolith::View::ImageStorage>&&)": "XLView.h",
		"::stappler::xenolith::View::isInBackground() const": "XLView.h",
		"::stappler::xenolith::View::isPointerWithinWindow() const": "XLView.h",
		"::stappler::xenolith::View::onBackground": "XLView.h",
		"::stappler::xenolith::View::onFocus": "XLView.h",
		"::stappler::xenolith::View::onFrameRate": "XLView.h",
		"::stappler::xenolith::View::performOnThread(Function<void ()>&&,stappler::mem_std::Ref*,bool)": "XLView.h",
		"::stappler::xenolith::View::present(Rc<stappler::xenolith::View::ImageStorage>&&)": "XLView.h",
		"::stappler::xenolith::View::presentImmediate(Rc<stappler::xenolith::View::ImageStorage>&&,Function<void (bool)>&&)": "XLView.h",
		"::stappler::xenolith::View::releaseBackButton()": "XLView.h",
		"::stappler::xenolith::View::releaseView(uint64_t)": "XLView.h",
		"::stappler::xenolith::View::retainBackButton()": "XLView.h",
		"::stappler::xenolith::View::retainView()": "XLView.h",
		"::stappler::xenolith::View::run()": "XLView.h",
		"::stappler::xenolith::View::runWithQueue(Rc<core::Queue> const&)": "XLView.h",
		"::stappler::xenolith::View::setContentPadding(stappler::xenolith::Padding const&)": "XLView.h",
		"::stappler::xenolith::View::setDecorationTone(float)": "XLView.h",
		"::stappler::xenolith::View::setDecorationVisible(bool)": "XLView.h",
		"::stappler::xenolith::View::setFrameInterval(uint64_t)": "XLView.h",
		"::stappler::xenolith::View::setReadyForNextFrame()": "XLView.h",
		"::stappler::xenolith::View::update(bool)": "XLView.h",
		"::stappler::xenolith::View::wakeup()": "XLView.h",
		"::stappler::xenolith::View::~View()": "XLView.h",
		"::stappler::xenolith::ViewCommandLineData": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::applicationName": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::applicationVersion": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::bundleName": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::density": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::encode() const": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::help": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::isFixed": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::isPhone": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::launchUrl": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::renderdoc": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::screenSize": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::userAgent": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::userLanguage": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::validation": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::verbose": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewCommandLineData::viewDecoration": "XLViewCommandLine.h",
		"::stappler::xenolith::ViewInfo": "XLView.h",
		"::stappler::xenolith::ViewInfo::bundleId": "XLView.h",
		"::stappler::xenolith::ViewInfo::decoration": "XLView.h",
		"::stappler::xenolith::ViewInfo::density": "XLView.h",
		"::stappler::xenolith::ViewInfo::frameInterval": "XLView.h",
		"::stappler::xenolith::ViewInfo::name": "XLView.h",
		"::stappler::xenolith::ViewInfo::onClosed": "XLView.h",
		"::stappler::xenolith::ViewInfo::onCreated": "XLView.h",
		"::stappler::xenolith::ViewInfo::rect": "XLView.h",
		"::stappler::xenolith::ViewInfo::selectConfig": "XLView.h",
		"::stappler::xenolith::XL_MAKE_API_VERSION(stappler::StringView)": "XLCore.h",
		"::stappler::xenolith::XL_MAKE_API_VERSION(uint32_t,uint32_t,uint32_t,uint32_t)": "XLCore.h",
		"::stappler::xenolith::ZOrder": "XLApplicationInfo.h",
		"::stappler::xenolith::ZOrderLess": "XLNodeInfo.h",
		"::stappler::xenolith::ZOrderLess::operator()(SpanView<stappler::xenolith::ZOrder> const&,SpanView<stappler::xenolith::ZOrder> const&) const": "XLNodeInfo.h",
		"::stappler::xenolith::config::FrameIntervalSafeOffset": "XLCoreConfig.h",
		"::stappler::xenolith::config::GuiMainLoopDefaultInterval": "XLVkGuiConfig.h",
		"::stappler::xenolith::config::MaxAmbientLights": "XLSceneConfig.h",
		"::stappler::xenolith::config::MaxBufferArrayObjects": "XLVkConfig.h",
		"::stappler::xenolith::config::MaxDirectLights": "XLSceneConfig.h",
		"::stappler::xenolith::config::MaxDirectorDeltaTime": "XLSceneConfig.h",
		"::stappler::xenolith::config::MaxMaterialImages": "XLSceneConfig.h",
		"::stappler::xenolith::config::MaxSuboptimalFrames": "XLVkGuiConfig.h",
		"::stappler::xenolith::config::MaxTextureSetImages": "XLVkConfig.h",
		"::stappler::xenolith::config::NodePreallocateChilds": "XLSceneConfig.h",
		"::stappler::xenolith::config::OnDemandFrameInterval": "XLVkGuiConfig.h",
		"::stappler::xenolith::config::PresentationSchedulerInterval": "XLCoreConfig.h",
		"::stappler::xenolith::config::getGlThreadCount()": "XLVkGuiConfig.h",
		"::stappler::xenolith::config::getMainThreadCount()": "XLVkGuiConfig.h",
		"::stappler::xenolith::core::AccessType": "XLCoreEnum.h",
		"::stappler::xenolith::core::ArrayLayers": "XLCoreInfo.h",
		"::stappler::xenolith::core::Attachment": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::AttachmentBuilder": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::AttachmentData": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::AttachmentHandle": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::FrameQueue": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::InputCallback": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::PassData": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::RenderQueue": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::_data": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::_inputCallback": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::acquireInput(stappler::xenolith::core::Attachment::FrameQueue&,Rc<stappler::xenolith::core::Attachment::AttachmentHandle> const&,Function<void (bool)>&&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::clear()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getData() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getFirstRenderPass() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getId() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getLastRenderPass() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getName() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getNextRenderPass(stappler::xenolith::core::Attachment::PassData const*) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getPrevRenderPass(stappler::xenolith::core::Attachment::PassData const*) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getRenderPasses() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::getUsage() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::isCompatible(stappler::xenolith::core::ImageInfo const&) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::isTransient() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::makeFrameHandle(stappler::xenolith::core::Attachment::FrameQueue const&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::setInputCallback(stappler::xenolith::core::Attachment::InputCallback&&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::sortDescriptors(stappler::xenolith::core::Queue&,stappler::xenolith::core::Device&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::validateInput(Rc<stappler::xenolith::core::AttachmentInputData> const&) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::Attachment::~Attachment()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentBuilder": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentBuilder::AttachmentBuilder(stappler::xenolith::core::AttachmentData*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentBuilder::_data": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentBuilder::defineAsInput(stappler::xenolith::core::AttachmentOps)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentBuilder::defineAsOutput(stappler::xenolith::core::AttachmentOps)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentBuilder::getAttachmentData() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentBuilder::setType(stappler::xenolith::core::AttachmentType)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentData::attachment": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentData::id": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentData::ops": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentData::passes": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentData::queue": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentData::transient": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentData::type": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentData::usage": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentDependencyInfo": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentDependencyInfo::finalAccessMask": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentDependencyInfo::finalUsageStage": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentDependencyInfo::initialAccessMask": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentDependencyInfo::initialUsageStage": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentDependencyInfo::lockedRenderPassState": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentDependencyInfo::requiredRenderPassState": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentHandle": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::Attachment": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::FrameHandle": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::FrameQueue": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::PassHandle": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::_attachment": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::_queueData": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::finalize(stappler::xenolith::core::AttachmentHandle::FrameQueue&,bool)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::getAttachment() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::getDescriptorArraySize(stappler::xenolith::core::AttachmentHandle::PassHandle const&,stappler::xenolith::core::PipelineDescriptor const&,bool) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::getName() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::getQueueData() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::init(Rc<stappler::xenolith::core::AttachmentHandle::Attachment> const&,stappler::xenolith::core::AttachmentHandle::FrameQueue const&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::isAvailable(stappler::xenolith::core::AttachmentHandle::FrameQueue const&) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::isDescriptorDirty(stappler::xenolith::core::AttachmentHandle::PassHandle const&,stappler::xenolith::core::PipelineDescriptor const&,uint32_t,bool) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::isInput() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::isOutput() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::setQueueData(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::setup(stappler::xenolith::core::AttachmentHandle::FrameQueue&,Function<void (bool)>&&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::submitInput(stappler::xenolith::core::AttachmentHandle::FrameQueue&,Rc<stappler::xenolith::core::AttachmentInputData>&&,Function<void (bool)>&&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentHandle::~AttachmentHandle()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentInputData": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentInputData::waitDependencies": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentInputData::~AttachmentInputData()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::AttachmentLayout": "XLCoreEnum.h",
		"::stappler::xenolith::core::AttachmentLoadOp": "XLCoreEnum.h",
		"::stappler::xenolith::core::AttachmentOps": "XLCoreEnum.h",
		"::stappler::xenolith::core::AttachmentPassBuilder": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::AttachmentPassBuilder(stappler::xenolith::core::AttachmentPassData*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::_data": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setAttachmentOps(stappler::xenolith::core::AttachmentOps)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setColorMode(stappler::xenolith::core::ColorMode const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setDependency(stappler::xenolith::core::AttachmentDependencyInfo const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setFinalLayout(stappler::xenolith::core::AttachmentLayout)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setInitialLayout(stappler::xenolith::core::AttachmentLayout)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setLoadOp(stappler::xenolith::core::AttachmentLoadOp)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setStencilLoadOp(stappler::xenolith::core::AttachmentLoadOp)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setStencilStoreOp(stappler::xenolith::core::AttachmentStoreOp)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassBuilder::setStoreOp(stappler::xenolith::core::AttachmentStoreOp)": "XLCoreQueue.h",
		"::stappler::xenolith::core::AttachmentPassData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::attachment": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::colorMode": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::dependency": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::descriptors": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::finalLayout": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::index": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::initialLayout": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::loadOp": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::ops": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::pass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::stencilLoadOp": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::stencilStoreOp": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::storeOp": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentPassData::subpasses": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentStorageType": "XLCoreEnum.h",
		"::stappler::xenolith::core::AttachmentStoreOp": "XLCoreEnum.h",
		"::stappler::xenolith::core::AttachmentSubpassData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentSubpassData::dependency": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentSubpassData::layout": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentSubpassData::ops": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentSubpassData::pass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentSubpassData::subpass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentSubpassData::usage": "XLCoreQueueData.h",
		"::stappler::xenolith::core::AttachmentType": "XLCoreEnum.h",
		"::stappler::xenolith::core::AttachmentUsage": "XLCoreEnum.h",
		"::stappler::xenolith::core::BaseArrayLayer": "XLCoreInfo.h",
		"::stappler::xenolith::core::BlendFactor": "XLCoreEnum.h",
		"::stappler::xenolith::core::BlendInfo": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::BlendInfo()": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::BlendInfo(stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendOp,stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendOp,stappler::xenolith::core::ColorComponentFlags)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::BlendInfo(stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendFactor,stappler::xenolith::core::BlendOp,stappler::xenolith::core::ColorComponentFlags)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::dstAlpha": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::dstColor": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::enabled": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::isEnabled() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::opAlpha": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::opColor": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::operator!=(stappler::xenolith::core::BlendInfo const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::operator==(stappler::xenolith::core::BlendInfo const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::srcAlpha": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::srcColor": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendInfo::writeMask": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::BlendOp": "XLCoreEnum.h",
		"::stappler::xenolith::core::BufferAttachment": "XLCoreAttachment.h",
		"::stappler::xenolith::core::BufferAttachment::_info": "XLCoreAttachment.h",
		"::stappler::xenolith::core::BufferAttachment::clear()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::BufferAttachment::getInfo() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::BufferAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&,stappler::xenolith::core::BufferInfo const&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::BufferAttachment::~BufferAttachment()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::BufferData": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferData::DataCallback": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferData::atlas": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferData::buffer": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferData::callback": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferData::data": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferData::resource": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferFlags": "XLCoreEnum.h",
		"::stappler::xenolith::core::BufferInfo": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::BufferInfo()": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::BufferInfo<typename>(Args &&...)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::define<typename,typename>(T&&,Args &&...)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::define<typename>(T&&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::description() const": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::flags": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::persistent": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::BufferFlags)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::BufferInfo const&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::BufferPersistent)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::BufferUsage)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::ForceBufferFlags)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::ForceBufferUsage)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::setup(stappler::xenolith::core::PassType)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::setup(uint64_t)": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::size": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::type": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferInfo::usage": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferObject": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::_descriptor": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::_info": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::_set": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::getDescriptor() const": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::getInfo() const": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::getSet() const": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::getSize() const": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::setLocation(uint32_t,uint32_t)": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferObject::~BufferObject()": "XLCoreObject.h",
		"::stappler::xenolith::core::BufferPersistent": "XLCoreInfo.h",
		"::stappler::xenolith::core::BufferUsage": "XLCoreEnum.h",
		"::stappler::xenolith::core::Builder": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::Builder(stappler::StringView)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::Builder(stappler::xenolith::core::DynamicImage*)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::Builder::_data": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addAttachemnt(stappler::StringView,Callback<Rc<stappler::xenolith::core::Attachment> (stappler::xenolith::core::Queue::AttachmentBuilder &)> const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::addBuffer(stappler::StringView,stappler::xenolith::core::BufferInfo&&,memory::function<void (uint8_t *, uint64_t, const BufferData::DataCallback &)> const&,Rc<stappler::xenolith::core::DataAtlas>&&)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addBuffer(stappler::StringView,stappler::xenolith::core::BufferInfo&&,stappler::BytesView,Rc<stappler::xenolith::core::DataAtlas>&&)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addBuffer(stappler::StringView,stappler::xenolith::core::BufferInfo&&,stappler::FilePath,Rc<stappler::xenolith::core::DataAtlas>&&)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addBufferByRef(stappler::StringView,stappler::xenolith::core::BufferInfo&&,stappler::BytesView,Rc<stappler::xenolith::core::DataAtlas>&&)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,memory::function<void (uint8_t *, uint64_t, const ImageData::DataCallback &)> const&)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::BytesView)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::FilePath)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addImageByRef(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::BytesView)": "XLCoreResource.h",
		"::stappler::xenolith::core::Builder::addLinkedResource(Rc<stappler::xenolith::core::Resource> const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::addPass(stappler::StringView,stappler::xenolith::core::PassType,stappler::xenolith::core::RenderOrdering,Callback<Rc<stappler::xenolith::core::QueuePass> (stappler::xenolith::core::QueuePassBuilder &)> const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::addProgram(stappler::StringView,SpanView<uint32_t>,stappler::xenolith::core::ProgramInfo const*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::addProgram(stappler::StringView,memory::function<void (const ProgramData::DataCallback &)> const&,stappler::xenolith::core::ProgramInfo const*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::addProgramByRef(stappler::StringView,SpanView<uint32_t>,stappler::xenolith::core::ProgramInfo const*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::getPassData(Rc<stappler::xenolith::core::QueuePass> const&) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::getPool() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::getSubpassData(Rc<stappler::xenolith::core::QueuePass> const&,uint32_t) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::setBeginCallback(Function<void (stappler::xenolith::core::Queue::FrameRequest &)>&&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::setEndCallback(Function<void (stappler::xenolith::core::Queue::FrameRequest &)>&&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::setImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,Function<void (uint8_t *, uint64_t, const ImageData::DataCallback &)>&&,Rc<stappler::xenolith::core::DataAtlas>&&)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::Builder::setImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::BytesView,Rc<stappler::xenolith::core::DataAtlas>&&)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::Builder::setImage(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::FilePath,Rc<stappler::xenolith::core::DataAtlas>&&)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::Builder::setImageByRef(stappler::StringView,stappler::xenolith::core::ImageInfo&&,stappler::BytesView,Rc<stappler::xenolith::core::DataAtlas>&&)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::Builder::setInternalResource(Rc<stappler::xenolith::core::Resource>&&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Builder::~Builder()": "XLCoreResource.h",
		"::stappler::xenolith::core::ClockType": "XLCoreEnum.h",
		"::stappler::xenolith::core::ColorComponentFlags": "XLCoreEnum.h",
		"::stappler::xenolith::core::ColorMode": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::AlphaChannel": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::ColorMode()": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::ColorMode(stappler::xenolith::core::ColorMode const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::ColorMode(stappler::xenolith::core::ColorMode&&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::ColorMode(stappler::xenolith::core::ComponentMapping,stappler::xenolith::core::ComponentMapping)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::ColorMode(stappler::xenolith::core::ComponentMapping,stappler::xenolith::core::ComponentMapping,stappler::xenolith::core::ComponentMapping,stappler::xenolith::core::ComponentMapping)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::IntensityChannel": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::Mode": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::SolidColor": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::a": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::b": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::g": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::getA() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::getB() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::getG() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::getMode() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::getR() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::mode": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::operator uint32_t() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::operator!=(stappler::xenolith::core::ColorMode const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::operator=(stappler::xenolith::core::ColorMode const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::operator=(stappler::xenolith::core::ColorMode&&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::operator==(stappler::xenolith::core::ColorMode const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::r": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorMode::toInt() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::ColorSpace": "XLCoreEnum.h",
		"::stappler::xenolith::core::CompareOp": "XLCoreEnum.h",
		"::stappler::xenolith::core::ComponentMapping": "XLCoreEnum.h",
		"::stappler::xenolith::core::ComponentMappingA": "XLCoreInfo.h",
		"::stappler::xenolith::core::ComponentMappingB": "XLCoreInfo.h",
		"::stappler::xenolith::core::ComponentMappingG": "XLCoreInfo.h",
		"::stappler::xenolith::core::ComponentMappingR": "XLCoreInfo.h",
		"::stappler::xenolith::core::CompositeAlphaFlags": "XLCoreEnum.h",
		"::stappler::xenolith::core::ComputePipeline": "XLCoreObject.h",
		"::stappler::xenolith::core::ComputePipeline::PipelineData": "XLCoreObject.h",
		"::stappler::xenolith::core::ComputePipeline::PipelineInfo": "XLCoreObject.h",
		"::stappler::xenolith::core::ComputePipeline::RenderQueue": "XLCoreObject.h",
		"::stappler::xenolith::core::ComputePipeline::SubpassData": "XLCoreObject.h",
		"::stappler::xenolith::core::ComputePipeline::_name": "XLCoreObject.h",
		"::stappler::xenolith::core::ComputePipeline::getName() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ComputePipeline::~ComputePipeline()": "XLCoreObject.h",
		"::stappler::xenolith::core::ComputePipelineData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ComputePipelineData::layout": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ComputePipelineData::pipeline": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ComputePipelineData::subpass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ComputePipelineInfo": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ComputePipelineInfo::shader": "XLCoreQueueData.h",
		"::stappler::xenolith::core::DataAtlas": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::Type": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_data": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_dataBuffer": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_dataIndex": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_imageExtent": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_indexBuffer": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_intNames": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_objectSize": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_stringNames": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::_type": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::addObject(stappler::StringView,void*)": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::addObject(uint32_t,void*)": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::compile()": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getData() const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getDataBuffer() const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getImageExtent() const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getIndexBuffer() const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getIndexData() const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getObjectByName(stappler::StringView) const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getObjectByName(uint32_t) const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getObjectByOrder(uint32_t) const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getObjectSize() const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getObjectsCount() const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::getType() const": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::init(stappler::xenolith::core::DataAtlas::Type,uint32_t,uint32_t,stappler::xenolith::Extent2)": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::makeHashIndex()": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::setDataBuffer(Rc<stappler::xenolith::core::BufferObject>&&)": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::setIndexBuffer(Rc<stappler::xenolith::core::BufferObject>&&)": "XLCoreObject.h",
		"::stappler::xenolith::core::DataAtlas::~DataAtlas()": "XLCoreObject.h",
		"::stappler::xenolith::core::DependencyEvent": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::DependencyEvent(InitializerList<Rc<stappler::xenolith::core::Queue>>&&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::DependencyEvent(stappler::xenolith::core::DependencyEvent::QueueSet&&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::GetNextId()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::QueueSet": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::_clock": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::_id": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::_queues": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::_success": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::_tag": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::addQueue(Rc<stappler::xenolith::core::Queue>&&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::getId() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::isSignaled() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::isSuccessful() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::signal(stappler::xenolith::core::Queue*,bool)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DependencyEvent::~DependencyEvent()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::DepthBounds": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthBounds::enabled": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthBounds::max": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthBounds::min": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthBounds::operator!=(stappler::xenolith::core::DepthBounds const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthBounds::operator==(stappler::xenolith::core::DepthBounds const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthInfo": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthInfo::DepthInfo()": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthInfo::DepthInfo(bool,bool,stappler::xenolith::core::CompareOp)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthInfo::compare": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthInfo::operator!=(stappler::xenolith::core::DepthInfo const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthInfo::operator==(stappler::xenolith::core::DepthInfo const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthInfo::testEnabled": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DepthInfo::writeEnabled": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::DescriptorSetBuilder": "XLCoreQueue.h",
		"::stappler::xenolith::core::DescriptorSetBuilder::DescriptorSetBuilder(stappler::xenolith::core::DescriptorSetData*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::DescriptorSetBuilder::_data": "XLCoreQueue.h",
		"::stappler::xenolith::core::DescriptorSetBuilder::addDescriptor(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::DescriptorType,stappler::xenolith::core::AttachmentLayout)": "XLCoreQueue.h",
		"::stappler::xenolith::core::DescriptorSetData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::DescriptorSetData::descriptors": "XLCoreQueueData.h",
		"::stappler::xenolith::core::DescriptorSetData::index": "XLCoreQueueData.h",
		"::stappler::xenolith::core::DescriptorSetData::layout": "XLCoreQueueData.h",
		"::stappler::xenolith::core::DescriptorType": "XLCoreEnum.h",
		"::stappler::xenolith::core::Device": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::DescriptorType": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::Device()": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::ImageStorage": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_colorFormats": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_depthFormats": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_glInstance": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_loopThreadId": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_objectMutex": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_objects": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_presentMask": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_samplersCompiled": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_samplersCount": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_samplersInfo": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_shaderMutex": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_shaders": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_started": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_textureLayoutBuffersCount": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::_textureLayoutImagesCount": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::addObject(stappler::xenolith::core::ObjectInterface*)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::addProgram(Rc<stappler::xenolith::core::Shader>)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::clearShaders()": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::end()": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getEmptyImageObject() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getPresentatonMask() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getProgram(stappler::StringView)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getSamplersCount() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getSolidImageObject() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getSupportedColorFormat() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getSupportedDepthStencilFormat() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getTextureLayoutBuffersCount() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::getTextureLayoutImagesCount() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::init(stappler::xenolith::core::Instance const*)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::invalidateObjects()": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::isSamplersCompiled() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::makeFramebuffer(stappler::xenolith::core::QueuePassData const*,SpanView<Rc<stappler::xenolith::core::ImageView>>)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::makeImage(stappler::xenolith::core::ImageInfoData const&)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::makeImageView(Rc<stappler::xenolith::core::ImageObject> const&,stappler::xenolith::core::ImageViewInfo const&)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::makeSemaphore()": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::onLoopEnded(stappler::xenolith::core::Loop&)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::onLoopStarted(stappler::xenolith::core::Loop&)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::removeObject(stappler::xenolith::core::ObjectInterface*)": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::supportsUpdateAfterBind(stappler::xenolith::core::Device::DescriptorType) const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::waitIdle() const": "XLCoreDevice.h",
		"::stappler::xenolith::core::Device::~Device()": "XLCoreDevice.h",
		"::stappler::xenolith::core::DeviceProperties": "XLCoreInstance.h",
		"::stappler::xenolith::core::DeviceProperties::apiVersion": "XLCoreInstance.h",
		"::stappler::xenolith::core::DeviceProperties::deviceName": "XLCoreInstance.h",
		"::stappler::xenolith::core::DeviceProperties::driverVersion": "XLCoreInstance.h",
		"::stappler::xenolith::core::DeviceProperties::supportsPresentation": "XLCoreInstance.h",
		"::stappler::xenolith::core::DynamicImage": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::_data": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::_imageData": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::_instance": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::_keyData": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::_materialTrackers": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::_mutex": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::acquireData(Callback<void (stappler::BytesView)> const&)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::addTracker(stappler::xenolith::core::MaterialAttachment const*)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::finalize()": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::getExtent() const": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::getInfo() const": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::getInstance()": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::init(Callback<bool (stappler::xenolith::core::DynamicImage::Builder &)> const&)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::removeTracker(stappler::xenolith::core::MaterialAttachment const*)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::setImage(Rc<stappler::xenolith::core::ImageObject> const&)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::updateInstance(stappler::xenolith::core::Loop&,Rc<stappler::xenolith::core::ImageObject> const&,Rc<stappler::xenolith::core::DataAtlas>&&,Rc<stappler::mem_std::Ref>&&,Vector<Rc<stappler::xenolith::core::DependencyEvent>> const&)": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImage::~DynamicImage()": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImageInstance": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImageInstance::data": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImageInstance::gen": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImageInstance::image": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImageInstance::userdata": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicImageInstance::~DynamicImageInstance()": "XLCoreDynamicImage.h",
		"::stappler::xenolith::core::DynamicState": "XLCoreEnum.h",
		"::stappler::xenolith::core::EmptyTextureName": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::Extent1": "XLCoreInfo.h",
		"::stappler::xenolith::core::Filter": "XLCoreEnum.h",
		"::stappler::xenolith::core::ForceBufferFlags": "XLCoreInfo.h",
		"::stappler::xenolith::core::ForceBufferUsage": "XLCoreInfo.h",
		"::stappler::xenolith::core::ForceImageFlags": "XLCoreInfo.h",
		"::stappler::xenolith::core::ForceImageUsage": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameAttachmentData": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameAttachmentData::final": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameAttachmentData::handle": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameAttachmentData::image": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameAttachmentData::info": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameAttachmentData::passes": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameAttachmentData::state": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameAttachmentData::waitForResult": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameAttachmentState": "XLCoreEnum.h",
		"::stappler::xenolith::core::FrameCache": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_attachments": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_autorelease": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_device": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_framebuffers": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_freezed": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_imageViews": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_images": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_loop": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::_renderPasses": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::acquireFramebuffer(stappler::xenolith::core::QueuePassData const*,SpanView<Rc<stappler::xenolith::core::ImageView>>)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::acquireImage(uint64_t,stappler::xenolith::core::ImageInfoData const&,SpanView<stappler::xenolith::core::ImageViewInfo>)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::addAttachment(uint64_t)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::addImage(stappler::xenolith::core::ImageInfoData const&)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::addImageView(uint64_t)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::addRenderPass(uint64_t)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::clear()": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::freeze()": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::getFramebuffersCount() const": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::getImageViewsCount() const": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::getImagesCount() const": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::init(stappler::xenolith::core::Loop&,stappler::xenolith::core::Device&)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::invalidate()": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::isReachable(SpanView<uint64_t>) const": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::isReachable(stappler::xenolith::core::ImageInfoData const&) const": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::makeViews(Rc<stappler::xenolith::core::ImageStorage> const&,SpanView<stappler::xenolith::core::ImageViewInfo>)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::releaseFramebuffer(Rc<stappler::xenolith::core::Framebuffer>&&)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::releaseImage(Rc<stappler::xenolith::core::ImageStorage>&&)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::removeAttachment(uint64_t)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::removeImage(stappler::xenolith::core::ImageInfoData const&)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::removeImageView(uint64_t)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::removeRenderPass(uint64_t)": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::removeUnreachableFramebuffers()": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::unfreeze()": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCache::~FrameCache()": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCacheFramebuffer": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCacheFramebuffer::extent": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCacheFramebuffer::framebuffers": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCacheImageAttachment": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCacheImageAttachment::images": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameCacheImageAttachment::refCount": "XLCoreFrameCache.h",
		"::stappler::xenolith::core::FrameContraints": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameContraints::contentPadding": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameContraints::density": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameContraints::extent": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameContraints::getRotatedPadding() const": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameContraints::getScreenSize() const": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameContraints::operator==(stappler::xenolith::core::FrameContraints const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameContraints::transform": "XLCoreInfo.h",
		"::stappler::xenolith::core::FrameEmitter": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_avgFenceInterval": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_avgFenceIntervalValue": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_avgFrameTime": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_avgFrameTimeValue": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_enableBarrier": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_frame": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_frameInterval": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_frameTimeoutPassed": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_frames": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_framesPending": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_gen": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_lastFrameTime": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_lastSubmit": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_lastTotalFrameTime": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_loop": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_nextFrameAcquired": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_nextFrameRequest": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_onDemand": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_order": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_submitted": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_suboptimal": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::_valid": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::acquireNextFrame()": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::canStartFrame() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::dropFrameTimeout()": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::dropFrames()": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::getAvgFenceTime() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::getAvgFrameTime() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::getFrameInterval() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::getFrameTime() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::getLastFrameTime() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::getLoop() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::init(Rc<stappler::xenolith::core::Loop> const&,uint64_t)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::invalidate()": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::isFrameValid(stappler::xenolith::core::FrameHandle const&)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::isReadyForSubmit() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::isValid() const": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::makeFrame(Rc<stappler::xenolith::core::FrameRequest>&&,bool)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::makeRequest(stappler::xenolith::core::FrameContraints const&)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::onFrameComplete(stappler::xenolith::core::FrameHandle&)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::onFrameEmitted(stappler::xenolith::core::FrameHandle&)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::onFrameRequest(bool)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::onFrameSubmitted(stappler::xenolith::core::FrameHandle&)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::onFrameTimeout(uint64_t)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::scheduleFrameTimeout()": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::scheduleNextFrame(Rc<stappler::xenolith::core::FrameRequest>&&)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::setEnableBarrier(bool)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::setFrameInterval(uint64_t)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::setFrameSubmitted(stappler::xenolith::core::FrameHandle&)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::setFrameTime(uint64_t)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::submitNextFrame(Rc<stappler::xenolith::core::FrameRequest>&&)": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameEmitter::~FrameEmitter()": "XLCoreFrameEmitter.h",
		"::stappler::xenolith::core::FrameHandle": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::DescribeActiveFrames()": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::FrameRequest": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::GetActiveFramesCount()": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_complete": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_completed": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_device": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_gen": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_loop": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_order": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_pool": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_queues": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_queuesCompleted": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_queuesSubmitted": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_request": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_submissionTime": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_submitted": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_tasksCompleted": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_tasksRequired": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_timeEnd": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_timeStart": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::_valid": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getDevice() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getEmitter() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getFrameConstraints() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getFrameQueues() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getGen() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getImageSpecialization(stappler::xenolith::core::ImageAttachment const*) const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getInputData(stappler::xenolith::core::AttachmentData const*)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getLoop() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getOrder() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getOutputBinding(stappler::xenolith::core::Attachment const*) const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getOutputBinding(stappler::xenolith::core::AttachmentData const*) const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getPool() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getQueue() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getRenderTarget(stappler::xenolith::core::Attachment const*) const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getRenderTarget(stappler::xenolith::core::AttachmentData const*) const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getRequest() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getSignalDependencies() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getSubmissionTime() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getTimeEnd() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::getTimeStart() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::init(stappler::xenolith::core::Loop&,stappler::xenolith::core::Device&,Rc<stappler::xenolith::core::FrameHandle::FrameRequest>&&,uint64_t)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::invalidate()": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::isPersistentMapping() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::isReadyForSubmit() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::isSubmitted() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::isValid() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::isValidFlag() const": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::onComplete()": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::onOutputAttachment(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::onOutputAttachmentInvalidated(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::onQueueComplete(stappler::xenolith::core::FrameQueue&)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::onQueueInvalidated(stappler::xenolith::core::FrameQueue&)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::onQueueSubmitted(stappler::xenolith::core::FrameQueue&)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::onRequiredTaskCompleted(stappler::StringView)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::performInQueue(Function<bool (stappler::xenolith::core::FrameHandle &)>&&,Function<void (stappler::xenolith::core::FrameHandle &, bool)>&&,stappler::mem_std::Ref*,stappler::StringView)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::performInQueue(Function<void (stappler::xenolith::core::FrameHandle &)>&&,stappler::mem_std::Ref*,stappler::StringView)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::performOnGlThread(Function<void (stappler::xenolith::core::FrameHandle &)>&&,stappler::mem_std::Ref*,bool,stappler::StringView)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::performRequiredTask(Function<bool (stappler::xenolith::core::FrameHandle &)>&&,Function<void (stappler::xenolith::core::FrameHandle &, bool)>&&,stappler::mem_std::Ref*,stappler::StringView)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::performRequiredTask(Function<bool (stappler::xenolith::core::FrameHandle &)>&&,stappler::mem_std::Ref*,stappler::StringView)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::schedule(Function<bool (stappler::xenolith::core::FrameHandle &)>&&,stappler::StringView)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::setCompleteCallback(Function<void (stappler::xenolith::core::FrameHandle &)>&&)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::setReadyForSubmit(bool)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::setup()": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::signalDependencies(bool)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::tryComplete()": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::update(bool)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::waitForDependencies(Vector<Rc<stappler::xenolith::core::DependencyEvent>> const&,Function<void (stappler::xenolith::core::FrameHandle &, bool)>&&)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::waitForInput(stappler::xenolith::core::FrameQueue&,Rc<stappler::xenolith::core::AttachmentHandle> const&,Function<void (bool)>&&)": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameHandle::~FrameHandle()": "XLCoreFrameHandle.h",
		"::stappler::xenolith::core::FrameOutputBinding": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameOutputBinding::CompleteCallback": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameOutputBinding::FrameOutputBinding(stappler::xenolith::core::AttachmentData const*,stappler::xenolith::core::FrameOutputBinding::CompleteCallback&&,Rc<stappler::mem_std::Ref>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameOutputBinding::attachment": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameOutputBinding::callback": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameOutputBinding::handle": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameOutputBinding::handleReady(stappler::xenolith::core::FrameAttachmentData&,bool)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameOutputBinding::~FrameOutputBinding()": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FramePassData": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::attachmentMap": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::attachments": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::framebuffer": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::handle": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::required": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::state": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::submitTime": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::waitForResult": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassData::waiters": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassDataRequired": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassDataRequired::FramePassDataRequired()": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassDataRequired::FramePassDataRequired(stappler::xenolith::core::FramePassData*,stappler::xenolith::core::FrameRenderPassState,stappler::xenolith::core::FrameRenderPassState)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassDataRequired::data": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassDataRequired::lockedState": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FramePassDataRequired::requiredState": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_attachments": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_attachmentsInitial": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_autorelease": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_awaitPasses": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_finalized": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_finalizedObjects": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_frame": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_loop": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_order": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_pool": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_queue": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_renderPassCompleted": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_renderPassSubmitted": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_renderPasses": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_renderPassesInitial": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_renderPassesPrepared": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_submissionTime": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::_success": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::addRequiredPass(stappler::xenolith::core::FramePassData&,stappler::xenolith::core::FramePassData const&,stappler::xenolith::core::FrameAttachmentData const&,stappler::xenolith::core::AttachmentPassData const&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::finalizeAttachment(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getAttachment(stappler::xenolith::core::AttachmentData const*) const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getAttachments() const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getFrame() const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getLoop() const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getPool() const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getQueue() const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getRenderPass(stappler::xenolith::core::QueuePassData const*) const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getRenderPasses() const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getSubmissionTime() const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::getWaitStageForAttachment(stappler::xenolith::core::FramePassData&,stappler::xenolith::core::AttachmentHandle const*) const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::init(Rc<stappler::xenolith::PoolRef> const&,Rc<stappler::xenolith::core::Queue> const&,stappler::xenolith::core::FrameHandle&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::invalidate()": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::invalidate(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::invalidate(stappler::xenolith::core::FramePassData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::isFinalized() const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::isRenderPassReady(stappler::xenolith::core::FramePassData const&) const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::isRenderPassReadyForState(stappler::xenolith::core::FramePassData const&,stappler::xenolith::core::FrameRenderPassState) const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::isResourcePending(stappler::xenolith::core::FrameAttachmentData const&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::isResourcePending(stappler::xenolith::core::FramePassData const&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::makeRenderPassSync(stappler::xenolith::core::FramePassData&) const": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onAttachmentAcquire(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onAttachmentInput(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onAttachmentRelease(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onAttachmentSetupComplete(stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onComplete()": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onFinalized()": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onRenderPassComplete(stappler::xenolith::core::FramePassData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onRenderPassOwned(stappler::xenolith::core::FramePassData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onRenderPassPrepared(stappler::xenolith::core::FramePassData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onRenderPassReady(stappler::xenolith::core::FramePassData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onRenderPassResourcesAcquired(stappler::xenolith::core::FramePassData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onRenderPassSubmission(stappler::xenolith::core::FramePassData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::onRenderPassSubmitted(stappler::xenolith::core::FramePassData&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::setup()": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::tryReleaseFrame()": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::update()": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::updateRenderPassState(stappler::xenolith::core::FramePassData&,stappler::xenolith::core::FrameRenderPassState)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::waitForResource(stappler::xenolith::core::FrameAttachmentData const&,Function<void (bool)>&&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::waitForResource(stappler::xenolith::core::FramePassData const&,Function<void ()>&&)": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameQueue::~FrameQueue()": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameRenderPassState": "XLCoreEnum.h",
		"::stappler::xenolith::core::FrameRequest": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::CompleteCallback": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::FrameRequest()": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::FrameRequest(stappler::xenolith::core::FrameRequest const&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::WaitInputData": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::WaitInputData::callback": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::WaitInputData::handle": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::WaitInputData::queue": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_constraints": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_emitter": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_imageSpecialization": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_input": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_output": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_persistentMappings": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_pool": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_queue": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_readyForSubmit": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_renderTargets": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_sceneId": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_signalDependencies": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::_waitForInputs": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::addImageSpecialization(stappler::xenolith::core::ImageAttachment const*,stappler::xenolith::core::ImageInfoData&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::addInput(stappler::xenolith::core::Attachment const*,Rc<stappler::xenolith::core::AttachmentInputData>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::addInput(stappler::xenolith::core::AttachmentData const*,Rc<stappler::xenolith::core::AttachmentInputData>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::addSignalDependencies(Vector<Rc<stappler::xenolith::core::DependencyEvent>>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::addSignalDependency(Rc<stappler::xenolith::core::DependencyEvent>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::finalize(stappler::xenolith::core::Loop&,HashMap<const stappler::xenolith::core::AttachmentData *, stappler::xenolith::core::FrameAttachmentData *>&,bool)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getEmitter() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getFrameConstraints() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getImageSpecialization(stappler::xenolith::core::ImageAttachment const*) const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getInputData(stappler::xenolith::core::AttachmentData const*)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getOutputBinding(stappler::xenolith::core::AttachmentData const*) const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getPool() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getQueue() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getQueueList() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getRenderTarget(stappler::xenolith::core::AttachmentData const*)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getSceneId() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::getSignalDependencies() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::init(Rc<stappler::xenolith::core::FrameEmitter> const&,stappler::xenolith::core::FrameContraints const&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::init(Rc<stappler::xenolith::core::Queue> const&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::init(Rc<stappler::xenolith::core::Queue> const&,Rc<stappler::xenolith::core::FrameEmitter> const&,stappler::xenolith::core::FrameContraints const&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::init(Rc<stappler::xenolith::core::Queue> const&,stappler::xenolith::core::FrameContraints const&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::isPersistentMapping() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::isReadyForSubmit() const": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::onOutputInvalidated(stappler::xenolith::core::Loop&,stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::onOutputReady(stappler::xenolith::core::Loop&,stappler::xenolith::core::FrameAttachmentData&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::operator=(stappler::xenolith::core::FrameRequest const&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::setOutput(Rc<stappler::xenolith::core::FrameOutputBinding>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::setOutput(stappler::xenolith::core::Attachment const*,stappler::xenolith::core::FrameRequest::CompleteCallback&&,Rc<stappler::mem_std::Ref>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::setOutput(stappler::xenolith::core::AttachmentData const*,stappler::xenolith::core::FrameRequest::CompleteCallback&&,Rc<stappler::mem_std::Ref>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::setQueue(Rc<stappler::xenolith::core::Queue> const&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::setReadyForSubmit(bool)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::setRenderTarget(stappler::xenolith::core::AttachmentData const*,Rc<stappler::xenolith::core::ImageStorage>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::setSceneId(uint64_t)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::signalDependencies(stappler::xenolith::core::Loop&,stappler::xenolith::core::Queue*,bool)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::waitForInput(stappler::xenolith::core::FrameQueue&,Rc<stappler::xenolith::core::AttachmentHandle> const&,Function<void (bool)>&&)": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameRequest::~FrameRequest()": "XLCoreFrameRequest.h",
		"::stappler::xenolith::core::FrameSync": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSync::images": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSync::signalAttachments": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSync::waitAttachments": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncAttachment": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncAttachment::attachment": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncAttachment::image": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncAttachment::semaphore": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncAttachment::stages": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncImage": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncImage::attachment": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncImage::image": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::FrameSyncImage::newLayout": "XLCoreFrameQueue.h",
		"::stappler::xenolith::core::Framebuffer": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::_extent": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::_imageViews": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::_layerCount": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::_renderPass": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::_viewIds": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::getExtent() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::getFramebufferExtent() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::getHash() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::getLayerCount() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::getRenderPass() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::getViewHash(SpanView<Rc<stappler::xenolith::core::ImageView>>)": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::getViewHash(SpanView<uint64_t>)": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::getViewIds() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Framebuffer::~Framebuffer()": "XLCoreObject.h",
		"::stappler::xenolith::core::GenericAttachment": "XLCoreAttachment.h",
		"::stappler::xenolith::core::GenericAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::GenericAttachment::makeFrameHandle(stappler::xenolith::core::Attachment::FrameQueue const&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::GenericAttachment::~GenericAttachment()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::GraphicPipeline": "XLCoreObject.h",
		"::stappler::xenolith::core::GraphicPipeline::PipelineData": "XLCoreObject.h",
		"::stappler::xenolith::core::GraphicPipeline::PipelineInfo": "XLCoreObject.h",
		"::stappler::xenolith::core::GraphicPipeline::RenderQueue": "XLCoreObject.h",
		"::stappler::xenolith::core::GraphicPipeline::SubpassData": "XLCoreObject.h",
		"::stappler::xenolith::core::GraphicPipeline::_name": "XLCoreObject.h",
		"::stappler::xenolith::core::GraphicPipeline::getName() const": "XLCoreObject.h",
		"::stappler::xenolith::core::GraphicPipeline::~GraphicPipeline()": "XLCoreObject.h",
		"::stappler::xenolith::core::GraphicPipelineData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::GraphicPipelineData::layout": "XLCoreQueueData.h",
		"::stappler::xenolith::core::GraphicPipelineData::pipeline": "XLCoreQueueData.h",
		"::stappler::xenolith::core::GraphicPipelineData::subpass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::GraphicPipelineInfo": "XLCoreQueueData.h",
		"::stappler::xenolith::core::GraphicPipelineInfo::dynamicState": "XLCoreQueueData.h",
		"::stappler::xenolith::core::GraphicPipelineInfo::isSolid() const": "XLCoreQueueData.h",
		"::stappler::xenolith::core::GraphicPipelineInfo::material": "XLCoreQueueData.h",
		"::stappler::xenolith::core::GraphicPipelineInfo::shaders": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ImageAttachment": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::AttachmentInfo": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::clearColor": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::clearOnLoad": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::colorMode": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::finalLayout": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::AttachmentInfo::initialLayout": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::_attachmentInfo": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::_imageInfo": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::addImageUsage(stappler::xenolith::core::ImageUsage)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::getClearColor() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::getColorMode() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::getFinalLayout() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::getImageInfo() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::getImageViewInfo(stappler::xenolith::core::ImageInfoData const&,stappler::xenolith::core::AttachmentPassData const&) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::getImageViews(stappler::xenolith::core::ImageInfoData const&) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::getInitialLayout() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&,stappler::xenolith::core::ImageInfo const&,stappler::xenolith::core::ImageAttachment::AttachmentInfo&&)": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::isCompatible(stappler::xenolith::core::ImageInfo const&) const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::shouldClearOnLoad() const": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageAttachment::~ImageAttachment()": "XLCoreAttachment.h",
		"::stappler::xenolith::core::ImageData": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageData::DataCallback": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageData::atlas": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageData::data": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageData::image": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageData::memCallback": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageData::resource": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageData::stdCallback": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageFlags": "XLCoreEnum.h",
		"::stappler::xenolith::core::ImageFormat": "XLCoreEnum.h",
		"::stappler::xenolith::core::ImageHints": "XLCoreEnum.h",
		"::stappler::xenolith::core::ImageInfo": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::ImageInfo()": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::ImageInfo<typename>(Args &&...)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::define<typename,typename>(T&&,Args &&...)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::define<typename>(T&&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::description() const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::isCompatible(stappler::xenolith::core::ImageInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::StringView)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::Extent2)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::Extent3)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ArrayLayers)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::Extent1)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ForceImageFlags)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ForceImageUsage)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageFlags)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageFormat)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageHints)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageTiling)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageType)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::ImageUsage)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::MipLevels)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::PassType)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfo::setup(stappler::xenolith::core::SampleCount)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::arrayLayers": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::extent": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::flags": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::format": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::getViewInfo(stappler::xenolith::core::ImageViewInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::hints": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::imageType": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::mipLevels": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::operator!=(stappler::xenolith::core::ImageInfoData const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::operator<=>(stappler::xenolith::core::ImageInfoData const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::operator==(stappler::xenolith::core::ImageInfoData const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::samples": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::tiling": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::type": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageInfoData::usage": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageObject": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::_atlas": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::_index": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::_info": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::getAtlas() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::getIndex() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::getInfo() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::getViewInfo(stappler::xenolith::core::ImageViewInfo const&) const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle)": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle,uint64_t)": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageObject::~ImageObject()": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageStorage": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_acquisitionTime": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_frameIndex": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_image": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_invalid": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_isSwapchainImage": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_layout": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_ready": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_signalSem": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_views": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_waitReady": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::_waitSem": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::addView(stappler::xenolith::core::ImageViewInfo const&,Rc<stappler::xenolith::core::ImageView>&&)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::cleanup()": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getAcquisitionTime() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getFrameIndex() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getImage() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getImageIndex() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getInfo() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getLayout() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getSignalSem() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getView(stappler::xenolith::core::ImageViewInfo const&) const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getViews() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::getWaitSem() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::init(Rc<stappler::xenolith::core::ImageObject>&&)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::invalidate()": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::isCacheable() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::isReady() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::isSemaphorePersistent() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::isSwapchainImage() const": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::makeView(stappler::xenolith::core::ImageViewInfo const&)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::notifyReady()": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::rearmSemaphores(stappler::xenolith::core::Loop&)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::releaseSemaphore(stappler::xenolith::core::Semaphore*)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::setAcquisitionTime(uint64_t)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::setFrameIndex(uint64_t)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::setLayout(stappler::xenolith::core::AttachmentLayout)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::setReady(bool)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::waitReady(Function<void (bool)>&&)": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageStorage::~ImageStorage()": "XLCoreImageStorage.h",
		"::stappler::xenolith::core::ImageTiling": "XLCoreEnum.h",
		"::stappler::xenolith::core::ImageType": "XLCoreEnum.h",
		"::stappler::xenolith::core::ImageUsage": "XLCoreEnum.h",
		"::stappler::xenolith::core::ImageView": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::_descriptor": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::_image": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::_index": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::_info": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::_releaseCallback": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::_set": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::getDescriptor() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::getExtent() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::getFramebufferExtent() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::getImage() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::getIndex() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::getInfo() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::getLayerCount() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::getSet() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle)": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::invalidate()": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::runReleaseCallback()": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::setLocation(uint32_t,uint32_t)": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::setReleaseCallback(Function<void ()>&&)": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageView::~ImageView()": "XLCoreObject.h",
		"::stappler::xenolith::core::ImageViewInfo": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::ImageViewInfo()": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::ImageViewInfo(stappler::xenolith::core::ImageViewInfo const&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::ImageViewInfo(stappler::xenolith::core::ImageViewInfo&&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::ImageViewInfo<typename>(Args &&...)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::a": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::b": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::baseArrayLayer": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::define<typename,typename>(T&&,Args &&...)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::define<typename>(T&&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::description() const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::format": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::g": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::getColorMode() const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::isCompatible(stappler::xenolith::core::ImageInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::layerCount": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::operator!=(stappler::xenolith::core::ImageViewInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::operator<=>(stappler::xenolith::core::ImageViewInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::operator=(stappler::xenolith::core::ImageViewInfo const&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::operator=(stappler::xenolith::core::ImageViewInfo&&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::operator==(stappler::xenolith::core::ImageViewInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::r": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ArrayLayers)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::BaseArrayLayer)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ColorMode,bool)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ComponentMappingA)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ComponentMappingB)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ComponentMappingG)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ComponentMappingR)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageFormat)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageInfoData const&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageType,stappler::xenolith::core::ArrayLayers)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageViewInfo const&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::setup(stappler::xenolith::core::ImageViewType)": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewInfo::type": "XLCoreInfo.h",
		"::stappler::xenolith::core::ImageViewType": "XLCoreEnum.h",
		"::stappler::xenolith::core::InputEventData": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::BoolEvent(stappler::xenolith::core::InputEventName,bool)": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::BoolEvent(stappler::xenolith::core::InputEventName,bool,stappler::xenolith::Vec2 const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::button": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::compose": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::density": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::event": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::getValue() const": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::hasLocation() const": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::id": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::isKeyEvent() const": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::isPointEvent() const": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::key": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::keychar": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::keycode": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::keysym": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::modifiers": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::operator!=(uint32_t const&) const": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::operator<=>(stappler::xenolith::core::InputEventData const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::operator==(uint32_t const&) const": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::point": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::valueX": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::valueY": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::x": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventData::y": "XLCoreInput.h",
		"::stappler::xenolith::core::InputEventName": "XLCoreInput.h",
		"::stappler::xenolith::core::InputFlags": "XLCoreInput.h",
		"::stappler::xenolith::core::InputKeyCode": "XLCoreInput.h",
		"::stappler::xenolith::core::InputKeyComposeState": "XLCoreInput.h",
		"::stappler::xenolith::core::InputModifier": "XLCoreInput.h",
		"::stappler::xenolith::core::InputMouseButton": "XLCoreInput.h",
		"::stappler::xenolith::core::Instance": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::DefaultDevice": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::Instance(stappler::xenolith::core::Instance::TerminateCallback&&,Rc<stappler::mem_std::Ref>&&)": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::TerminateCallback": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::_availableDevices": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::_terminate": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::_userdata": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::getAvailableDevices() const": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::getUserdata() const": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::makeLoop(stappler::xenolith::core::LoopInfo&&) const": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::makeView(stappler::xenolith::Application&,stappler::xenolith::core::Device const&,stappler::xenolith::ViewInfo&&) const": "XLCoreInstance.h",
		"::stappler::xenolith::core::Instance::~Instance()": "XLCoreInstance.h",
		"::stappler::xenolith::core::LineWidth": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::Loop": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::AttachmentHandle": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::DependencyEvent": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::FrameCache": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::FrameHandle": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::FrameRequest": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::ImageAttachment": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::ImageStorage": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::Loop()": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::LoopInfo": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::LoopThreadId": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::PassData": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::Queue": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::_frameCache": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::_glInstance": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::_info": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::_shouldExit": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::acquireFramebuffer(stappler::xenolith::core::Loop::PassData const*,SpanView<Rc<stappler::xenolith::core::ImageView>>)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::acquireImage(stappler::xenolith::core::Loop::ImageAttachment const*,stappler::xenolith::core::Loop::AttachmentHandle const*,stappler::xenolith::core::ImageInfoData const&)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::cancel()": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::captureImage(Function<void (const stappler::xenolith::core::ImageInfoData &, stappler::BytesView)>&&,Rc<stappler::xenolith::core::ImageObject> const&,stappler::xenolith::core::AttachmentLayout)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::compileImage(Rc<stappler::xenolith::core::DynamicImage> const&,Function<void (bool)>&&) const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::compileMaterials(Rc<stappler::xenolith::core::MaterialInputData>&&,Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&) const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::compileQueue(Rc<stappler::xenolith::core::Loop::Queue> const&,Function<void (bool)>&&) const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::compileResource(Rc<stappler::xenolith::core::Resource>&&,Function<void (bool)>&&,bool) const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::getFrameCache() const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::getGlInstance() const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::getSupportedDepthStencilFormat() const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::init(stappler::xenolith::core::Instance*,stappler::xenolith::core::Loop::LoopInfo&&)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::isOnGlThread() const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::isRunning() const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::makeFrame(Rc<stappler::xenolith::core::Loop::FrameRequest>&&,uint64_t)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::makeSemaphore()": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::performInQueue(Function<void ()>&&,stappler::mem_std::Ref*) const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::performInQueue(Rc<thread::Task>&&) const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::performOnGlThread(Function<void ()>&&,stappler::mem_std::Ref*,bool) const": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::releaseFramebuffer(Rc<stappler::xenolith::core::Framebuffer>&&)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::releaseImage(Rc<stappler::xenolith::core::Loop::ImageStorage>&&)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::runRenderQueue(Rc<stappler::xenolith::core::Loop::FrameRequest>&&,uint64_t,Function<void (bool)>&&)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::schedule(Function<bool (stappler::xenolith::core::Loop &)>&&,stappler::StringView)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::schedule(Function<bool (stappler::xenolith::core::Loop &)>&&,uint64_t,stappler::StringView)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::signalDependencies(Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&,stappler::xenolith::core::Loop::Queue*,bool)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::waitForDependencies(Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&,Function<void (bool)>&&)": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::waitIdle()": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::waitRinning()": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::wakeup()": "XLCoreLoop.h",
		"::stappler::xenolith::core::Loop::~Loop()": "XLCoreLoop.h",
		"::stappler::xenolith::core::LoopInfo": "XLCoreLoop.h",
		"::stappler::xenolith::core::LoopInfo::deviceIdx": "XLCoreLoop.h",
		"::stappler::xenolith::core::LoopInfo::onDeviceFinalized": "XLCoreLoop.h",
		"::stappler::xenolith::core::LoopInfo::onDeviceStarted": "XLCoreLoop.h",
		"::stappler::xenolith::core::LoopInfo::platformData": "XLCoreLoop.h",
		"::stappler::xenolith::core::LoopInfo::threadsCount": "XLCoreLoop.h",
		"::stappler::xenolith::core::Material": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::MaterialIdInitial": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::PipelineData": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::_atlas": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::_data": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::_dirty": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::_id": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::_images": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::_layoutIndex": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::_ownedData": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::_pipeline": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::getAtlas() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::getData() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::getId() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::getImages() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::getLayoutIndex() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::getOwnedData() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::getPipeline() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::init(stappler::xenolith::core::Material const*,Rc<stappler::xenolith::core::ImageObject>&&,Rc<stappler::xenolith::core::DataAtlas>&&,stappler::mem_std::Bytes&&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::init(stappler::xenolith::core::Material const*,Vector<stappler::xenolith::core::MaterialImage>&&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::init(stappler::xenolith::core::MaterialId,stappler::xenolith::core::Material::PipelineData const*,Rc<stappler::xenolith::core::DynamicImageInstance> const&,stappler::mem_std::Bytes&&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::init(stappler::xenolith::core::MaterialId,stappler::xenolith::core::Material::PipelineData const*,Vector<stappler::xenolith::core::MaterialImage>&&,stappler::mem_std::Bytes&&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::init(stappler::xenolith::core::MaterialId,stappler::xenolith::core::Material::PipelineData const*,stappler::xenolith::core::ImageData const*,stappler::mem_std::Bytes&&,bool)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::init(stappler::xenolith::core::MaterialId,stappler::xenolith::core::Material::PipelineData const*,stappler::xenolith::core::ImageData const*,stappler::xenolith::core::ColorMode,stappler::mem_std::Bytes&&,bool)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::setLayoutIndex(uint32_t)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::Material::~Material()": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::DynamicImageTracker": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::DynamicImageTracker::materials": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::DynamicImageTracker::refCount": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::_attachmentMaterialId": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::_compiler": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::_data": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::_dynamicMutex": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::_dynamicTrackers": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::_encodeCallback": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::_materialObjectSize": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::_predefinedMaterials": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::addDynamicTracker(stappler::xenolith::core::MaterialId,Rc<stappler::xenolith::core::DynamicImage> const&) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::addPredefinedMaterials(Vector<Rc<stappler::xenolith::core::Material>>&&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::allocateSet(stappler::xenolith::core::Device const&) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::cloneSet(Rc<stappler::xenolith::core::MaterialSet> const&) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::getCompiler() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::getMaterials() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::getNextMaterialId() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::getPredefinedMaterials() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&,stappler::xenolith::core::BufferInfo const&,MaterialSet::EncodeCallback&&,uint32_t)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::removeDynamicTracker(stappler::xenolith::core::MaterialId,Rc<stappler::xenolith::core::DynamicImage> const&) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::setCompiler(stappler::xenolith::core::Queue*)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::setMaterials(Rc<stappler::xenolith::core::MaterialSet> const&) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::sortDescriptors(stappler::xenolith::core::Attachment::RenderQueue&,stappler::xenolith::core::Device&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::updateDynamicImage(stappler::xenolith::core::Loop&,stappler::xenolith::core::DynamicImage const*,Vector<Rc<stappler::xenolith::core::DependencyEvent>> const&) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialAttachment::~MaterialAttachment()": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialBufferSlot": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialBufferSlot::buffer": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialBufferSlot::refCount": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialId": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage::canAlias(stappler::xenolith::core::MaterialImage const&) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage::descriptor": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage::dynamic": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage::image": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage::info": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage::sampler": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage::set": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImage::view": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialImageSlot": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialImageSlot::image": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialImageSlot::refCount": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialInputData": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialInputData::attachment": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialInputData::callback": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialInputData::dynamicMaterialsToUpdate": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialInputData::materialsToAddOrUpdate": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialInputData::materialsToRemove": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialLayout": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialLayout::bufferSlots": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialLayout::imageSlots": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialLayout::set": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialLayout::usedBufferSlots": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialLayout::usedImageSlots": "XLCoreObject.h",
		"::stappler::xenolith::core::MaterialSet": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::EncodeCallback": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::ImageSlot": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_buffer": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_buffersInSet": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_encodeCallback": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_generation": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_imagesInSet": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_info": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_layouts": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_materials": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_objectSize": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_ordering": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::_owner": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::clear()": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::emplaceMaterialImages(stappler::xenolith::core::Material*,stappler::xenolith::core::Material*,Callback<Rc<stappler::xenolith::core::ImageView> (const stappler::xenolith::core::MaterialImage &)> const&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::encode(uint8_t*,stappler::xenolith::core::Material const*)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getBuffer() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getGeneration() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getImagesInSet() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getInfo() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getLayout(uint32_t) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getLayouts()": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getMaterialById(stappler::xenolith::core::MaterialId) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getMaterialOrder(stappler::xenolith::core::MaterialId) const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getMaterials() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getObjectSize() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::getOrdering() const": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::init(Rc<stappler::xenolith::core::MaterialSet> const&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::init(stappler::xenolith::core::BufferInfo const&,stappler::xenolith::core::MaterialSet::EncodeCallback const&,uint32_t,uint32_t,uint32_t,stappler::xenolith::core::MaterialAttachment const*)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::removeMaterial(stappler::xenolith::core::Material*)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::setBuffer(Rc<stappler::xenolith::core::BufferObject>&&,HashMap<stappler::xenolith::core::MaterialId, uint32_t>&&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::updateMaterials(Rc<stappler::xenolith::core::MaterialInputData> const&,Callback<Rc<stappler::xenolith::core::ImageView> (const stappler::xenolith::core::MaterialImage &)> const&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::updateMaterials(Vector<Rc<stappler::xenolith::core::Material>> const&,SpanView<stappler::xenolith::core::MaterialId>,SpanView<stappler::xenolith::core::MaterialId>,Callback<Rc<stappler::xenolith::core::ImageView> (const stappler::xenolith::core::MaterialImage &)> const&)": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MaterialSet::~MaterialSet()": "XLCoreMaterial.h",
		"::stappler::xenolith::core::MeshAttachment": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshAttachment::_data": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshAttachment::_initials": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshAttachment::getMeshes() const": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshAttachment::init(stappler::xenolith::core::Attachment::AttachmentBuilder&,stappler::xenolith::core::BufferInfo const&,Vector<Rc<stappler::xenolith::core::MeshIndex>>&&)": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshAttachment::setMeshes(Rc<stappler::xenolith::core::MeshSet> const&) const": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshAttachment::~MeshAttachment()": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::BufferCallback": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::DataCallback": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::MeshBufferInfo": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::MeshBufferInfo::indexBufferCallback": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::MeshBufferInfo::indexBufferSize": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::MeshBufferInfo::vertexBufferCallback": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::MeshBufferInfo::vertexBufferSize": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::_atlas": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::_indexBuffer": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::_vertexBuffer": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::getAtlas() const": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::getIndexBufferData() const": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::getVertexBufferData() const": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::init(stappler::StringView,Rc<stappler::xenolith::core::DataAtlas>&&,stappler::xenolith::core::MeshIndex::MeshBufferInfo&&)": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshIndex::~MeshIndex()": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshInputData": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshInputData::attachment": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshInputData::meshesToAdd": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshInputData::meshesToRemove": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::Index": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::Index::index": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::Index::indexOffset": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::Index::vertexOffset": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::_indexBuffer": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::_indexes": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::_vertexBuffer": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::clear()": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::getIndexBuffer() const": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::getIndexes() const": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::getVertexBuffer() const": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::init(Vector<stappler::xenolith::core::MeshSet::Index>&&,stappler::xenolith::core::BufferObject*,stappler::xenolith::core::BufferObject*)": "XLCoreMesh.h",
		"::stappler::xenolith::core::MeshSet::~MeshSet()": "XLCoreMesh.h",
		"::stappler::xenolith::core::MipLevels": "XLCoreInfo.h",
		"::stappler::xenolith::core::NamedObject": "XLCoreObject.h",
		"::stappler::xenolith::core::NamedObject::~NamedObject()": "XLCoreObject.h",
		"::stappler::xenolith::core::Object": "XLCoreObject.h",
		"::stappler::xenolith::core::Object::~Object()": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectHandle": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::ClearCallback": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::ObjectHandle": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::_callback": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::_device": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::_handle": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::_type": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::getObject() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::getType() const": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle)": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::invalidate()": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectInterface::~ObjectInterface()": "XLCoreObject.h",
		"::stappler::xenolith::core::ObjectType": "XLCoreEnum.h",
		"::stappler::xenolith::core::PassType": "XLCoreEnum.h",
		"::stappler::xenolith::core::PipelineDescriptor": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::attachment": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::boundGeneration": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::count": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::index": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::layout": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::set": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::stages": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::type": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineDescriptor::updateAfterBind": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineLayoutBuilder": "XLCoreQueue.h",
		"::stappler::xenolith::core::PipelineLayoutBuilder::PipelineLayoutBuilder(stappler::xenolith::core::PipelineLayoutData*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::PipelineLayoutBuilder::_data": "XLCoreQueue.h",
		"::stappler::xenolith::core::PipelineLayoutBuilder::addSet(Callback<void (stappler::xenolith::core::DescriptorSetBuilder &)> const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::PipelineLayoutBuilder::setUsesTextureSet(bool)": "XLCoreQueue.h",
		"::stappler::xenolith::core::PipelineLayoutData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineLayoutData::computePipelines": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineLayoutData::graphicPipelines": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineLayoutData::index": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineLayoutData::pass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineLayoutData::sets": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineLayoutData::usesTextureSet": "XLCoreQueueData.h",
		"::stappler::xenolith::core::PipelineMaterialInfo": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::PipelineMaterialInfo()": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::PipelineMaterialInfo(stappler::xenolith::core::PipelineMaterialInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::PipelineMaterialInfo<typename,typename,typename>(T&&,Args &&...)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::BlendInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::DepthBounds const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::DepthInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::LineWidth)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::_setup(stappler::xenolith::core::StencilInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::back": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::blend": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::bounds": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::data() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::depth": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::description() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::disableStancil()": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::enableStencil(stappler::xenolith::core::StencilInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::enableStencil(stappler::xenolith::core::StencilInfo const&,stappler::xenolith::core::StencilInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::front": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::getBlendInfo() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::getDepthBounds() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::getDepthInfo() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::getLineWidth() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::getStencilInfoBack() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::getStencilInfoFront() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::hash() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::isStancilEnabled() const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::lineWidth": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::operator!=(stappler::xenolith::core::PipelineMaterialInfo const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::operator=(stappler::xenolith::core::PipelineMaterialInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::operator==(stappler::xenolith::core::PipelineMaterialInfo const&) const": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::setBlendInfo(stappler::xenolith::core::BlendInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::setDepthBounds(stappler::xenolith::core::DepthBounds const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::setDepthInfo(stappler::xenolith::core::DepthInfo const&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::setLineWidth(float)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::setup()": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::setup<typename,typename>(T&&,Args &&...)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::setup<typename>(T&&)": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineMaterialInfo::stencil": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::PipelineStage": "XLCoreEnum.h",
		"::stappler::xenolith::core::PixelFormat": "XLCoreEnum.h",
		"::stappler::xenolith::core::PredefinedConstant": "XLCoreEnum.h",
		"::stappler::xenolith::core::PresentMode": "XLCoreEnum.h",
		"::stappler::xenolith::core::ProgramData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramData::DataCallback": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramData::callback": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramData::data": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramData::inspect(SpanView<uint32_t>)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramData::program": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramDescriptorBinding": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramDescriptorBinding::count": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramDescriptorBinding::descriptor": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramDescriptorBinding::set": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramDescriptorBinding::type": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramEntryPointBlock": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramEntryPointBlock::id": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramEntryPointBlock::localX": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramEntryPointBlock::localY": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramEntryPointBlock::localZ": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramEntryPointBlock::name": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramInfo": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramInfo::bindings": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramInfo::constants": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramInfo::entryPoints": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramInfo::stage": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramPushConstantBlock": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramPushConstantBlock::offset": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramPushConstantBlock::size": "XLCoreQueueData.h",
		"::stappler::xenolith::core::ProgramStage": "XLCoreEnum.h",
		"::stappler::xenolith::core::Queue": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::AttachmentBuilder": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::AttachmentData": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::AttachmentHandle": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::FrameHandle": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::FrameQueue": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::FrameRequest": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::Queue()": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::_data": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::beginFrame(stappler::xenolith::core::Queue::FrameRequest&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::endFrame(stappler::xenolith::core::Queue::FrameRequest&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getAttachment(stappler::StringView) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getAttachments() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getComputePipeline(stappler::StringView) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getComputePipelines() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getGraphicPipeline(stappler::StringView) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getGraphicPipelines() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getInputAttachment(std::type_index) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getInputAttachment<typename>() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getInputAttachments() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getInternalResource() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getLinkedResources() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getName() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getOutput() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getOutput(stappler::xenolith::core::AttachmentType) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getOutputAttachment(std::type_index) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getOutputAttachment<typename>() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getOutputAttachments() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getPass(stappler::StringView) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getPasses() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getPresentImageOutput() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getProgram(stappler::StringView) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getPrograms() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::getTransferImageOutput() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::incrementOrder()": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::init(stappler::xenolith::core::Queue::Builder&&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::isCompatible(stappler::xenolith::core::ImageInfo const&) const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::isCompiled() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::prepare(stappler::xenolith::core::Device&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::setCompiled(bool,Function<void ()>&&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::Queue::~Queue()": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueueData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::attachments": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::beginCallback": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::clear()": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::compiled": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::computePipelines": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::endCallback": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::graphicPipelines": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::input": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::linked": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::order": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::output": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::passes": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::pool": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::programs": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::queue": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::releaseCallback": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::resource": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::typedInput": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueueData::typedOutput": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePass": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::AttachmentData": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::FrameQueue": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::FrameQueueWaiter": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::FrameQueueWaiter::acquired": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::FrameQueueWaiter::queue": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::PassType": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::Queue": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::QueuePassBuilder": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::QueuePassHandle": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::RenderOrdering": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::_data": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::_frameSizeCallback": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::_next": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::_owner": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::acquireForFrame(stappler::xenolith::core::QueuePass::FrameQueue&,Function<void (bool)>&&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::getData() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::getName() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::getOrdering() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::getOwner() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::getSubpassCount() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::getType() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::init(stappler::xenolith::core::QueuePass::QueuePassBuilder&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::invalidate()": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::makeFrameHandle(stappler::xenolith::core::QueuePass::FrameQueue const&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::prepare(stappler::xenolith::core::Device&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::releaseForFrame(stappler::xenolith::core::QueuePass::FrameQueue&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePass::~QueuePass()": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassBuilder": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassBuilder::QueuePassBuilder(stappler::xenolith::core::QueuePassData*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassBuilder::_data": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassBuilder::addAttachment(stappler::xenolith::core::AttachmentData const*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassBuilder::addAttachment(stappler::xenolith::core::AttachmentData const*,Callback<void (stappler::xenolith::core::AttachmentPassBuilder &)> const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassBuilder::addDescriptorLayout(Callback<void (stappler::xenolith::core::PipelineLayoutBuilder &)> const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassBuilder::addSubpass(Callback<void (stappler::xenolith::core::SubpassBuilder &)> const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassBuilder::addSubpassDependency(stappler::xenolith::core::SubpassData const*,stappler::xenolith::core::PipelineStage,stappler::xenolith::core::AccessType,stappler::xenolith::core::SubpassData const*,stappler::xenolith::core::PipelineStage,stappler::xenolith::core::AccessType,bool)": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassBuilder::getData() const": "XLCoreQueue.h",
		"::stappler::xenolith::core::QueuePassData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::QueuePassData()": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::QueuePassData(stappler::xenolith::core::QueuePassData const&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::QueuePassData(stappler::xenolith::core::QueuePassData&&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::attachments": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::dependencies": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::hasUpdateAfterBind": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::impl": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::operator=(stappler::xenolith::core::QueuePassData const&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::operator=(stappler::xenolith::core::QueuePassData&&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::ordering": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::pass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::pipelineLayouts": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::queue": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::subpasses": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassData::type": "XLCoreQueueData.h",
		"::stappler::xenolith::core::QueuePassHandle": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::FrameHandle": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::FrameQueue": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::FrameSync": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::QueuePass": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::RenderOrdering": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::_autorelease": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::_autoreleaseMutex": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::_data": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::_isAsync": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::_queueData": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::_queuePass": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::autorelease(stappler::mem_std::Ref*) const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::finalize(stappler::xenolith::core::QueuePassHandle::FrameQueue&,bool)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::getAttachemntData(stappler::xenolith::core::AttachmentData const*) const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::getAttachmentHandle(stappler::xenolith::core::AttachmentData const*) const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::getData() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::getFramebuffer() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::getName() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::getQueuePass() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::init(stappler::xenolith::core::QueuePassHandle::QueuePass&,stappler::xenolith::core::QueuePassHandle::FrameQueue const&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::isAsync() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::isAvailable(stappler::xenolith::core::QueuePassHandle::FrameQueue const&) const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::isCompleted() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::isFramebufferRequired() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::isSubmitted() const": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::prepare(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Function<void (bool)>&&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::setQueueData(stappler::xenolith::core::FramePassData&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::submit(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Rc<stappler::xenolith::core::QueuePassHandle::FrameSync>&&,Function<void (bool)>&&,Function<void (bool)>&&)": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::QueuePassHandle::~QueuePassHandle()": "XLCoreQueuePass.h",
		"::stappler::xenolith::core::RenderOrdering": "XLCoreQueueData.h",
		"::stappler::xenolith::core::RenderOrderingHighest": "XLCoreQueueData.h",
		"::stappler::xenolith::core::RenderOrderingLowest": "XLCoreQueueData.h",
		"::stappler::xenolith::core::RenderPass": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::Attachment": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::DescriptorType": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::PipelineDescriptor": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::QueuePassData": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::_index": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::_name": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::_type": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::getIndex() const": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::getName() const": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::getType() const": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::init(stappler::xenolith::core::Device&,stappler::xenolith::core::ObjectInterface::ClearCallback,stappler::xenolith::core::ObjectType,stappler::xenolith::core::ObjectInterface::ObjectHandle)": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderPass::~RenderPass()": "XLCoreObject.h",
		"::stappler::xenolith::core::RenderingLevel": "XLCoreEnum.h",
		"::stappler::xenolith::core::Resource": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::Resource()": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::_data": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::clear()": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::getBuffer(stappler::StringView) const": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::getBuffers() const": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::getImage(stappler::StringView) const": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::getImages() const": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::getName() const": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::getOwner() const": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::getPool() const": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::init(stappler::xenolith::core::Resource::Builder&&)": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::isCompiled() const": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::loadImageFileData(uint8_t*,uint64_t,stappler::StringView,stappler::xenolith::core::ImageFormat,ImageData::DataCallback const&)": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::setCompiled(bool)": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::setOwner(stappler::xenolith::core::Queue const*)": "XLCoreResource.h",
		"::stappler::xenolith::core::Resource::~Resource()": "XLCoreResource.h",
		"::stappler::xenolith::core::SampleCount": "XLCoreEnum.h",
		"::stappler::xenolith::core::Sampler": "XLCoreObject.h",
		"::stappler::xenolith::core::Sampler::_index": "XLCoreObject.h",
		"::stappler::xenolith::core::Sampler::_info": "XLCoreObject.h",
		"::stappler::xenolith::core::Sampler::getIndex() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Sampler::getInfo() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Sampler::setIndex(uint32_t)": "XLCoreObject.h",
		"::stappler::xenolith::core::Sampler::~Sampler()": "XLCoreObject.h",
		"::stappler::xenolith::core::SamplerAddressMode": "XLCoreEnum.h",
		"::stappler::xenolith::core::SamplerInfo": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::addressModeU": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::addressModeV": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::addressModeW": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::anisotropyEnable": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::compareEnable": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::compareOp": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::magFilter": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::maxAnisotropy": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::maxLod": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::minFilter": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::minLod": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::mipLodBias": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::mipmapMode": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::operator!=(stappler::xenolith::core::SamplerInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::operator<=>(stappler::xenolith::core::SamplerInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerInfo::operator==(stappler::xenolith::core::SamplerInfo const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::SamplerMipmapMode": "XLCoreEnum.h",
		"::stappler::xenolith::core::Semaphore": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::_inUse": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::_signaled": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::_timeline": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::_waited": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::getTimeline() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::isInUse() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::isSignaled() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::isWaited() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::reset()": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::setInUse(bool,uint64_t)": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::setSignaled(bool)": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::setWaited(bool)": "XLCoreObject.h",
		"::stappler::xenolith::core::Semaphore::~Semaphore()": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::DescriptorType": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::ProgramData": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::_name": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::_stage": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::getName() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::getStage() const": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::inspect(SpanView<uint32_t>)": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::inspectShader(SpanView<uint32_t>)": "XLCoreObject.h",
		"::stappler::xenolith::core::Shader::~Shader()": "XLCoreObject.h",
		"::stappler::xenolith::core::SolidTextureName": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::SpecializationInfo": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SpecializationInfo::SpecializationInfo()": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SpecializationInfo::SpecializationInfo(stappler::xenolith::core::ProgramData const*)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SpecializationInfo::SpecializationInfo(stappler::xenolith::core::ProgramData const*,SpanView<stappler::xenolith::core::PredefinedConstant>)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SpecializationInfo::constants": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SpecializationInfo::data": "XLCoreQueueData.h",
		"::stappler::xenolith::core::StencilInfo": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::StencilInfo::compare": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::StencilInfo::compareMask": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::StencilInfo::depthFail": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::StencilInfo::fail": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::StencilInfo::pass": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::StencilInfo::reference": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::StencilInfo::writeMask": "XLCorePipelineInfo.h",
		"::stappler::xenolith::core::StencilOp": "XLCoreEnum.h",
		"::stappler::xenolith::core::SubpassBuilder": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::SubpassBuilder(stappler::xenolith::core::SubpassData*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::_data": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::addColor(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentDependencyInfo,stappler::xenolith::core::AttachmentLayout,stappler::xenolith::core::AttachmentOps)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::addComputePipeline(stappler::StringView,stappler::xenolith::core::PipelineLayoutData const*,stappler::xenolith::core::SpecializationInfo&&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::addGraphicPipeline<typename>(stappler::StringView,stappler::xenolith::core::PipelineLayoutData const*,Args &&...)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::addInput(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentDependencyInfo,stappler::xenolith::core::AttachmentLayout,stappler::xenolith::core::AttachmentOps)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::addResolve(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentDependencyInfo,stappler::xenolith::core::AttachmentDependencyInfo)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::emplacePipeline(stappler::StringView,stappler::xenolith::core::PipelineLayoutData const*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::erasePipeline(stappler::xenolith::core::GraphicPipelineData*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::finalizePipeline(stappler::xenolith::core::GraphicPipelineData*)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::setDepthStencil(stappler::xenolith::core::AttachmentPassData const*,stappler::xenolith::core::AttachmentDependencyInfo,stappler::xenolith::core::AttachmentLayout,stappler::xenolith::core::AttachmentOps)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::setPipelineOption(stappler::xenolith::core::GraphicPipelineData&,Vector<stappler::xenolith::core::SpecializationInfo> const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::setPipelineOption(stappler::xenolith::core::GraphicPipelineData&,stappler::xenolith::core::DynamicState)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::setPipelineOption(stappler::xenolith::core::GraphicPipelineData&,stappler::xenolith::core::PipelineMaterialInfo const&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::setPipelineOptions<typename,typename>(stappler::xenolith::core::GraphicPipelineData&,T&&,Args &&...)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassBuilder::setPipelineOptions<typename>(stappler::xenolith::core::GraphicPipelineData&,T&&)": "XLCoreQueue.h",
		"::stappler::xenolith::core::SubpassData": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::SubpassData()": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::SubpassData(stappler::xenolith::core::SubpassData const&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::SubpassData(stappler::xenolith::core::SubpassData&&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::computePipelines": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::depthStencil": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::graphicPipelines": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::index": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::inputImages": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::operator=(stappler::xenolith::core::SubpassData const&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::operator=(stappler::xenolith::core::SubpassData&&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::outputImages": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::pass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::preserve": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassData::resolveImages": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::External": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::byRegion": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::dstAccess": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::dstStage": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::dstSubpass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::srcAccess": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::srcStage": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::srcSubpass": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SubpassDependency::value() const": "XLCoreQueueData.h",
		"::stappler::xenolith::core::SurfaceInfo": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::currentExtent": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::currentTransform": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::description() const": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::formats": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::isSupported(stappler::xenolith::core::SwapchainConfig const&) const": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::maxImageArrayLayers": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::maxImageCount": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::maxImageExtent": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::minImageCount": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::minImageExtent": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::presentModes": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::supportedCompositeAlpha": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::supportedTransforms": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::supportedUsageFlags": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceInfo::surfaceDensity": "XLCoreInfo.h",
		"::stappler::xenolith::core::SurfaceTransformFlags": "XLCoreEnum.h",
		"::stappler::xenolith::core::SwapchainConfig": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::alpha": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::clipped": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::colorSpace": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::description() const": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::extent": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::imageCount": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::imageFormat": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::presentMode": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::presentModeFast": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::transfer": "XLCoreInfo.h",
		"::stappler::xenolith::core::SwapchainConfig::transform": "XLCoreInfo.h",
		"::stappler::xenolith::core::TextureSet": "XLCoreObject.h",
		"::stappler::xenolith::core::TextureSet::_count": "XLCoreObject.h",
		"::stappler::xenolith::core::TextureSet::_layoutBuffers": "XLCoreObject.h",
		"::stappler::xenolith::core::TextureSet::_layoutIndexes": "XLCoreObject.h",
		"::stappler::xenolith::core::TextureSet::write(stappler::xenolith::core::MaterialLayout const&)": "XLCoreObject.h",
		"::stappler::xenolith::core::TextureSet::~TextureSet()": "XLCoreObject.h",
		"::stappler::xenolith::core::getBufferFlagsDescription(stappler::xenolith::core::BufferFlags)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getBufferUsageDescription(stappler::xenolith::core::BufferUsage)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getColorSpaceName(stappler::xenolith::core::ColorSpace)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getComponentMappingName(stappler::xenolith::core::ComponentMapping)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getCompositeAlphaFlagsDescription(stappler::xenolith::core::CompositeAlphaFlags)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getDescriptorTypeName(stappler::xenolith::core::DescriptorType)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::getFormatBlockSize(stappler::xenolith::core::ImageFormat)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getImageFlagsDescription(stappler::xenolith::core::ImageFlags)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getImageFormatName(stappler::xenolith::core::ImageFormat)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getImagePixelFormat(stappler::xenolith::core::ImageFormat)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getImageTilingName(stappler::xenolith::core::ImageTiling)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getImageTypeName(stappler::xenolith::core::ImageType)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getImageUsageDescription(stappler::xenolith::core::ImageUsage)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getImageViewTypeName(stappler::xenolith::core::ImageViewType)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getInputEventName(stappler::xenolith::core::InputEventName)": "XLCoreInput.h",
		"::stappler::xenolith::core::getInputKeyCodeKeyName(stappler::xenolith::core::InputKeyCode)": "XLCoreInput.h",
		"::stappler::xenolith::core::getInputKeyCodeName(stappler::xenolith::core::InputKeyCode)": "XLCoreInput.h",
		"::stappler::xenolith::core::getPresentModeName(stappler::xenolith::core::PresentMode)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getProgramStageDescription(stappler::xenolith::core::ProgramStage)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::getPureTransform(stappler::xenolith::core::SurfaceTransformFlags)": "XLCoreEnum.h",
		"::stappler::xenolith::core::getSampleCountDescription(stappler::xenolith::core::SampleCount)": "XLCoreInfo.h",
		"::stappler::xenolith::core::getSurfaceTransformFlagsDescription(stappler::xenolith::core::SurfaceTransformFlags)": "XLCoreInfo.h",
		"::stappler::xenolith::core::isDepthFormat(stappler::xenolith::core::ImageFormat)": "XLCoreInfo.h",
		"::stappler::xenolith::core::isStencilFormat(stappler::xenolith::core::ImageFormat)": "XLCoreInfo.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::AccessType const&,std::underlying_type<AccessType>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::AttachmentOps const&,std::underlying_type<AttachmentOps>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::AttachmentUsage const&,std::underlying_type<AttachmentUsage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::BufferFlags const&,std::underlying_type<BufferFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::BufferUsage const&,std::underlying_type<BufferUsage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ColorComponentFlags const&,std::underlying_type<ColorComponentFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::CompositeAlphaFlags const&,std::underlying_type<CompositeAlphaFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::DynamicState const&,std::underlying_type<DynamicState>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ImageFlags const&,std::underlying_type<ImageFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ImageHints const&,std::underlying_type<ImageHints>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ImageUsage const&,std::underlying_type<ImageUsage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::InputFlags const&,std::underlying_type<InputFlags>::type const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::InputModifier const&,std::underlying_type<InputModifier>::type const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::PipelineStage const&,std::underlying_type<PipelineStage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::ProgramStage const&,std::underlying_type<ProgramStage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::SampleCount const&,std::underlying_type<SampleCount>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::SubpassDependency const&,stappler::xenolith::core::SubpassDependency const&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::operator!=(stappler::xenolith::core::SurfaceTransformFlags const&,std::underlying_type<SurfaceTransformFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<AccessType>::type const&,stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<AttachmentOps>::type const&,stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<AttachmentUsage>::type const&,stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<BufferFlags>::type const&,stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<BufferUsage>::type const&,stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<ColorComponentFlags>::type const&,stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<CompositeAlphaFlags>::type const&,stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<DynamicState>::type const&,stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<ImageFlags>::type const&,stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<ImageHints>::type const&,stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<ImageUsage>::type const&,stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<InputFlags>::type const&,stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<InputModifier>::type const&,stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<PipelineStage>::type const&,stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<ProgramStage>::type const&,stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<SampleCount>::type const&,stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator!=(std::underlying_type<SurfaceTransformFlags>::type const&,stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::AccessType const&,stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::AttachmentOps const&,stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::AttachmentUsage const&,stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::BufferFlags const&,stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::BufferUsage const&,stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::ColorComponentFlags const&,stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::CompositeAlphaFlags const&,stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::DynamicState const&,stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::ImageFlags const&,stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::ImageHints const&,stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::ImageUsage const&,stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::InputFlags const&,stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::InputModifier const&,stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::PipelineStage const&,stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::ProgramStage const&,stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::SampleCount const&,stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&(stappler::xenolith::core::SurfaceTransformFlags const&,stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::AccessType&,stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::AttachmentOps&,stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::AttachmentUsage&,stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::BufferFlags&,stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::BufferUsage&,stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ColorComponentFlags&,stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::CompositeAlphaFlags&,stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::DynamicState&,stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ImageFlags&,stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ImageHints&,stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ImageUsage&,stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::InputFlags&,stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::InputModifier&,stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::PipelineStage&,stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::ProgramStage&,stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::SampleCount&,stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator&=(stappler::xenolith::core::SurfaceTransformFlags&,stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator<(stappler::xenolith::core::SubpassDependency const&,stappler::xenolith::core::SubpassDependency const&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::operator<<(std::ostream&,stappler::xenolith::core::ImageInfoData const&)": "XLCoreInfo.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::AccessType const&,std::underlying_type<AccessType>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::AttachmentOps const&,std::underlying_type<AttachmentOps>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::AttachmentUsage const&,std::underlying_type<AttachmentUsage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::BufferFlags const&,std::underlying_type<BufferFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::BufferUsage const&,std::underlying_type<BufferUsage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::ColorComponentFlags const&,std::underlying_type<ColorComponentFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::CompositeAlphaFlags const&,std::underlying_type<CompositeAlphaFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::DynamicState const&,std::underlying_type<DynamicState>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::ImageFlags const&,std::underlying_type<ImageFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::ImageHints const&,std::underlying_type<ImageHints>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::ImageUsage const&,std::underlying_type<ImageUsage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::InputFlags const&,std::underlying_type<InputFlags>::type const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::InputModifier const&,std::underlying_type<InputModifier>::type const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::PipelineStage const&,std::underlying_type<PipelineStage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::ProgramStage const&,std::underlying_type<ProgramStage>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::SampleCount const&,std::underlying_type<SampleCount>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::SubpassDependency const&,stappler::xenolith::core::SubpassDependency const&)": "XLCoreQueueData.h",
		"::stappler::xenolith::core::operator==(stappler::xenolith::core::SurfaceTransformFlags const&,std::underlying_type<SurfaceTransformFlags>::type const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<AccessType>::type const&,stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<AttachmentOps>::type const&,stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<AttachmentUsage>::type const&,stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<BufferFlags>::type const&,stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<BufferUsage>::type const&,stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<ColorComponentFlags>::type const&,stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<CompositeAlphaFlags>::type const&,stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<DynamicState>::type const&,stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<ImageFlags>::type const&,stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<ImageHints>::type const&,stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<ImageUsage>::type const&,stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<InputFlags>::type const&,stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<InputModifier>::type const&,stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<PipelineStage>::type const&,stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<ProgramStage>::type const&,stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<SampleCount>::type const&,stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator==(std::underlying_type<SurfaceTransformFlags>::type const&,stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::AccessType const&,stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::AttachmentOps const&,stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::AttachmentUsage const&,stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::BufferFlags const&,stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::BufferUsage const&,stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::ColorComponentFlags const&,stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::CompositeAlphaFlags const&,stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::DynamicState const&,stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::ImageFlags const&,stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::ImageHints const&,stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::ImageUsage const&,stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::InputFlags const&,stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::InputModifier const&,stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::PipelineStage const&,stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::ProgramStage const&,stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::SampleCount const&,stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^(stappler::xenolith::core::SurfaceTransformFlags const&,stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::AccessType&,stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::AttachmentOps&,stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::AttachmentUsage&,stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::BufferFlags&,stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::BufferUsage&,stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ColorComponentFlags&,stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::CompositeAlphaFlags&,stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::DynamicState&,stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ImageFlags&,stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ImageHints&,stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ImageUsage&,stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::InputFlags&,stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::InputModifier&,stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::PipelineStage&,stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::ProgramStage&,stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::SampleCount&,stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator^=(stappler::xenolith::core::SurfaceTransformFlags&,stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::AccessType const&,stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::AttachmentOps const&,stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::AttachmentUsage const&,stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::BufferFlags const&,stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::BufferUsage const&,stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::ColorComponentFlags const&,stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::CompositeAlphaFlags const&,stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::DynamicState const&,stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::ImageFlags const&,stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::ImageHints const&,stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::ImageUsage const&,stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::InputFlags const&,stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::InputModifier const&,stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::PipelineStage const&,stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::ProgramStage const&,stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::SampleCount const&,stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|(stappler::xenolith::core::SurfaceTransformFlags const&,stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::AccessType&,stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::AttachmentOps&,stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::AttachmentUsage&,stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::BufferFlags&,stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::BufferUsage&,stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ColorComponentFlags&,stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::CompositeAlphaFlags&,stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::DynamicState&,stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ImageFlags&,stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ImageHints&,stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ImageUsage&,stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::InputFlags&,stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::InputModifier&,stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::PipelineStage&,stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::ProgramStage&,stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::SampleCount&,stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator|=(stappler::xenolith::core::SurfaceTransformFlags&,stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::AccessType const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::AttachmentOps const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::AttachmentUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::BufferFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::BufferUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::ColorComponentFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::CompositeAlphaFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::DynamicState const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::ImageFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::ImageHints const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::ImageUsage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::InputFlags const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::InputModifier const&)": "XLCoreInput.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::PipelineStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::ProgramStage const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::SampleCount const&)": "XLCoreEnum.h",
		"::stappler::xenolith::core::operator~(stappler::xenolith::core::SurfaceTransformFlags const&)": "XLCoreEnum.h",
		"::stappler::xenolith::getVersionDescription(uint32_t)": "XLCore.h",
		"::stappler::xenolith::interpolation::Type": "XLActionEase.h",
		"::stappler::xenolith::interpolation::backEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::backEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::backEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::bezieratFunction(float,float,float,float,float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::bounceEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::bounceEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::bounceEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::circEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::circEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::circEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::cubicEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::cubicEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::cubicEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::customEase(float,float*)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::easeIn(float,float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::easeInOut(float,float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::easeOut(float,float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::elasticEaseIn(float,float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::elasticEaseInOut(float,float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::elasticEaseOut(float,float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::expoEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::expoEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::expoEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::interpolateTo(float,stappler::xenolith::interpolation::Type,float*)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::linear(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quadEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quadEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quadEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quadraticIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quadraticInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quadraticOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quartEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quartEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quartEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quintEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quintEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::quintEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::sineEaseIn(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::sineEaseInOut(float)": "XLActionEase.h",
		"::stappler::xenolith::interpolation::sineEaseOut(float)": "XLActionEase.h",
		"::stappler::xenolith::network::Controller": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::Controller(stappler::xenolith::Application*,stappler::StringView,stappler::mem_std::Bytes&&)": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::_data": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::getApplication() const": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::getName() const": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::getNetworkCapabilities() const": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::initialize(stappler::xenolith::Application*)": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::invalidate(stappler::xenolith::Application*)": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::isNetworkOnline() const": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::onNetworkCapabilities": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::run(Rc<stappler::xenolith::network::Request>&&)": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::setSignKey(stappler::mem_std::Bytes&&)": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::update(stappler::xenolith::Application*,stappler::xenolith::UpdateTime const&)": "XLNetworkController.h",
		"::stappler::xenolith::network::Controller::~Controller()": "XLNetworkController.h",
		"::stappler::xenolith::network::Handle": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::Context": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::_controller": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::_errorBuffer": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::_etag": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::_mtime": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::_request": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::_sharegroup": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::_signRequest": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::_success": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::finalize(stappler::xenolith::network::Handle::Context*,bool)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::getETag() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::getMTime() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::getReqeust() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::getSharegroup() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::init(stappler::StringView)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::init(stappler::StringView,stappler::FilePath)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::init(stappler::xenolith::network::Method,stappler::StringView)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::isSuccess() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::prepare(stappler::xenolith::network::Handle::Context*)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::setETag(stappler::StringView)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::setMTime(int64_t)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::setSharegroup(stappler::StringView)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::setSignRequest(bool)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::shouldSignRequest() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Handle::~Handle()": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Method": "XLNetworkRequest.h",
		"::stappler::xenolith::network::NetworkCapabilities": "XLNetwork.h",
		"::stappler::xenolith::network::Request": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::CompleteCallback": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::ProgressCallback": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_data": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_downloadProgress": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_handle": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_ignoreResponseData": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_nbytes": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_onComplete": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_onDownloadProgress": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_onUploadProgress": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_owner": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_running": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_setupInput": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_targetHeaderCallback": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::_uploadProgress": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::getData() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::getDownloadProgress() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::getDownloadProgressCounters() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::getHandle() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::getUploadProgress() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::getUploadProgressCounters() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::handleHeader(stappler::StringView,stappler::StringView)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::handleReceive(char*,size_t)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::init(Callback<bool (stappler::xenolith::network::Handle &)> const&,Rc<stappler::mem_std::Ref>&&)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::isIgnoreResponseData() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::isRunning() const": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::notifyOnComplete(bool)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::notifyOnDownloadProgress(int64_t,int64_t)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::notifyOnUploadProgress(int64_t,int64_t)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::perform(stappler::xenolith::Application*,stappler::xenolith::network::Request::CompleteCallback&&)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::perform(stappler::xenolith::network::Controller*,stappler::xenolith::network::Request::CompleteCallback&&)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::setDownloadProgress(stappler::xenolith::network::Request::ProgressCallback&&)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::setIgnoreResponseData(bool)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::setUploadProgress(stappler::xenolith::network::Request::ProgressCallback&&)": "XLNetworkRequest.h",
		"::stappler::xenolith::network::Request::~Request()": "XLNetworkRequest.h",
		"::stappler::xenolith::network::operator!=(stappler::xenolith::network::NetworkCapabilities const&,std::underlying_type<NetworkCapabilities>::type const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator!=(std::underlying_type<NetworkCapabilities>::type const&,stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator&(stappler::xenolith::network::NetworkCapabilities const&,stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator&=(stappler::xenolith::network::NetworkCapabilities&,stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator==(stappler::xenolith::network::NetworkCapabilities const&,std::underlying_type<NetworkCapabilities>::type const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator==(std::underlying_type<NetworkCapabilities>::type const&,stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator^(stappler::xenolith::network::NetworkCapabilities const&,stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator^=(stappler::xenolith::network::NetworkCapabilities&,stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator|(stappler::xenolith::network::NetworkCapabilities const&,stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator|=(stappler::xenolith::network::NetworkCapabilities&,stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::network::operator~(stappler::xenolith::network::NetworkCapabilities const&)": "XLNetwork.h",
		"::stappler::xenolith::operator!=(stappler::xenolith::CommandFlags const&,std::underlying_type<CommandFlags>::type const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator!=(stappler::xenolith::NodeFlags const&,std::underlying_type<NodeFlags>::type const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator!=(stappler::xenolith::TemporaryResourceFlags const&,std::underlying_type<TemporaryResourceFlags>::type const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator!=(stappler::xenolith::TextInputType const&,std::underlying_type<TextInputType>::type const&)": "XLInput.h",
		"::stappler::xenolith::operator!=(std::underlying_type<CommandFlags>::type const&,stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator!=(std::underlying_type<NodeFlags>::type const&,stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator!=(std::underlying_type<TemporaryResourceFlags>::type const&,stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator!=(std::underlying_type<TextInputType>::type const&,stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::operator&(stappler::xenolith::CommandFlags const&,stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator&(stappler::xenolith::NodeFlags const&,stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator&(stappler::xenolith::TemporaryResourceFlags const&,stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator&(stappler::xenolith::TextInputType const&,stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::operator&=(stappler::xenolith::CommandFlags&,stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator&=(stappler::xenolith::NodeFlags&,stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator&=(stappler::xenolith::TemporaryResourceFlags&,stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator&=(stappler::xenolith::TextInputType&,stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::operator<<(std::ostream&,stappler::xenolith::GestureEvent)": "XLGestureRecognizer.h",
		"::stappler::xenolith::operator==(stappler::xenolith::CommandFlags const&,std::underlying_type<CommandFlags>::type const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator==(stappler::xenolith::NodeFlags const&,std::underlying_type<NodeFlags>::type const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator==(stappler::xenolith::TemporaryResourceFlags const&,std::underlying_type<TemporaryResourceFlags>::type const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator==(stappler::xenolith::TextInputType const&,std::underlying_type<TextInputType>::type const&)": "XLInput.h",
		"::stappler::xenolith::operator==(std::underlying_type<CommandFlags>::type const&,stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator==(std::underlying_type<NodeFlags>::type const&,stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator==(std::underlying_type<TemporaryResourceFlags>::type const&,stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator==(std::underlying_type<TextInputType>::type const&,stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::operator^(stappler::xenolith::CommandFlags const&,stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator^(stappler::xenolith::NodeFlags const&,stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator^(stappler::xenolith::TemporaryResourceFlags const&,stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator^(stappler::xenolith::TextInputType const&,stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::operator^=(stappler::xenolith::CommandFlags&,stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator^=(stappler::xenolith::NodeFlags&,stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator^=(stappler::xenolith::TemporaryResourceFlags&,stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator^=(stappler::xenolith::TextInputType&,stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::operator|(stappler::xenolith::CommandFlags const&,stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator|(stappler::xenolith::NodeFlags const&,stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator|(stappler::xenolith::TemporaryResourceFlags const&,stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator|(stappler::xenolith::TextInputType const&,stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::operator|=(stappler::xenolith::CommandFlags&,stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator|=(stappler::xenolith::NodeFlags&,stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator|=(stappler::xenolith::TemporaryResourceFlags&,stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator|=(stappler::xenolith::TextInputType&,stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::operator~(stappler::xenolith::CommandFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator~(stappler::xenolith::NodeFlags const&)": "XLNodeInfo.h",
		"::stappler::xenolith::operator~(stappler::xenolith::TemporaryResourceFlags const&)": "XLResourceCache.h",
		"::stappler::xenolith::operator~(stappler::xenolith::TextInputType const&)": "XLInput.h",
		"::stappler::xenolith::parseViewCommandLineString(stappler::xenolith::ViewCommandLineData&,stappler::StringView const&,int,char const*[])": "XLViewCommandLine.h",
		"::stappler::xenolith::parseViewCommandLineSwitch(stappler::xenolith::ViewCommandLineData&,char,char const*)": "XLViewCommandLine.h",
		"::stappler::xenolith::platform::DBusLibrary": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::DBusLibrary::DBusLibrary(stappler::xenolith::platform::DBusInterface*)": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::DBusLibrary::_connection": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::DBusLibrary::addNetworkConnectionCallback(void*,Function<void (const stappler::xenolith::platform::NetworkState &)>&&)": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::DBusLibrary::get()": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::DBusLibrary::getCurrentInterfaceTheme() const": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::DBusLibrary::isAvailable() const": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::DBusLibrary::removeNetworkConnectionCallback(void*)": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::InterfaceThemeInfo": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::InterfaceThemeInfo::DefaultCursorSize": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::InterfaceThemeInfo::DefaultCursorTheme": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::InterfaceThemeInfo::cursorSize": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::InterfaceThemeInfo::cursorTheme": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::InterfaceThemeInfo::operator!=(stappler::xenolith::platform::InterfaceThemeInfo const&) const": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::InterfaceThemeInfo::operator==(stappler::xenolith::platform::InterfaceThemeInfo const&) const": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::LinuxViewInterface": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::LinuxViewInterface::commit(uint32_t,uint32_t)": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::LinuxViewInterface::getScreenFrameInterval() const": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::LinuxViewInterface::getSocketFd() const": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::LinuxViewInterface::mapWindow()": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::LinuxViewInterface::onSurfaceInfo(core::SurfaceInfo&) const": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::LinuxViewInterface::poll(bool)": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::LinuxViewInterface::scheduleFrame()": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::LinuxViewInterface::~LinuxViewInterface()": "XLPlatformLinuxView.h",
		"::stappler::xenolith::platform::NetworkState": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::capabilities": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::connectivity": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::description() const": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::metered": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::networkingEnabled": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::operator!=(stappler::xenolith::platform::NetworkState const&) const": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::operator==(stappler::xenolith::platform::NetworkState const&) const": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::primaryConnectionType": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::state": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::wimaxEnabled": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::wirelessEnabled": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::NetworkState::wwanEnabled": "XLPlatformLinuxDbus.h",
		"::stappler::xenolith::platform::ViewInterface": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::deprecateSwapchain(bool)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::end()": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::getBackButtonCounter() const": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::getExtent() const": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::handleInputEvent(core::InputEventData const&)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::handleInputEvents(Vector<core::InputEventData>&&)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::isInputEnabled() const": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::linkWithNativeWindow(void*)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::releaseView(uint64_t)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::retainView()": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::setContentPadding(stappler::xenolith::Padding const&)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::setReadyForNextFrame()": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::stopNativeWindow()": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::update(bool)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterface::~ViewInterface()": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::ViewInterfaceRef()": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::ViewInterfaceRef(stappler::xenolith::platform::ViewInterface*)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::ViewInterfaceRef(stappler::xenolith::platform::ViewInterfaceRef const&)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::ViewInterfaceRef(stappler::xenolith::platform::ViewInterfaceRef&&)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::get() const": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::operator ViewInterface*() const": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::operator bool() const": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::operator->() const": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::operator=(stappler::xenolith::platform::ViewInterface*)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::operator=(stappler::xenolith::platform::ViewInterfaceRef const&)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::operator=(stappler::xenolith::platform::ViewInterfaceRef&&)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::ref": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::refId": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::set(stappler::xenolith::platform::ViewInterface*)": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::ViewInterfaceRef::~ViewInterfaceRef()": "XLPlatformViewInterface.h",
		"::stappler::xenolith::platform::WaylandBuffer": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandBuffer::buffer": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandBuffer::height": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandBuffer::init(stappler::xenolith::platform::WaylandLibrary*,wl_shm_pool*,int32_t,int32_t,int32_t,int32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandBuffer::wayland": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandBuffer::width": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandBuffer::~WaylandBuffer()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorImage": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::cursorName": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::cursorSize": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::cursorTheme": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::cursors": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::init(stappler::xenolith::platform::WaylandDisplay*,stappler::StringView,int)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::setCursor(stappler::xenolith::platform::WaylandSeat*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::setCursor(wl_pointer*,wl_surface*,uint32_t,stappler::xenolith::platform::WaylandCursorImage,int)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::wayland": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandCursorTheme::~WaylandCursorTheme()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::_height": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::_width": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::_x": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::_y": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::active": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::altActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::altBuffer": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::alternative": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::buffer": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::commit()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::dirty": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::display": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::handleMotion()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::handlePress(uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::image": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::init(stappler::xenolith::platform::WaylandViewInterface*,Rc<stappler::xenolith::platform::WaylandBuffer>&&,Rc<stappler::xenolith::platform::WaylandBuffer>&&,stappler::xenolith::platform::WaylandDecorationName)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::init(stappler::xenolith::platform::WaylandViewInterface*,Rc<stappler::xenolith::platform::WaylandBuffer>&&,stappler::xenolith::platform::WaylandDecorationName)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::isActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::isTouchable() const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::lastTouch": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::name": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::onEnter()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::onLeave()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::root": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::serial": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::setActive(bool)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::setAltBuffers(Rc<stappler::xenolith::platform::WaylandBuffer>&&,Rc<stappler::xenolith::platform::WaylandBuffer>&&)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::setAlternative(bool)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::setGeometry(int32_t,int32_t,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::setVisible(bool)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::subsurface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::surface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::viewport": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::visible": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::waitForMove": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::wayland": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecoration::~WaylandDecoration()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDecorationName": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::compositor": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::createDecorationSurface(stappler::xenolith::platform::WaylandDecoration*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::createSurface(stappler::xenolith::platform::WaylandViewInterface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::decorations": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::destroyDecorationSurface(wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::destroySurface(wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::display": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::flush()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::getSocketFd() const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::init(Rc<stappler::xenolith::platform::WaylandLibrary> const&)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::isDecoration(wl_surface*) const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::outputs": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::ownsSurface(wl_surface*) const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::seat": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::seatDirty": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::shm": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::subcompositor": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::surfaces": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::viewporter": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::wayland": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::xdgWmBase": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::xkb": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandDisplay::~WaylandDisplay()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::ConnectionData": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::ConnectionData::display": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::WaylandLibrary()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::_current": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::_cursor": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::_handle": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::_pending": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::acquireConnection()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::close()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::getActiveConnection() const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::getInstance()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::hasWaylandCursor() const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::init()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::open(void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::openConnection(stappler::xenolith::platform::WaylandLibrary::ConnectionData&)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::openWaylandCursor(void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::ownsProxy(wl_output*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::ownsProxy(wl_proxy*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::ownsProxy(wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::viewporter": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_buffer_destroy(wl_buffer*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_buffer_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_callback_add_listener(wl_callback*,wl_callback_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_callback_destroy(wl_callback*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_callback_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_compositor_create_region(wl_compositor*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_compositor_create_surface(wl_compositor*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_compositor_destroy(wl_compositor*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_compositor_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_cursor_image_get_buffer": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_cursor_theme_destroy": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_cursor_theme_get_cursor": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_cursor_theme_load": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_connect": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_disconnect": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_dispatch": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_dispatch_pending": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_flush": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_get_fd": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_get_registry(wl_display*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_prepare_read": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_read_events": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_display_roundtrip": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_keyboard_add_listener(wl_keyboard*,wl_keyboard_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_keyboard_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_keyboard_release(wl_keyboard*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_output_add_listener(wl_output*,wl_output_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_output_destroy(wl_output*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_output_get_user_data(wl_output*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_output_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_output_set_user_data(wl_output*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_pointer_add_listener(wl_pointer*,wl_pointer_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_pointer_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_pointer_release(wl_pointer*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_pointer_set_cursor(wl_pointer*,uint32_t,wl_surface*,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_add_listener": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_destroy": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_get_tag": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_get_user_data": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_get_version": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_marshal_flags": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_set_tag": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_proxy_set_user_data": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_region_add(wl_region*,int32_t,int32_t,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_region_destroy(wl_region*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_region_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_registry_add_listener(wl_registry*,wl_registry_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_registry_bind(wl_registry*,uint32_t,wl_interface const*,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_registry_destroy(wl_registry*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_registry_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_seat_add_listener(wl_seat*,wl_seat_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_seat_destroy(wl_seat*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_seat_get_keyboard(wl_seat*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_seat_get_pointer(wl_seat*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_seat_get_touch(wl_seat*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_seat_get_user_data(wl_seat*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_seat_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_seat_set_user_data(wl_seat*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_add_listener(wl_shm*,wl_shm_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_create_pool(wl_shm*,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_destroy(wl_shm*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_get_user_data(wl_shm*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_pool_create_buffer(wl_shm_pool*,int32_t,int32_t,int32_t,int32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_pool_destroy(wl_shm_pool*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_pool_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_shm_set_user_data(wl_shm*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subcompositor_destroy(wl_subcompositor*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subcompositor_get_subsurface(wl_subcompositor*,wl_surface*,wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subcompositor_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_destroy(wl_subsurface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_place_above(wl_subsurface*,wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_place_below(wl_subsurface*,wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_set_desync(wl_subsurface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_set_position(wl_subsurface*,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_subsurface_set_sync(wl_subsurface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_add_listener(wl_surface*,wl_surface_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_attach(wl_surface*,wl_buffer*,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_commit(wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_damage(wl_surface*,int32_t,int32_t,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_damage_buffer(wl_surface*,int32_t,int32_t,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_destroy(wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_frame(wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_get_user_data(wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_set_buffer_scale(wl_surface*,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_set_opaque_region(wl_surface*,wl_region*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_surface_set_user_data(wl_surface*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_touch_add_listener(wl_touch*,wl_touch_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_touch_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wl_touch_release(wl_touch*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wp_viewport_destroy(wp_viewport*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wp_viewport_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wp_viewport_set_destination(wp_viewport*,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wp_viewport_set_source(wp_viewport*,wl_fixed_t,wl_fixed_t,wl_fixed_t,wl_fixed_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wp_viewporter_destroy(wp_viewporter*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wp_viewporter_get_viewport(wp_viewporter*,wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::wp_viewporter_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_popup_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_positioner_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_ack_configure(xdg_surface*,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_add_listener(xdg_surface*,xdg_surface_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_destroy(xdg_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_get_toplevel(xdg_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_surface_set_window_geometry(xdg_surface*,int32_t,int32_t,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_add_listener(xdg_toplevel*,xdg_toplevel_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_destroy(xdg_toplevel*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_move(xdg_toplevel*,wl_seat*,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_resize(xdg_toplevel*,wl_seat*,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_app_id(xdg_toplevel*,char const*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_fullscreen(xdg_toplevel*,wl_output*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_max_size(xdg_toplevel*,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_maximized(xdg_toplevel*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_min_size(xdg_toplevel*,int32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_minimized(xdg_toplevel*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_set_title(xdg_toplevel*,char const*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_unset_fullscreen(xdg_toplevel*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_toplevel_unset_maximized(xdg_toplevel*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_add_listener(xdg_wm_base*,xdg_wm_base_listener const*,void*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_destroy(xdg_wm_base*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_get_xdg_surface(xdg_wm_base*,wl_surface*)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_interface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::xdg_wm_base_pong(xdg_wm_base*,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandLibrary::~WaylandLibrary()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry::make": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry::model": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry::physical_height": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry::physical_width": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry::subpixel": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry::transform": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry::x": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Geometry::y": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Mode": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Mode::flags": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Mode::height": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Mode::refresh": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::Mode::width": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::desc": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::description() const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::geometry": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::id": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::init(Rc<stappler::xenolith::platform::WaylandLibrary> const&,wl_registry*,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::mode": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::name": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::output": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::scale": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::wayland": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandOutput::~WaylandOutput()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::altIndex": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::capsLockIndex": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::controlIndex": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::keyRepeatDelay": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::keyRepeatInterval": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::keyRepeatRate": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::keycodes": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::modsDepressed": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::modsLatched": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::modsLocked": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::numLockIndex": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::shiftIndex": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::KeyState::superIndex": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::capabilities": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::compose": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::composeSymbol(xkb_keysym_t,core::InputKeyComposeState&) const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::cursorImage": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::cursorSurface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::cursorTheme": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::hasPointerFrames": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::id": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::init(Rc<stappler::xenolith::platform::WaylandLibrary> const&,stappler::xenolith::platform::WaylandDisplay*,wl_registry*,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::initCursors()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::keyState": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::keyboard": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::keyboardViews": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::name": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::pointer": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::pointerDecorations": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::pointerFocus": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::pointerOutputs": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::pointerScale": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::pointerViews": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::root": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::seat": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::serial": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::state": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::touch": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::translateKey(uint32_t) const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::tryUpdateCursor()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::update()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::wayland": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandSeat::~WaylandSeat()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::Format": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottom": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomLeft": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomLeftActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomRight": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::bottomRightActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerCenter": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerCenterActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerLeft": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerLeftActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerRight": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::headerRightActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconClose": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconCloseActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconMaximize": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconMaximizeActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconMinimize": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconMinimizeActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconRestore": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::iconRestoreActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::left": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::leftActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::right": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::rightActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::top": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topLeft": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topLeftActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topRight": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::ShadowBuffers::topRightActive": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::allocateDecorations(stappler::xenolith::platform::WaylandShm::ShadowBuffers*,uint32_t,uint32_t,stappler::xenolith::Color3B const&,stappler::xenolith::Color3B const&)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::format": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::id": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::init(Rc<stappler::xenolith::platform::WaylandLibrary> const&,wl_registry*,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::shm": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::wayland": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandShm::~WaylandShm()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandView": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::DecorInset": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::DecorOffset": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::DecorWidth": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::IconSize": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::KeyData": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::KeyData::codepoint": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::KeyData::lastRepeat": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::KeyData::repeats": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::KeyData::scancode": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::KeyData::time": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::Event": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::axis": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::axisDiscrete": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::axisSource": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::axisStop": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::axis_source": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::button": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::discrete": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::enter": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::event": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::motion": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::serial": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::state": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::time": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::value": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::x": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::PointerEvent::y": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::WaylandView(stappler::xenolith::platform::WaylandLibrary*,stappler::xenolith::platform::ViewInterface*,stappler::StringView,stappler::StringView,stappler::xenolith::URect)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_activeModifiers": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_activeOutputs": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_clientSizeDecoration": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_commitedExtent": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_configureSerial": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_continuousRendering": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_currentExtent": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_decors": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_display": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_fullscreen": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_iconMaximized": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_keys": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_pointerEvents": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_pointerInit": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_scheduleNext": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_screenFrameInterval": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_shouldClose": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_state": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_surface": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_surfaceDirty": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_surfaceX": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_surfaceY": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_toplevel": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_view": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::_xdgSurface": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::commit(uint32_t,uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::createDecorations()": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::getDisplay() const": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::getScreenFrameInterval() const": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::getSocketFd() const": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::getSurface() const": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleDecorationPress(stappler::xenolith::platform::WaylandDecoration*,uint32_t,bool)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleKey(uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleKeyModifiers(uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleKeyRepeat()": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleKeyboardEnter(Vector<uint32_t>&&,uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleKeyboardLeave()": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerAxis(uint32_t,uint32_t,wl_fixed_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerAxisDiscrete(uint32_t,int32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerAxisSource(uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerAxisStop(uint32_t,uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerButton(uint32_t,uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerEnter(wl_fixed_t,wl_fixed_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerFrame()": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerLeave()": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handlePointerMotion(uint32_t,wl_fixed_t,wl_fixed_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleSurfaceConfigure(xdg_surface*,uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleSurfaceEnter(wl_surface*,wl_output*)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleSurfaceFrameDone(wl_callback*,uint32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleSurfaceLeave(wl_surface*,wl_output*)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleToplevelBounds(xdg_toplevel*,int32_t,int32_t)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleToplevelClose(xdg_toplevel*)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::handleToplevelConfigure(xdg_toplevel*,int32_t,int32_t,wl_array*)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::mapWindow()": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::onSurfaceInfo(core::SurfaceInfo&) const": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::poll(bool)": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::scheduleFrame()": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandView::~WaylandView()": "XLPlatformLinuxWaylandView.h",
		"::stappler::xenolith::platform::WaylandViewInterface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::_display": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::_surface": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::getDisplay() const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::getSurface() const": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handleDecorationPress(stappler::xenolith::platform::WaylandDecoration*,uint32_t,bool)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handleKey(uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handleKeyModifiers(uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handleKeyboardEnter(Vector<uint32_t>&&,uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handleKeyboardLeave()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerAxis(uint32_t,uint32_t,wl_fixed_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerAxisDiscrete(uint32_t,int32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerAxisSource(uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerAxisStop(uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerButton(uint32_t,uint32_t,uint32_t,uint32_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerEnter(wl_fixed_t,wl_fixed_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerFrame()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerLeave()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::handlePointerMotion(uint32_t,wl_fixed_t,wl_fixed_t)": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::WaylandViewInterface::~WaylandViewInterface()": "XLPlatformLinuxWayland.h",
		"::stappler::xenolith::platform::XcbAtomRequest": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbAtomRequest::name": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbAtomRequest::onlyIfExists": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::ConnectionData": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::ConnectionData::connection": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::ConnectionData::screen": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::ConnectionData::screen_nbr": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::ConnectionData::setup": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::RANDR_MAJOR_VERSION": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::RANDR_MINOR_VERSION": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::XcbLibrary()": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::_current": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::_handle": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::_keysyms": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::_pending": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::_randr": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::_xkb": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::acquireConnection()": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::close()": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::getActiveConnection() const": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::getInstance()": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::hasKeysyms() const": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::hasRandr() const": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::hasXkb() const": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::init()": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::open(void*)": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::openAux()": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::openConnection(stappler::xenolith::platform::XcbLibrary::ConnectionData&)": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_change_property": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_connect": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_connection_has_error": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_create_window": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_disconnect": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_flush": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_generate_id": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_get_file_descriptor": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_get_keyboard_mapping": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_get_keyboard_mapping_reply": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_get_modifier_mapping_keycodes": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_get_modifier_mapping_reply": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_get_modifier_mapping_unchecked": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_get_setup": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_intern_atom": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_intern_atom_reply": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_is_cursor_key": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_is_function_key": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_is_keypad_key": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_is_misc_function_key": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_is_modifier_key": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_is_pf_key": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_is_private_keypad_key": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_key_press_lookup_keysym": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_key_release_lookup_keysym": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_key_symbols_alloc": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_key_symbols_free": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_key_symbols_get_keycode": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_key_symbols_get_keysym": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_map_window": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_poll_for_event": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_rates_iterator": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_rates_length": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_reply": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_sizes": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_sizes_iterator": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_sizes_length": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_info_unchecked": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_current": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_current_reply": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_current_unchecked": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_modes": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_modes_length": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_reply": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_get_screen_resources_unchecked": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_query_version": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_query_version_reply": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_refresh_rates_next": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_refresh_rates_rates": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_randr_refresh_rates_rates_length": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_refresh_keyboard_mapping": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_screen_next": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_setup_roots_iterator": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_wait_for_reply": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::xcb_xkb_select_events": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbLibrary::~XcbLibrary()": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::XcbView": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::ReportError(int)": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::ScreenInfo": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::ScreenInfo::height": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::ScreenInfo::mheight": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::ScreenInfo::mwidth": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::ScreenInfo::rates": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::ScreenInfo::width": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::XcbView(stappler::xenolith::platform::XcbLibrary*,stappler::xenolith::platform::ViewInterface*,stappler::StringView,stappler::StringView,stappler::xenolith::URect)": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_atoms": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_capslock": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_connection": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_defaultScreen": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_height": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_keycodes": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_keysyms": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_modeswitch": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_numlock": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_rate": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_shiftlock": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_socket": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_view": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_width": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_window": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_wmClass": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xcb": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xcbSetup": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xkb": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xkbCompose": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xkbDeviceId": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xkbFirstError": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xkbFirstEvent": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xkbKeymap": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::_xkbState": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::composeSymbol(xkb_keysym_t,core::InputKeyComposeState&) const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::getConnection() const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::getKeyCode(xcb_keycode_t) const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::getKeysym(xcb_keycode_t,uint16_t,bool)": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::getKeysymCode(xcb_keysym_t) const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::getScreenFrameInterval() const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::getScreenInfo() const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::getSocketFd() const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::getWindow() const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::initXkb()": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::mapWindow()": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::poll(bool)": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::updateKeysymMapping()": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::updateXkbKey(xcb_keycode_t)": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::updateXkbMapping()": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::valid() const": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XcbView::~XcbView()": "XLPlatformLinuxXcbView.h",
		"::stappler::xenolith::platform::XkbLibrary": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::XkbLibrary()": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::_context": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::_handle": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::_x11": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::close()": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::getContext() const": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::getInstance()": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::hasX11() const": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::init()": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::open(void*)": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::openAux()": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_feed": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_get_one_sym": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_get_status": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_new": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_reset": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_compose_state_unref": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_compose_table_new_from_locale": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_compose_table_unref": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_context_new": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_context_ref": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_context_unref": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_key_for_each": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_key_get_name": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_key_repeats": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_mod_get_index": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_new_from_string": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_keymap_unref": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_keysym_to_utf32": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_get_keymap": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_key_get_one_sym": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_key_get_syms": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_key_get_utf32": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_key_get_utf8": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_mod_index_is_active": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_new": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_unref": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_state_update_mask": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_x11_get_core_keyboard_device_id": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_x11_keymap_new_from_device": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_x11_setup_xkb_extension": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::xkb_x11_state_new_from_device": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::XkbLibrary::~XkbLibrary()": "XLPlatformLinuxXkb.h",
		"::stappler::xenolith::platform::clock(core::ClockType)": "XLCorePlatform.h",
		"::stappler::xenolith::platform::getCommonFormat()": "XLPlatform.h",
		"::stappler::xenolith::platform::name()": "XLCorePlatform.h",
		"::stappler::xenolith::platform::s_atomRequests": "XLPlatformLinuxXcb.h",
		"::stappler::xenolith::platform::sleep(uint64_t)": "XLCorePlatform.h",
		"::stappler::xenolith::platform::version()": "XLCorePlatform.h",
		"::stappler::xenolith::profiling::ProfileData": "XLCore.h",
		"::stappler::xenolith::profiling::ProfileData::limit": "XLCore.h",
		"::stappler::xenolith::profiling::ProfileData::tag": "XLCore.h",
		"::stappler::xenolith::profiling::ProfileData::timestamp": "XLCore.h",
		"::stappler::xenolith::profiling::ProfileData::variant": "XLCore.h",
		"::stappler::xenolith::profiling::begin(stappler::StringView,stappler::StringView,uint64_t)": "XLCore.h",
		"::stappler::xenolith::profiling::end(stappler::xenolith::profiling::ProfileData&)": "XLCore.h",
		"::stappler::xenolith::profiling::store(stappler::xenolith::profiling::ProfileData&)": "XLCore.h",
		"::stappler::xenolith::storage::Asset": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::Asset(stappler::xenolith::storage::AssetLibrary*,db::Value const&)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::Update": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::VersionData": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_cache": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_data": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_dirty": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_download": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_downloadId": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_id": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_library": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_mtime": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_path": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_touch": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_ttl": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_url": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::_versions": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::addVersion(stappler::xenolith::storage::AssetDownloadData*)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::clear()": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::download()": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::dropVersion(stappler::xenolith::storage::Asset::VersionData const&)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::encode() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::getCachePath() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::getData() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::getId() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::getProgress() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::getReadableVersion() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::getTouch() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::getTtl() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::getUrl() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::isDownloadInProgress() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::isStorageDirty() const": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::lockVersion(int64_t)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::parseVersions(db::Value const&)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::releaseLock(stappler::xenolith::storage::Asset::VersionData const&)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::replaceVersion(stappler::xenolith::storage::Asset::VersionData&)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::resumeDownload(stappler::xenolith::storage::Asset::VersionData&)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::setData(stappler::mem_std::Value const&)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::setData(stappler::mem_std::Value&&)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::setDownloadComplete(stappler::xenolith::storage::Asset::VersionData&,bool)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::setDownloadProgress(int64_t,float)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::setFileValidated(bool)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::setStorageDirty(bool)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::startNewDownload(stappler::Time,stappler::StringView)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::touch(stappler::Time)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::update(stappler::xenolith::storage::Asset::Update)": "XLAsset.h",
		"::stappler::xenolith::storage::Asset::~Asset()": "XLAsset.h",
		"::stappler::xenolith::storage::AssetComponentContainer": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetComponentContainer::_component": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetComponentContainer::_library": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetComponentContainer::getComponent() const": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetComponentContainer::getLibrary() const": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetComponentContainer::handleStorageDisposed(db::Transaction const&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetComponentContainer::handleStorageInit(storage::ComponentLoader&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetComponentContainer::init(stappler::StringView,stappler::xenolith::storage::AssetLibrary*)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetComponentContainer::~AssetComponentContainer()": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetCallback": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest::AssetMultiRequest(Vector<stappler::xenolith::storage::AssetLibrary::AssetRequest>&&,stappler::xenolith::storage::AssetLibrary::AssetVecCallback&&,Rc<stappler::mem_std::Ref>&&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest::callback": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest::ref": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetMultiRequest::vec": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetRequest": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetRequest::AssetRequest(stappler::StringView,stappler::xenolith::storage::AssetLibrary::AssetCallback&&,stappler::TimeInterval,Rc<stappler::mem_std::Ref>&&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetRequest::callback": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetRequest::ref": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetRequest::ttl": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetRequest::url": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::AssetVecCallback": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::TaskCallback": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_application": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_assetsById": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_assetsByUrl": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_callbacks": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_container": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_controller": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_liveAssets": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_loaded": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_server": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_tmpMultiRequest": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::_tmpRequests": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::acquireAsset(stappler::StringView,stappler::xenolith::storage::AssetLibrary::AssetCallback&&,stappler::TimeInterval,Rc<stappler::mem_std::Ref>&&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::acquireAssets(SpanView<stappler::xenolith::storage::AssetLibrary::AssetRequest>,stappler::xenolith::storage::AssetLibrary::AssetVecCallback&&,Rc<stappler::mem_std::Ref>&&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::addVersion(db::Transaction const&,int64_t,Asset::VersionData const&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::cleanup()": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::downloadAsset(stappler::xenolith::storage::Asset*)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::eraseVersion(int64_t)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::getApplication() const": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::getAssetPath(int64_t)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::getAssetUrl(stappler::StringView)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::getController() const": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::getLiveAsset(int64_t) const": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::getLiveAsset(stappler::StringView) const": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::handleAssetLoaded(Rc<stappler::xenolith::storage::Asset>&&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::handleLibraryLoaded(Vector<Rc<stappler::xenolith::storage::Asset>>&&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::init(stappler::xenolith::Application*,network::Controller*,stappler::mem_std::Value const&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::initialize(stappler::xenolith::Application*)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::invalidate(stappler::xenolith::Application*)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::onLoaded": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::perform(stappler::xenolith::storage::AssetLibrary::TaskCallback&&,stappler::mem_std::Ref*) const": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::removeAsset(stappler::xenolith::storage::Asset*)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::setAssetDownload(int64_t,bool)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::setVersionComplete(int64_t,bool)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::update(stappler::xenolith::Application*,stappler::xenolith::UpdateTime const&)": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLibrary::~AssetLibrary()": "XLAssetLibrary.h",
		"::stappler::xenolith::storage::AssetLock": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::AssetLock(Rc<stappler::xenolith::storage::Asset>&&,stappler::xenolith::storage::AssetLock::VersionData const&,Function<void (const stappler::xenolith::storage::AssetLock::VersionData &)>&&)": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::VersionData": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::_asset": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::_lockedVersion": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::_releaseFunction": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getAsset() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getCTime() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getCachePath() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getContentType() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getEtag() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getId() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getMTime() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getPath() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::getSize() const": "XLAsset.h",
		"::stappler::xenolith::storage::AssetLock::~AssetLock()": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::complete": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::contentType": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::ctime": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::download": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::etag": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::id": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::locked": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::mtime": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::path": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::progress": "XLAsset.h",
		"::stappler::xenolith::storage::AssetVersionData::size": "XLAsset.h",
		"::stappler::xenolith::storage::Component": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Component::Component(stappler::xenolith::storage::ComponentLoader&,stappler::StringView)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Component::_name": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Component::getName() const": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Component::handleChildInit(stappler::xenolith::storage::Server const&,db::Transaction const&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Component::handleChildRelease(stappler::xenolith::storage::Server const&,db::Transaction const&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Component::handleHeartbeat(stappler::xenolith::storage::Server const&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Component::handleStorageTransaction(db::Transaction&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Component::~Component()": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::TaskCallback": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::_loaded": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::_name": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::_pendingTasks": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::_server": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::getName() const": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::getServer() const": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::handleComponentsLoaded(stappler::xenolith::storage::Server const&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::handleComponentsUnloaded(stappler::xenolith::storage::Server const&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::handleStorageDisposed(db::Transaction const&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::handleStorageInit(stappler::xenolith::storage::ComponentLoader&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::init(stappler::StringView)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::isLoaded() const": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::perform(stappler::xenolith::storage::ComponentContainer::TaskCallback&&,stappler::mem_std::Ref*) const": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::setServer(stappler::xenolith::storage::Server const*)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentContainer::~ComponentContainer()": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentLoader": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentLoader::define<typename>(db::Scheme&,Args &&...)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentLoader::exportComponent(stappler::xenolith::storage::Component*)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentLoader::exportScheme(db::Scheme const&)": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentLoader::getPool() const": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentLoader::getServer() const": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentLoader::getTransaction() const": "XLStorageComponent.h",
		"::stappler::xenolith::storage::ComponentLoader::~ComponentLoader()": "XLStorageComponent.h",
		"::stappler::xenolith::storage::Server": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::DataCallback": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::InitList<typename>": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::QueryCallback": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::Scheme": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::_data": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::addComponentContainer(Rc<stappler::xenolith::storage::ComponentContainer> const&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::clear(stappler::CoderSource,stappler::xenolith::storage::Server::DataCallback&&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::count(stappler::xenolith::storage::Server::Scheme const&,Function<void (size_t)>&&) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::count(stappler::xenolith::storage::Server::Scheme const&,Function<void (size_t)>&&,stappler::xenolith::storage::Server::QueryCallback&&) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::create(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::Conflict::Flags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::create(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::create(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::UpdateFlags,db::Conflict::Flags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::CoderSource,stappler::xenolith::storage::Server::DataCallback&&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,InitList<const char *>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,InitList<const db::Field *>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,InitList<stappler::StringView>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,Vector<const db::Field *>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::StringView,stappler::StringView,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,InitList<const char *>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,InitList<const db::Field *>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,InitList<stappler::StringView>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::mem_std::Value const&,stappler::StringView,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,InitList<const char *>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,InitList<const db::Field *>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,InitList<stappler::StringView>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,Vector<const db::Field *>&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::get(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,uint64_t,stappler::StringView,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::getApplication() const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::getComponentContainer(stappler::StringView) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::init(stappler::xenolith::Application*,stappler::mem_std::Value const&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::initialize(stappler::xenolith::Application*)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::invalidate(stappler::xenolith::Application*)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::perform(Function<bool (const stappler::xenolith::storage::Server &, const db::Transaction &)>&&,stappler::mem_std::Ref*) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::remove(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value const&,Function<void (bool)>&&) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::remove(stappler::xenolith::storage::Server::Scheme const&,uint64_t,Function<void (bool)>&&) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::removeComponentContainer(Rc<stappler::xenolith::storage::ComponentContainer> const&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::select(stappler::xenolith::storage::Server::Scheme const&,stappler::xenolith::storage::Server::DataCallback&&,stappler::xenolith::storage::Server::QueryCallback&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::set(stappler::CoderSource,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::touch(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value const&) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::touch(stappler::xenolith::storage::Server::Scheme const&,uint64_t) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::update(stappler::xenolith::Application*,stappler::xenolith::UpdateTime const&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::update(stappler::xenolith::storage::Server::Scheme const&,stappler::mem_std::Value const&,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::update(stappler::xenolith::storage::Server::Scheme const&,uint64_t,stappler::mem_std::Value&&,stappler::xenolith::storage::Server::DataCallback&&,db::UpdateFlags) const": "XLStorageServer.h",
		"::stappler::xenolith::storage::Server::~Server()": "XLStorageServer.h",
		"::stappler::xenolith::storage::StorageRoot": "XLStorageServer.h",
		"::stappler::xenolith::storage::StorageRoot::getDocuemntRoot() const": "XLStorageServer.h",
		"::stappler::xenolith::storage::StorageRoot::getFileScheme() const": "XLStorageServer.h",
		"::stappler::xenolith::storage::StorageRoot::getUserScheme() const": "XLStorageServer.h",
		"::stappler::xenolith::storage::StorageRoot::onBroadcast": "XLStorageServer.h",
		"::stappler::xenolith::storage::StorageRoot::onLocalBroadcast(db::Value const&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::StorageRoot::onStorageTransaction(db::Transaction&)": "XLStorageServer.h",
		"::stappler::xenolith::storage::StorageRoot::scheduleAyncDbTask(db::Callback<db::Function<void (const db::Transaction &)> (db::pool_t *)> const&)": "XLStorageServer.h",
		"::stappler::xenolith::vk::AllocationType": "XLVkAllocator.h",
		"::stappler::xenolith::vk::AllocationUsage": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MaxIndex": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemBlock": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemBlock::mem": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemBlock::offset": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemBlock::operator bool() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemBlock::ptr": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemBlock::size": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemBlock::type": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeap": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeap::budget": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeap::currentUsage": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeap::heap": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeap::idx": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeap::type": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeap::types": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeap::usage": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemHeapType": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode::getFreeSpace() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode::index": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode::lastAllocation": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode::mem": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode::offset": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode::operator bool() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode::ptr": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemNode::size": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::buf": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::current": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::idx": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::isDeviceLocal() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::isHostCached() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::isHostCoherent() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::isHostVisible() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::isLazilyAllocated() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::isProtected() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::last": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::max": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::min": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::MemType::type": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::PageSize": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::PreservePages": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_bufferImageGranularity": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_device": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_hasBudget": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_hasDedicated": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_hasMemReq2": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_memBudget": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_memHeaps": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_memProperties": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_memTypes": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_mutex": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_nonCoherentAtomSize": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::_physicalDevice": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::alloc(stappler::xenolith::vk::Allocator::MemType*,uint64_t,bool)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::allocateDedicated(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::Buffer*)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::allocateDedicated(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::Image*)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::emplaceObjects(stappler::xenolith::vk::AllocationUsage,SpanView<Rc<stappler::xenolith::vk::Image>>,SpanView<Rc<stappler::xenolith::vk::Buffer>>)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::findMemoryType(uint32_t,stappler::xenolith::vk::AllocationUsage) const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::free(stappler::xenolith::vk::Allocator::MemType*,SpanView<stappler::xenolith::vk::Allocator::MemNode>)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::getBufferImageGranularity() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::getBufferMemoryRequirements(VkBuffer)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::getDevice() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::getImageMemoryRequirements(VkImage)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::getInitialTypeMask() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::getMemHeaps() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::getNonCoherentAtomSize() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::getType(uint32_t) const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::hasBudgetFeature() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::hasDedicatedFeature() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::hasMemReq2Feature() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::init(stappler::xenolith::vk::Device&,VkPhysicalDevice,DeviceInfo::Features const&,DeviceInfo::Properties const&)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::invalidate(stappler::xenolith::vk::Device&)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::lock()": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::preallocate(stappler::xenolith::vk::BufferInfo const&,stappler::BytesView)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::preallocate(stappler::xenolith::vk::ImageInfoData const&,bool,uint64_t)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::spawnPersistent(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::BufferInfo const&,stappler::BytesView)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::spawnPersistent(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::ImageInfoData const&,bool,uint64_t)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::unlock()": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::update()": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Allocator::~Allocator()": "XLVkAllocator.h",
		"::stappler::xenolith::vk::Buffer": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::_barrier": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::_buffer": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::_memory": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::_pool": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::bindMemory(Rc<stappler::xenolith::vk::DeviceMemory>&&,VkDeviceSize)": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::dropPendingBarrier()": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::getBuffer() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::getMemory() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::getPendingBarrier() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::getPool() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::init(stappler::xenolith::vk::Device&,VkBuffer,stappler::xenolith::vk::BufferInfo const&,Rc<stappler::xenolith::vk::DeviceMemory>&&)": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::setPendingBarrier(stappler::xenolith::vk::BufferMemoryBarrier const&)": "XLVkObject.h",
		"::stappler::xenolith::vk::Buffer::~Buffer()": "XLVkObject.h",
		"::stappler::xenolith::vk::BufferAttachment": "XLVkAttachment.h",
		"::stappler::xenolith::vk::BufferAttachment::~BufferAttachment()": "XLVkAttachment.h",
		"::stappler::xenolith::vk::BufferAttachmentHandle": "XLVkAttachment.h",
		"::stappler::xenolith::vk::BufferAttachmentHandle::writeDescriptor(core::QueuePassHandle const&,stappler::xenolith::vk::DescriptorBufferInfo&)": "XLVkAttachment.h",
		"::stappler::xenolith::vk::BufferAttachmentHandle::~BufferAttachmentHandle()": "XLVkAttachment.h",
		"::stappler::xenolith::vk::BufferInfo": "XLVk.h",
		"::stappler::xenolith::vk::BufferLevel": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier(VkBufferMemoryBarrier const&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier(stappler::xenolith::vk::Buffer*,VkAccessFlags,VkAccessFlags)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier(stappler::xenolith::vk::Buffer*,VkAccessFlags,VkAccessFlags,stappler::xenolith::vk::QueueFamilyTransfer)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::BufferMemoryBarrier(stappler::xenolith::vk::Buffer*,VkAccessFlags,VkAccessFlags,stappler::xenolith::vk::QueueFamilyTransfer,VkDeviceSize,VkDeviceSize)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::buffer": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::dstAccessMask": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::familyTransfer": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::offset": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::size": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::BufferMemoryBarrier::srcAccessMask": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_boundLayout": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_boundLayoutIndex": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_buffer": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_buffers": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_currentSubpass": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_descriptorSets": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_framebuffers": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_images": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_memPool": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_pool": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::_table": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::addBuffer(stappler::xenolith::vk::Buffer*)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::addImage(stappler::xenolith::vk::Image*)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdBeginRenderPass(stappler::xenolith::vk::RenderPass*,stappler::xenolith::vk::Framebuffer*,VkSubpassContents,bool)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdBindComputeDescriptorSets(VkPipelineLayout,SpanView<VkDescriptorSet>,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdBindDescriptorSets(stappler::xenolith::vk::RenderPass*,uint32_t,SpanView<VkDescriptorSet>,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdBindDescriptorSets(stappler::xenolith::vk::RenderPass*,uint32_t,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdBindGraphicDescriptorSets(VkPipelineLayout,SpanView<VkDescriptorSet>,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdBindIndexBuffer(stappler::xenolith::vk::Buffer*,VkDeviceSize,VkIndexType)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdBindPipeline(stappler::xenolith::vk::ComputePipeline*)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdBindPipeline(stappler::xenolith::vk::GraphicPipeline*)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdClearColorImage(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::Color4F const&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyBuffer(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Buffer*)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyBuffer(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Buffer*,SpanView<VkBufferCopy>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyBuffer(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Buffer*,VkDeviceSize,VkDeviceSize,VkDeviceSize)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyBufferToImage(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Image*,VkImageLayout,SpanView<VkBufferImageCopy>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyBufferToImage(stappler::xenolith::vk::Buffer*,stappler::xenolith::vk::Image*,VkImageLayout,VkDeviceSize)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyImage(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Image*,VkImageLayout,SpanView<VkImageCopy>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyImage(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Image*,VkImageLayout,VkFilter)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyImage(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Image*,VkImageLayout,VkImageCopy const&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyImageToBuffer(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Buffer*,SpanView<VkBufferImageCopy>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdCopyImageToBuffer(stappler::xenolith::vk::Image*,VkImageLayout,stappler::xenolith::vk::Buffer*,VkDeviceSize)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdDispatch(uint32_t,uint32_t,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdDraw(uint32_t,uint32_t,uint32_t,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdDrawIndexed(uint32_t,uint32_t,uint32_t,int32_t,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdEndRenderPass()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdFillBuffer(stappler::xenolith::vk::Buffer*,VkDeviceSize,VkDeviceSize,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdFillBuffer(stappler::xenolith::vk::Buffer*,uint32_t)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdNextSubpass()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdPipelineBarrier(VkPipelineStageFlags,VkPipelineStageFlags,VkDependencyFlags,SpanView<stappler::xenolith::vk::BufferMemoryBarrier>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdPipelineBarrier(VkPipelineStageFlags,VkPipelineStageFlags,VkDependencyFlags,SpanView<stappler::xenolith::vk::BufferMemoryBarrier>,SpanView<stappler::xenolith::vk::ImageMemoryBarrier>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdPipelineBarrier(VkPipelineStageFlags,VkPipelineStageFlags,VkDependencyFlags,SpanView<stappler::xenolith::vk::ImageMemoryBarrier>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdPushConstants(VkPipelineLayout,VkShaderStageFlags,uint32_t,stappler::BytesView)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdPushConstants(VkShaderStageFlags,uint32_t,stappler::BytesView)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdSetScissor(uint32_t,SpanView<VkRect2D>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::cmdSetViewport(uint32_t,SpanView<VkViewport>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::getBoundLayout() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::getBoundLayoutIndex() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::getBuffer() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::getCurrentSubpass() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::init(stappler::xenolith::vk::CommandPool const*,stappler::xenolith::vk::DeviceTable const*,VkCommandBuffer)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::invalidate()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::writeImageTransfer(uint32_t,uint32_t,Rc<stappler::xenolith::vk::Buffer> const&,Rc<stappler::xenolith::vk::Image> const&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandBuffer::~CommandBuffer()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::DefaultFlags": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::Level": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::_autorelease": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::_bestComplexity": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::_buffers": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::_class": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::_commandPool": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::_currentComplexity": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::_familyIdx": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::autorelease(Rc<stappler::mem_std::Ref>&&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::freeDefaultBuffers(stappler::xenolith::vk::Device&,Vector<VkCommandBuffer>&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::getClass() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::getCommandPool() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::getFamilyIdx() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::init(stappler::xenolith::vk::Device&,uint32_t,stappler::xenolith::vk::QueueOperations,bool)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::invalidate(stappler::xenolith::vk::Device&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::recordBuffer(stappler::xenolith::vk::Device&,Callback<bool (stappler::xenolith::vk::CommandBuffer &)> const&,VkCommandBufferUsageFlagBits,stappler::xenolith::vk::CommandPool::Level)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::reset(stappler::xenolith::vk::Device&,bool)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::CommandPool::~CommandPool()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ComputePipeline": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::_localX": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::_localY": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::_localZ": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::_pipeline": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::getLocalX() const": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::getLocalY() const": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::getLocalZ() const": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::getPipeline() const": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::init(stappler::xenolith::vk::Device&,stappler::xenolith::core::ComputePipeline::PipelineData const&,stappler::xenolith::core::ComputePipeline::SubpassData const&,stappler::xenolith::core::ComputePipeline::RenderQueue const&)": "XLVkPipeline.h",
		"::stappler::xenolith::vk::ComputePipeline::~ComputePipeline()": "XLVkPipeline.h",
		"::stappler::xenolith::vk::DescriptorBinding": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorBinding::DescriptorBinding(VkDescriptorType,uint32_t)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorBinding::data": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorBinding::type": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorBinding::write(uint32_t,stappler::xenolith::vk::DescriptorBufferInfo&&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorBinding::write(uint32_t,stappler::xenolith::vk::DescriptorBufferViewInfo&&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorBinding::write(uint32_t,stappler::xenolith::vk::DescriptorImageInfo&&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorBinding::~DescriptorBinding()": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorBufferInfo": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorBufferInfo::DescriptorBufferInfo(stappler::xenolith::vk::PipelineDescriptor const*,uint32_t,bool)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorBufferInfo::buffer": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorBufferInfo::offset": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorBufferInfo::range": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorBufferViewInfo": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorBufferViewInfo::DescriptorBufferViewInfo(stappler::xenolith::vk::PipelineDescriptor const*,uint32_t,bool)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorBufferViewInfo::buffer": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorBufferViewInfo::target": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorData": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorData::data": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorData::object": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorImageInfo": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorImageInfo::DescriptorImageInfo(stappler::xenolith::vk::PipelineDescriptor const*,uint32_t,bool)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorImageInfo::imageView": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorImageInfo::layout": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorImageInfo::sampler": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorInfo": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorInfo::DescriptorInfo(stappler::xenolith::vk::PipelineDescriptor const*,uint32_t,bool)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorInfo::descriptor": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorInfo::external": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorInfo::index": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DescriptorSet": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorSet::bindings": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::DescriptorSet::set": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::Device": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::Device()": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::Features": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::FrameHandle": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::Properties": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_allocator": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_apiMutex": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_compiledSamplers": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_device": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_enabledFeatures": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_families": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_finished": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_formats": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_immutableSamplers": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_info": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_resourceMutex": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_resourceQueueCond": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_resourceQueueWaiters": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_samplers": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_samplersCompiled": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_table": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_textureSetLayout": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::_vkInstance": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::acquireCommandPool(stappler::xenolith::vk::QueueOperations,uint32_t)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::acquireCommandPool(uint32_t)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::acquireQueue(stappler::xenolith::vk::QueueOperations,stappler::xenolith::vk::Device::FrameHandle&,Function<void (stappler::xenolith::vk::Device::FrameHandle &, const Rc<stappler::xenolith::vk::DeviceQueue> &)>&&,Function<void (stappler::xenolith::vk::Device::FrameHandle &)>&&,Rc<stappler::mem_std::Ref>&&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::acquireQueue(stappler::xenolith::vk::QueueOperations,stappler::xenolith::vk::Loop&,Function<void (stappler::xenolith::vk::Loop &, const Rc<stappler::xenolith::vk::DeviceQueue> &)>&&,Function<void (stappler::xenolith::vk::Loop &)>&&,Rc<stappler::mem_std::Ref>&&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::begin(stappler::xenolith::vk::Loop&,thread::TaskQueue&,Function<void (bool)>&&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::compileImage(stappler::xenolith::vk::Loop const&,Rc<core::DynamicImage> const&,Function<void (bool)>&&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::compileSamplers(thread::TaskQueue&,bool)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::emplaceConstant(core::PredefinedConstant,stappler::mem_std::Bytes&) const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::end()": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getAllocator() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getDevice() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getEmptyImageObject() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getInfo() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getInstance() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getPhysicalDevice() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getQueueFamilies() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getQueueFamily(core::PassType) const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getQueueFamily(stappler::xenolith::vk::QueueOperations) const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getQueueFamily(uint32_t) const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getSolidImageObject() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getTable() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::getTextureSetLayout() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::hasDynamicIndexedBuffers() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::hasNonSolidFillMode() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::init(vk::Instance const*,stappler::xenolith::vk::DeviceInfo&&,stappler::xenolith::vk::Device::Features const&,Vector<stappler::StringView> const&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::makeApiCall<typename>(Callback const&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::makeFramebuffer(core::QueuePassData const*,SpanView<Rc<core::ImageView>>)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::makeImage(stappler::xenolith::vk::ImageInfoData const&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::makeImageView(Rc<core::ImageObject> const&,stappler::xenolith::vk::ImageViewInfo const&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::makeSemaphore()": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::releaseCommandPool(core::Loop&,Rc<stappler::xenolith::vk::CommandPool>&&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::releaseCommandPoolUnsafe(Rc<stappler::xenolith::vk::CommandPool>&&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::releaseQueue(Rc<stappler::xenolith::vk::DeviceQueue>&&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::setup(stappler::xenolith::vk::Instance const*,VkPhysicalDevice,stappler::xenolith::vk::Device::Properties const&,Vector<stappler::xenolith::vk::DeviceQueueFamily> const&,stappler::xenolith::vk::Device::Features const&,Vector<stappler::StringView> const&)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::supportsUpdateAfterBind(stappler::xenolith::core::Device::DescriptorType) const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::tryAcquireQueueSync(stappler::xenolith::vk::QueueOperations,bool)": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::waitIdle() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::Device::~Device()": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceBuffer": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::MappedRegion": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::MappedRegion::offset": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::MappedRegion::ptr": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::MappedRegion::size": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::_memory": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::_needInvalidate": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::_targetOffset": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::_usage": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::getBuffer() const": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::getData(VkDeviceSize,VkDeviceSize)": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::getReservedSize() const": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::getSize() const": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::getUsage() const": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::init(stappler::xenolith::vk::DeviceMemoryPool*,VkBuffer,Allocator::MemBlock&&,stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::BufferInfo const&)": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::invalidate(stappler::xenolith::vk::Device&)": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::map(VkDeviceSize,VkDeviceSize,bool)": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::reserveBlock(uint64_t,uint64_t)": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::setData(stappler::BytesView,VkDeviceSize)": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::unmap(stappler::xenolith::vk::DeviceBuffer::MappedRegion const&,bool)": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceBuffer::~DeviceBuffer()": "XLVkBuffer.h",
		"::stappler::xenolith::vk::DeviceFrameHandle": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceFrameHandle::_allocator": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceFrameHandle::_memPools": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceFrameHandle::_mutex": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceFrameHandle::getAllocator() const": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceFrameHandle::getMemPool(void*)": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceFrameHandle::init(stappler::xenolith::vk::Loop&,stappler::xenolith::vk::Device&,Rc<stappler::xenolith::core::FrameHandle::FrameRequest>&&,uint64_t)": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceFrameHandle::~DeviceFrameHandle()": "XLVkDevice.h",
		"::stappler::xenolith::vk::DeviceInfo": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::DeviceInfo()": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::DeviceInfo(VkPhysicalDevice,stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo,stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo,stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo,stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo,Vector<stappler::StringView>&&,Vector<stappler::StringView>&&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::DeviceInfo(stappler::xenolith::vk::DeviceInfo const&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::DeviceInfo(stappler::xenolith::vk::DeviceInfo&&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::Features()": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::Features(stappler::xenolith::vk::DeviceInfo::Features const&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::canEnable(stappler::xenolith::vk::DeviceInfo::Features const&,uint32_t) const": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::clear()": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::device10": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::device11": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::device12": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::device13": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::device16bitStorage": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::device8bitStorage": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::deviceBufferDeviceAddress": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::deviceDescriptorIndexing": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::deviceShaderFloat16Int8": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::disableFromFeatures(stappler::xenolith::vk::DeviceInfo::Features const&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::enableFromFeatures(stappler::xenolith::vk::DeviceInfo::Features const&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::flags": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::getOptional()": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::getRequired()": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::operator=(stappler::xenolith::vk::DeviceInfo::Features const&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::updateFrom12()": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::updateFrom13()": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Features::updateTo12(bool)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Properties": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Properties::Properties()": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Properties::Properties(stappler::xenolith::vk::DeviceInfo::Properties const&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Properties::device10": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Properties::deviceDescriptorIndexing": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Properties::deviceMaintenance3": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::Properties::operator=(stappler::xenolith::vk::DeviceInfo::Properties const&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::count": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::index": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::minImageTransferGranularity": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::ops": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::presentSurfaceMask": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::QueueFamilyInfo::used": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::availableExtensions": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::computeFamily": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::description() const": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::device": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::features": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::graphicsFamily": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::operator=(stappler::xenolith::vk::DeviceInfo const&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::operator=(stappler::xenolith::vk::DeviceInfo&&)": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::optionalExtensions": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::presentFamily": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::promotedExtensions": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::properties": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::requiredExtensionsExists": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::requiredFeaturesExists": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::supportsPresentation() const": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceInfo::transferFamily": "XLVkInfo.h",
		"::stappler::xenolith::vk::DeviceMemory": "XLVkObject.h",
		"::stappler::xenolith::vk::DeviceMemory::_memory": "XLVkObject.h",
		"::stappler::xenolith::vk::DeviceMemory::getMemory() const": "XLVkObject.h",
		"::stappler::xenolith::vk::DeviceMemory::init(stappler::xenolith::vk::Device&,VkDeviceMemory)": "XLVkObject.h",
		"::stappler::xenolith::vk::DeviceMemory::~DeviceMemory()": "XLVkObject.h",
		"::stappler::xenolith::vk::DeviceMemoryPool": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::MemData": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::MemData::freed": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::MemData::mem": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::MemData::type": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::_allocator": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::_buffers": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::_heaps": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::_mutex": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::_persistentMapping": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::alloc(stappler::xenolith::vk::DeviceMemoryPool::MemData*,VkDeviceSize,VkDeviceSize,stappler::xenolith::vk::AllocationType,stappler::xenolith::vk::AllocationUsage)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::clear(stappler::xenolith::vk::DeviceMemoryPool::MemData*)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::free(Allocator::MemBlock&&)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::getAllocator() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::getDevice() const": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::getMutex()": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::init(Rc<stappler::xenolith::vk::Allocator> const&,bool)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::spawn(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::BufferInfo const&)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::spawnPersistent(stappler::xenolith::vk::AllocationUsage,stappler::xenolith::vk::BufferInfo const&)": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceMemoryPool::~DeviceMemoryPool()": "XLVkAllocator.h",
		"::stappler::xenolith::vk::DeviceQueue": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::FrameHandle": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::FrameSync": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::_device": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::_frameIdx": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::_index": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::_nfences": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::_ops": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::_queue": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::_result": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::getActiveFencesCount()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::getFrameIndex() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::getIndex() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::getOps() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::getQueue() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::getResult() const": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::init(stappler::xenolith::vk::Device&,VkQueue,uint32_t,stappler::xenolith::vk::QueueOperations)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::releaseFence(stappler::xenolith::vk::Fence const&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::reset()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::retainFence(stappler::xenolith::vk::Fence const&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::setOwner(stappler::xenolith::vk::DeviceQueue::FrameHandle&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::submit(stappler::xenolith::vk::DeviceQueue::FrameSync const&,stappler::xenolith::vk::Fence&,stappler::xenolith::vk::CommandPool&,SpanView<const stappler::xenolith::vk::CommandBuffer *>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::submit(stappler::xenolith::vk::Fence&,SpanView<const stappler::xenolith::vk::CommandBuffer *>)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::submit(stappler::xenolith::vk::Fence&,stappler::xenolith::vk::CommandBuffer const*)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::waitIdle()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueue::~DeviceQueue()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::FrameHandle": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::Waiter(Function<void (stappler::xenolith::vk::DeviceQueueFamily::FrameHandle &, const Rc<stappler::xenolith::vk::DeviceQueue> &)>&&,Function<void (stappler::xenolith::vk::DeviceQueueFamily::FrameHandle &)>&&,stappler::xenolith::vk::DeviceQueueFamily::FrameHandle*,Rc<stappler::mem_std::Ref>&&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::Waiter(Function<void (stappler::xenolith::vk::Loop &, const Rc<stappler::xenolith::vk::DeviceQueue> &)>&&,Function<void (stappler::xenolith::vk::Loop &)>&&,stappler::xenolith::vk::Loop*,Rc<stappler::mem_std::Ref>&&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::acquireForFrame": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::acquireForLoop": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::handle": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::loop": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::ref": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::releaseForFrame": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::Waiter::releaseForLoop": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::count": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::index": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::ops": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::pools": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::preferred": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::queues": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::transferGranularity": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::DeviceQueueFamily::waiters": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ExtensionFlags": "XLVk.h",
		"::stappler::xenolith::vk::Fence": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::ReleaseHandle": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::ReleaseHandle::callback": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::ReleaseHandle::ref": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::ReleaseHandle::tag": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::State": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_armedTime": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_autorelease": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_fence": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_frame": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_mutex": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_queue": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_release": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_releaseFn": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_scheduleFn": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_state": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::_tag": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::addRelease(Function<void (bool)>&&,stappler::mem_std::Ref*,stappler::StringView)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::autorelease(Rc<stappler::mem_std::Ref>&&)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::check(stappler::xenolith::vk::Loop&,bool)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::clear()": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::doRelease(bool)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::getArmedTime() const": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::getFence() const": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::getFrame() const": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::getTag() const": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::init(stappler::xenolith::vk::Device&)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::isArmed() const": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::schedule(stappler::xenolith::vk::Loop&)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::scheduleReleaseReset(stappler::xenolith::vk::Loop&,bool)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::scheduleReset(stappler::xenolith::vk::Loop&)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::setArmed()": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::setArmed(stappler::xenolith::vk::DeviceQueue&)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::setFrame(Function<bool ()>&&,Function<void ()>&&,uint64_t)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::setReleaseCallback(Function<bool ()>&&)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::setScheduleCallback(Function<bool ()>&&)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::setTag(stappler::StringView)": "XLVkSync.h",
		"::stappler::xenolith::vk::Fence::~Fence()": "XLVkSync.h",
		"::stappler::xenolith::vk::Framebuffer": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::Framebuffer::_framebuffer": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::Framebuffer::getFramebuffer() const": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::Framebuffer::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::RenderPass*,SpanView<Rc<core::ImageView>>)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::Framebuffer::~Framebuffer()": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::GraphicPipeline": "XLVkPipeline.h",
		"::stappler::xenolith::vk::GraphicPipeline::_pipeline": "XLVkPipeline.h",
		"::stappler::xenolith::vk::GraphicPipeline::comparePipelineOrdering(stappler::xenolith::core::GraphicPipeline::PipelineInfo const&,stappler::xenolith::core::GraphicPipeline::PipelineInfo const&)": "XLVkPipeline.h",
		"::stappler::xenolith::vk::GraphicPipeline::getPipeline() const": "XLVkPipeline.h",
		"::stappler::xenolith::vk::GraphicPipeline::init(stappler::xenolith::vk::Device&,stappler::xenolith::core::GraphicPipeline::PipelineData const&,stappler::xenolith::core::GraphicPipeline::SubpassData const&,stappler::xenolith::core::GraphicPipeline::RenderQueue const&)": "XLVkPipeline.h",
		"::stappler::xenolith::vk::GraphicPipeline::~GraphicPipeline()": "XLVkPipeline.h",
		"::stappler::xenolith::vk::GuiApplication": "XLVkGuiApplication.h",
		"::stappler::xenolith::vk::GuiApplication::VulkanInstanceData": "XLVkGuiApplication.h",
		"::stappler::xenolith::vk::GuiApplication::VulkanInstanceInfo": "XLVkGuiApplication.h",
		"::stappler::xenolith::vk::GuiApplication::init(stappler::xenolith::Application::CommonInfo&&,Callback<bool (stappler::xenolith::vk::GuiApplication::VulkanInstanceData &, const stappler::xenolith::vk::GuiApplication::VulkanInstanceInfo &)> const&)": "XLVkGuiApplication.h",
		"::stappler::xenolith::vk::GuiApplication::init(stappler::xenolith::Application::CommonInfo&&,Rc<core::Instance>&&)": "XLVkGuiApplication.h",
		"::stappler::xenolith::vk::GuiApplication::run(stappler::xenolith::Application::CallbackInfo const&,core::LoopInfo&&,uint32_t,stappler::TimeInterval)": "XLVkGuiApplication.h",
		"::stappler::xenolith::vk::GuiApplication::run(stappler::xenolith::Application::CallbackInfo const&,uint32_t,stappler::TimeInterval)": "XLVkGuiApplication.h",
		"::stappler::xenolith::vk::GuiApplication::~GuiApplication()": "XLVkGuiApplication.h",
		"::stappler::xenolith::vk::Image": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::_barrier": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::_image": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::_memory": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::bindMemory(Rc<stappler::xenolith::vk::DeviceMemory>&&,VkDeviceSize)": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::dropPendingBarrier()": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::getAspectMask() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::getImage() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::getMemory() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::getPendingBarrier() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::init(stappler::xenolith::vk::Device&,VkImage,stappler::xenolith::vk::ImageInfoData const&,Rc<stappler::xenolith::vk::DeviceMemory>&&,Rc<core::DataAtlas>&&)": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::init(stappler::xenolith::vk::Device&,VkImage,stappler::xenolith::vk::ImageInfoData const&,uint32_t)": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::init(stappler::xenolith::vk::Device&,uint64_t,VkImage,stappler::xenolith::vk::ImageInfoData const&,Rc<stappler::xenolith::vk::DeviceMemory>&&,Rc<core::DataAtlas>&&)": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::setPendingBarrier(stappler::xenolith::vk::ImageMemoryBarrier const&)": "XLVkObject.h",
		"::stappler::xenolith::vk::Image::~Image()": "XLVkObject.h",
		"::stappler::xenolith::vk::ImageAttachment": "XLVkAttachment.h",
		"::stappler::xenolith::vk::ImageAttachment::makeFrameHandle(stappler::xenolith::core::Attachment::FrameQueue const&)": "XLVkAttachment.h",
		"::stappler::xenolith::vk::ImageAttachment::~ImageAttachment()": "XLVkAttachment.h",
		"::stappler::xenolith::vk::ImageAttachmentHandle": "XLVkAttachment.h",
		"::stappler::xenolith::vk::ImageAttachmentHandle::getImage() const": "XLVkAttachment.h",
		"::stappler::xenolith::vk::ImageAttachmentHandle::isDescriptorDirty(stappler::xenolith::core::AttachmentHandle::PassHandle const&,stappler::xenolith::vk::PipelineDescriptor const&,uint32_t,bool) const": "XLVkAttachment.h",
		"::stappler::xenolith::vk::ImageAttachmentHandle::writeDescriptor(core::QueuePassHandle const&,stappler::xenolith::vk::DescriptorImageInfo&)": "XLVkAttachment.h",
		"::stappler::xenolith::vk::ImageAttachmentHandle::~ImageAttachmentHandle()": "XLVkAttachment.h",
		"::stappler::xenolith::vk::ImageInfo": "XLVk.h",
		"::stappler::xenolith::vk::ImageInfoData": "XLVk.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier()": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(VkImageMemoryBarrier const&)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(stappler::xenolith::vk::Image*,VkAccessFlags,VkAccessFlags,VkImageLayout,VkImageLayout)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(stappler::xenolith::vk::Image*,VkAccessFlags,VkAccessFlags,VkImageLayout,VkImageLayout,VkImageSubresourceRange)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(stappler::xenolith::vk::Image*,VkAccessFlags,VkAccessFlags,VkImageLayout,VkImageLayout,stappler::xenolith::vk::QueueFamilyTransfer)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::ImageMemoryBarrier(stappler::xenolith::vk::Image*,VkAccessFlags,VkAccessFlags,VkImageLayout,VkImageLayout,stappler::xenolith::vk::QueueFamilyTransfer,VkImageSubresourceRange)": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::dstAccessMask": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::familyTransfer": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::image": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::newLayout": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::oldLayout": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::srcAccessMask": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageMemoryBarrier::subresourceRange": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::ImageView": "XLVkObject.h",
		"::stappler::xenolith::vk::ImageView::_imageView": "XLVkObject.h",
		"::stappler::xenolith::vk::ImageView::getImageView() const": "XLVkObject.h",
		"::stappler::xenolith::vk::ImageView::init(stappler::xenolith::vk::Device&,VkImage,VkFormat)": "XLVkObject.h",
		"::stappler::xenolith::vk::ImageView::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::Image*,stappler::xenolith::vk::ImageViewInfo const&)": "XLVkObject.h",
		"::stappler::xenolith::vk::ImageView::~ImageView()": "XLVkObject.h",
		"::stappler::xenolith::vk::ImageViewInfo": "XLVk.h",
		"::stappler::xenolith::vk::Instance": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::Instance(VkInstance,PFN_vkGetInstanceProcAddr const,uint32_t,Vector<stappler::StringView>&&,stappler::xenolith::core::Instance::TerminateCallback&&,stappler::xenolith::vk::Instance::PresentSupportCallback&&,bool,Rc<stappler::mem_std::Ref>&&)": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::PresentSupportCallback": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::_checkPresentSupport": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::_devices": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::_instance": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::_optionals": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::_version": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::debugMessenger": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::getDeviceFeatures(VkPhysicalDevice const&,DeviceInfo::Features&,stappler::xenolith::vk::ExtensionFlags,uint32_t) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::getDeviceInfo(VkPhysicalDevice) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::getDeviceProperties(VkPhysicalDevice const&,DeviceInfo::Properties&,stappler::xenolith::vk::ExtensionFlags,uint32_t) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::getInstance() const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::getSurfaceExtent(VkSurfaceKHR,VkPhysicalDevice) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::getSurfaceOptions(VkSurfaceKHR,VkPhysicalDevice) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::getVersion() const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::makeDevice(core::LoopInfo const&) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::makeLoop(core::LoopInfo&&) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::makeView(stappler::xenolith::Application&,core::Device const&,stappler::xenolith::ViewInfo&&) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::printDevicesInfo(std::ostream&) const": "XLVkInstance.h",
		"::stappler::xenolith::vk::Instance::~Instance()": "XLVkInstance.h",
		"::stappler::xenolith::vk::Loop": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::Loop()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::_clock": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::_cond": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::_internal": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::_mutex": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::_running": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::_thread": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::_threadId": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::_vkInstance": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::acquireFence(uint32_t,bool)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::acquireFramebuffer(stappler::xenolith::core::Loop::PassData const*,SpanView<Rc<core::ImageView>>)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::acquireImage(stappler::xenolith::core::Loop::ImageAttachment const*,stappler::xenolith::core::Loop::AttachmentHandle const*,core::ImageInfoData const&)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::cancel()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::captureImage(Function<void (const stappler::xenolith::vk::ImageInfoData &, stappler::BytesView)>&&,Rc<core::ImageObject> const&,core::AttachmentLayout)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::compileImage(Rc<core::DynamicImage> const&,Function<void (bool)>&&) const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::compileMaterials(Rc<core::MaterialInputData>&&,Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&) const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::compileQueue(Rc<stappler::xenolith::core::Loop::Queue> const&,Function<void (bool)>&&) const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::compileResource(Rc<core::Resource>&&,Function<void (bool)>&&,bool) const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::getSupportedDepthStencilFormat() const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::init(Rc<stappler::xenolith::vk::Instance>&&,stappler::xenolith::core::Loop::LoopInfo&&)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::isOnGlThread() const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::isRunning() const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::makeFrame(Rc<stappler::xenolith::core::Loop::FrameRequest>&&,uint64_t)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::makeSemaphore()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::performInQueue(Function<void ()>&&,stappler::mem_std::Ref*) const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::performInQueue(Rc<thread::Task>&&) const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::performOnGlThread(Function<void ()>&&,stappler::mem_std::Ref*,bool) const": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::releaseFramebuffer(Rc<core::Framebuffer>&&)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::releaseImage(Rc<stappler::xenolith::core::Loop::ImageStorage>&&)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::runRenderQueue(Rc<stappler::xenolith::core::Loop::FrameRequest>&&,uint64_t,Function<void (bool)>&&)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::schedule(Function<bool (core::Loop &)>&&,stappler::StringView)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::schedule(Function<bool (core::Loop &)>&&,uint64_t,stappler::StringView)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::signalDependencies(Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&,stappler::xenolith::core::Loop::Queue*,bool)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::threadDispose()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::threadInit()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::waitForDependencies(Vector<Rc<stappler::xenolith::core::Loop::DependencyEvent>> const&,Function<void (bool)>&&)": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::waitIdle()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::waitRinning()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::wakeup()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::worker()": "XLVkLoop.h",
		"::stappler::xenolith::vk::Loop::~Loop()": "XLVkLoop.h",
		"::stappler::xenolith::vk::LoopData": "XLVkInstance.h",
		"::stappler::xenolith::vk::LoopData::DeviceExtensionsCallback": "XLVkInstance.h",
		"::stappler::xenolith::vk::LoopData::DeviceFeaturesCallback": "XLVkInstance.h",
		"::stappler::xenolith::vk::LoopData::DeviceSupportCallback": "XLVkInstance.h",
		"::stappler::xenolith::vk::LoopData::deviceExtensionsCallback": "XLVkInstance.h",
		"::stappler::xenolith::vk::LoopData::deviceFeaturesCallback": "XLVkInstance.h",
		"::stappler::xenolith::vk::LoopData::deviceSupportCallback": "XLVkInstance.h",
		"::stappler::xenolith::vk::MaterialBuffers": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::MaterialBuffers::ordering": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::MaterialBuffers::stagingBuffer": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::MaterialBuffers::targetBuffer": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::MaterialCompiler": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::Material": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialAttachment": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialId": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialInputData": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::callback": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::deps": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::dynamic": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::materials": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::MaterialRequest::remove": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::_attachment": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::_inProgress": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::_requests": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::appendRequest(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*,Rc<stappler::xenolith::vk::MaterialCompiler::MaterialInputData>&&,Vector<Rc<core::DependencyEvent>>&&)": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::clearRequests()": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::dropInProgress(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*)": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::hasRequest(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*) const": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::inProgress(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*) const": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::init()": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::makeRequest(Rc<stappler::xenolith::vk::MaterialCompiler::MaterialInputData>&&,Vector<Rc<core::DependencyEvent>>&&)": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::runMaterialCompilationFrame(core::Loop&,Rc<stappler::xenolith::vk::MaterialCompiler::MaterialInputData>&&,Vector<Rc<core::DependencyEvent>>&&)": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::setInProgress(stappler::xenolith::vk::MaterialCompiler::MaterialAttachment const*)": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MaterialCompiler::~MaterialCompiler()": "XLVkMaterialCompiler.h",
		"::stappler::xenolith::vk::MemoryRequirements": "XLVkAllocator.h",
		"::stappler::xenolith::vk::MemoryRequirements::prefersDedicated": "XLVkAllocator.h",
		"::stappler::xenolith::vk::MemoryRequirements::requirements": "XLVkAllocator.h",
		"::stappler::xenolith::vk::MemoryRequirements::requiresDedicated": "XLVkAllocator.h",
		"::stappler::xenolith::vk::MemoryRequirements::targetOffset": "XLVkAllocator.h",
		"::stappler::xenolith::vk::MeshCompiler": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::MeshAttachment": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::MeshIndex": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::MeshInputData": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::MeshRequest": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::MeshRequest::deps": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::MeshRequest::toAdd": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::MeshRequest::toRemove": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::_attachment": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::_inProgress": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::_requests": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::appendRequest(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*,Rc<stappler::xenolith::vk::MeshCompiler::MeshInputData>&&,Vector<Rc<core::DependencyEvent>>&&)": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::clearRequests()": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::dropInProgress(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*)": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::hasRequest(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*) const": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::inProgress(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*) const": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::init()": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::makeRequest(Rc<stappler::xenolith::vk::MeshCompiler::MeshInputData>&&,Vector<Rc<core::DependencyEvent>>&&)": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::runMeshCompilationFrame(core::Loop&,Rc<stappler::xenolith::vk::MeshCompiler::MeshInputData>&&,Vector<Rc<core::DependencyEvent>>&&)": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::setInProgress(stappler::xenolith::vk::MeshCompiler::MeshAttachment const*)": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::MeshCompiler::~MeshCompiler()": "XLVkMeshCompiler.h",
		"::stappler::xenolith::vk::PipelineDescriptor": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::PresentationEvent": "XLVk.h",
		"::stappler::xenolith::vk::QueueFamilyTransfer": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::QueueFamilyTransfer::dstQueueFamilyIndex": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::QueueFamilyTransfer::srcQueueFamilyIndex": "XLVkDeviceQueue.h",
		"::stappler::xenolith::vk::QueueOperations": "XLVk.h",
		"::stappler::xenolith::vk::QueuePass": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePass::_queueOps": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePass::getQueueOps() const": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePass::init(stappler::xenolith::core::QueuePass::QueuePassBuilder&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePass::invalidate()": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePass::makeFrameHandle(stappler::xenolith::core::QueuePass::FrameQueue const&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePass::~QueuePass()": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_buffers": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_commandsReady": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_constraints": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_descriptorsReady": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_device": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_fence": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_loop": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_onPrepared": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_pool": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_queue": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_sync": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::_valid": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::doComplete(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Function<void (bool)>&&,bool)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::doFinalizeTransfer(core::MaterialSet*,Vector<stappler::xenolith::vk::ImageMemoryBarrier>&,Vector<stappler::xenolith::vk::BufferMemoryBarrier>&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::doPrepareCommands(stappler::xenolith::core::QueuePassHandle::FrameHandle&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::doSubmit(stappler::xenolith::core::QueuePassHandle::FrameHandle&,Function<void (bool)>&&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::doSubmitted(stappler::xenolith::core::QueuePassHandle::FrameHandle&,Function<void (bool)>&&,bool,Rc<stappler::xenolith::vk::Fence>&&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::finalize(stappler::xenolith::core::QueuePassHandle::FrameQueue&,bool)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::getQueueOps() const": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::invalidate()": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::prepare(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Function<void (bool)>&&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::rotateScissor(core::FrameContraints const&,stappler::xenolith::URect const&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::submit(stappler::xenolith::core::QueuePassHandle::FrameQueue&,Rc<stappler::xenolith::core::QueuePassHandle::FrameSync>&&,Function<void (bool)>&&,Function<void (bool)>&&)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::updateMaterials(stappler::xenolith::core::QueuePassHandle::FrameHandle&,Rc<core::MaterialSet> const&,Vector<Rc<core::Material>> const&,SpanView<core::MaterialId>,SpanView<core::MaterialId>)": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::QueuePassHandle::~QueuePassHandle()": "XLVkQueuePass.h",
		"::stappler::xenolith::vk::RenderPass": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::Data": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::Data::cleanup(stappler::xenolith::vk::Device&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::Data::layouts": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::Data::renderPass": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::Data::renderPassAlternative": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::LayoutData": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::LayoutData::descriptorPool": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::LayoutData::layout": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::LayoutData::layouts": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::LayoutData::sets": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_attachmentDescriptions": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_attachmentDescriptionsAlternative": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_attachmentReferences": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_clearValues": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_data": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_preservedAttachments": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_subpassDependencies": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_subpasses": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::_variableAttachments": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::getClearValues() const": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::getDescriptorSets(uint32_t) const": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::getPipelineLayout(uint32_t) const": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::getRenderPass(bool) const": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::init(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::initComputePass(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::initDescriptors(stappler::xenolith::vk::Device&,core::PipelineLayoutData const&,stappler::xenolith::vk::RenderPass::Data&,stappler::xenolith::vk::RenderPass::LayoutData&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::initDescriptors(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData const&,stappler::xenolith::vk::RenderPass::Data&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::initGenericPass(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::initGraphicsPass(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::initTransferPass(stappler::xenolith::vk::Device&,stappler::xenolith::core::RenderPass::QueuePassData&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::perform(core::QueuePassHandle const&,stappler::xenolith::vk::CommandBuffer&,Callback<void ()> const&)": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::writeDescriptors(core::QueuePassHandle const&,uint32_t,bool) const": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderPass::~RenderPass()": "XLVkRenderPass.h",
		"::stappler::xenolith::vk::RenderQueueCompiler": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueCompiler::_attachment": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueCompiler::_materialCompiler": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueCompiler::_transfer": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueCompiler::getMaterialCompiler() const": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueCompiler::getTransferQueue() const": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueCompiler::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::TransferQueue*,stappler::xenolith::vk::MaterialCompiler*)": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueCompiler::makeRequest(Rc<stappler::xenolith::vk::RenderQueueInput>&&)": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueCompiler::~RenderQueueCompiler()": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueInput": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::RenderQueueInput::queue": "XLVkRenderQueueCompiler.h",
		"::stappler::xenolith::vk::Sampler": "XLVkObject.h",
		"::stappler::xenolith::vk::Sampler::_sampler": "XLVkObject.h",
		"::stappler::xenolith::vk::Sampler::getSampler() const": "XLVkObject.h",
		"::stappler::xenolith::vk::Sampler::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::SamplerInfo const&)": "XLVkObject.h",
		"::stappler::xenolith::vk::Sampler::~Sampler()": "XLVkObject.h",
		"::stappler::xenolith::vk::SamplerInfo": "XLVk.h",
		"::stappler::xenolith::vk::Semaphore": "XLVkSync.h",
		"::stappler::xenolith::vk::Semaphore::_sem": "XLVkSync.h",
		"::stappler::xenolith::vk::Semaphore::getSemaphore() const": "XLVkSync.h",
		"::stappler::xenolith::vk::Semaphore::init(stappler::xenolith::vk::Device&)": "XLVkSync.h",
		"::stappler::xenolith::vk::Semaphore::~Semaphore()": "XLVkSync.h",
		"::stappler::xenolith::vk::Shader": "XLVkPipeline.h",
		"::stappler::xenolith::vk::Shader::_shaderModule": "XLVkPipeline.h",
		"::stappler::xenolith::vk::Shader::getModule() const": "XLVkPipeline.h",
		"::stappler::xenolith::vk::Shader::init(stappler::xenolith::vk::Device&,stappler::xenolith::core::Shader::ProgramData const&)": "XLVkPipeline.h",
		"::stappler::xenolith::vk::Shader::setup(stappler::xenolith::vk::Device&,stappler::xenolith::core::Shader::ProgramData const&,SpanView<uint32_t>)": "XLVkPipeline.h",
		"::stappler::xenolith::vk::Shader::~Shader()": "XLVkPipeline.h",
		"::stappler::xenolith::vk::Surface": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::Surface::_instance": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::Surface::_surface": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::Surface::_window": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::Surface::getSurface() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::Surface::init(stappler::xenolith::vk::Instance*,VkSurfaceKHR,stappler::mem_std::Ref*)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::Surface::~Surface()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::ImageStorage": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::SwapchainAcquiredImage(uint32_t,stappler::xenolith::vk::SwapchainHandle::SwapchainImageData const*,Rc<stappler::xenolith::vk::Semaphore>&&,Rc<stappler::xenolith::vk::SwapchainHandle>&&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::data": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::imageIndex": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::sem": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainAcquiredImage::swapchain": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainImageData": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainImageData::image": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::SwapchainImageData::views": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_acquiredImages": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_config": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_deprecated": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_device": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_imageInfo": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_images": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_presentMode": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_presentSemaphore": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_presentTime": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_presentedFrames": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_rebuildMode": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_resourceMutex": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_semaphores": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_surface": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_surfaceInfo": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::_swapchain": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::acquire(bool,Rc<stappler::xenolith::vk::Fence> const&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::acquireSemaphore()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::deprecate(bool)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getAcquiredImagesCount() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getConfig() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getImageInfo() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getImages() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getPresentMode() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getRebuildMode() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getSurfaceInfo() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getSwapchain() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::getSwapchainImageViewInfo(stappler::xenolith::vk::ImageInfo const&) const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::init(stappler::xenolith::vk::Device&,core::SurfaceInfo const&,core::SwapchainConfig const&,stappler::xenolith::vk::ImageInfo&&,core::PresentMode,stappler::xenolith::vk::Surface*,uint32_t[2],stappler::xenolith::vk::SwapchainHandle*)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::invalidateImage(stappler::xenolith::vk::SwapchainHandle::ImageStorage const*)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::isDeprecated()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::isOptimal() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::makeView(Rc<core::ImageObject> const&,stappler::xenolith::vk::ImageViewInfo const&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::present(stappler::xenolith::vk::DeviceQueue&,Rc<stappler::xenolith::vk::SwapchainHandle::ImageStorage> const&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::releaseSemaphore(Rc<stappler::xenolith::vk::Semaphore>&&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainHandle::~SwapchainHandle()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::State": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::_order": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::_presentWindow": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::_state": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::_swapchain": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::cleanup()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::getInfo() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::getOrder() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::getPresentWindow() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::getSwapchain() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::init(Rc<stappler::xenolith::vk::SwapchainHandle>&&,SwapchainHandle::SwapchainImageData const&,Rc<stappler::xenolith::vk::Semaphore>&&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::init(Rc<stappler::xenolith::vk::SwapchainHandle>&&,uint64_t,uint64_t)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::invalidateImage()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::invalidateSwapchain()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::isPresented() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::isSemaphorePersistent() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::isSubmitted() const": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::makeView(stappler::xenolith::vk::ImageViewInfo const&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::rearmSemaphores(core::Loop&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::releaseSemaphore(core::Semaphore*)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::setImage(Rc<stappler::xenolith::vk::SwapchainHandle>&&,SwapchainHandle::SwapchainImageData const&,Rc<stappler::xenolith::vk::Semaphore> const&)": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::setPresented()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::SwapchainImage::~SwapchainImage()": "XLVkSwapchain.h",
		"::stappler::xenolith::vk::TexelAttachmentHandle": "XLVkAttachment.h",
		"::stappler::xenolith::vk::TexelAttachmentHandle::writeDescriptor(core::QueuePassHandle const&,stappler::xenolith::vk::DescriptorBufferViewInfo&)": "XLVkAttachment.h",
		"::stappler::xenolith::vk::TexelAttachmentHandle::~TexelAttachmentHandle()": "XLVkAttachment.h",
		"::stappler::xenolith::vk::TextureSet": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::_bufferCount": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::_imageCount": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::_layout": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::_partiallyBound": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::_pendingBufferBarriers": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::_pendingImageBarriers": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::_pool": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::_set": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::dropPendingBarriers()": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::getDevice() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::getPendingBufferBarriers() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::getPendingImageBarriers() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::getSet() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::init(stappler::xenolith::vk::Device&,stappler::xenolith::vk::TextureSetLayout const&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::write(core::MaterialLayout const&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::writeBuffers(Vector<VkWriteDescriptorSet>&,core::MaterialLayout const&,std::forward_list<Vector<VkDescriptorBufferInfo>>&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::writeImages(Vector<VkWriteDescriptorSet>&,core::MaterialLayout const&,std::forward_list<Vector<VkDescriptorImageInfo>>&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSet::~TextureSet()": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::AttachmentLayout": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_bufferCount": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_emptyBuffer": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_emptyImage": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_emptyImageView": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_imageCount": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_layout": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_mutex": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_partiallyBound": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_samplersCount": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_sets": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_solidImage": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::_solidImageView": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::acquireSet(stappler::xenolith::vk::Device&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::compile(stappler::xenolith::vk::Device&,Vector<VkSampler> const&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getBuffersCount() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getEmptyBuffer() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getEmptyImageObject() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getEmptyImageView() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getImageCount() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getLayout() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getSamplersCount() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getSolidImageObject() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::getSolidImageView() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::init(stappler::xenolith::vk::Device&,uint32_t,uint32_t)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::initDefault(stappler::xenolith::vk::Device&,stappler::xenolith::vk::Loop&,Function<void (bool)>&&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::invalidate(stappler::xenolith::vk::Device&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::isPartiallyBound() const": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::readImage(stappler::xenolith::vk::Device&,stappler::xenolith::vk::Loop&,Rc<stappler::xenolith::vk::Image> const&,stappler::xenolith::vk::TextureSetLayout::AttachmentLayout,Function<void (const stappler::xenolith::vk::ImageInfoData &, stappler::BytesView)>&&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::releaseSet(Rc<stappler::xenolith::vk::TextureSet>&&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::writeDefaults(stappler::xenolith::vk::CommandBuffer&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::writeImageRead(stappler::xenolith::vk::Device&,stappler::xenolith::vk::CommandBuffer&,uint32_t,Rc<stappler::xenolith::vk::Image> const&,stappler::xenolith::vk::TextureSetLayout::AttachmentLayout,Rc<stappler::xenolith::vk::DeviceBuffer> const&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::writeImageTransfer(stappler::xenolith::vk::Device&,stappler::xenolith::vk::CommandBuffer&,uint32_t,Rc<stappler::xenolith::vk::Buffer> const&,Rc<stappler::xenolith::vk::Image> const&)": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TextureSetLayout::~TextureSetLayout()": "XLVkTextureSet.h",
		"::stappler::xenolith::vk::TransferQueue": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferQueue::_attachment": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferQueue::init()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferQueue::makeRequest(Rc<stappler::xenolith::vk::TransferResource>&&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferQueue::~TransferQueue()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::BufferAllocInfo()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::BufferAllocInfo(core::BufferData*)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::barrier": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::buffer": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::data": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::dedicated": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::dedicatedMemType": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::info": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::offset": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::req": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::stagingOffset": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::BufferAllocInfo::useStaging": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::ImageAllocInfo()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::ImageAllocInfo(core::ImageData*)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::barrier": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::data": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::dedicated": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::dedicatedMemType": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::image": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::info": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::offset": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::req": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::stagingOffset": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::ImageAllocInfo::useStaging": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingBuffer": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingBuffer::buffer": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingBuffer::copyData": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingBuffer::memoryTypeIndex": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingBuffer::~StagingBuffer()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingCopy": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingCopy::sourceOffet": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingCopy::sourceSize": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingCopy::targetBuffer": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::StagingCopy::targetImage": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_alloc": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_buffers": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_callback": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_images": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_initialized": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_memType": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_memory": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_nonCoherentAtomSize": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_requiredMemory": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_resource": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_stagingBuffer": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::_targetUsage": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::allocate()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::allocateDedicated(Rc<stappler::xenolith::vk::Allocator> const&,stappler::xenolith::vk::TransferResource::BufferAllocInfo&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::allocateDedicated(Rc<stappler::xenolith::vk::Allocator> const&,stappler::xenolith::vk::TransferResource::ImageAllocInfo&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::compile()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::createStagingBuffer(stappler::xenolith::vk::TransferResource::StagingBuffer&,size_t) const": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::dropStaging(stappler::xenolith::vk::TransferResource::StagingBuffer&) const": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::init(Rc<stappler::xenolith::vk::Allocator> const&,Rc<core::Resource> const&,Function<void (bool)>&&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::init(Rc<stappler::xenolith::vk::Allocator> const&,Rc<core::Resource>&&,Function<void (bool)>&&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::initialize(stappler::xenolith::vk::AllocationUsage)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::invalidate(stappler::xenolith::vk::Device&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::isStagingRequired() const": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::isValid() const": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::preTransferData()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::prepareCommands(uint32_t,VkCommandBuffer,Vector<VkImageMemoryBarrier>&,Vector<VkBufferMemoryBarrier>&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::transfer(Rc<stappler::xenolith::vk::DeviceQueue> const&,Rc<stappler::xenolith::vk::CommandPool> const&,Rc<stappler::xenolith::vk::Fence> const&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::upload()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::writeData(uint8_t*,stappler::xenolith::vk::TransferResource::BufferAllocInfo&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::writeData(uint8_t*,stappler::xenolith::vk::TransferResource::ImageAllocInfo&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::writeStaging(stappler::xenolith::vk::TransferResource::StagingBuffer&)": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::TransferResource::~TransferResource()": "XLVkTransferQueue.h",
		"::stappler::xenolith::vk::View": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions::acquireImageImmediately": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions::enableFrameEmitterBarrier": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions::flattenFrameRate": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions::followDisplayLink": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions::presentImmediate": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions::renderImageOffscreen": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions::renderOnDemand": "XLVkView.h",
		"::stappler::xenolith::vk::View::EngineOptions::waitOnSwapchainPassFence": "XLVkView.h",
		"::stappler::xenolith::vk::View::ScheduleImageMode": "XLVkView.h",
		"::stappler::xenolith::vk::View::_blockDeprecation": "XLVkView.h",
		"::stappler::xenolith::vk::View::_device": "XLVkView.h",
		"::stappler::xenolith::vk::View::_fenceImages": "XLVkView.h",
		"::stappler::xenolith::vk::View::_fenceOrder": "XLVkView.h",
		"::stappler::xenolith::vk::View::_fences": "XLVkView.h",
		"::stappler::xenolith::vk::View::_frameOrder": "XLVkView.h",
		"::stappler::xenolith::vk::View::_framesInProgress": "XLVkView.h",
		"::stappler::xenolith::vk::View::_initImage": "XLVkView.h",
		"::stappler::xenolith::vk::View::_instance": "XLVkView.h",
		"::stappler::xenolith::vk::View::_onDemandOrder": "XLVkView.h",
		"::stappler::xenolith::vk::View::_options": "XLVkView.h",
		"::stappler::xenolith::vk::View::_readyForNextFrame": "XLVkView.h",
		"::stappler::xenolith::vk::View::_requestedSwapchainImage": "XLVkView.h",
		"::stappler::xenolith::vk::View::_scheduledImages": "XLVkView.h",
		"::stappler::xenolith::vk::View::_scheduledPresent": "XLVkView.h",
		"::stappler::xenolith::vk::View::_scheduledTime": "XLVkView.h",
		"::stappler::xenolith::vk::View::_surface": "XLVkView.h",
		"::stappler::xenolith::vk::View::_swapchain": "XLVkView.h",
		"::stappler::xenolith::vk::View::_swapchainImages": "XLVkView.h",
		"::stappler::xenolith::vk::View::_threadName": "XLVkView.h",
		"::stappler::xenolith::vk::View::acquireScheduledImage()": "XLVkView.h",
		"::stappler::xenolith::vk::View::acquireScheduledImageImmediate(Rc<stappler::xenolith::vk::SwapchainImage> const&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::captureImage(Function<void (const stappler::xenolith::vk::ImageInfoData &, stappler::BytesView)>&&,Rc<core::ImageObject> const&,stappler::xenolith::View::AttachmentLayout) const": "XLVkView.h",
		"::stappler::xenolith::vk::View::captureImage(stappler::StringView,Rc<core::ImageObject> const&,stappler::xenolith::View::AttachmentLayout) const": "XLVkView.h",
		"::stappler::xenolith::vk::View::clearImages()": "XLVkView.h",
		"::stappler::xenolith::vk::View::createSwapchain(core::SurfaceInfo const&,core::SwapchainConfig&&,core::PresentMode)": "XLVkView.h",
		"::stappler::xenolith::vk::View::deprecateSwapchain(bool)": "XLVkView.h",
		"::stappler::xenolith::vk::View::finalize()": "XLVkView.h",
		"::stappler::xenolith::vk::View::getDevice() const": "XLVkView.h",
		"::stappler::xenolith::vk::View::getSurfaceOptions() const": "XLVkView.h",
		"::stappler::xenolith::vk::View::getSwapchainHandle() const": "XLVkView.h",
		"::stappler::xenolith::vk::View::getUpdateInterval() const": "XLVkView.h",
		"::stappler::xenolith::vk::View::init(stappler::xenolith::Application&,stappler::xenolith::vk::Device const&,stappler::xenolith::ViewInfo&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::invalidate()": "XLVkView.h",
		"::stappler::xenolith::vk::View::invalidateSwapchainImage(Rc<stappler::xenolith::View::ImageStorage>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::invalidateTarget(Rc<stappler::xenolith::View::ImageStorage>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::isImagePresentable(core::ImageObject const&,VkFilter&) const": "XLVkView.h",
		"::stappler::xenolith::vk::View::mapWindow()": "XLVkView.h",
		"::stappler::xenolith::vk::View::onAdded(stappler::xenolith::vk::Device&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::onRemoved()": "XLVkView.h",
		"::stappler::xenolith::vk::View::onSwapchainImageReady(Rc<SwapchainHandle::SwapchainAcquiredImage>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::pollInput(bool)": "XLVkView.h",
		"::stappler::xenolith::vk::View::present(Rc<stappler::xenolith::View::ImageStorage>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::presentImmediate(Rc<stappler::xenolith::View::ImageStorage>&&,Function<void (bool)>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::presentWithQueue(stappler::xenolith::vk::DeviceQueue&,Rc<stappler::xenolith::View::ImageStorage>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::recreateSwapchain(core::PresentMode)": "XLVkView.h",
		"::stappler::xenolith::vk::View::run()": "XLVkView.h",
		"::stappler::xenolith::vk::View::runScheduledPresent(Rc<stappler::xenolith::vk::SwapchainImage>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::runWithQueue(Rc<stappler::xenolith::View::RenderQueue> const&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::scheduleFence(Rc<stappler::xenolith::vk::Fence>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::scheduleImage(Rc<stappler::xenolith::vk::SwapchainImage>&&)": "XLVkView.h",
		"::stappler::xenolith::vk::View::scheduleNextImage(uint64_t,bool)": "XLVkView.h",
		"::stappler::xenolith::vk::View::scheduleSwapchainImage(uint64_t,stappler::xenolith::vk::View::ScheduleImageMode)": "XLVkView.h",
		"::stappler::xenolith::vk::View::setReadyForNextFrame()": "XLVkView.h",
		"::stappler::xenolith::vk::View::threadDispose()": "XLVkView.h",
		"::stappler::xenolith::vk::View::threadInit()": "XLVkView.h",
		"::stappler::xenolith::vk::View::update(bool)": "XLVkView.h",
		"::stappler::xenolith::vk::View::updateFences()": "XLVkView.h",
		"::stappler::xenolith::vk::View::updateFrameInterval()": "XLVkView.h",
		"::stappler::xenolith::vk::View::waitForFences(uint64_t)": "XLVkView.h",
		"::stappler::xenolith::vk::View::~View()": "XLVkView.h",
		"::stappler::xenolith::vk::checkIfExtensionAvailable(uint32_t,char const*,Vector<VkExtensionProperties> const&,Vector<stappler::StringView>&,Vector<stappler::StringView>&,stappler::xenolith::vk::ExtensionFlags&)": "XLVk.h",
		"::stappler::xenolith::vk::getFormatBlockSize(VkFormat)": "XLVk.h",
		"::stappler::xenolith::vk::getQueueOperations(VkQueueFlags,bool)": "XLVk.h",
		"::stappler::xenolith::vk::getQueueOperations(core::PassType)": "XLVk.h",
		"::stappler::xenolith::vk::getQueueOperationsDesc(stappler::xenolith::vk::QueueOperations)": "XLVk.h",
		"::stappler::xenolith::vk::getVkColorSpaceName(VkColorSpaceKHR)": "XLVk.h",
		"::stappler::xenolith::vk::getVkFormatName(VkFormat)": "XLVk.h",
		"::stappler::xenolith::vk::getVkMemoryPropertyFlags(VkMemoryPropertyFlags)": "XLVk.h",
		"::stappler::xenolith::vk::getVkPresentMode(core::PresentMode)": "XLVk.h",
		"::stappler::xenolith::vk::getVkResultName(VkResult)": "XLVk.h",
		"::stappler::xenolith::vk::getVkStageBits(core::ProgramStage)": "XLVk.h",
		"::stappler::xenolith::vk::isPromotedExtension(uint32_t,stappler::StringView)": "XLVk.h",
		"::stappler::xenolith::vk::operator!=(stappler::xenolith::vk::ExtensionFlags const&,std::underlying_type<ExtensionFlags>::type const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator!=(stappler::xenolith::vk::QueueOperations const&,std::underlying_type<QueueOperations>::type const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator!=(std::underlying_type<ExtensionFlags>::type const&,stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator!=(std::underlying_type<QueueOperations>::type const&,stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator&(stappler::xenolith::vk::ExtensionFlags const&,stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator&(stappler::xenolith::vk::QueueOperations const&,stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator&=(stappler::xenolith::vk::ExtensionFlags&,stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator&=(stappler::xenolith::vk::QueueOperations&,stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator==(stappler::xenolith::vk::ExtensionFlags const&,std::underlying_type<ExtensionFlags>::type const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator==(stappler::xenolith::vk::QueueOperations const&,std::underlying_type<QueueOperations>::type const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator==(std::underlying_type<ExtensionFlags>::type const&,stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator==(std::underlying_type<QueueOperations>::type const&,stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator^(stappler::xenolith::vk::ExtensionFlags const&,stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator^(stappler::xenolith::vk::QueueOperations const&,stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator^=(stappler::xenolith::vk::ExtensionFlags&,stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator^=(stappler::xenolith::vk::QueueOperations&,stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator|(stappler::xenolith::vk::ExtensionFlags const&,stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator|(stappler::xenolith::vk::QueueOperations const&,stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator|=(stappler::xenolith::vk::ExtensionFlags&,stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator|=(stappler::xenolith::vk::QueueOperations&,stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator~(stappler::xenolith::vk::ExtensionFlags const&)": "XLVk.h",
		"::stappler::xenolith::vk::operator~(stappler::xenolith::vk::QueueOperations const&)": "XLVk.h",
		"::stappler::xenolith::vk::platform::FunctionTable": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::FunctionTable::createInstance(Callback<bool (stappler::xenolith::vk::platform::VulkanInstanceData &, const stappler::xenolith::vk::platform::VulkanInstanceInfo &)> const&,Instance::TerminateCallback&&) const": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::FunctionTable::doCreateInstance(stappler::xenolith::vk::platform::VulkanInstanceData&,Instance::TerminateCallback&&) const": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::FunctionTable::loadInfo() const": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::FunctionTable::operator bool() const": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::FunctionTable::prepareData(stappler::xenolith::vk::platform::VulkanInstanceData&,stappler::xenolith::vk::platform::VulkanInstanceInfo const&) const": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::FunctionTable::validateData(stappler::xenolith::vk::platform::VulkanInstanceData&,stappler::xenolith::vk::platform::VulkanInstanceInfo const&) const": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::SurfaceType": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::ViewImpl()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::_eventFd": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::_inputEnabled": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::_view": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::cancelTextInput()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::finalize()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::getDevice() const": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::getSurfaceOptions() const": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::getUpdateInterval() const": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::getView() const": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::init(stappler::xenolith::Application&,core::Device const&,stappler::xenolith::ViewInfo&&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::isInputEnabled() const": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::linkWithNativeWindow(void*)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::mapWindow()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::pollInput(bool)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::presentWithQueue(vk::DeviceQueue&,Rc<stappler::xenolith::View::ImageStorage>&&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::runTextInput(stappler::WideStringView,uint32_t,uint32_t,stappler::xenolith::TextInputType)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::stopNativeWindow()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::threadDispose()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::threadInit()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::updateTextCursor(uint32_t,uint32_t)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::updateTextInput(stappler::WideStringView,uint32_t,uint32_t,stappler::xenolith::TextInputType)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::wakeup()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::worker()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::ViewImpl::~ViewImpl()": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceData": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceData::applicationName": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceData::applicationVersion": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceData::checkPresentationSupport": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceData::extensionsToEnable": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceData::layersToEnable": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceData::targetVulkanVersion": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceData::userdata": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceInfo": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceInfo::availableExtensions": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceInfo::availableLayers": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::VulkanInstanceInfo::targetVersion": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::checkPresentationSupport(vk::Instance const*,VkPhysicalDevice,uint32_t)": "XLVkGuiPlatform.h",
		"::stappler::xenolith::vk::platform::createInstance(Callback<bool (stappler::xenolith::vk::platform::VulkanInstanceData &, const stappler::xenolith::vk::platform::VulkanInstanceInfo &)> const&)": "XLVkPlatform.h",
		"::stappler::xenolith::vk::platform::createView(stappler::xenolith::Application&,core::Device const&,stappler::xenolith::ViewInfo&&)": "XLVkGuiPlatform.h",
		"::stappler::xenolith::vk::platform::initInstance(vk::platform::VulkanInstanceData&,vk::platform::VulkanInstanceInfo const&)": "XLVkGuiPlatform.h",
		"::stappler::xenolith::vk::platform::operator!=(stappler::xenolith::vk::platform::SurfaceType const&,std::underlying_type<SurfaceType>::type const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator!=(std::underlying_type<SurfaceType>::type const&,stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator&(stappler::xenolith::vk::platform::SurfaceType const&,stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator&=(stappler::xenolith::vk::platform::SurfaceType&,stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator==(stappler::xenolith::vk::platform::SurfaceType const&,std::underlying_type<SurfaceType>::type const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator==(std::underlying_type<SurfaceType>::type const&,stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator^(stappler::xenolith::vk::platform::SurfaceType const&,stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator^=(stappler::xenolith::vk::platform::SurfaceType&,stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator|(stappler::xenolith::vk::platform::SurfaceType const&,stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator|=(stappler::xenolith::vk::platform::SurfaceType&,stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::platform::operator~(stappler::xenolith::vk::platform::SurfaceType const&)": "XLVkGuiViewImpl.h",
		"::stappler::xenolith::vk::s_enableValidationLayers": "XLVk.h",
		"::stappler::xenolith::vk::s_optionalDeviceExtensions": "XLVk.h",
		"::stappler::xenolith::vk::s_optionalExtension": "XLVk.h",
		"::stappler::xenolith::vk::s_printVkInfo": "XLVk.h",
		"::stappler::xenolith::vk::s_promotedVk11Extensions": "XLVk.h",
		"::stappler::xenolith::vk::s_promotedVk12Extensions": "XLVk.h",
		"::stappler::xenolith::vk::s_promotedVk13Extensions": "XLVk.h",
		"::stappler::xenolith::vk::s_requiredDeviceExtensions": "XLVk.h",
		"::stappler::xenolith::vk::s_requiredExtension": "XLVk.h",
		"::stappler::xenolith::vk::s_validationLayers": "XLVk.h",
		"::stappler::xenolith::vk::sanitizeVkStruct<typename>(T&)": "XLVk.h",
		"::std::hash<stappler::SpanView<Value>>::hash<stappler::SpanView<Value>>": "SPSpanView.h",
		"::std::hash<stappler::SpanView<Value>>::operator()(stappler::SpanView<Value> const&)": "SPSpanView.h",
		"::std::hash<stappler::StringView>::hash()": "SPStringView.h",
		"::std::hash<stappler::StringView>::hash<stappler::StringView>": "SPStringView.h",
		"::std::hash<stappler::StringView>::operator()(stappler::StringView const&) const": "SPStringView.h",
		"::std::hash<stappler::StringViewUtf8>::hash()": "SPStringView.h",
		"::std::hash<stappler::StringViewUtf8>::hash<stappler::StringViewUtf8>": "SPStringView.h",
		"::std::hash<stappler::StringViewUtf8>::operator()(stappler::StringViewUtf8 const&) const": "SPStringView.h",
		"::std::hash<stappler::ValueWrapper<Value,Flag>>::hash()": "SPCore.h",
		"::std::hash<stappler::ValueWrapper<Value,Flag>>::hash<stappler::ValueWrapper<Value,Flag>>": "SPCore.h",
		"::std::hash<stappler::ValueWrapper<Value,Flag>>::operator()(stappler::ValueWrapper<Value, Flag> const&) const": "SPCore.h",
		"::std::hash<stappler::WideStringView>::hash()": "SPStringView.h",
		"::std::hash<stappler::WideStringView>::hash<stappler::WideStringView>": "SPStringView.h",
		"::std::hash<stappler::WideStringView>::operator()(stappler::WideStringView const&) const": "SPStringView.h",
		"::std::hash<stappler::geom::FontSize>::hash()": "SPFontStyle.h",
		"::std::hash<stappler::geom::FontSize>::hash<stappler::geom::FontSize>": "SPFontStyle.h",
		"::std::hash<stappler::geom::FontSize>::operator()(stappler::geom::FontSize const&) const": "SPFontStyle.h",
		"::std::hash<stappler::memory::basic_string<char16_t>>::hash<stappler::memory::basic_string<char16_t>>": "SPMemString.h",
		"::std::hash<stappler::memory::basic_string<char16_t>>::operator()(stappler::memory::basic_string<char16_t> const&) const": "SPMemString.h",
		"::std::hash<stappler::memory::basic_string<char>>::hash<stappler::memory::basic_string<char>>": "SPMemString.h",
		"::std::hash<stappler::memory::basic_string<char>>::operator()(stappler::memory::basic_string<char> const&) const": "SPMemString.h",
		"::std::hash<stappler::xenolith::InputEventData>::hash<stappler::xenolith::InputEventData>": "XLInput.h",
		"::std::hash<stappler::xenolith::InputEventData>::operator()(stappler::xenolith::InputEventData const&) const": "XLInput.h",
		"::std::operator<<(std::ostream&,stappler::xenolith::core::InputEventName)": "XLCoreInput.h",
		"::std::operator<<(std::ostream&,stappler::xenolith::core::InputKeyCode)": "XLCoreInput.h",
		"::std::operator<<(std::ostream&,stappler::xenolith::vk::AllocationUsage)": "XLVkAllocator.h",
		"CORE_CORE_STRING_SPGOST3411_2012_H_": "SPGost3411-2012.h",
		"CORE_GEOM_SPFONTSTYLE_H_": "SPFontStyle.h",
		"CORE_GEOM_SPGEOM_H_": "SPGeom.h",
		"CORE_TESS_SPTESSSIMD_HPP_": "SPTessSimd.hpp",
		"InvokerCallTest_MakeCallTest": "SPCore.h",
		"LAYOUT_COLOR_SPEC": "SPColor.h",
		"LAYOUT_COLOR_SPEC_ACCENT": "SPColor.h",
		"LAYOUT_COLOR_SPEC_BASE": "SPColor.h",
		"SPASSERT": "SPLog.h",
		"SPCHARMATCHING_LOG": "SPCharGroup.h",
		"SPDEFAULT": "SPCore.h",
		"SPINLINE": "SPCore.h",
		"SPPRINTF": "SPCore.h",
		"SPUNUSED": "SPCore.h",
		"SP_ATTR_OPTIMIZE_FN": "SPSIMD.h",
		"SP_ATTR_OPTIMIZE_INLINE_FN": "SPSIMD.h",
		"SP_COMPILE_TIME": "SPTime.h",
		"SP_DEFINE_ENUM_AS_MASK": "SPCore.h",
		"SP_EXTERN_C": "SPCore.h",
		"SP_GEOM_DEFAULT_SIMD": "SPSIMD.h",
		"SP_GEOM_DEFAULT_SIMD_NAMESPACE": "SPSIMD.h",
		"SP_GEOM_DEFAULT_SIMD_NEON": "SPSIMD.h",
		"SP_GEOM_DEFAULT_SIMD_NEON64": "SPSIMD.h",
		"SP_GEOM_DEFAULT_SIMD_SSE": "SPSIMD.h",
		"SP_HASH_INLINE": "SPHash.h",
		"SP_MEM_RBTREE_DEBUG": "SPMemRbtree.h",
		"SP_PRIORITY_QUEUE_RANGE_DEBUG": "SPMemPriorityQueue.h",
		"SP_REF_DEBUG": "SPRef.h",
		"SP_SIMD_DEBUG": "SPSIMD.h",
		"SP_THREE_WAY_COMPARISON_FRIEND": "SPCore.h",
		"SP_THREE_WAY_COMPARISON_FRIEND_CONSTEXPR": "SPCore.h",
		"SP_THREE_WAY_COMPARISON_TYPE": "SPCore.h",
		"SP_THREE_WAY_COMPARISON_TYPE_CONSTEXPR": "SPCore.h",
		"STAPPLER_BITMAP_SPBITMAPFORMAT_H_": "SPBitmapFormat.h",
		"STAPPLER_BITMAP_SPBITMAP_H_": "SPBitmap.h",
		"STAPPLER_COMMON_MEMORY_SPMEMDICT_H_": "SPMemDict.h",
		"STAPPLER_CORE_IO_SPIOBUFFER_H_": "SPIOBuffer.h",
		"STAPPLER_CORE_IO_SPIOCOMMON_H_": "SPIOCommon.h",
		"STAPPLER_CORE_IO_SPIOCONSUMER_H_": "SPIOConsumer.h",
		"STAPPLER_CORE_IO_SPIOPRODUCER_H_": "SPIOProducer.h",
		"STAPPLER_CORE_IO_SPIO_H_": "SPIO.h",
		"STAPPLER_CORE_MEMORY_POOL_SPMEMPOOLCONFIG_H_": "SPMemPoolConfig.h",
		"STAPPLER_CORE_MEMORY_POOL_SPMEMPOOLINTERFACE_H_": "SPMemPoolInterface.h",
		"STAPPLER_CORE_MEMORY_POOL_SPMEMPOOLSTRUCT_H_": "SPMemPoolStruct.h",
		"STAPPLER_CORE_MEMORY_SPMEMALLOC_H_": "SPMemAlloc.h",
		"STAPPLER_CORE_MEMORY_SPMEMFUNCTION_H_": "SPMemFunction.h",
		"STAPPLER_CORE_MEMORY_SPMEMINTERFACE_H_": "SPMemInterface.h",
		"STAPPLER_CORE_MEMORY_SPMEMMAP_H_": "SPMemMap.h",
		"STAPPLER_CORE_MEMORY_SPMEMPOINTERITERATOR_H_": "SPMemPointerIterator.h",
		"STAPPLER_CORE_MEMORY_SPMEMPOOLAPI_H_": "SPMemPoolApi.h",
		"STAPPLER_CORE_MEMORY_SPMEMPRIORITYQUEUE_H_": "SPMemPriorityQueue.h",
		"STAPPLER_CORE_MEMORY_SPMEMRBTREE_H_": "SPMemRbtree.h",
		"STAPPLER_CORE_MEMORY_SPMEMSET_H_": "SPMemSet.h",
		"STAPPLER_CORE_MEMORY_SPMEMSTORAGEMEM_HPP_": "SPMemStorageMem.hpp",
		"STAPPLER_CORE_MEMORY_SPMEMSTRINGSTREAM_H_": "SPMemStringStream.h",
		"STAPPLER_CORE_MEMORY_SPMEMSTRING_H_": "SPMemString.h",
		"STAPPLER_CORE_MEMORY_SPMEMUSERDATA_H_": "SPMemUserData.h",
		"STAPPLER_CORE_MEMORY_SPMEMUUID_H_": "SPMemUuid.h",
		"STAPPLER_CORE_MEMORY_SPMEMVECTOR_H_": "SPMemVector.h",
		"STAPPLER_CORE_SPCOMMON_H_": "SPCommon.h",
		"STAPPLER_CORE_SPCORE_H_": "SPCore.h",
		"STAPPLER_CORE_SPMEMORY_H_": "SPMemory.h",
		"STAPPLER_CORE_STRING_SPBYTEORDER_H_": "SPByteOrder.h",
		"STAPPLER_CORE_STRING_SPBYTESREADER_H_": "SPBytesReader.h",
		"STAPPLER_CORE_STRING_SPCHARMATCHING_H_": "SPCharGroup.h",
		"STAPPLER_CORE_STRING_SPCRYPTO_H_": "SPSha.h",
		"STAPPLER_CORE_STRING_SPDATAREADER_H_": "SPBytesView.h",
		"STAPPLER_CORE_STRING_SPHASH_H_": "SPHash.h",
		"STAPPLER_CORE_STRING_SPSPANVIEW_H_": "SPSpanView.h",
		"STAPPLER_CORE_STRING_SPSTRINGVIEW_H_": "SPStringView.h",
		"STAPPLER_CORE_STRING_SPSTRING_H_": "SPString.h",
		"STAPPLER_CORE_STRING_SPUNICODE_H_": "SPUnicode.h",
		"STAPPLER_CORE_UTILS_SPBUFFER_H_": "SPBuffer.h",
		"STAPPLER_CORE_UTILS_SPHALFFLOAT_H_": "SPHalfFloat.h",
		"STAPPLER_CORE_UTILS_SPHASHTABLE_H_": "SPHashTable.h",
		"STAPPLER_CORE_UTILS_SPHTMLPARSER_H_": "SPHtmlParser.h",
		"STAPPLER_CORE_UTILS_SPLOG_H_": "SPLog.h",
		"STAPPLER_CORE_UTILS_SPMOVINGAVERAGE_H_": "SPMovingAverage.h",
		"STAPPLER_CORE_UTILS_SPPRIORITYLIST_H_": "SPPriorityList.h",
		"STAPPLER_CORE_UTILS_SPREFCONTAINER_H_": "SPRefContainer.h",
		"STAPPLER_CORE_UTILS_SPREF_H_": "SPRef.h",
		"STAPPLER_CORE_UTILS_SPSUBSCRIPTION_H_": "SPSubscription.h",
		"STAPPLER_CORE_UTILS_SPTIME_H_": "SPTime.h",
		"STAPPLER_CORE_UTILS_SPURLTLD_HPP_": "SPUrlTld.hpp",
		"STAPPLER_CORE_UTILS_SPURL_H_": "SPUrl.h",
		"STAPPLER_CORE_UTILS_SPVALID_H_": "SPValid.h",
		"STAPPLER_CRYPTO_SPCRYPTO_H_": "SPCrypto.h",
		"STAPPLER_DATA_SPDATACBOR_H_": "SPDataCbor.h",
		"STAPPLER_DATA_SPDATADECODECBOR_H_": "SPDataDecodeCbor.h",
		"STAPPLER_DATA_SPDATADECODEJSON_H_": "SPDataDecodeJson.h",
		"STAPPLER_DATA_SPDATADECODESERENITY_H_": "SPDataDecodeSerenity.h",
		"STAPPLER_DATA_SPDATADECODE_H_": "SPDataDecode.h",
		"STAPPLER_DATA_SPDATAENCODECBOR_H_": "SPDataEncodeCbor.h",
		"STAPPLER_DATA_SPDATAENCODEJSON_H_": "SPDataEncodeJson.h",
		"STAPPLER_DATA_SPDATAENCODESERENITY_H_": "SPDataEncodeSerenity.h",
		"STAPPLER_DATA_SPDATAENCODE_H_": "SPDataEncode.h",
		"STAPPLER_DATA_SPDATATRAITS_H_": "SPDataTraits.h",
		"STAPPLER_DATA_SPDATAVALUE_H_": "SPDataValue.h",
		"STAPPLER_DATA_SPDATAWRAPPER_H_": "SPDataWrapper.h",
		"STAPPLER_DATA_SPDATA_H_": "SPData.h",
		"STAPPLER_DB_EXTENSIONS_STFIELDINTARRAY_H_": "STFieldIntArray.h",
		"STAPPLER_DB_EXTENSIONS_STFIELDPOINT_H_": "STFieldPoint.h",
		"STAPPLER_DB_EXTENSIONS_STFIELDTEXTARRAY_H_": "STFieldTextArray.h",
		"STAPPLER_DB_PQ_SPDBPQDRIVER_H_": "STPqDriver.h",
		"STAPPLER_DB_PQ_STPGHANDLE_H_": "STPqHandle.h",
		"STAPPLER_DB_SQLITE_STSQLITEDRIVER_H_": "STSqliteDriver.h",
		"STAPPLER_DB_SQLITE_STSQLITEHANDLE_H_": "STSqliteHandle.h",
		"STAPPLER_DB_SQL_STSQLDRIVER_H_": "STSqlDriver.h",
		"STAPPLER_DB_SQL_STSQLHANDLE_H_": "STSqlHandle.h",
		"STAPPLER_DB_SQL_STSQLQUERY_H_": "STSqlQuery.h",
		"STAPPLER_DB_STCONTINUETOKEN_H_": "STContinueToken.h",
		"STAPPLER_DB_STINPUTFILE_H_": "STInputFile.h",
		"STAPPLER_DB_STSTORAGEADAPTER_H_": "STStorageAdapter.h",
		"STAPPLER_DB_STSTORAGEAUTH_H_": "STStorageAuth.h",
		"STAPPLER_DB_STSTORAGECONFIG_H_": "STStorageConfig.h",
		"STAPPLER_DB_STSTORAGEFIELD_H_": "STStorageField.h",
		"STAPPLER_DB_STSTORAGEFILE_H_": "STStorageFile.h",
		"STAPPLER_DB_STSTORAGEINTERFACE_H_": "STStorageBackendInterface.h",
		"STAPPLER_DB_STSTORAGEOBJECT_H_": "STStorageObject.h",
		"STAPPLER_DB_STSTORAGEQUERYLIST_H_": "STStorageQueryList.h",
		"STAPPLER_DB_STSTORAGEQUERY_H_": "STStorageQuery.h",
		"STAPPLER_DB_STSTORAGESCHEME_H_": "STStorageScheme.h",
		"STAPPLER_DB_STSTORAGETRANSACTION_H_": "STStorageTransaction.h",
		"STAPPLER_DB_STSTORAGEUSER_H_": "STStorageUser.h",
		"STAPPLER_DB_STSTORAGEWORKER_H_": "STStorageWorker.h",
		"STAPPLER_DB_STSTORAGE_H_": "STStorage.h",
		"STAPPLER_FILESYSTEM_SPFILEPATH_H_": "SPFilepath.h",
		"STAPPLER_FILESYSTEM_SPFILESYSTEM_H_": "SPFilesystem.h",
		"STAPPLER_GEOM_SPCOLOR_H_": "SPColor.h",
		"STAPPLER_GEOM_SPGEOMETRY_H_": "SPGeometry.h",
		"STAPPLER_GEOM_SPMAT4_H_": "SPMat4.h",
		"STAPPLER_GEOM_SPPADDING_H_": "SPPadding.h",
		"STAPPLER_GEOM_SPQUATERNION_H_": "SPQuaternion.h",
		"STAPPLER_GEOM_SPSIMD_H_": "SPSIMD.h",
		"STAPPLER_GEOM_SPVEC2_H_": "SPVec2.h",
		"STAPPLER_GEOM_SPVEC3_H_": "SPVec3.h",
		"STAPPLER_GEOM_SPVEC4_H": "SPVec4.h",
		"STAPPLER_IDN_SPIDN_H_": "SPIdn.h",
		"STAPPLER_NETWORK_SPNETWORKCONTEXT_H_": "SPNetworkContext.h",
		"STAPPLER_NETWORK_SPNETWORKHANDLEDATA_H_": "SPNetworkData.h",
		"STAPPLER_NETWORK_SPNETWORKHANDLE_H_": "SPNetworkHandle.h",
		"STAPPLER_SEARCH_SPSEARCHCONFIGURATION_H_": "SPSearchConfiguration.h",
		"STAPPLER_SEARCH_SPSEARCHDISTANCE_H_": "SPSearchDistance.h",
		"STAPPLER_SEARCH_SPSEARCHINDEX_H_": "SPSearchIndex.h",
		"STAPPLER_SEARCH_SPSEARCHPARSER_H_": "SPSearchParser.h",
		"STAPPLER_SQL_SPSQLINSERT_HPP_": "SPSqlInsert.hpp",
		"STAPPLER_SQL_SPSQLSELECT_HPP_": "SPSqlSelect.hpp",
		"STAPPLER_SQL_SPSQLUPDATE_HPP_": "SPSqlUpdate.hpp",
		"STAPPLER_SQL_SPSQLWHERE_HPP_": "SPSqlWhere.hpp",
		"STAPPLER_SQL_SQLQUERY_H_": "SPSql.h",
		"STAPPLER_TESS_SPTESSLINE_H_": "SPTessLine.h",
		"STAPPLER_TESS_SPTESSTYPES_H_": "SPTessTypes.h",
		"STAPPLER_TESS_SPTESS_H_": "SPTess.h",
		"STAPPLER_THREADS_SPTHREADTASKQUEUE_H_": "SPThreadTaskQueue.h",
		"STAPPLER_THREADS_SPTHREADTASK_H_": "SPThreadTask.h",
		"STAPPLER_THREADS_SPTHREAD_H_": "SPThread.h",
		"STAPPLER_VG_SPSVGREADER_H_": "SPSvgReader.h",
		"STAPPLER_VG_SPVECTORIMAGE_H_": "SPVectorImage.h",
		"STAPPLER_VG_SPVECTORPATH_H_": "SPVectorPath.h",
		"VK_BUFFER_USAGE_RAY_TRACING_BIT_KHR": "XLVk.h",
		"VK_BUFFER_USAGE_RAY_TRACING_BIT_NV": "XLVk.h",
		"VK_HOOK_DEBUG": "XLVk.h",
		"VK_USE_PLATFORM_WAYLAND_KHR": "XLVk.h",
		"VK_USE_PLATFORM_XCB_KHR": "XLVk.h",
		"XENOLITH_APPLICATION_XLAPPLICATIONEXTENSION_H_": "XLApplicationExtension.h",
		"XENOLITH_APPLICATION_XLAPPLICATIONINFO_H_": "XLApplicationInfo.h",
		"XENOLITH_APPLICATION_XLAPPLICATION_H_": "XLApplication.h",
		"XENOLITH_APPLICATION_XLEVENTHANDLER_H_": "XLEventHandler.h",
		"XENOLITH_APPLICATION_XLEVENTHEADER_H_": "XLEventHeader.h",
		"XENOLITH_APPLICATION_XLEVENT_H_": "XLEvent.h",
		"XENOLITH_APPLICATION_XLMESHINDEX_H_": "XLMeshIndex.h",
		"XENOLITH_APPLICATION_XLRESOURCECACHE_H_": "XLResourceCache.h",
		"XENOLITH_APPLICATION_XLRESOURCEOBJECT_H_": "XLResourceObject.h",
		"XENOLITH_APPLICATION_XLRESOURCEOWNER_H_": "XLResourceOwner.h",
		"XENOLITH_APPLICATION_XLTEMPORARYRESOURCE_H_": "XLTemporaryResource.h",
		"XENOLITH_APPLICATION_XLTEXTURE_H_": "XLTexture.h",
		"XENOLITH_BACKEND_VKGUI_PLATFORM_LINUX_XLVKGUIVIEWIMPL_H_": "XLVkGuiViewImpl.h",
		"XENOLITH_BACKEND_VKGUI_XLVKGUIAPPLICATION_H_": "XLVkGuiApplication.h",
		"XENOLITH_BACKEND_VKGUI_XLVKGUICONFIG_H_": "XLVkGuiConfig.h",
		"XENOLITH_BACKEND_VKGUI_XLVKGUIPLATFORM_H_": "XLVkGuiPlatform.h",
		"XENOLITH_BACKEND_VKGUI_XLVKSWAPCHAIN_H_": "XLVkSwapchain.h",
		"XENOLITH_BACKEND_VKGUI_XLVKVIEW_H_": "XLVkView.h",
		"XENOLITH_BACKEND_VK_XLMATERIALCOMPILER_H_": "XLVkMaterialCompiler.h",
		"XENOLITH_BACKEND_VK_XLVKALLOCATOR_H_": "XLVkAllocator.h",
		"XENOLITH_BACKEND_VK_XLVKATTACHMENT_H_": "XLVkAttachment.h",
		"XENOLITH_BACKEND_VK_XLVKBUFFER_H_": "XLVkBuffer.h",
		"XENOLITH_BACKEND_VK_XLVKCONFIG_H_": "XLVkConfig.h",
		"XENOLITH_BACKEND_VK_XLVKDEVICEQUEUE_H_": "XLVkDeviceQueue.h",
		"XENOLITH_BACKEND_VK_XLVKDEVICE_H_": "XLVkDevice.h",
		"XENOLITH_BACKEND_VK_XLVKINFO_H_": "XLVkInfo.h",
		"XENOLITH_BACKEND_VK_XLVKINSTANCE_H_": "XLVkInstance.h",
		"XENOLITH_BACKEND_VK_XLVKLOOP_H_": "XLVkLoop.h",
		"XENOLITH_BACKEND_VK_XLVKMESHCOMPILER_H_": "XLVkMeshCompiler.h",
		"XENOLITH_BACKEND_VK_XLVKOBJECT_H_": "XLVkObject.h",
		"XENOLITH_BACKEND_VK_XLVKPIPELINE_H_": "XLVkPipeline.h",
		"XENOLITH_BACKEND_VK_XLVKPLATFORM_H_": "XLVkPlatform.h",
		"XENOLITH_BACKEND_VK_XLVKQUEUEPASS_H_": "XLVkQueuePass.h",
		"XENOLITH_BACKEND_VK_XLVKRENDERPASSIMPL_H_": "XLVkRenderPass.h",
		"XENOLITH_BACKEND_VK_XLVKRENDERQUEUECOMPILER_H_": "XLVkRenderQueueCompiler.h",
		"XENOLITH_BACKEND_VK_XLVKSYNC_H_": "XLVkSync.h",
		"XENOLITH_BACKEND_VK_XLVKTEXTURESET_H_": "XLVkTextureSet.h",
		"XENOLITH_BACKEND_VK_XLVKTRANSFERQUEUE_H_": "XLVkTransferQueue.h",
		"XENOLITH_BACKEND_VK_XLVK_H_": "XLVk.h",
		"XENOLITH_CORE_XLCOMMON_H_": "XLCommon.h",
		"XENOLITH_CORE_XLCOREATTACHMENT_H_": "XLCoreAttachment.h",
		"XENOLITH_CORE_XLCORECONFIG_H_": "XLCoreConfig.h",
		"XENOLITH_CORE_XLCOREDEVICE_H_": "XLCoreDevice.h",
		"XENOLITH_CORE_XLCOREDYNAMICIMAGE_H_": "XLCoreDynamicImage.h",
		"XENOLITH_CORE_XLCOREENUM_H_": "XLCoreEnum.h",
		"XENOLITH_CORE_XLCOREFRAMECACHE_H_": "XLCoreFrameCache.h",
		"XENOLITH_CORE_XLCOREFRAMEEMITTER_H_": "XLCoreFrameEmitter.h",
		"XENOLITH_CORE_XLCOREFRAMEHANDLE_H_": "XLCoreFrameHandle.h",
		"XENOLITH_CORE_XLCOREFRAMEQUEUE_H_": "XLCoreFrameQueue.h",
		"XENOLITH_CORE_XLCOREFRAMEREQUEST_H_": "XLCoreFrameRequest.h",
		"XENOLITH_CORE_XLCOREIMAGESTORAGE_H_": "XLCoreImageStorage.h",
		"XENOLITH_CORE_XLCOREINFO_H_": "XLCoreInfo.h",
		"XENOLITH_CORE_XLCOREINPUT_H_": "XLCoreInput.h",
		"XENOLITH_CORE_XLCOREINSTANCE_H_": "XLCoreInstance.h",
		"XENOLITH_CORE_XLCORELOOP_H_": "XLCoreLoop.h",
		"XENOLITH_CORE_XLCOREMATERIAL_H_": "XLCoreMaterial.h",
		"XENOLITH_CORE_XLCOREMESH_H_": "XLCoreMesh.h",
		"XENOLITH_CORE_XLCOREOBJECT_H_": "XLCoreObject.h",
		"XENOLITH_CORE_XLCOREPIPELINEINFO_H_": "XLCorePipelineInfo.h",
		"XENOLITH_CORE_XLCOREPLATFORM_H_": "XLCorePlatform.h",
		"XENOLITH_CORE_XLCOREQUEUEDATA_H_": "XLCoreQueueData.h",
		"XENOLITH_CORE_XLCOREQUEUEPASS_H_": "XLCoreQueuePass.h",
		"XENOLITH_CORE_XLCOREQUEUE_H_": "XLCoreQueue.h",
		"XENOLITH_CORE_XLCORERESOURCE_H_": "XLCoreResource.h",
		"XENOLITH_CORE_XLCORE_H_": "XLCore.h",
		"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXDBUS_H_": "XLPlatformLinuxDbus.h",
		"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXVIEW_H_": "XLPlatformLinuxView.h",
		"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXWAYLAND_H_": "XLPlatformLinuxWayland.h",
		"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXXCBVIEW_H_": "XLPlatformLinuxXcbView.h",
		"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXXCB_H_": "XLPlatformLinuxXcb.h",
		"XENOLITH_PLATFORM_LINUX_XLPLATFORMLINUXXKB_H_": "XLPlatformLinuxXkb.h",
		"XENOLITH_PLATFORM_XLPLATFORMVIEWINTERFACE_H_": "XLPlatformViewInterface.h",
		"XENOLITH_PLATFORM_XLPLATFORM_H_": "XLPlatform.h",
		"XENOLITH_PLATFORM_XLPLATFROMLINUXWAYLANDVIEW_H_": "XLPlatformLinuxWaylandView.h",
		"XENOLITH_PLATFORM_XLVIEWCOMMANDLINE_H_": "XLViewCommandLine.h",
		"XENOLITH_RESOURCES_ASSETS_XLASSETLIBRARY_H_": "XLAssetLibrary.h",
		"XENOLITH_RESOURCES_ASSETS_XLASSET_H_": "XLAsset.h",
		"XENOLITH_RESOURCES_NETWORK_XLNETWORKCONTROLLER_H_": "XLNetworkController.h",
		"XENOLITH_RESOURCES_NETWORK_XLNETWORKREQUEST_H_": "XLNetworkRequest.h",
		"XENOLITH_RESOURCES_NETWORK_XLNETWORK_H_": "XLNetwork.h",
		"XENOLITH_RESOURCES_STORAGE_XLSTORAGECOMPONENT_H_": "XLStorageComponent.h",
		"XENOLITH_RESOURCES_STORAGE_XLSTORAGESERVER_H_": "XLStorageServer.h",
		"XENOLITH_SCENE_ACTIONS_XLACTIONEASE_H_": "XLActionEase.h",
		"XENOLITH_SCENE_ACTIONS_XLACTIONMANAGER_H_": "XLActionManager.h",
		"XENOLITH_SCENE_ACTIONS_XLACTION_H_": "XLAction.h",
		"XENOLITH_SCENE_DIRECTOR_XLDIRECTOR_H_": "XLDirector.h",
		"XENOLITH_SCENE_DIRECTOR_XLFRAMECONTEXT_H_": "XLFrameContext.h",
		"XENOLITH_SCENE_DIRECTOR_XLFRAMEINFO_H_": "XLFrameInfo.h",
		"XENOLITH_SCENE_DIRECTOR_XLSCHEDULER_H_": "XLScheduler.h",
		"XENOLITH_SCENE_DIRECTOR_XLVIEW_H_": "XLView.h",
		"XENOLITH_SCENE_INPUT_XLGESTURERECOGNIZER_H_": "XLGestureRecognizer.h",
		"XENOLITH_SCENE_INPUT_XLINPUTDISPATCHER_H_": "XLInputDispatcher.h",
		"XENOLITH_SCENE_INPUT_XLINPUTLISTENER_H_": "XLInputListener.h",
		"XENOLITH_SCENE_INPUT_XLINPUT_H_": "XLInput.h",
		"XENOLITH_SCENE_INPUT_XLTEXTINPUTMANAGER_H_": "XLTextInputManager.h",
		"XENOLITH_SCENE_NODES_XLCOMPONENT_H_": "XLComponent.h",
		"XENOLITH_SCENE_NODES_XLDYNAMICSTATENODE_H_": "XLDynamicStateNode.h",
		"XENOLITH_SCENE_NODES_XLEVENTLISTENER_H_": "XLEventListener.h",
		"XENOLITH_SCENE_NODES_XLNODEINFO_H_": "XLNodeInfo.h",
		"XENOLITH_SCENE_NODES_XLNODE_H_": "XLNode.h",
		"XENOLITH_SCENE_NODES_XLSCENECONTENT_H_": "XLSceneContent.h",
		"XENOLITH_SCENE_NODES_XLSCENE_H_": "XLScene.h",
		"XENOLITH_SCENE_NODES_XLSUBSCRIPTIONLISTENER_H_": "XLSubscriptionListener.h",
		"XENOLITH_SCENE_XLSCENECONFIG_H_": "XLSceneConfig.h",
		"XLASSERT": "XLCore.h",
		"XL_ASSERT": "XLCore.h",
		"XL_DECLARE_EVENT": "XLEventHeader.h",
		"XL_DECLARE_EVENT_CLASS": "XLEventHeader.h",
		"XL_PROFILE_BEGIN": "XLCore.h",
		"XL_PROFILE_DEBUG": "XLCore.h",
		"XL_PROFILE_END": "XLCore.h",
		"XL_USE_64_BIT_PTR_DEFINES": "XLCoreObject.h",
		"XL_VK_FINALIZE_INVALID_FRAMES": "XLVk.h",
		"XL_VK_MIN_LOADER_MESSAGE_SEVERITY": "XLVk.h",
		"XL_VK_MIN_MESSAGE_SEVERITY": "XLVk.h",
		"XL_WAYLAND_DEBUG": "XLPlatformLinuxWayland.h",
		"XL_X11_DEBUG": "XLPlatformLinuxXcb.h",
		"__STDC_WANT_IEC_60559_TYPES_EXT__": "SPCore.h",
		"_spMain": "SPCore.h"
	}
}