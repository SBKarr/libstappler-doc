{
	"_kind": "file",
	"_name": "/home/sbkarr/stappler/xenolith/libstappler/modules/db/STStorage.h",
	"childs": [{
		"_kind": "include directive",
		"_name": "SPCommon.h",
		"id": 93825009199040,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/build/host/clang/debug/common/include/home/sbkarr/stappler/xenolith/libstappler/common/core/SPCommon.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPCommon.h"
	}, {
		"_kind": "include directive",
		"_name": "SPData.h",
		"id": 93825009199216,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/modules/data/SPData.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPData.h"
	}, {
		"_kind": "include directive",
		"_name": "SPMemUserData.h",
		"id": 140737115367712,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/common/memory/SPMemUserData.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPMemUserData.h"
	}, {
		"_kind": "include directive",
		"_name": "SPMemory.h",
		"id": 140737115000320,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/common/core/SPMemory.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPMemory.h"
	}, {
		"_kind": "include directive",
		"_name": "STStorageConfig.h",
		"id": 140737116186160,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/modules/db/STStorageConfig.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "STStorageConfig.h"
	}, {
		"_kind": "include directive",
		"_name": "bitset",
		"id": 140737086542160,
		"include": "/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bitset",
		"include_kind": "system",
		"kind": "include directive",
		"name": "bitset"
	}, {
		"_fullName": "MODULES_DB_STSTORAGE_H_",
		"_kind": "macro definition",
		"_name": "MODULES_DB_STSTORAGE_H_",
		"id": 140737088440864,
		"is_function_like": false,
		"is_object_like": true,
		"is_variadic": false,
		"kind": "macro definition",
		"name": "MODULES_DB_STSTORAGE_H_",
		"replacement": ""
	}, {
		"_fullName": "::stappler",
		"_kind": "namespace",
		"_name": "stappler",
		"childs": [{
			"_fullName": "::stappler::db",
			"_kind": "namespace",
			"_name": "db",
			"childs": [{
				"_kind": "using directive",
				"_name": "",
				"id": 93825011937968,
				"kind": "using directive",
				"name": "",
				"target": {
					"name": "mem_pool",
					"objects": [{
						"_fullName": "::stappler::mem_pool",
						"_kind": "namespace",
						"_name": "mem_pool",
						"id": 93825001318768,
						"is_anonymous": false,
						"is_inline": false,
						"is_nested": true,
						"kind": "namespace",
						"name": "mem_pool",
						"scope": {
							"name": "mem_pool"
						}
					}, {
						"_fullName": "::stappler::mem_pool",
						"_kind": "namespace",
						"_name": "mem_pool",
						"id": 140737109764496,
						"is_anonymous": false,
						"is_inline": false,
						"is_nested": true,
						"kind": "namespace",
						"name": "mem_pool",
						"scope": {
							"name": "mem_pool"
						}
					}, {
						"_fullName": "::stappler::mem_pool",
						"_kind": "namespace",
						"_name": "mem_pool",
						"id": 93825004822192,
						"is_anonymous": false,
						"is_inline": false,
						"is_nested": true,
						"kind": "namespace",
						"name": "mem_pool",
						"scope": {
							"name": "mem_pool"
						}
					}, {
						"_fullName": "::stappler::mem_pool",
						"_kind": "namespace",
						"_name": "mem_pool",
						"id": 93825002631552,
						"is_anonymous": false,
						"is_inline": false,
						"is_nested": true,
						"kind": "namespace",
						"name": "mem_pool",
						"scope": {
							"name": "mem_pool"
						}
					}, {
						"_fullName": "::stappler::mem_pool",
						"_kind": "namespace",
						"_name": "mem_pool",
						"id": 93825003832016,
						"is_anonymous": false,
						"is_inline": false,
						"is_nested": true,
						"kind": "namespace",
						"name": "mem_pool",
						"scope": {
							"name": "mem_pool"
						}
					}]
				}
			}, {
				"_fullName": "::stappler::db::StorageRoot",
				"_kind": "class",
				"_name": "StorageRoot",
				"childs": null,
				"class_kind": "class",
				"id": 140737130612992,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "StorageRoot",
				"scope": {
					"name": "StorageRoot"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::InputFile",
				"_kind": "class",
				"_name": "InputFile",
				"childs": null,
				"class_kind": "struct",
				"id": 140737145471536,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "InputFile",
				"scope": {
					"name": "InputFile"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::Adapter",
				"_kind": "class",
				"_name": "Adapter",
				"childs": null,
				"class_kind": "class",
				"id": 140736987036224,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "Adapter",
				"scope": {
					"name": "Adapter"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::Transaction",
				"_kind": "class",
				"_name": "Transaction",
				"childs": null,
				"class_kind": "class",
				"id": 140737090500976,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "Transaction",
				"scope": {
					"name": "Transaction"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::Worker",
				"_kind": "class",
				"_name": "Worker",
				"childs": null,
				"class_kind": "class",
				"id": 140737109245952,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "Worker",
				"scope": {
					"name": "Worker"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::Query",
				"_kind": "class",
				"_name": "Query",
				"childs": null,
				"class_kind": "class",
				"id": 140736985996880,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "Query",
				"scope": {
					"name": "Query"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::BackendInterface",
				"_kind": "class",
				"_name": "BackendInterface",
				"childs": null,
				"class_kind": "class",
				"id": 93825004367280,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "BackendInterface",
				"scope": {
					"name": "BackendInterface"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::Binder",
				"_kind": "class",
				"_name": "Binder",
				"childs": null,
				"class_kind": "class",
				"id": 93825003174528,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "Binder",
				"scope": {
					"name": "Binder"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::QueryInterface",
				"_kind": "class",
				"_name": "QueryInterface",
				"childs": null,
				"class_kind": "class",
				"id": 93825007576352,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "QueryInterface",
				"scope": {
					"name": "QueryInterface"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::ResultCursor",
				"_kind": "class",
				"_name": "ResultCursor",
				"childs": null,
				"class_kind": "class",
				"id": 93825012324048,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "ResultCursor",
				"scope": {
					"name": "ResultCursor"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::Scheme",
				"_kind": "class",
				"_name": "Scheme",
				"childs": null,
				"class_kind": "class",
				"id": 93825004722112,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "Scheme",
				"scope": {
					"name": "Scheme"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::Field",
				"_kind": "class",
				"_name": "Field",
				"childs": null,
				"class_kind": "class",
				"id": 93825007597408,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "Field",
				"scope": {
					"name": "Field"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::Object",
				"_kind": "class",
				"_name": "Object",
				"childs": null,
				"class_kind": "class",
				"id": 93825006225456,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "Object",
				"scope": {
					"name": "Object"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::User",
				"_kind": "class",
				"_name": "User",
				"childs": null,
				"class_kind": "class",
				"id": 93825012103408,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "User",
				"scope": {
					"name": "User"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldText",
				"_kind": "class",
				"_name": "FieldText",
				"childs": null,
				"class_kind": "struct",
				"id": 93825004723152,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldText",
				"scope": {
					"name": "FieldText"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldPassword",
				"_kind": "class",
				"_name": "FieldPassword",
				"childs": null,
				"class_kind": "struct",
				"id": 93825006939968,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldPassword",
				"scope": {
					"name": "FieldPassword"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldExtra",
				"_kind": "class",
				"_name": "FieldExtra",
				"childs": null,
				"class_kind": "struct",
				"id": 93825006321952,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldExtra",
				"scope": {
					"name": "FieldExtra"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldFile",
				"_kind": "class",
				"_name": "FieldFile",
				"childs": null,
				"class_kind": "struct",
				"id": 93825005217504,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldFile",
				"scope": {
					"name": "FieldFile"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldImage",
				"_kind": "class",
				"_name": "FieldImage",
				"childs": null,
				"class_kind": "struct",
				"id": 93825003846320,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldImage",
				"scope": {
					"name": "FieldImage"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldObject",
				"_kind": "class",
				"_name": "FieldObject",
				"childs": null,
				"class_kind": "struct",
				"id": 93825012102736,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldObject",
				"scope": {
					"name": "FieldObject"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldArray",
				"_kind": "class",
				"_name": "FieldArray",
				"childs": null,
				"class_kind": "struct",
				"id": 93825004946272,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldArray",
				"scope": {
					"name": "FieldArray"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldView",
				"_kind": "class",
				"_name": "FieldView",
				"childs": null,
				"class_kind": "struct",
				"id": 93825006192528,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldView",
				"scope": {
					"name": "FieldView"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldFullTextView",
				"_kind": "class",
				"_name": "FieldFullTextView",
				"childs": null,
				"class_kind": "struct",
				"id": 93825007560816,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldFullTextView",
				"scope": {
					"name": "FieldFullTextView"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::FieldCustom",
				"_kind": "class",
				"_name": "FieldCustom",
				"childs": null,
				"class_kind": "struct",
				"id": 93825011734096,
				"is_declaration": true,
				"is_definition": false,
				"is_final": false,
				"kind": "class",
				"name": "FieldCustom",
				"scope": {
					"name": "FieldCustom"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::internals",
				"_kind": "namespace",
				"_name": "internals",
				"childs": [{
					"_fullName": "::stappler::db::internals::RequestData",
					"_kind": "class",
					"_name": "RequestData",
					"childs": [{
						"_fullName": "::stappler::db::internals::RequestData::exists",
						"_kind": "member variable",
						"_name": "exists",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "false"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "bool",
								"builtin_type_kind": "bool",
								"kind": "builtin"
							}
						},
						"id": 140737093305328,
						"is_mutable": false,
						"kind": "member variable",
						"name": "exists",
						"type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						}
					}, {
						"_fullName": "::stappler::db::internals::RequestData::address",
						"_kind": "member variable",
						"_name": "address",
						"id": 93825006590384,
						"is_mutable": false,
						"kind": "member variable",
						"name": "address",
						"type": {
							"_typeName": "stappler::StringView",
							"kind": "user_defined",
							"target": {
								"name": "stappler::StringView",
								"objects": [{
									"_fullName": "::stappler::StringView",
									"_kind": "type alias",
									"_name": "StringView",
									"id": 93824997448656,
									"kind": "type alias",
									"name": "StringView",
									"underlying_type": {
										"_typeName": "StringViewBase<char>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "StringViewBase",
											"objects": [{
												"_fullName": "::stappler::StringViewBase<typename>",
												"_kind": "class template",
												"_name": "StringViewBase",
												"class": {
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class",
													"_name": "StringViewBase",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "BytesReader<_CharType>",
														"access_specifier": "public",
														"id": 93824998090352,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "BytesReader<_CharType>",
														"type": {
															"_typeName": "BytesReader<_CharType>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "BytesReader",
																"objects": [{
																	"_fullName": "::stappler::BytesReader<typename>",
																	"_kind": "class template",
																	"_name": "BytesReader",
																	"class": {
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class",
																		"_name": "BytesReader",
																		"class_kind": "class",
																		"id": 140736954953792,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "BytesReader",
																		"scope": {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824998648144,
																	"kind": "class template",
																	"name": "BytesReader",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 140737098599232,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "BytesReader",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "_CharType"
														}
													}],
													"class_kind": "class",
													"id": 140737094580320,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "StringViewBase",
													"scope": {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93824999493216,
												"kind": "class template",
												"name": "StringViewBase",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "_CharType",
													"id": 93824999493712,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_CharType"
												}],
												"scope":  {
													"is_templated": true,
													"name": "StringViewBase",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}]
												}
											}]
										},
										"unexposed_arguments": "char"
									}
								}]
							}
						}
					}, {
						"_fullName": "::stappler::db::internals::RequestData::hostname",
						"_kind": "member variable",
						"_name": "hostname",
						"id": 93825005084048,
						"is_mutable": false,
						"kind": "member variable",
						"name": "hostname",
						"type": {
							"_typeName": "stappler::StringView",
							"kind": "user_defined",
							"target": {
								"name": "stappler::StringView",
								"objects": [{
									"_fullName": "::stappler::StringView",
									"_kind": "type alias",
									"_name": "StringView",
									"id": 93824997448656,
									"kind": "type alias",
									"name": "StringView",
									"underlying_type": {
										"_typeName": "StringViewBase<char>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "StringViewBase",
											"objects": [{
												"_fullName": "::stappler::StringViewBase<typename>",
												"_kind": "class template",
												"_name": "StringViewBase",
												"class": {
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class",
													"_name": "StringViewBase",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "BytesReader<_CharType>",
														"access_specifier": "public",
														"id": 93824998090352,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "BytesReader<_CharType>",
														"type": {
															"_typeName": "BytesReader<_CharType>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "BytesReader",
																"objects": [{
																	"_fullName": "::stappler::BytesReader<typename>",
																	"_kind": "class template",
																	"_name": "BytesReader",
																	"class": {
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class",
																		"_name": "BytesReader",
																		"class_kind": "class",
																		"id": 140736954953792,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "BytesReader",
																		"scope": {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824998648144,
																	"kind": "class template",
																	"name": "BytesReader",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 140737098599232,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "BytesReader",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "_CharType"
														}
													}],
													"class_kind": "class",
													"id": 140737094580320,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "StringViewBase",
													"scope": {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93824999493216,
												"kind": "class template",
												"name": "StringViewBase",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "_CharType",
													"id": 93824999493712,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_CharType"
												}],
												"scope":  {
													"is_templated": true,
													"name": "StringViewBase",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}]
												}
											}]
										},
										"unexposed_arguments": "char"
									}
								}]
							}
						}
					}, {
						"_fullName": "::stappler::db::internals::RequestData::uri",
						"_kind": "member variable",
						"_name": "uri",
						"id": 93825007238448,
						"is_mutable": false,
						"kind": "member variable",
						"name": "uri",
						"type": {
							"_typeName": "stappler::StringView",
							"kind": "user_defined",
							"target": {
								"name": "stappler::StringView",
								"objects": [{
									"_fullName": "::stappler::StringView",
									"_kind": "type alias",
									"_name": "StringView",
									"id": 93824997448656,
									"kind": "type alias",
									"name": "StringView",
									"underlying_type": {
										"_typeName": "StringViewBase<char>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "StringViewBase",
											"objects": [{
												"_fullName": "::stappler::StringViewBase<typename>",
												"_kind": "class template",
												"_name": "StringViewBase",
												"class": {
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class",
													"_name": "StringViewBase",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "BytesReader<_CharType>",
														"access_specifier": "public",
														"id": 93824998090352,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "BytesReader<_CharType>",
														"type": {
															"_typeName": "BytesReader<_CharType>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "BytesReader",
																"objects": [{
																	"_fullName": "::stappler::BytesReader<typename>",
																	"_kind": "class template",
																	"_name": "BytesReader",
																	"class": {
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class",
																		"_name": "BytesReader",
																		"class_kind": "class",
																		"id": 140736954953792,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "BytesReader",
																		"scope": {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824998648144,
																	"kind": "class template",
																	"name": "BytesReader",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 140737098599232,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "BytesReader",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "_CharType"
														}
													}],
													"class_kind": "class",
													"id": 140737094580320,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "StringViewBase",
													"scope": {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93824999493216,
												"kind": "class template",
												"name": "StringViewBase",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "_CharType",
													"id": 93824999493712,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_CharType"
												}],
												"scope":  {
													"is_templated": true,
													"name": "StringViewBase",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}]
												}
											}]
										},
										"unexposed_arguments": "char"
									}
								}]
							}
						}
					}, {
						"_fullName": "::stappler::db::internals::RequestData::operator bool()",
						"_kind": "conversion operator",
						"_name": "operator bool",
						"body_kind": "definition",
						"cv_qualifier": "none",
						"id": 93824998772144,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_explicit": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "conversion operator",
						"name": "operator bool",
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "()"
					}],
					"class_kind": "struct",
					"id": 93824998771808,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "RequestData",
					"scope": {
						"name": "RequestData"
					},
					"semantic_scope": ""
				}, {
					"_fullName": "::stappler::db::internals::getAdapterFromContext()",
					"_kind": "function",
					"_name": "getAdapterFromContext",
					"body_kind": "declaration",
					"id": 140737103621600,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "getAdapterFromContext",
					"return_type": {
						"_typeName": "stappler::db::Adapter",
						"kind": "user_defined",
						"target": {
							"name": "stappler::db::Adapter",
							"objects": [{
								"_fullName": "::stappler::db::Adapter",
								"_kind": "class",
								"_name": "Adapter",
								"class_kind": "class",
								"id": 140736987036224,
								"is_declaration": true,
								"is_definition": false,
								"is_final": false,
								"kind": "class",
								"name": "Adapter",
								"scope": {
									"name": "Adapter"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::internals::scheduleAyncDbTask(Callback<Function<void (const stappler::db::Transaction &)> (memory::pool_t *)> const&)",
					"_kind": "function",
					"_name": "scheduleAyncDbTask",
					"body_kind": "declaration",
					"id": 140737121722384,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "scheduleAyncDbTask",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "setupCb",
						"id": 93825008149328,
						"kind": "function parameter",
						"name": "setupCb",
						"type": {
							"_typeName": "Callback<Function<void (const stappler::db::Transaction &)> (memory::pool_t *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<Function<void (const stappler::db::Transaction &)> (memory::pool_t *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<Function<void (const stappler::db::Transaction &)> (memory::pool_t *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "Function<void (const stappler::db::Transaction &)> (memory::pool_t *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(Callback<Function<void (const stappler::db::Transaction &)> (memory::pool_t *)> const&)"
				}, {
					"_fullName": "::stappler::db::internals::isAdministrative()",
					"_kind": "function",
					"_name": "isAdministrative",
					"body_kind": "declaration",
					"id": 140737119669744,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "isAdministrative",
					"return_type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::internals::getDocuemntRoot()",
					"_kind": "function",
					"_name": "getDocuemntRoot",
					"body_kind": "declaration",
					"id": 140737086782000,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "getDocuemntRoot",
					"return_type": {
						"_typeName": "stappler::mem_pool::String",
						"kind": "user_defined",
						"target": {
							"name": "stappler::mem_pool::String",
							"objects": [{
								"_fullName": "::stappler::mem_pool::String",
								"_kind": "type alias",
								"_name": "String",
								"id": 93824997882560,
								"kind": "type alias",
								"name": "String",
								"underlying_type": {
									"_typeName": "stappler::memory::string",
									"kind": "user_defined",
									"target": {
										"name": "stappler::memory::string",
										"objects": [{
											"_fullName": "::stappler::memory::string",
											"_kind": "type alias",
											"_name": "string",
											"id": 93824998026096,
											"kind": "type alias",
											"name": "string",
											"underlying_type": {
												"_typeName": "basic_string<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "basic_string",
													"objects": [{
														"_fullName": "::stappler::memory::basic_string<typename>",
														"_kind": "class template",
														"_name": "basic_string",
														"class": {
															"_fullName": "::stappler::memory::basic_string<typename>",
															"_kind": "class",
															"_name": "basic_string",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "AllocPool",
																"access_specifier": "public",
																"id": 93824998081728,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "AllocPool",
																"type": {
																	"_typeName": "stappler::memory::AllocPool",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::memory::AllocPool",
																		"objects": [{
																			"_fullName": "::stappler::memory::AllocPool",
																			"_kind": "class",
																			"_name": "AllocPool",
																			"class_kind": "struct",
																			"id": 140737108514624,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "AllocPool",
																			"scope": {
																				"name": "AllocPool"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "class",
															"id": 93824998462880,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "basic_string",
															"scope": {
																"is_templated": true,
																"name": "basic_string",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "CharType",
																	"id": 93824997240640,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824997240432,
														"kind": "class template",
														"name": "basic_string",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "CharType",
															"id": 93824997240640,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "basic_string",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "CharType",
																"id": 93824997240640,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							}]
						}
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::internals::getFileScheme()",
					"_kind": "function",
					"_name": "getFileScheme",
					"body_kind": "declaration",
					"id": 93825009313536,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "getFileScheme",
					"return_type": {
						"_typeName": "stappler::db::Scheme const*",
						"kind": "pointer",
						"pointee": {
							"_typeName": "stappler::db::Scheme const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::db::Scheme",
								"kind": "user_defined",
								"target": {
									"name": "stappler::db::Scheme",
									"objects": [{
										"_fullName": "::stappler::db::Scheme",
										"_kind": "class",
										"_name": "Scheme",
										"class_kind": "class",
										"id": 93825004722112,
										"is_declaration": true,
										"is_definition": false,
										"is_final": false,
										"kind": "class",
										"name": "Scheme",
										"scope": {
											"name": "Scheme"
										},
										"semantic_scope": ""
									}]
								}
							}
						}
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::internals::getUserScheme()",
					"_kind": "function",
					"_name": "getUserScheme",
					"body_kind": "declaration",
					"id": 93825012102128,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "getUserScheme",
					"return_type": {
						"_typeName": "stappler::db::Scheme const*",
						"kind": "pointer",
						"pointee": {
							"_typeName": "stappler::db::Scheme const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::db::Scheme",
								"kind": "user_defined",
								"target": {
									"name": "stappler::db::Scheme",
									"objects": [{
										"_fullName": "::stappler::db::Scheme",
										"_kind": "class",
										"_name": "Scheme",
										"class_kind": "class",
										"id": 93825004722112,
										"is_declaration": true,
										"is_definition": false,
										"is_final": false,
										"kind": "class",
										"name": "Scheme",
										"scope": {
											"name": "Scheme"
										},
										"semantic_scope": ""
									}]
								}
							}
						}
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::internals::getFileFromContext(int64_t)",
					"_kind": "function",
					"_name": "getFileFromContext",
					"body_kind": "declaration",
					"id": 93825006635888,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "getFileFromContext",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 140736955754656,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "int64_t",
							"kind": "user_defined",
							"target": {
								"name": "int64_t"
							}
						}
					}],
					"return_type":  {
						"_typeName": "stappler::db::InputFile*",
						"kind": "pointer",
						"pointee": {
							"_typeName": "stappler::db::InputFile",
							"kind": "user_defined",
							"target": {
								"name": "stappler::db::InputFile",
								"objects": [{
									"_fullName": "::stappler::db::InputFile",
									"_kind": "class",
									"_name": "InputFile",
									"class_kind": "struct",
									"id": 140737145471536,
									"is_declaration": true,
									"is_definition": false,
									"is_final": false,
									"kind": "class",
									"name": "InputFile",
									"scope": {
										"name": "InputFile"
									},
									"semantic_scope": ""
								}]
							}
						}
					},
					"semantic_scope": "",
					"signature": "(int64_t)"
				}, {
					"_fullName": "::stappler::db::internals::getRequestData()",
					"_kind": "function",
					"_name": "getRequestData",
					"body_kind": "declaration",
					"id": 93825004723600,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "getRequestData",
					"return_type": {
						"_typeName": "stappler::db::internals::RequestData",
						"kind": "user_defined",
						"target": {
							"name": "stappler::db::internals::RequestData",
							"objects": [{
								"_fullName": "::stappler::db::internals::RequestData",
								"_kind": "class",
								"_name": "RequestData",
								"class_kind": "struct",
								"id": 93824998771808,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "RequestData",
								"scope": {
									"name": "RequestData"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::internals::getUserIdFromContext()",
					"_kind": "function",
					"_name": "getUserIdFromContext",
					"body_kind": "declaration",
					"id": 93825003916576,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "getUserIdFromContext",
					"return_type": {
						"_typeName": "int64_t",
						"kind": "user_defined",
						"target": {
							"name": "int64_t"
						}
					},
					"semantic_scope": "",
					"signature": "()"
				}],
				"id": 140737093945104,
				"is_anonymous": false,
				"is_inline": false,
				"is_nested": false,
				"kind": "namespace",
				"name": "internals",
				"scope": {
					"name": "internals"
				}
			}, {
				"_fullName": "::stappler::db::messages",
				"_kind": "namespace",
				"_name": "messages",
				"childs": [{
					"_fullName": "::stappler::db::messages::isDebugEnabled()",
					"_kind": "function",
					"_name": "isDebugEnabled",
					"body_kind": "declaration",
					"id": 93825001891072,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "isDebugEnabled",
					"return_type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::messages::setDebugEnabled(bool)",
					"_kind": "function",
					"_name": "setDebugEnabled",
					"body_kind": "declaration",
					"id": 93825008148800,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "setDebugEnabled",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825010986640,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						}
					}],
					"return_type":  {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(bool)"
				}, {
					"_fullName": "::stappler::db::messages::_addErrorMessage(stappler::mem_pool::Value&&)",
					"_kind": "function",
					"_name": "_addErrorMessage",
					"body_kind": "declaration",
					"id": 93825010468304,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "_addErrorMessage",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825004716992,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::mem_pool::Value&&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Value",
								"kind": "user_defined",
								"target": {
									"name": "stappler::mem_pool::Value",
									"objects": [{
										"_fullName": "::stappler::mem_pool::Value",
										"_kind": "type alias",
										"_name": "Value",
										"id": 93825004822544,
										"kind": "type alias",
										"name": "Value",
										"underlying_type": {
											"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "stappler::data::ValueTemplate",
												"objects": [{
													"_fullName": "::stappler::data::ValueTemplate<typename>",
													"_kind": "class template",
													"_name": "ValueTemplate",
													"class": {
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class",
														"_name": "ValueTemplate",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "Interface::AllocBaseType",
															"access_specifier": "public",
															"id": 140737091294512,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "Interface::AllocBaseType",
															"type": {
																"_typeName": "Interface::AllocBaseType",
																"kind": "unexposed",
																"name": "Interface::AllocBaseType"
															}
														}],
														"class_kind": "class",
														"id": 93825001914496,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "ValueTemplate",
														"scope": {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825003299040,
													"kind": "class template",
													"name": "ValueTemplate",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003299248,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}],
													"scope":  {
														"is_templated": true,
														"name": "ValueTemplate",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::memory::PoolInterface"
										}
									}]
								}
							},
							"reference_kind": "rvalue"
						}
					}],
					"return_type":  {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Value&&)"
				}, {
					"_fullName": "::stappler::db::messages::_addDebugMessage(stappler::mem_pool::Value&&)",
					"_kind": "function",
					"_name": "_addDebugMessage",
					"body_kind": "declaration",
					"id": 93825005573984,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "_addDebugMessage",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 140737141766288,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::mem_pool::Value&&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Value",
								"kind": "user_defined",
								"target": {
									"name": "stappler::mem_pool::Value",
									"objects": [{
										"_fullName": "::stappler::mem_pool::Value",
										"_kind": "type alias",
										"_name": "Value",
										"id": 93825004822544,
										"kind": "type alias",
										"name": "Value",
										"underlying_type": {
											"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "stappler::data::ValueTemplate",
												"objects": [{
													"_fullName": "::stappler::data::ValueTemplate<typename>",
													"_kind": "class template",
													"_name": "ValueTemplate",
													"class": {
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class",
														"_name": "ValueTemplate",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "Interface::AllocBaseType",
															"access_specifier": "public",
															"id": 140737091294512,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "Interface::AllocBaseType",
															"type": {
																"_typeName": "Interface::AllocBaseType",
																"kind": "unexposed",
																"name": "Interface::AllocBaseType"
															}
														}],
														"class_kind": "class",
														"id": 93825001914496,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "ValueTemplate",
														"scope": {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825003299040,
													"kind": "class template",
													"name": "ValueTemplate",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003299248,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}],
													"scope":  {
														"is_templated": true,
														"name": "ValueTemplate",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::memory::PoolInterface"
										}
									}]
								}
							},
							"reference_kind": "rvalue"
						}
					}],
					"return_type":  {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Value&&)"
				}, {
					"_fullName": "::stappler::db::messages::broadcast(stappler::mem_pool::Value const&)",
					"_kind": "function",
					"_name": "broadcast",
					"body_kind": "declaration",
					"id": 93825006637312,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "broadcast",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 140736987606880,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::mem_pool::Value const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Value const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Value const&)"
				}, {
					"_fullName": "::stappler::db::messages::broadcast(stappler::mem_pool::Bytes const&)",
					"_kind": "function",
					"_name": "broadcast",
					"body_kind": "declaration",
					"id": 93825004839632,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "broadcast",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825001222960,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::mem_pool::Bytes const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Bytes const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::mem_pool::Bytes",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Bytes",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Bytes",
											"_kind": "type alias",
											"_name": "Bytes",
											"id": 140737103619920,
											"kind": "type alias",
											"name": "Bytes",
											"underlying_type": {
												"_typeName": "stappler::memory::vector<uint8_t>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::memory::vector",
													"objects": [{
														"_fullName": "::stappler::memory::vector<typename>",
														"_kind": "class template",
														"_name": "vector",
														"class": {
															"_fullName": "::stappler::memory::vector<typename>",
															"_kind": "class",
															"_name": "vector",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "AllocPool",
																"access_specifier": "public",
																"id": 93824999875952,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "AllocPool",
																"type": {
																	"_typeName": "stappler::memory::AllocPool",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::memory::AllocPool",
																		"objects": [{
																			"_fullName": "::stappler::memory::AllocPool",
																			"_kind": "class",
																			"_name": "AllocPool",
																			"class_kind": "struct",
																			"id": 140737108514624,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "AllocPool",
																			"scope": {
																				"name": "AllocPool"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "class",
															"id": 93825000044464,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "vector",
															"scope": {
																"is_templated": true,
																"name": "vector",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Type",
																	"id": 93824999601536,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Type"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824997895648,
														"kind": "class template",
														"name": "vector",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Type",
															"id": 93824999601536,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Type"
														}],
														"scope":  {
															"is_templated": true,
															"name": "vector",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Type",
																"id": 93824999601536,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Type"
															}]
														}
													}]
												},
												"unexposed_arguments": "uint8_t"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Bytes const&)"
				}, {
					"_fullName": "::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&)",
					"_kind": "function template",
					"_name": "_addError",
					"childs": [{
						"_fullName": "::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&)",
						"_kind": "function",
						"_name": "_addError",
						"body_kind": "definition",
						"id": 93825010471472,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addError",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825006338592,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 93825011938160,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825008231616,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825006160224,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&)",
						"_kind": "function",
						"_name": "_addError",
						"body_kind": "definition",
						"id": 93825010471472,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addError",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825006338592,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 93825011938160,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825008231616,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825006160224,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&)"
					},
					"id": 93825006166352,
					"kind": "function template",
					"name": "_addError",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Source",
						"id": 93825011938160,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Source"
					}, {
						"_kind": "template type parameter",
						"_name": "Text",
						"id": 93825006160224,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Text"
					}]
				}, {
					"_fullName": "::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
					"_kind": "function template",
					"_name": "_addError",
					"childs": [{
						"_fullName": "::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
						"_kind": "function",
						"_name": "_addError",
						"body_kind": "definition",
						"id": 93825006140208,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addError",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825005733664,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 140736954167200,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825010469952,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 140737147490800,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "d",
							"id": 93825006639712,
							"kind": "function parameter",
							"name": "d",
							"type": {
								"_typeName": "stappler::mem_pool::Value&&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&,stappler::mem_pool::Value&&)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::_addError<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
						"_kind": "function",
						"_name": "_addError",
						"body_kind": "definition",
						"id": 93825006140208,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addError",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825005733664,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 140736954167200,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825010469952,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 140737147490800,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "d",
							"id": 93825006639712,
							"kind": "function parameter",
							"name": "d",
							"type": {
								"_typeName": "stappler::mem_pool::Value&&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&,stappler::mem_pool::Value&&)"
					},
					"id": 93824998771520,
					"kind": "function template",
					"name": "_addError",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Source",
						"id": 140736954167200,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Source"
					}, {
						"_kind": "template type parameter",
						"_name": "Text",
						"id": 140737147490800,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Text"
					}]
				}, {
					"_fullName": "::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&)",
					"_kind": "function template",
					"_name": "_addDebug",
					"childs": [{
						"_fullName": "::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&)",
						"_kind": "function",
						"_name": "_addDebug",
						"body_kind": "definition",
						"id": 93825004836016,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addDebug",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825005452864,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 140736959827392,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825012103104,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825011507040,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&)",
						"_kind": "function",
						"_name": "_addDebug",
						"body_kind": "definition",
						"id": 93825004836016,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addDebug",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825005452864,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 140736959827392,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825012103104,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825011507040,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&)"
					},
					"id": 93825005773632,
					"kind": "function template",
					"name": "_addDebug",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Source",
						"id": 140736959827392,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Source"
					}, {
						"_kind": "template type parameter",
						"_name": "Text",
						"id": 93825011507040,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Text"
					}]
				}, {
					"_fullName": "::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
					"_kind": "function template",
					"_name": "_addDebug",
					"childs": [{
						"_fullName": "::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
						"_kind": "function",
						"_name": "_addDebug",
						"body_kind": "definition",
						"id": 93825005590656,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addDebug",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825003284816,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 93825006191072,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825000705408,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825006191312,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "d",
							"id": 93825006193696,
							"kind": "function parameter",
							"name": "d",
							"type": {
								"_typeName": "stappler::mem_pool::Value&&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&,stappler::mem_pool::Value&&)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::_addDebug<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
						"_kind": "function",
						"_name": "_addDebug",
						"body_kind": "definition",
						"id": 93825005590656,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addDebug",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825003284816,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 93825006191072,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825000705408,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825006191312,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "d",
							"id": 93825006193696,
							"kind": "function parameter",
							"name": "d",
							"type": {
								"_typeName": "stappler::mem_pool::Value&&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&,stappler::mem_pool::Value&&)"
					},
					"id": 93825007553568,
					"kind": "function template",
					"name": "_addDebug",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Source",
						"id": 93825006191072,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Source"
					}, {
						"_kind": "template type parameter",
						"_name": "Text",
						"id": 93825006191312,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Text"
					}]
				}, {
					"_fullName": "::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&)",
					"_kind": "function template",
					"_name": "_addLocal",
					"childs": [{
						"_fullName": "::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&)",
						"_kind": "function",
						"_name": "_addLocal",
						"body_kind": "definition",
						"id": 93825003786320,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addLocal",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825010473472,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 93825004011296,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825010463504,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825004688512,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&)",
						"_kind": "function",
						"_name": "_addLocal",
						"body_kind": "definition",
						"id": 93825003786320,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addLocal",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825010473472,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 93825004011296,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825010463504,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825004688512,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&)"
					},
					"id": 93825010473216,
					"kind": "function template",
					"name": "_addLocal",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Source",
						"id": 93825004011296,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Source"
					}, {
						"_kind": "template type parameter",
						"_name": "Text",
						"id": 93825004688512,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Text"
					}]
				}, {
					"_fullName": "::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
					"_kind": "function template",
					"_name": "_addLocal",
					"childs": [{
						"_fullName": "::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
						"_kind": "function",
						"_name": "_addLocal",
						"body_kind": "definition",
						"id": 93825004722496,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addLocal",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825004011104,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 93825004280992,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825008435920,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825004281184,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "d",
							"id": 93825001183328,
							"kind": "function parameter",
							"name": "d",
							"type": {
								"_typeName": "stappler::mem_pool::Value&&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&,stappler::mem_pool::Value&&)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::_addLocal<typename,typename>(Source&&,Text&&,stappler::mem_pool::Value&&)",
						"_kind": "function",
						"_name": "_addLocal",
						"body_kind": "definition",
						"id": 93825004722496,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "_addLocal",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "source",
							"id": 93825004011104,
							"kind": "function parameter",
							"name": "source",
							"type": {
								"_typeName": "Source&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Source",
									"entity": {
										"name": "Source",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Source",
											"id": 93825004280992,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Source"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "text",
							"id": 93825008435920,
							"kind": "function parameter",
							"name": "text",
							"type": {
								"_typeName": "Text&&",
								"kind": "reference",
								"referee": {
									"_typeName": "Text",
									"entity": {
										"name": "Text",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Text",
											"id": 93825004281184,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Text"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "rvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "d",
							"id": 93825001183328,
							"kind": "function parameter",
							"name": "d",
							"type": {
								"_typeName": "stappler::mem_pool::Value&&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								},
								"reference_kind": "rvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Source&&,Text&&,stappler::mem_pool::Value&&)"
					},
					"id": 93825008435760,
					"kind": "function template",
					"name": "_addLocal",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Source",
						"id": 93825004280992,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Source"
					}, {
						"_kind": "template type parameter",
						"_name": "Text",
						"id": 93825004281184,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Text"
					}]
				}, {
					"_fullName": "::stappler::db::messages::error<typename>(Args &&...)",
					"_kind": "function template",
					"_name": "error",
					"childs": [{
						"_fullName": "::stappler::db::messages::error<typename>(Args &&...)",
						"_kind": "function",
						"_name": "error",
						"body_kind": "definition",
						"id": 93825011507904,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "error",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "args",
							"id": 93825011508176,
							"kind": "function parameter",
							"name": "args",
							"type": {
								"_typeName": "Args &&...",
								"kind": "unexposed",
								"name": "Args &&..."
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Args &&...)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::error<typename>(Args &&...)",
						"_kind": "function",
						"_name": "error",
						"body_kind": "definition",
						"id": 93825011507904,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "error",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "args",
							"id": 93825011508176,
							"kind": "function parameter",
							"name": "args",
							"type": {
								"_typeName": "Args &&...",
								"kind": "unexposed",
								"name": "Args &&..."
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Args &&...)"
					},
					"id": 93825011507344,
					"kind": "function template",
					"name": "error",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Args",
						"id": 93825008232016,
						"is_variadic": true,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Args"
					}]
				}, {
					"_fullName": "::stappler::db::messages::debug<typename>(Args &&...)",
					"_kind": "function template",
					"_name": "debug",
					"childs": [{
						"_fullName": "::stappler::db::messages::debug<typename>(Args &&...)",
						"_kind": "function",
						"_name": "debug",
						"body_kind": "definition",
						"id": 93825008970240,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "debug",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "args",
							"id": 93825008970512,
							"kind": "function parameter",
							"name": "args",
							"type": {
								"_typeName": "Args &&...",
								"kind": "unexposed",
								"name": "Args &&..."
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Args &&...)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::debug<typename>(Args &&...)",
						"_kind": "function",
						"_name": "debug",
						"body_kind": "definition",
						"id": 93825008970240,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "debug",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "args",
							"id": 93825008970512,
							"kind": "function parameter",
							"name": "args",
							"type": {
								"_typeName": "Args &&...",
								"kind": "unexposed",
								"name": "Args &&..."
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Args &&...)"
					},
					"id": 93825011507600,
					"kind": "function template",
					"name": "debug",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Args",
						"id": 93825004991152,
						"is_variadic": true,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Args"
					}]
				}, {
					"_fullName": "::stappler::db::messages::local<typename>(Args &&...)",
					"_kind": "function template",
					"_name": "local",
					"childs": [{
						"_fullName": "::stappler::db::messages::local<typename>(Args &&...)",
						"_kind": "function",
						"_name": "local",
						"body_kind": "definition",
						"id": 93825008148064,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "local",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "args",
							"id": 93825008148336,
							"kind": "function parameter",
							"name": "args",
							"type": {
								"_typeName": "Args &&...",
								"kind": "unexposed",
								"name": "Args &&..."
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Args &&...)"
					}],
					"function":  {
						"_fullName": "::stappler::db::messages::local<typename>(Args &&...)",
						"_kind": "function",
						"_name": "local",
						"body_kind": "definition",
						"id": 93825008148064,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "local",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "args",
							"id": 93825008148336,
							"kind": "function parameter",
							"name": "args",
							"type": {
								"_typeName": "Args &&...",
								"kind": "unexposed",
								"name": "Args &&..."
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Args &&...)"
					},
					"id": 93825008232256,
					"kind": "function template",
					"name": "local",
					"parameters": [{
						"_kind": "template type parameter",
						"_name": "Args",
						"id": 93825009759056,
						"is_variadic": true,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Args"
					}]
				}],
				"id": 93825006224960,
				"is_anonymous": false,
				"is_inline": false,
				"is_nested": false,
				"kind": "namespace",
				"name": "messages",
				"scope": {
					"name": "messages"
				}
			}, {
				"_fullName": "::stappler::db::StorageRoot",
				"_kind": "class",
				"_name": "StorageRoot",
				"childs": [{
					"_kind": "access specifier",
					"_name": "public",
					"access_specifier": "public",
					"id": 93825009759392,
					"kind": "access specifier",
					"name": "public"
				}, {
					"_fullName": "::stappler::db::StorageRoot::~StorageRoot()",
					"_kind": "destructor",
					"_name": "~StorageRoot",
					"body_kind": "definition",
					"id": 93825006140768,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "destructor",
					"name": "~StorageRoot",
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::StorageRoot::isDebugEnabled() const",
					"_kind": "member function",
					"_name": "isDebugEnabled",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825004223136,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "isDebugEnabled",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::setDebugEnabled(bool)",
					"_kind": "member function",
					"_name": "setDebugEnabled",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 93825006689984,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "setDebugEnabled",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "v",
						"id": 93825004223504,
						"kind": "function parameter",
						"name": "v",
						"type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(bool)"
				}, {
					"_fullName": "::stappler::db::StorageRoot::addErrorMessage(stappler::mem_pool::Value&&) const",
					"_kind": "member function",
					"_name": "addErrorMessage",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825000734752,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "addErrorMessage",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "data",
						"id": 93825003077328,
						"kind": "function parameter",
						"name": "data",
						"type": {
							"_typeName": "stappler::mem_pool::Value&&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Value",
								"kind": "user_defined",
								"target": {
									"name": "stappler::mem_pool::Value",
									"objects": [{
										"_fullName": "::stappler::mem_pool::Value",
										"_kind": "type alias",
										"_name": "Value",
										"id": 93825004822544,
										"kind": "type alias",
										"name": "Value",
										"underlying_type": {
											"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "stappler::data::ValueTemplate",
												"objects": [{
													"_fullName": "::stappler::data::ValueTemplate<typename>",
													"_kind": "class template",
													"_name": "ValueTemplate",
													"class": {
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class",
														"_name": "ValueTemplate",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "Interface::AllocBaseType",
															"access_specifier": "public",
															"id": 140737091294512,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "Interface::AllocBaseType",
															"type": {
																"_typeName": "Interface::AllocBaseType",
																"kind": "unexposed",
																"name": "Interface::AllocBaseType"
															}
														}],
														"class_kind": "class",
														"id": 93825001914496,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "ValueTemplate",
														"scope": {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825003299040,
													"kind": "class template",
													"name": "ValueTemplate",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003299248,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}],
													"scope":  {
														"is_templated": true,
														"name": "ValueTemplate",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::memory::PoolInterface"
										}
									}]
								}
							},
							"reference_kind": "rvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Value&&) const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::addDebugMessage(stappler::mem_pool::Value&&) const",
					"_kind": "member function",
					"_name": "addDebugMessage",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825004616080,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "addDebugMessage",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "data",
						"id": 93825003077616,
						"kind": "function parameter",
						"name": "data",
						"type": {
							"_typeName": "stappler::mem_pool::Value&&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Value",
								"kind": "user_defined",
								"target": {
									"name": "stappler::mem_pool::Value",
									"objects": [{
										"_fullName": "::stappler::mem_pool::Value",
										"_kind": "type alias",
										"_name": "Value",
										"id": 93825004822544,
										"kind": "type alias",
										"name": "Value",
										"underlying_type": {
											"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "stappler::data::ValueTemplate",
												"objects": [{
													"_fullName": "::stappler::data::ValueTemplate<typename>",
													"_kind": "class template",
													"_name": "ValueTemplate",
													"class": {
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class",
														"_name": "ValueTemplate",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "Interface::AllocBaseType",
															"access_specifier": "public",
															"id": 140737091294512,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "Interface::AllocBaseType",
															"type": {
																"_typeName": "Interface::AllocBaseType",
																"kind": "unexposed",
																"name": "Interface::AllocBaseType"
															}
														}],
														"class_kind": "class",
														"id": 93825001914496,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "ValueTemplate",
														"scope": {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825003299040,
													"kind": "class template",
													"name": "ValueTemplate",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003299248,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}],
													"scope":  {
														"is_templated": true,
														"name": "ValueTemplate",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::memory::PoolInterface"
										}
									}]
								}
							},
							"reference_kind": "rvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Value&&) const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::broadcast(stappler::mem_pool::Value const&)",
					"_kind": "member function",
					"_name": "broadcast",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 93825005323856,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "broadcast",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "val",
						"id": 93825003309344,
						"kind": "function parameter",
						"name": "val",
						"type": {
							"_typeName": "stappler::mem_pool::Value const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Value const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Value const&)"
				}, {
					"_fullName": "::stappler::db::StorageRoot::broadcast(stappler::mem_pool::Bytes const&)",
					"_kind": "member function",
					"_name": "broadcast",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 93825003173920,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "broadcast",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "val",
						"id": 93825003309632,
						"kind": "function parameter",
						"name": "val",
						"type": {
							"_typeName": "stappler::mem_pool::Bytes const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Bytes const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::mem_pool::Bytes",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Bytes",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Bytes",
											"_kind": "type alias",
											"_name": "Bytes",
											"id": 140737103619920,
											"kind": "type alias",
											"name": "Bytes",
											"underlying_type": {
												"_typeName": "stappler::memory::vector<uint8_t>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::memory::vector",
													"objects": [{
														"_fullName": "::stappler::memory::vector<typename>",
														"_kind": "class template",
														"_name": "vector",
														"class": {
															"_fullName": "::stappler::memory::vector<typename>",
															"_kind": "class",
															"_name": "vector",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "AllocPool",
																"access_specifier": "public",
																"id": 93824999875952,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "AllocPool",
																"type": {
																	"_typeName": "stappler::memory::AllocPool",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::memory::AllocPool",
																		"objects": [{
																			"_fullName": "::stappler::memory::AllocPool",
																			"_kind": "class",
																			"_name": "AllocPool",
																			"class_kind": "struct",
																			"id": 140737108514624,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "AllocPool",
																			"scope": {
																				"name": "AllocPool"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "class",
															"id": 93825000044464,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "vector",
															"scope": {
																"is_templated": true,
																"name": "vector",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Type",
																	"id": 93824999601536,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Type"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824997895648,
														"kind": "class template",
														"name": "vector",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Type",
															"id": 93824999601536,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Type"
														}],
														"scope":  {
															"is_templated": true,
															"name": "vector",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Type",
																"id": 93824999601536,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Type"
															}]
														}
													}]
												},
												"unexposed_arguments": "uint8_t"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Bytes const&)"
				}, {
					"_fullName": "::stappler::db::StorageRoot::acquireTransaction(stappler::db::Adapter const&)",
					"_kind": "member function",
					"_name": "acquireTransaction",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 93825004720400,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "acquireTransaction",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "adapter",
						"id": 93824998768624,
						"kind": "function parameter",
						"name": "adapter",
						"type": {
							"_typeName": "stappler::db::Adapter const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::db::Adapter const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::db::Adapter",
									"kind": "user_defined",
									"target": {
										"name": "stappler::db::Adapter",
										"objects": [{
											"_fullName": "::stappler::db::Adapter",
											"_kind": "class",
											"_name": "Adapter",
											"class_kind": "class",
											"id": 140736987036224,
											"is_declaration": true,
											"is_definition": false,
											"is_final": false,
											"kind": "class",
											"name": "Adapter",
											"scope": {
												"name": "Adapter"
											},
											"semantic_scope": ""
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::db::Transaction",
						"kind": "user_defined",
						"target": {
							"name": "stappler::db::Transaction",
							"objects": [{
								"_fullName": "::stappler::db::Transaction",
								"_kind": "class",
								"_name": "Transaction",
								"class_kind": "class",
								"id": 140737090500976,
								"is_declaration": true,
								"is_definition": false,
								"is_final": false,
								"kind": "class",
								"name": "Transaction",
								"scope": {
									"name": "Transaction"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_scope": "",
					"signature": "(stappler::db::Adapter const&)"
				}, {
					"_fullName": "::stappler::db::StorageRoot::getAdapterFromContext()",
					"_kind": "member function",
					"_name": "getAdapterFromContext",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 93825010994784,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getAdapterFromContext",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::db::Adapter",
						"kind": "user_defined",
						"target": {
							"name": "stappler::db::Adapter",
							"objects": [{
								"_fullName": "::stappler::db::Adapter",
								"_kind": "class",
								"_name": "Adapter",
								"class_kind": "class",
								"id": 140736987036224,
								"is_declaration": true,
								"is_definition": false,
								"is_final": false,
								"kind": "class",
								"name": "Adapter",
								"scope": {
									"name": "Adapter"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::StorageRoot::scheduleAyncDbTask(Callback<Function<void (const stappler::db::Transaction &)> (stappler::mempool::base::pool_t *)> const&)",
					"_kind": "member function",
					"_name": "scheduleAyncDbTask",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 93825003076672,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "scheduleAyncDbTask",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "setupCb",
						"id": 93825010995152,
						"kind": "function parameter",
						"name": "setupCb",
						"type": {
							"_typeName": "Callback<Function<void (const stappler::db::Transaction &)> (stappler::mempool::base::pool_t *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<Function<void (const stappler::db::Transaction &)> (stappler::mempool::base::pool_t *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<Function<void (const stappler::db::Transaction &)> (stappler::mempool::base::pool_t *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "Function<void (const stappler::db::Transaction &)> (stappler::mempool::base::pool_t *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(Callback<Function<void (const stappler::db::Transaction &)> (stappler::mempool::base::pool_t *)> const&)"
				}, {
					"_fullName": "::stappler::db::StorageRoot::isAdministrative() const",
					"_kind": "member function",
					"_name": "isAdministrative",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825003983840,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "isAdministrative",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::getDocuemntRoot() const",
					"_kind": "member function",
					"_name": "getDocuemntRoot",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825008248128,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getDocuemntRoot",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::mem_pool::String",
						"kind": "user_defined",
						"target": {
							"name": "stappler::mem_pool::String",
							"objects": [{
								"_fullName": "::stappler::mem_pool::String",
								"_kind": "type alias",
								"_name": "String",
								"id": 93824997882560,
								"kind": "type alias",
								"name": "String",
								"underlying_type": {
									"_typeName": "stappler::memory::string",
									"kind": "user_defined",
									"target": {
										"name": "stappler::memory::string",
										"objects": [{
											"_fullName": "::stappler::memory::string",
											"_kind": "type alias",
											"_name": "string",
											"id": 93824998026096,
											"kind": "type alias",
											"name": "string",
											"underlying_type": {
												"_typeName": "basic_string<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "basic_string",
													"objects": [{
														"_fullName": "::stappler::memory::basic_string<typename>",
														"_kind": "class template",
														"_name": "basic_string",
														"class": {
															"_fullName": "::stappler::memory::basic_string<typename>",
															"_kind": "class",
															"_name": "basic_string",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "AllocPool",
																"access_specifier": "public",
																"id": 93824998081728,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "AllocPool",
																"type": {
																	"_typeName": "stappler::memory::AllocPool",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::memory::AllocPool",
																		"objects": [{
																			"_fullName": "::stappler::memory::AllocPool",
																			"_kind": "class",
																			"_name": "AllocPool",
																			"class_kind": "struct",
																			"id": 140737108514624,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "AllocPool",
																			"scope": {
																				"name": "AllocPool"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "class",
															"id": 93824998462880,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "basic_string",
															"scope": {
																"is_templated": true,
																"name": "basic_string",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "CharType",
																	"id": 93824997240640,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824997240432,
														"kind": "class template",
														"name": "basic_string",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "CharType",
															"id": 93824997240640,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "basic_string",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "CharType",
																"id": 93824997240640,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							}]
						}
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::getFileScheme() const",
					"_kind": "member function",
					"_name": "getFileScheme",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825012503312,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getFileScheme",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::db::Scheme const*",
						"kind": "pointer",
						"pointee": {
							"_typeName": "stappler::db::Scheme const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::db::Scheme",
								"kind": "user_defined",
								"target": {
									"name": "stappler::db::Scheme",
									"objects": [{
										"_fullName": "::stappler::db::Scheme",
										"_kind": "class",
										"_name": "Scheme",
										"class_kind": "class",
										"id": 93825004722112,
										"is_declaration": true,
										"is_definition": false,
										"is_final": false,
										"kind": "class",
										"name": "Scheme",
										"scope": {
											"name": "Scheme"
										},
										"semantic_scope": ""
									}]
								}
							}
						}
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::getUserScheme() const",
					"_kind": "member function",
					"_name": "getUserScheme",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825010990352,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getUserScheme",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::db::Scheme const*",
						"kind": "pointer",
						"pointee": {
							"_typeName": "stappler::db::Scheme const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::db::Scheme",
								"kind": "user_defined",
								"target": {
									"name": "stappler::db::Scheme",
									"objects": [{
										"_fullName": "::stappler::db::Scheme",
										"_kind": "class",
										"_name": "Scheme",
										"class_kind": "class",
										"id": 93825004722112,
										"is_declaration": true,
										"is_definition": false,
										"is_final": false,
										"kind": "class",
										"name": "Scheme",
										"scope": {
											"name": "Scheme"
										},
										"semantic_scope": ""
									}]
								}
							}
						}
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::getFileFromContext(int64_t) const",
					"_kind": "member function",
					"_name": "getFileFromContext",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825006590752,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getFileFromContext",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825006591120,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "int64_t",
							"kind": "user_defined",
							"target": {
								"name": "int64_t"
							}
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::db::InputFile*",
						"kind": "pointer",
						"pointee": {
							"_typeName": "stappler::db::InputFile",
							"kind": "user_defined",
							"target": {
								"name": "stappler::db::InputFile",
								"objects": [{
									"_fullName": "::stappler::db::InputFile",
									"_kind": "class",
									"_name": "InputFile",
									"class_kind": "struct",
									"id": 140737145471536,
									"is_declaration": true,
									"is_definition": false,
									"is_final": false,
									"kind": "class",
									"name": "InputFile",
									"scope": {
										"name": "InputFile"
									},
									"semantic_scope": ""
								}]
							}
						}
					},
					"semantic_scope": "",
					"signature": "(int64_t) const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::getRequestData() const",
					"_kind": "member function",
					"_name": "getRequestData",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825004765808,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getRequestData",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "internals::RequestData",
						"kind": "user_defined",
						"target": {
							"name": "internals::RequestData",
							"objects": [{
								"_fullName": "::stappler::db::internals::RequestData",
								"_kind": "class",
								"_name": "RequestData",
								"class_kind": "struct",
								"id": 93824998771808,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "RequestData",
								"scope": {
									"name": "RequestData"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::db::StorageRoot::getUserIdFromContext() const",
					"_kind": "member function",
					"_name": "getUserIdFromContext",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 93825007583744,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getUserIdFromContext",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "int64_t",
						"kind": "user_defined",
						"target": {
							"name": "int64_t"
						}
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_kind": "access specifier",
					"_name": "protected",
					"access_specifier": "protected",
					"id": 93825007584064,
					"kind": "access specifier",
					"name": "protected"
				}, {
					"_fullName": "::stappler::db::StorageRoot::onLocalBroadcast(stappler::mem_pool::Value const&)",
					"_kind": "member function",
					"_name": "onLocalBroadcast",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825011945552,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "onLocalBroadcast",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825004824992,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::mem_pool::Value const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::mem_pool::Value const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::mem_pool::Value",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_pool::Value",
										"objects": [{
											"_fullName": "::stappler::mem_pool::Value",
											"_kind": "type alias",
											"_name": "Value",
											"id": 93825004822544,
											"kind": "type alias",
											"name": "Value",
											"underlying_type": {
												"_typeName": "stappler::data::ValueTemplate<stappler::memory::PoolInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "stappler::data::ValueTemplate",
													"objects": [{
														"_fullName": "::stappler::data::ValueTemplate<typename>",
														"_kind": "class template",
														"_name": "ValueTemplate",
														"class": {
															"_fullName": "::stappler::data::ValueTemplate<typename>",
															"_kind": "class",
															"_name": "ValueTemplate",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 140737091294512,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 93825001914496,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "ValueTemplate",
															"scope": {
																"is_templated": true,
																"name": "ValueTemplate",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825003299248,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003299040,
														"kind": "class template",
														"name": "ValueTemplate",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "ValueTemplate",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825003299248,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::memory::PoolInterface"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::mem_pool::Value const&)"
				}, {
					"_fullName": "::stappler::db::StorageRoot::onStorageTransaction(stappler::db::Transaction&)",
					"_kind": "member function",
					"_name": "onStorageTransaction",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825004825232,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "onStorageTransaction",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825005581072,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::db::Transaction&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::db::Transaction",
								"kind": "user_defined",
								"target": {
									"name": "stappler::db::Transaction",
									"objects": [{
										"_fullName": "::stappler::db::Transaction",
										"_kind": "class",
										"_name": "Transaction",
										"class_kind": "class",
										"id": 140737090500976,
										"is_declaration": true,
										"is_definition": false,
										"is_final": false,
										"kind": "class",
										"name": "Transaction",
										"scope": {
											"name": "Transaction"
										},
										"semantic_scope": ""
									}]
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::db::Transaction&)"
				}, {
					"_fullName": "::stappler::db::StorageRoot::_debugMutex",
					"_kind": "member variable",
					"_name": "_debugMutex",
					"id": 93825004991440,
					"is_mutable": true,
					"kind": "member variable",
					"name": "_debugMutex",
					"type": {
						"_typeName": "std::mutex",
						"kind": "user_defined",
						"target": {
							"name": "std::mutex"
						}
					}
				}, {
					"_fullName": "::stappler::db::StorageRoot::_debug",
					"_kind": "member variable",
					"_name": "_debug",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "false"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "std::atomic<bool>",
							"arguments_exposed": false,
							"kind": "template_instantiation",
							"primary_template": {
								"name": "std::atomic"
							},
							"unexposed_arguments": "bool"
						}
					},
					"id": 93825006396656,
					"is_mutable": false,
					"kind": "member variable",
					"name": "_debug",
					"type": {
						"_typeName": "std::atomic<bool>",
						"arguments_exposed": false,
						"kind": "template_instantiation",
						"primary_template": {
							"name": "std::atomic"
						},
						"unexposed_arguments": "bool"
					}
				}],
				"class_kind": "class",
				"id": 93825003174912,
				"is_declaration": false,
				"is_definition": true,
				"is_final": false,
				"kind": "class",
				"name": "StorageRoot",
				"scope": {
					"name": "StorageRoot"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::InputConfig",
				"_kind": "class",
				"_name": "InputConfig",
				"childs": [{
					"_fullName": "::stappler::db::InputConfig::Require",
					"_kind": "enum",
					"_name": "Require",
					"childs": [{
						"_fullName": "::stappler::db::InputConfig::Require::None",
						"_kind": "enum value",
						"_name": "None",
						"id": 93825010995712,
						"kind": "enum value",
						"name": "None",
						"value": {
							"kind": "literal",
							"type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							},
							"value": "0"
						}
					}, {
						"_fullName": "::stappler::db::InputConfig::Require::Data",
						"_kind": "enum value",
						"_name": "Data",
						"id": 93825006217184,
						"kind": "enum value",
						"name": "Data",
						"value": {
							"kind": "literal",
							"type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							},
							"value": "1"
						}
					}, {
						"_fullName": "::stappler::db::InputConfig::Require::Files",
						"_kind": "enum value",
						"_name": "Files",
						"id": 93825006217424,
						"kind": "enum value",
						"name": "Files",
						"value": {
							"kind": "literal",
							"type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							},
							"value": "2"
						}
					}, {
						"_fullName": "::stappler::db::InputConfig::Require::Body",
						"_kind": "enum value",
						"_name": "Body",
						"id": 93825006217664,
						"kind": "enum value",
						"name": "Body",
						"value": {
							"kind": "literal",
							"type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							},
							"value": "4"
						}
					}, {
						"_fullName": "::stappler::db::InputConfig::Require::FilesAsData",
						"_kind": "enum value",
						"_name": "FilesAsData",
						"id": 93825001371152,
						"kind": "enum value",
						"name": "FilesAsData",
						"value": {
							"kind": "literal",
							"type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							},
							"value": "8"
						}
					}],
					"has_explicit_type": false,
					"id": 93825010995456,
					"is_declaration": false,
					"is_definition": true,
					"is_scoped": true,
					"kind": "enum",
					"name": "Require",
					"scope": {
						"name": "Require"
					},
					"semantic_scope": "",
					"underlying_type": {
						"_typeName": "int",
						"builtin_type_kind": "int",
						"kind": "builtin"
					}
				}, {
					"_fullName": "::stappler::db::InputConfig::InputConfig()",
					"_kind": "constructor",
					"_name": "InputConfig",
					"body_kind": "defaulted",
					"id": 93825003846784,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_explicit": false,
					"is_variadic": false,
					"kind": "constructor",
					"name": "InputConfig",
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::db::InputConfig::InputConfig(stappler::db::InputConfig const&)",
					"_kind": "constructor",
					"_name": "InputConfig",
					"body_kind": "defaulted",
					"id": 93825001371344,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_explicit": false,
					"is_variadic": false,
					"kind": "constructor",
					"name": "InputConfig",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825001371600,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::db::InputConfig const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::db::InputConfig const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::db::InputConfig",
									"kind": "user_defined",
									"target": {
										"name": "stappler::db::InputConfig",
										"objects": [{
											"_fullName": "::stappler::db::InputConfig",
											"_kind": "class",
											"_name": "InputConfig",
											"class_kind": "struct",
											"id": 93824998768864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InputConfig",
											"scope": {
												"name": "InputConfig"
											},
											"semantic_scope": ""
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"semantic_scope": "",
					"signature": "(stappler::db::InputConfig const&)"
				}, {
					"_fullName": "::stappler::db::InputConfig::operator=(stappler::db::InputConfig const&)",
					"_kind": "member function",
					"_name": "operator=",
					"body_kind": "defaulted",
					"cv_qualifier": "none",
					"id": 93825006658368,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "operator=",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825003165888,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::db::InputConfig const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::db::InputConfig const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::db::InputConfig",
									"kind": "user_defined",
									"target": {
										"name": "stappler::db::InputConfig",
										"objects": [{
											"_fullName": "::stappler::db::InputConfig",
											"_kind": "class",
											"_name": "InputConfig",
											"class_kind": "struct",
											"id": 93824998768864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InputConfig",
											"scope": {
												"name": "InputConfig"
											},
											"semantic_scope": ""
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::db::InputConfig&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::db::InputConfig",
							"kind": "user_defined",
							"target": {
								"name": "stappler::db::InputConfig",
								"objects": [{
									"_fullName": "::stappler::db::InputConfig",
									"_kind": "class",
									"_name": "InputConfig",
									"class_kind": "struct",
									"id": 93824998768864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "InputConfig",
									"scope": {
										"name": "InputConfig"
									},
									"semantic_scope": ""
								}]
							}
						},
						"reference_kind": "lvalue"
					},
					"semantic_scope": "",
					"signature": "(stappler::db::InputConfig const&)"
				}, {
					"_fullName": "::stappler::db::InputConfig::InputConfig(stappler::db::InputConfig&&)",
					"_kind": "constructor",
					"_name": "InputConfig",
					"body_kind": "defaulted",
					"id": 93825003166080,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_explicit": false,
					"is_variadic": false,
					"kind": "constructor",
					"name": "InputConfig",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825012324384,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::db::InputConfig&&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::db::InputConfig",
								"kind": "user_defined",
								"target": {
									"name": "stappler::db::InputConfig",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig",
										"_kind": "class",
										"_name": "InputConfig",
										"class_kind": "struct",
										"id": 93824998768864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "InputConfig",
										"scope": {
											"name": "InputConfig"
										},
										"semantic_scope": ""
									}]
								}
							},
							"reference_kind": "rvalue"
						}
					}],
					"semantic_scope": "",
					"signature": "(stappler::db::InputConfig&&)"
				}, {
					"_fullName": "::stappler::db::InputConfig::operator=(stappler::db::InputConfig&&)",
					"_kind": "member function",
					"_name": "operator=",
					"body_kind": "defaulted",
					"cv_qualifier": "none",
					"id": 93825010989472,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "operator=",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "",
						"id": 93825010989840,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::db::InputConfig&&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::db::InputConfig",
								"kind": "user_defined",
								"target": {
									"name": "stappler::db::InputConfig",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig",
										"_kind": "class",
										"_name": "InputConfig",
										"class_kind": "struct",
										"id": 93824998768864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "InputConfig",
										"scope": {
											"name": "InputConfig"
										},
										"semantic_scope": ""
									}]
								}
							},
							"reference_kind": "rvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::db::InputConfig&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::db::InputConfig",
							"kind": "user_defined",
							"target": {
								"name": "stappler::db::InputConfig",
								"objects": [{
									"_fullName": "::stappler::db::InputConfig",
									"_kind": "class",
									"_name": "InputConfig",
									"class_kind": "struct",
									"id": 93824998768864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "InputConfig",
									"scope": {
										"name": "InputConfig"
									},
									"semantic_scope": ""
								}]
							}
						},
						"reference_kind": "lvalue"
					},
					"semantic_scope": "",
					"signature": "(stappler::db::InputConfig&&)"
				}, {
					"_fullName": "::stappler::db::InputConfig::updateLimits(Map<stappler::mem_pool::String, stappler::db::Field> const&)",
					"_kind": "member function",
					"_name": "updateLimits",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 93825002421280,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "updateLimits",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "vec",
						"id": 93825009317920,
						"kind": "function parameter",
						"name": "vec",
						"type": {
							"_typeName": "Map<stappler::mem_pool::String, stappler::db::Field> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Map<stappler::mem_pool::String, stappler::db::Field> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Map<stappler::mem_pool::String, stappler::db::Field>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Map",
										"objects": [{
											"_fullName": "::stappler::memory::map<typename,typename,typename>",
											"_kind": "class template",
											"_name": "map",
											"class": {
												"_fullName": "::stappler::memory::map<typename,typename,typename>",
												"_kind": "class",
												"_name": "map",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "AllocPool",
													"access_specifier": "public",
													"id": 93825000135968,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "AllocPool",
													"type": {
														"_typeName": "stappler::memory::AllocPool",
														"kind": "user_defined",
														"target": {
															"name": "stappler::memory::AllocPool",
															"objects": [{
																"_fullName": "::stappler::memory::AllocPool",
																"_kind": "class",
																"_name": "AllocPool",
																"class_kind": "struct",
																"id": 140737108514624,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "AllocPool",
																"scope": {
																	"name": "AllocPool"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "class",
												"id": 140737141672304,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "map",
												"scope": {
													"is_templated": true,
													"name": "map",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Key",
														"id": 93825001562688,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Key"
													}, {
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825001562928,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}, {
														"_kind": "template type parameter",
														"_name": "Comp",
														"default_type": {
															"_typeName": "std::less<>>",
															"kind": "unexposed",
															"name": "std::less<>>"
														},
														"id": 93825002760592,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Comp"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825001562480,
											"kind": "class template",
											"name": "map",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Key",
												"id": 93825001562688,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Key"
											}, {
												"_kind": "template type parameter",
												"_name": "Value",
												"id": 93825001562928,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Value"
											}, {
												"_kind": "template type parameter",
												"_name": "Comp",
												"default_type": {
													"_typeName": "std::less<>>",
													"kind": "unexposed",
													"name": "std::less<>>"
												},
												"id": 93825002760592,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Comp"
											}],
											"scope":  {
												"is_templated": true,
												"name": "map",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Key",
													"id": 93825001562688,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Key"
												}, {
													"_kind": "template type parameter",
													"_name": "Value",
													"id": 93825001562928,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Value"
												}, {
													"_kind": "template type parameter",
													"_name": "Comp",
													"default_type": {
														"_typeName": "std::less<>>",
														"kind": "unexposed",
														"name": "std::less<>>"
													},
													"id": 93825002760592,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Comp"
												}]
											}
										}]
									},
									"unexposed_arguments": "stappler::mem_pool::String, stappler::db::Field"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(Map<stappler::mem_pool::String, stappler::db::Field> const&)"
				}, {
					"_fullName": "::stappler::db::InputConfig::required",
					"_kind": "member variable",
					"_name": "required",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "Require"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "None"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "stappler::db::InputConfig::Require",
							"kind": "user_defined",
							"target": {
								"name": "stappler::db::InputConfig::Require",
								"objects": [{
									"_fullName": "::stappler::db::InputConfig::Require",
									"_kind": "enum",
									"_name": "Require",
									"has_explicit_type": false,
									"id": 93825010995456,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "Require",
									"scope": {
										"name": "Require"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						}
					},
					"id": 93825006396912,
					"is_mutable": false,
					"kind": "member variable",
					"name": "required",
					"type": {
						"_typeName": "stappler::db::InputConfig::Require",
						"kind": "user_defined",
						"target": {
							"name": "stappler::db::InputConfig::Require",
							"objects": [{
								"_fullName": "::stappler::db::InputConfig::Require",
								"_kind": "enum",
								"_name": "Require",
								"has_explicit_type": false,
								"id": 93825010995456,
								"is_declaration": false,
								"is_definition": true,
								"is_scoped": true,
								"kind": "enum",
								"name": "Require",
								"scope": {
									"name": "Require"
								},
								"semantic_scope": "",
								"underlying_type": {
									"_typeName": "int",
									"builtin_type_kind": "int",
									"kind": "builtin"
								}
							}]
						}
					}
				}, {
					"_fullName": "::stappler::db::InputConfig::maxRequestSize",
					"_kind": "member variable",
					"_name": "maxRequestSize",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "config"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "getMaxRequestSize"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					},
					"id": 93825005563136,
					"is_mutable": false,
					"kind": "member variable",
					"name": "maxRequestSize",
					"type": {
						"_typeName": "size_t",
						"kind": "user_defined",
						"target": {
							"name": "size_t"
						}
					}
				}, {
					"_fullName": "::stappler::db::InputConfig::maxVarSize",
					"_kind": "member variable",
					"_name": "maxVarSize",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "config"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "getMaxVarSize"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					},
					"id": 93825005563552,
					"is_mutable": false,
					"kind": "member variable",
					"name": "maxVarSize",
					"type": {
						"_typeName": "size_t",
						"kind": "user_defined",
						"target": {
							"name": "size_t"
						}
					}
				}, {
					"_fullName": "::stappler::db::InputConfig::maxFileSize",
					"_kind": "member variable",
					"_name": "maxFileSize",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "config"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "getMaxFileSize"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					},
					"id": 93825006636528,
					"is_mutable": false,
					"kind": "member variable",
					"name": "maxFileSize",
					"type": {
						"_typeName": "size_t",
						"kind": "user_defined",
						"target": {
							"name": "size_t"
						}
					}
				}, {
					"_fullName": "::stappler::db::InputConfig::updateTime",
					"_kind": "member variable",
					"_name": "updateTime",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "config"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "getInputUpdateTime"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "stappler::TimeInterval",
							"kind": "user_defined",
							"target": {
								"name": "stappler::TimeInterval",
								"objects": [{
									"_fullName": "::stappler::TimeInterval",
									"_kind": "class",
									"_name": "TimeInterval",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "TimeStorage",
										"access_specifier": "public",
										"id": 93825000506720,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "TimeStorage",
										"type": {
											"_typeName": "stappler::TimeStorage",
											"kind": "user_defined",
											"target": {
												"name": "stappler::TimeStorage",
												"objects": [{
													"_fullName": "::stappler::TimeStorage",
													"_kind": "class",
													"_name": "TimeStorage",
													"class_kind": "class",
													"id": 93825002584784,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "TimeStorage",
													"scope": {
														"name": "TimeStorage"
													},
													"semantic_scope": ""
												}]
											}
										}
									}],
									"class_kind": "class",
									"id": 93825004888400,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "TimeInterval",
									"scope": {
										"name": "TimeInterval"
									},
									"semantic_scope": ""
								}]
							}
						}
					},
					"id": 93825006636992,
					"is_mutable": false,
					"kind": "member variable",
					"name": "updateTime",
					"type": {
						"_typeName": "stappler::TimeInterval",
						"kind": "user_defined",
						"target": {
							"name": "stappler::TimeInterval",
							"objects": [{
								"_fullName": "::stappler::TimeInterval",
								"_kind": "class",
								"_name": "TimeInterval",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "TimeStorage",
									"access_specifier": "public",
									"id": 93825000506720,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "TimeStorage",
									"type": {
										"_typeName": "stappler::TimeStorage",
										"kind": "user_defined",
										"target": {
											"name": "stappler::TimeStorage",
											"objects": [{
												"_fullName": "::stappler::TimeStorage",
												"_kind": "class",
												"_name": "TimeStorage",
												"class_kind": "class",
												"id": 93825002584784,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "TimeStorage",
												"scope": {
													"name": "TimeStorage"
												},
												"semantic_scope": ""
											}]
										}
									}
								}],
								"class_kind": "class",
								"id": 93825004888400,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "TimeInterval",
								"scope": {
									"name": "TimeInterval"
								},
								"semantic_scope": ""
							}]
						}
					}
				}, {
					"_fullName": "::stappler::db::InputConfig::updateFrequency",
					"_kind": "member variable",
					"_name": "updateFrequency",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "config"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "getInputUpdateFrequency"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "float",
							"builtin_type_kind": "float",
							"kind": "builtin"
						}
					},
					"id": 93825004721456,
					"is_mutable": false,
					"kind": "member variable",
					"name": "updateFrequency",
					"type": {
						"_typeName": "float",
						"builtin_type_kind": "float",
						"kind": "builtin"
					}
				}],
				"class_kind": "struct",
				"id": 93824998768864,
				"is_declaration": false,
				"is_definition": true,
				"is_final": false,
				"kind": "class",
				"name": "InputConfig",
				"scope": {
					"name": "InputConfig"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::db::operator|(InputConfig::Require const&,InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator|",
				"body_kind": "definition",
				"id": 93825006159472,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator|",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825004721776,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825004038992,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "InputConfig::Require",
					"kind": "user_defined",
					"target": {
						"name": "InputConfig::Require",
						"objects": [{
							"_fullName": "::stappler::db::InputConfig::Require",
							"_kind": "enum",
							"_name": "Require",
							"has_explicit_type": false,
							"id": 93825010995456,
							"is_declaration": false,
							"is_definition": true,
							"is_scoped": true,
							"kind": "enum",
							"name": "Require",
							"scope": {
								"name": "Require"
							},
							"semantic_scope": "",
							"underlying_type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							}
						}]
					}
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require const&,InputConfig::Require const&)"
			}, {
				"_fullName": "::stappler::db::operator&(InputConfig::Require const&,InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator&",
				"body_kind": "definition",
				"id": 93825004826016,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator&",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825004826480,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825010469056,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "InputConfig::Require",
					"kind": "user_defined",
					"target": {
						"name": "InputConfig::Require",
						"objects": [{
							"_fullName": "::stappler::db::InputConfig::Require",
							"_kind": "enum",
							"_name": "Require",
							"has_explicit_type": false,
							"id": 93825010995456,
							"is_declaration": false,
							"is_definition": true,
							"is_scoped": true,
							"kind": "enum",
							"name": "Require",
							"scope": {
								"name": "Require"
							},
							"semantic_scope": "",
							"underlying_type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							}
						}]
					}
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require const&,InputConfig::Require const&)"
			}, {
				"_fullName": "::stappler::db::operator^(InputConfig::Require const&,InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator^",
				"body_kind": "definition",
				"id": 93825010469440,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator^",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825004764736,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825004765168,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "InputConfig::Require",
					"kind": "user_defined",
					"target": {
						"name": "InputConfig::Require",
						"objects": [{
							"_fullName": "::stappler::db::InputConfig::Require",
							"_kind": "enum",
							"_name": "Require",
							"has_explicit_type": false,
							"id": 93825010995456,
							"is_declaration": false,
							"is_definition": true,
							"is_scoped": true,
							"kind": "enum",
							"name": "Require",
							"scope": {
								"name": "Require"
							},
							"semantic_scope": "",
							"underlying_type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							}
						}]
					}
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require const&,InputConfig::Require const&)"
			}, {
				"_fullName": "::stappler::db::operator|=(InputConfig::Require&,InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator|=",
				"body_kind": "definition",
				"id": 93825004689184,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator|=",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825004689600,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "InputConfig::Require&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require",
							"kind": "user_defined",
							"target": {
								"name": "InputConfig::Require",
								"objects": [{
									"_fullName": "::stappler::db::InputConfig::Require",
									"_kind": "enum",
									"_name": "Require",
									"has_explicit_type": false,
									"id": 93825010995456,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "Require",
									"scope": {
										"name": "Require"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825005157872,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "InputConfig::Require&",
					"kind": "reference",
					"referee": {
						"_typeName": "InputConfig::Require",
						"kind": "user_defined",
						"target": {
							"name": "InputConfig::Require",
							"objects": [{
								"_fullName": "::stappler::db::InputConfig::Require",
								"_kind": "enum",
								"_name": "Require",
								"has_explicit_type": false,
								"id": 93825010995456,
								"is_declaration": false,
								"is_definition": true,
								"is_scoped": true,
								"kind": "enum",
								"name": "Require",
								"scope": {
									"name": "Require"
								},
								"semantic_scope": "",
								"underlying_type": {
									"_typeName": "int",
									"builtin_type_kind": "int",
									"kind": "builtin"
								}
							}]
						}
					},
					"reference_kind": "lvalue"
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require&,InputConfig::Require const&)"
			}, {
				"_fullName": "::stappler::db::operator&=(InputConfig::Require&,InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator&=",
				"body_kind": "definition",
				"id": 93825012220624,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator&=",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825012221040,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "InputConfig::Require&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require",
							"kind": "user_defined",
							"target": {
								"name": "InputConfig::Require",
								"objects": [{
									"_fullName": "::stappler::db::InputConfig::Require",
									"_kind": "enum",
									"_name": "Require",
									"has_explicit_type": false,
									"id": 93825010995456,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "Require",
									"scope": {
										"name": "Require"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825006139344,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "InputConfig::Require&",
					"kind": "reference",
					"referee": {
						"_typeName": "InputConfig::Require",
						"kind": "user_defined",
						"target": {
							"name": "InputConfig::Require",
							"objects": [{
								"_fullName": "::stappler::db::InputConfig::Require",
								"_kind": "enum",
								"_name": "Require",
								"has_explicit_type": false,
								"id": 93825010995456,
								"is_declaration": false,
								"is_definition": true,
								"is_scoped": true,
								"kind": "enum",
								"name": "Require",
								"scope": {
									"name": "Require"
								},
								"semantic_scope": "",
								"underlying_type": {
									"_typeName": "int",
									"builtin_type_kind": "int",
									"kind": "builtin"
								}
							}]
						}
					},
					"reference_kind": "lvalue"
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require&,InputConfig::Require const&)"
			}, {
				"_fullName": "::stappler::db::operator^=(InputConfig::Require&,InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator^=",
				"body_kind": "definition",
				"id": 93825006139680,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator^=",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825006219952,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "InputConfig::Require&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require",
							"kind": "user_defined",
							"target": {
								"name": "InputConfig::Require",
								"objects": [{
									"_fullName": "::stappler::db::InputConfig::Require",
									"_kind": "enum",
									"_name": "Require",
									"has_explicit_type": false,
									"id": 93825010995456,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "Require",
									"scope": {
										"name": "Require"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825006220384,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "InputConfig::Require&",
					"kind": "reference",
					"referee": {
						"_typeName": "InputConfig::Require",
						"kind": "user_defined",
						"target": {
							"name": "InputConfig::Require",
							"objects": [{
								"_fullName": "::stappler::db::InputConfig::Require",
								"_kind": "enum",
								"_name": "Require",
								"has_explicit_type": false,
								"id": 93825010995456,
								"is_declaration": false,
								"is_definition": true,
								"is_scoped": true,
								"kind": "enum",
								"name": "Require",
								"scope": {
									"name": "Require"
								},
								"semantic_scope": "",
								"underlying_type": {
									"_typeName": "int",
									"builtin_type_kind": "int",
									"kind": "builtin"
								}
							}]
						}
					},
					"reference_kind": "lvalue"
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require&,InputConfig::Require const&)"
			}, {
				"_fullName": "::stappler::db::operator==(InputConfig::Require const&,std::underlying_type<InputConfig::Require>::type const&)",
				"_kind": "function",
				"_name": "operator==",
				"body_kind": "definition",
				"id": 93825006191552,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator==",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825006220624,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825005580096,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "std::underlying_type<InputConfig::Require>::type const&",
						"kind": "reference",
						"referee": {
							"_typeName": "std::underlying_type<InputConfig::Require>::type const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "std::underlying_type<InputConfig::Require>::type",
								"kind": "user_defined",
								"target": {
									"name": "std::underlying_type<InputConfig::Require>::type"
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "bool",
					"builtin_type_kind": "bool",
					"kind": "builtin"
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require const&,std::underlying_type<InputConfig::Require>::type const&)"
			}, {
				"_fullName": "::stappler::db::operator==(std::underlying_type<InputConfig::Require>::type const&,InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator==",
				"body_kind": "definition",
				"id": 93825005580336,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator==",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825005299760,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "std::underlying_type<InputConfig::Require>::type const&",
						"kind": "reference",
						"referee": {
							"_typeName": "std::underlying_type<InputConfig::Require>::type const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "std::underlying_type<InputConfig::Require>::type",
								"kind": "user_defined",
								"target": {
									"name": "std::underlying_type<InputConfig::Require>::type"
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825005300192,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "bool",
					"builtin_type_kind": "bool",
					"kind": "builtin"
				},
				"semantic_scope": "",
				"signature": "(std::underlying_type<InputConfig::Require>::type const&,InputConfig::Require const&)"
			}, {
				"_fullName": "::stappler::db::operator!=(InputConfig::Require const&,std::underlying_type<InputConfig::Require>::type const&)",
				"_kind": "function",
				"_name": "operator!=",
				"body_kind": "definition",
				"id": 93825012421088,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator!=",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825012421600,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825005300432,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "std::underlying_type<InputConfig::Require>::type const&",
						"kind": "reference",
						"referee": {
							"_typeName": "std::underlying_type<InputConfig::Require>::type const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "std::underlying_type<InputConfig::Require>::type",
								"kind": "user_defined",
								"target": {
									"name": "std::underlying_type<InputConfig::Require>::type"
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "bool",
					"builtin_type_kind": "bool",
					"kind": "builtin"
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require const&,std::underlying_type<InputConfig::Require>::type const&)"
			}, {
				"_fullName": "::stappler::db::operator!=(std::underlying_type<InputConfig::Require>::type const&,InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator!=",
				"body_kind": "definition",
				"id": 93825008147296,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator!=",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "l",
					"id": 93825008147824,
					"kind": "function parameter",
					"name": "l",
					"type": {
						"_typeName": "std::underlying_type<InputConfig::Require>::type const&",
						"kind": "reference",
						"referee": {
							"_typeName": "std::underlying_type<InputConfig::Require>::type const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "std::underlying_type<InputConfig::Require>::type",
								"kind": "user_defined",
								"target": {
									"name": "std::underlying_type<InputConfig::Require>::type"
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "r",
					"id": 93825005774224,
					"kind": "function parameter",
					"name": "r",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "bool",
					"builtin_type_kind": "bool",
					"kind": "builtin"
				},
				"semantic_scope": "",
				"signature": "(std::underlying_type<InputConfig::Require>::type const&,InputConfig::Require const&)"
			}, {
				"_fullName": "::stappler::db::operator~(InputConfig::Require const&)",
				"_kind": "function",
				"_name": "operator~",
				"body_kind": "definition",
				"id": 93825010697168,
				"is_consteval": false,
				"is_constexpr": true,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"kind": "function",
				"name": "operator~",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "t",
					"id": 93825010697632,
					"kind": "function parameter",
					"name": "t",
					"type": {
						"_typeName": "InputConfig::Require const&",
						"kind": "reference",
						"referee": {
							"_typeName": "InputConfig::Require const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "InputConfig::Require",
								"kind": "user_defined",
								"target": {
									"name": "InputConfig::Require",
									"objects": [{
										"_fullName": "::stappler::db::InputConfig::Require",
										"_kind": "enum",
										"_name": "Require",
										"has_explicit_type": false,
										"id": 93825010995456,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Require",
										"scope": {
											"name": "Require"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"return_type":  {
					"_typeName": "InputConfig::Require",
					"kind": "user_defined",
					"target": {
						"name": "InputConfig::Require",
						"objects": [{
							"_fullName": "::stappler::db::InputConfig::Require",
							"_kind": "enum",
							"_name": "Require",
							"has_explicit_type": false,
							"id": 93825010995456,
							"is_declaration": false,
							"is_definition": true,
							"is_scoped": true,
							"kind": "enum",
							"name": "Require",
							"scope": {
								"name": "Require"
							},
							"semantic_scope": "",
							"underlying_type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							}
						}]
					}
				},
				"semantic_scope": "",
				"signature": "(InputConfig::Require const&)"
			}],
			"id": 140737116301808,
			"is_anonymous": false,
			"is_inline": false,
			"is_nested": true,
			"kind": "namespace",
			"name": "db",
			"scope": {
				"name": "db"
			}
		}],
		"id": 140737093945264,
		"is_anonymous": false,
		"is_inline": false,
		"is_nested": false,
		"kind": "namespace",
		"name": "stappler",
		"scope": {
			"name": "stappler"
		}
	}],
	"id": 140737149826800,
	"kind": "file",
	"name": "/home/sbkarr/stappler/xenolith/libstappler/modules/db/STStorage.h",
	"unmatched_comments": [{
		"line": 21,
		"text": "\nCopyright (c) 2019-2022 Roman Katuntsev <sbkarr@stappler.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
	}]
}