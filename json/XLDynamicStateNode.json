{
	"_fullName": "xenolith/scene/nodes/XLDynamicStateNode.h",
	"_kind": "file",
	"_name": "xenolith/scene/nodes/XLDynamicStateNode.h",
	"childs": [{
		"_fullName": "XLNode.h",
		"_kind": "include directive",
		"_name": "XLNode.h",
		"id": 794683079,
		"include": "xenolith/scene/nodes/XLNode.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "XLNode.h"
	}, {
		"_fullName": "XENOLITH_SCENE_NODES_XLDYNAMICSTATENODE_H_",
		"_kind": "macro definition",
		"_name": "XENOLITH_SCENE_NODES_XLDYNAMICSTATENODE_H_",
		"id": 538692248,
		"is_function_like": false,
		"is_object_like": true,
		"is_variadic": false,
		"kind": "macro definition",
		"name": "XENOLITH_SCENE_NODES_XLDYNAMICSTATENODE_H_",
		"replacement": ""
	}, {
		"_fullName": "::stappler",
		"_kind": "namespace",
		"_name": "stappler",
		"childs": [{
			"_fullName": "::stappler::xenolith",
			"_kind": "namespace",
			"_name": "xenolith",
			"childs": [{
				"_fullName": "::stappler::xenolith::DynamicStateNode",
				"_kind": "class",
				"_name": "DynamicStateNode",
				"bases": [{
					"_fullName": "Node",
					"_kind": "base class specifier",
					"_name": "Node",
					"access_specifier": "public",
					"id": 421274683,
					"is_virtual": false,
					"kind": "base class specifier",
					"name": "Node",
					"type": {
						"_typeName": "stappler::xenolith::Node",
						"kind": "user_defined",
						"target": {
							"name": "stappler::xenolith::Node",
							"objects": [{
								"_fullName": "::stappler::xenolith::Node",
								"_kind": "class",
								"_name": "Node",
								"bases": [{
									"_fullName": "Ref",
									"_kind": "base class specifier",
									"_name": "Ref",
									"access_specifier": "public",
									"id": 1165741041,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "Ref",
									"type": {
										"_typeName": "stappler::mem_std::Ref",
										"kind": "user_defined",
										"target": {
											"name": "stappler::mem_std::Ref",
											"objects": [{
												"_fullName": "::stappler::mem_std::Ref",
												"_kind": "type alias",
												"_name": "Ref",
												"id": 3010886988,
												"kind": "type alias",
												"name": "Ref",
												"underlying_type": {
													"_typeName": "RefBase<memory::StandartInterface>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "RefBase",
														"objects": [{
															"_fullName": "::stappler::RefBase<typename>",
															"_kind": "class template",
															"_name": "RefBase",
															"class": {
																"_fullName": "::stappler::RefBase<typename>",
																"_kind": "class",
																"_name": "RefBase",
																"bases": [{
																	"_fullName": "Interface::AllocBaseType",
																	"_kind": "base class specifier",
																	"_name": "Interface::AllocBaseType",
																	"access_specifier": "public",
																	"id": 25533212,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "Interface::AllocBaseType",
																	"type": {
																		"_typeName": "Interface::AllocBaseType",
																		"kind": "unexposed",
																		"name": "Interface::AllocBaseType"
																	}
																}],
																"class_kind": "class",
																"id": 2191419057,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "RefBase",
																"scope": {
																	"is_templated": true,
																	"name": "RefBase",
																	"template_parameters": [{
																		"_fullName": "Interface",
																		"_kind": "template type parameter",
																		"_name": "Interface",
																		"id": 2255344761,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Interface"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 2191419057,
															"kind": "class template",
															"name": "RefBase",
															"parameters": [{
																"_fullName": "Interface",
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 2255344761,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}],
															"scope":  {
																"is_templated": true,
																"name": "RefBase",
																"template_parameters": [{
																	"_fullName": "Interface",
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 2255344761,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															}
														}]
													},
													"unexposed_arguments": "memory::StandartInterface"
												}
											}]
										}
									}
								}],
								"class_kind": "class",
								"id": 697316651,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Node",
								"scope": {
									"name": "Node"
								},
								"semantic_scope": ""
							}]
						}
					}
				}],
				"childs":  [{
					"_fullName": "public",
					"_kind": "access specifier",
					"_name": "public",
					"access_specifier": "public",
					"id": 893076784,
					"kind": "access specifier",
					"name": "public"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode",
					"_kind": "enum",
					"_name": "StateApplyMode",
					"childs": [{
						"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode::DoNotApply",
						"_kind": "enum value",
						"_name": "DoNotApply",
						"id": 2839144641,
						"kind": "enum value",
						"name": "DoNotApply"
					}, {
						"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode::ApplyForAll",
						"_kind": "enum value",
						"_name": "ApplyForAll",
						"id": 2271031451,
						"kind": "enum value",
						"name": "ApplyForAll"
					}, {
						"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode::ApplyForNodesBelow",
						"_kind": "enum value",
						"_name": "ApplyForNodesBelow",
						"id": 1553275242,
						"kind": "enum value",
						"name": "ApplyForNodesBelow"
					}, {
						"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode::ApplyForNodesAbove",
						"_kind": "enum value",
						"_name": "ApplyForNodesAbove",
						"id": 872692180,
						"kind": "enum value",
						"name": "ApplyForNodesAbove"
					}],
					"has_explicit_type": false,
					"id": 4143978240,
					"is_declaration": false,
					"is_definition": true,
					"is_scoped": false,
					"kind": "enum",
					"name": "StateApplyMode",
					"semantic_scope": "",
					"underlying_type": {
						"_typeName": "unsigned int",
						"builtin_type_kind": "unsigned int",
						"kind": "builtin"
					}
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::init()",
					"_kind": "member function",
					"_name": "init",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 3154446684,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_override": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "init",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::getStateApplyMode() const",
					"_kind": "member function",
					"_name": "getStateApplyMode",
					"body_kind": "definition",
					"cv_qualifier": "const",
					"id": 41942229,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getStateApplyMode",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::xenolith::DynamicStateNode::StateApplyMode",
						"kind": "user_defined",
						"target": {
							"name": "stappler::xenolith::DynamicStateNode::StateApplyMode",
							"objects": [{
								"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode",
								"_kind": "enum",
								"_name": "StateApplyMode",
								"has_explicit_type": false,
								"id": 4143978240,
								"is_declaration": false,
								"is_definition": true,
								"is_scoped": false,
								"kind": "enum",
								"name": "StateApplyMode",
								"semantic_scope": "",
								"underlying_type": {
									"_typeName": "unsigned int",
									"builtin_type_kind": "unsigned int",
									"kind": "builtin"
								}
							}]
						}
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::setStateApplyMode(stappler::xenolith::DynamicStateNode::StateApplyMode)",
					"_kind": "member function",
					"_name": "setStateApplyMode",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 48888059,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "setStateApplyMode",
					"parameters": [{
						"_fullName": "value",
						"_kind": "function parameter",
						"_name": "value",
						"id": 4105109168,
						"kind": "function parameter",
						"name": "value",
						"type": {
							"_typeName": "stappler::xenolith::DynamicStateNode::StateApplyMode",
							"kind": "user_defined",
							"target": {
								"name": "stappler::xenolith::DynamicStateNode::StateApplyMode",
								"objects": [{
									"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode",
									"_kind": "enum",
									"_name": "StateApplyMode",
									"has_explicit_type": false,
									"id": 4143978240,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": false,
									"kind": "enum",
									"name": "StateApplyMode",
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "unsigned int",
										"builtin_type_kind": "unsigned int",
										"kind": "builtin"
									}
								}]
							}
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::xenolith::DynamicStateNode::StateApplyMode)"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::isIgnoreParentState() const",
					"_kind": "member function",
					"_name": "isIgnoreParentState",
					"body_kind": "definition",
					"cv_qualifier": "const",
					"id": 3423997511,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "isIgnoreParentState",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::setIgnoreParentState(bool)",
					"_kind": "member function",
					"_name": "setIgnoreParentState",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 1156733214,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "setIgnoreParentState",
					"parameters": [{
						"_fullName": "",
						"_kind": "function parameter",
						"_name": "",
						"id": 46947589,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(bool)"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::visitDraw(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)",
					"_kind": "member function",
					"_name": "visitDraw",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 2280356587,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_override": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "visitDraw",
					"parameters": [{
						"_fullName": "",
						"_kind": "function parameter",
						"_name": "",
						"id": 46947589,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::xenolith::FrameInfo&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::xenolith::FrameInfo",
								"kind": "user_defined",
								"target": {
									"name": "stappler::xenolith::FrameInfo",
									"objects": [{
										"_fullName": "::stappler::xenolith::FrameInfo",
										"_kind": "class",
										"_name": "FrameInfo",
										"class_kind": "struct",
										"id": 962318048,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "FrameInfo",
										"scope": {
											"name": "FrameInfo"
										},
										"semantic_scope": ""
									}]
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_fullName": "parentFlags",
						"_kind": "function parameter",
						"_name": "parentFlags",
						"id": 3239946146,
						"kind": "function parameter",
						"name": "parentFlags",
						"type": {
							"_typeName": "stappler::xenolith::NodeFlags",
							"kind": "user_defined",
							"target": {
								"name": "stappler::xenolith::NodeFlags",
								"objects": [{
									"_fullName": "::stappler::xenolith::NodeFlags",
									"_kind": "enum",
									"_name": "NodeFlags",
									"has_explicit_type": false,
									"id": 1096610839,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "NodeFlags",
									"scope": {
										"name": "NodeFlags"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::xenolith::FrameInfo&,stappler::xenolith::NodeFlags)"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::enableScissor(stappler::geom::Padding)",
					"_kind": "member function",
					"_name": "enableScissor",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 1236011432,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "enableScissor",
					"parameters": [{
						"_fullName": "outline",
						"_kind": "function parameter",
						"_name": "outline",
						"default_value": {
							"expression": [{
								"kind": "identifier",
								"spelling": "Padding"
							}, {
								"kind": "punctuation",
								"spelling": "("
							}, {
								"kind": "punctuation",
								"spelling": ")"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "stappler::geom::Padding",
								"kind": "unexposed",
								"name": "stappler::geom::Padding"
							}
						},
						"id": 1542742259,
						"kind": "function parameter",
						"name": "outline",
						"type": {
							"_typeName": "stappler::geom::Padding",
							"kind": "unexposed",
							"name": "stappler::geom::Padding"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::geom::Padding)"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::disableScissor()",
					"_kind": "member function",
					"_name": "disableScissor",
					"body_kind": "declaration",
					"cv_qualifier": "none",
					"id": 220106478,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "disableScissor",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "()"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::isScissorEnabled() const",
					"_kind": "member function",
					"_name": "isScissorEnabled",
					"body_kind": "definition",
					"cv_qualifier": "const",
					"id": 3790843616,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "isScissorEnabled",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::setScissorOutlone(stappler::geom::Padding)",
					"_kind": "member function",
					"_name": "setScissorOutlone",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 3120914204,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "setScissorOutlone",
					"parameters": [{
						"_fullName": "value",
						"_kind": "function parameter",
						"_name": "value",
						"id": 4105109168,
						"kind": "function parameter",
						"name": "value",
						"type": {
							"_typeName": "stappler::geom::Padding",
							"kind": "unexposed",
							"name": "stappler::geom::Padding"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(stappler::geom::Padding)"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::getScissorOutline() const",
					"_kind": "member function",
					"_name": "getScissorOutline",
					"body_kind": "definition",
					"cv_qualifier": "const",
					"id": 1736587107,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "getScissorOutline",
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::geom::Padding",
						"kind": "unexposed",
						"name": "stappler::geom::Padding"
					},
					"semantic_scope": "",
					"signature": "() const"
				}, {
					"_fullName": "protected",
					"_kind": "access specifier",
					"_name": "protected",
					"access_specifier": "protected",
					"id": 1892155628,
					"kind": "access specifier",
					"name": "protected"
				}, {
					"_fullName": "",
					"_kind": "using declaration",
					"_name": "",
					"id": 46947589,
					"kind": "using declaration",
					"name": "",
					"target": {
						"name": "Node::init",
						"objects": [{
							"_fullName": "::stappler::xenolith::Node",
							"_kind": "class",
							"_name": "Node",
							"bases": [{
								"_fullName": "Ref",
								"_kind": "base class specifier",
								"_name": "Ref",
								"access_specifier": "public",
								"id": 1165741041,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Ref",
								"type": {
									"_typeName": "stappler::mem_std::Ref",
									"kind": "user_defined",
									"target": {
										"name": "stappler::mem_std::Ref",
										"objects": [{
											"_fullName": "::stappler::mem_std::Ref",
											"_kind": "type alias",
											"_name": "Ref",
											"id": 3010886988,
											"kind": "type alias",
											"name": "Ref",
											"underlying_type": {
												"_typeName": "RefBase<memory::StandartInterface>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "RefBase",
													"objects": [{
														"_fullName": "::stappler::RefBase<typename>",
														"_kind": "class template",
														"_name": "RefBase",
														"class": {
															"_fullName": "::stappler::RefBase<typename>",
															"_kind": "class",
															"_name": "RefBase",
															"bases": [{
																"_fullName": "Interface::AllocBaseType",
																"_kind": "base class specifier",
																"_name": "Interface::AllocBaseType",
																"access_specifier": "public",
																"id": 25533212,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "Interface::AllocBaseType",
																"type": {
																	"_typeName": "Interface::AllocBaseType",
																	"kind": "unexposed",
																	"name": "Interface::AllocBaseType"
																}
															}],
															"class_kind": "class",
															"id": 2191419057,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "RefBase",
															"scope": {
																"is_templated": true,
																"name": "RefBase",
																"template_parameters": [{
																	"_fullName": "Interface",
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 2255344761,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															},
															"semantic_scope": ""
														},
														"id": 2191419057,
														"kind": "class template",
														"name": "RefBase",
														"parameters": [{
															"_fullName": "Interface",
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 2255344761,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}],
														"scope":  {
															"is_templated": true,
															"name": "RefBase",
															"template_parameters": [{
																"_fullName": "Interface",
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 2255344761,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}]
														}
													}]
												},
												"unexposed_arguments": "memory::StandartInterface"
											}
										}]
									}
								}
							}],
							"class_kind": "class",
							"id": 697316651,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Node",
							"scope": {
								"name": "Node"
							},
							"semantic_scope": ""
						}]
					}
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::updateDynamicState(stappler::xenolith::DrawStateValues const&) const",
					"_kind": "member function",
					"_name": "updateDynamicState",
					"body_kind": "declaration",
					"cv_qualifier": "const",
					"id": 2525641514,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"is_virtual": true,
					"kind": "member function",
					"name": "updateDynamicState",
					"parameters": [{
						"_fullName": "",
						"_kind": "function parameter",
						"_name": "",
						"id": 46947589,
						"kind": "function parameter",
						"name": "",
						"type": {
							"_typeName": "stappler::xenolith::DrawStateValues const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::xenolith::DrawStateValues const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::xenolith::DrawStateValues",
									"kind": "user_defined",
									"target": {
										"name": "stappler::xenolith::DrawStateValues",
										"objects": [{
											"_fullName": "::stappler::xenolith::DrawStateValues",
											"_kind": "class",
											"_name": "DrawStateValues",
											"class_kind": "struct",
											"id": 4028357205,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "DrawStateValues",
											"scope": {
												"name": "DrawStateValues"
											},
											"semantic_scope": ""
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::xenolith::DrawStateValues",
						"kind": "user_defined",
						"target": {
							"name": "stappler::xenolith::DrawStateValues",
							"objects": [{
								"_fullName": "::stappler::xenolith::DrawStateValues",
								"_kind": "class",
								"_name": "DrawStateValues",
								"class_kind": "struct",
								"id": 4028357205,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "DrawStateValues",
								"scope": {
									"name": "DrawStateValues"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_scope": "",
					"signature": "(stappler::xenolith::DrawStateValues const&) const"
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::_applyMode",
					"_kind": "member variable",
					"_name": "_applyMode",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "ApplyForAll"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "stappler::xenolith::DynamicStateNode::StateApplyMode",
							"kind": "user_defined",
							"target": {
								"name": "stappler::xenolith::DynamicStateNode::StateApplyMode",
								"objects": [{
									"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode",
									"_kind": "enum",
									"_name": "StateApplyMode",
									"has_explicit_type": false,
									"id": 4143978240,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": false,
									"kind": "enum",
									"name": "StateApplyMode",
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "unsigned int",
										"builtin_type_kind": "unsigned int",
										"kind": "builtin"
									}
								}]
							}
						}
					},
					"id": 2677482709,
					"is_mutable": false,
					"kind": "member variable",
					"name": "_applyMode",
					"type": {
						"_typeName": "stappler::xenolith::DynamicStateNode::StateApplyMode",
						"kind": "user_defined",
						"target": {
							"name": "stappler::xenolith::DynamicStateNode::StateApplyMode",
							"objects": [{
								"_fullName": "::stappler::xenolith::DynamicStateNode::StateApplyMode",
								"_kind": "enum",
								"_name": "StateApplyMode",
								"has_explicit_type": false,
								"id": 4143978240,
								"is_declaration": false,
								"is_definition": true,
								"is_scoped": false,
								"kind": "enum",
								"name": "StateApplyMode",
								"semantic_scope": "",
								"underlying_type": {
									"_typeName": "unsigned int",
									"builtin_type_kind": "unsigned int",
									"kind": "builtin"
								}
							}]
						}
					}
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::_ignoreParentState",
					"_kind": "member variable",
					"_name": "_ignoreParentState",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "false"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						}
					},
					"id": 1687839234,
					"is_mutable": false,
					"kind": "member variable",
					"name": "_ignoreParentState",
					"type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					}
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::_scissorEnabled",
					"_kind": "member variable",
					"_name": "_scissorEnabled",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "false"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						}
					},
					"id": 3178070541,
					"is_mutable": false,
					"kind": "member variable",
					"name": "_scissorEnabled",
					"type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					}
				}, {
					"_fullName": "::stappler::xenolith::DynamicStateNode::_scissorOutline",
					"_kind": "member variable",
					"_name": "_scissorOutline",
					"id": 2055233606,
					"is_mutable": false,
					"kind": "member variable",
					"name": "_scissorOutline",
					"type": {
						"_typeName": "stappler::geom::Padding",
						"kind": "unexposed",
						"name": "stappler::geom::Padding"
					}
				}],
				"class_kind": "class",
				"id": 647377790,
				"is_declaration": false,
				"is_definition": true,
				"is_final": false,
				"kind": "class",
				"name": "DynamicStateNode",
				"scope": {
					"name": "DynamicStateNode"
				},
				"semantic_scope": ""
			}],
			"id": 2324754634,
			"is_anonymous": false,
			"is_inline": false,
			"is_nested": true,
			"kind": "namespace",
			"name": "xenolith",
			"scope": {
				"name": "xenolith"
			}
		}],
		"id": 96045446,
		"is_anonymous": false,
		"is_inline": false,
		"is_nested": false,
		"kind": "namespace",
		"name": "stappler",
		"scope": {
			"name": "stappler"
		}
	}],
	"id": 1153628604,
	"kind": "file",
	"name": "xenolith/scene/nodes/XLDynamicStateNode.h",
	"unmatched_comments": [{
		"line": 22,
		"text": "\nCopyright (c) 2022 Roman Katuntsev <sbkarr@stappler.org>\nCopyright (c) 2023 Stappler LLC <admin@stappler.dev>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
	}]
}