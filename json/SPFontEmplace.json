{
	"_fullName": "core/font/SPFontEmplace.h",
	"_kind": "file",
	"_name": "core/font/SPFontEmplace.h",
	"childs": [{
		"_fullName": "SPFont.h",
		"_kind": "include directive",
		"_name": "SPFont.h",
		"id": 375480409,
		"include": "core/font/SPFont.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPFont.h"
	}, {
		"_fullName": "CORE_FONT_SPFONTEMPLACE_H_",
		"_kind": "macro definition",
		"_name": "CORE_FONT_SPFONTEMPLACE_H_",
		"id": 1741762210,
		"is_function_like": false,
		"is_object_like": true,
		"is_variadic": false,
		"kind": "macro definition",
		"name": "CORE_FONT_SPFONTEMPLACE_H_",
		"replacement": ""
	}, {
		"_fullName": "::stappler",
		"_kind": "namespace",
		"_name": "stappler",
		"childs": [{
			"_fullName": "::stappler::font",
			"_kind": "namespace",
			"_name": "font",
			"childs": [{
				"_fullName": "::stappler::font::EmplaceCharInterface",
				"_kind": "class",
				"_name": "EmplaceCharInterface",
				"childs": [{
					"_fullName": "::stappler::font::EmplaceCharInterface::getX",
					"_kind": "member variable",
					"_name": "getX",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "nullptr"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "uint16_t(*)(void*)",
							"kind": "pointer",
							"pointee": {
								"_typeName": "uint16_t(void*)",
								"is_variadic": false,
								"kind": "function",
								"parameter_types": [{
									"_typeName": "void*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									}
								}],
								"return_type":  {
									"_typeName": "uint16_t",
									"kind": "user_defined",
									"target": {
										"name": "uint16_t"
									}
								}
							}
						}
					},
					"id": 571606028,
					"is_mutable": false,
					"kind": "member variable",
					"name": "getX",
					"type": {
						"_typeName": "uint16_t(*)(void*)",
						"kind": "pointer",
						"pointee": {
							"_typeName": "uint16_t(void*)",
							"is_variadic": false,
							"kind": "function",
							"parameter_types": [{
								"_typeName": "void*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}],
							"return_type":  {
								"_typeName": "uint16_t",
								"kind": "user_defined",
								"target": {
									"name": "uint16_t"
								}
							}
						}
					}
				}, {
					"_fullName": "::stappler::font::EmplaceCharInterface::getY",
					"_kind": "member variable",
					"_name": "getY",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "nullptr"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "uint16_t(*)(void*)",
							"kind": "pointer",
							"pointee": {
								"_typeName": "uint16_t(void*)",
								"is_variadic": false,
								"kind": "function",
								"parameter_types": [{
									"_typeName": "void*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									}
								}],
								"return_type":  {
									"_typeName": "uint16_t",
									"kind": "user_defined",
									"target": {
										"name": "uint16_t"
									}
								}
							}
						}
					},
					"id": 2626496733,
					"is_mutable": false,
					"kind": "member variable",
					"name": "getY",
					"type": {
						"_typeName": "uint16_t(*)(void*)",
						"kind": "pointer",
						"pointee": {
							"_typeName": "uint16_t(void*)",
							"is_variadic": false,
							"kind": "function",
							"parameter_types": [{
								"_typeName": "void*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}],
							"return_type":  {
								"_typeName": "uint16_t",
								"kind": "user_defined",
								"target": {
									"name": "uint16_t"
								}
							}
						}
					}
				}, {
					"_fullName": "::stappler::font::EmplaceCharInterface::getWidth",
					"_kind": "member variable",
					"_name": "getWidth",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "nullptr"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "uint16_t(*)(void*)",
							"kind": "pointer",
							"pointee": {
								"_typeName": "uint16_t(void*)",
								"is_variadic": false,
								"kind": "function",
								"parameter_types": [{
									"_typeName": "void*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									}
								}],
								"return_type":  {
									"_typeName": "uint16_t",
									"kind": "user_defined",
									"target": {
										"name": "uint16_t"
									}
								}
							}
						}
					},
					"id": 2629976022,
					"is_mutable": false,
					"kind": "member variable",
					"name": "getWidth",
					"type": {
						"_typeName": "uint16_t(*)(void*)",
						"kind": "pointer",
						"pointee": {
							"_typeName": "uint16_t(void*)",
							"is_variadic": false,
							"kind": "function",
							"parameter_types": [{
								"_typeName": "void*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}],
							"return_type":  {
								"_typeName": "uint16_t",
								"kind": "user_defined",
								"target": {
									"name": "uint16_t"
								}
							}
						}
					}
				}, {
					"_fullName": "::stappler::font::EmplaceCharInterface::getHeight",
					"_kind": "member variable",
					"_name": "getHeight",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "nullptr"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "uint16_t(*)(void*)",
							"kind": "pointer",
							"pointee": {
								"_typeName": "uint16_t(void*)",
								"is_variadic": false,
								"kind": "function",
								"parameter_types": [{
									"_typeName": "void*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									}
								}],
								"return_type":  {
									"_typeName": "uint16_t",
									"kind": "user_defined",
									"target": {
										"name": "uint16_t"
									}
								}
							}
						}
					},
					"id": 3013357226,
					"is_mutable": false,
					"kind": "member variable",
					"name": "getHeight",
					"type": {
						"_typeName": "uint16_t(*)(void*)",
						"kind": "pointer",
						"pointee": {
							"_typeName": "uint16_t(void*)",
							"is_variadic": false,
							"kind": "function",
							"parameter_types": [{
								"_typeName": "void*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}],
							"return_type":  {
								"_typeName": "uint16_t",
								"kind": "user_defined",
								"target": {
									"name": "uint16_t"
								}
							}
						}
					}
				}, {
					"_fullName": "::stappler::font::EmplaceCharInterface::setX",
					"_kind": "member variable",
					"_name": "setX",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "nullptr"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "void(*)(void*,uint16_t)",
							"kind": "pointer",
							"pointee": {
								"_typeName": "void(void*,uint16_t)",
								"is_variadic": false,
								"kind": "function",
								"parameter_types": [{
									"_typeName": "void*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									}
								}, {
									"_typeName": "uint16_t",
									"kind": "user_defined",
									"target": {
										"name": "uint16_t"
									}
								}],
								"return_type":  {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}
						}
					},
					"id": 4248013290,
					"is_mutable": false,
					"kind": "member variable",
					"name": "setX",
					"type": {
						"_typeName": "void(*)(void*,uint16_t)",
						"kind": "pointer",
						"pointee": {
							"_typeName": "void(void*,uint16_t)",
							"is_variadic": false,
							"kind": "function",
							"parameter_types": [{
								"_typeName": "void*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}, {
								"_typeName": "uint16_t",
								"kind": "user_defined",
								"target": {
									"name": "uint16_t"
								}
							}],
							"return_type":  {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							}
						}
					}
				}, {
					"_fullName": "::stappler::font::EmplaceCharInterface::setY",
					"_kind": "member variable",
					"_name": "setY",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "nullptr"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "void(*)(void*,uint16_t)",
							"kind": "pointer",
							"pointee": {
								"_typeName": "void(void*,uint16_t)",
								"is_variadic": false,
								"kind": "function",
								"parameter_types": [{
									"_typeName": "void*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									}
								}, {
									"_typeName": "uint16_t",
									"kind": "user_defined",
									"target": {
										"name": "uint16_t"
									}
								}],
								"return_type":  {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}
						}
					},
					"id": 2129928677,
					"is_mutable": false,
					"kind": "member variable",
					"name": "setY",
					"type": {
						"_typeName": "void(*)(void*,uint16_t)",
						"kind": "pointer",
						"pointee": {
							"_typeName": "void(void*,uint16_t)",
							"is_variadic": false,
							"kind": "function",
							"parameter_types": [{
								"_typeName": "void*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}, {
								"_typeName": "uint16_t",
								"kind": "user_defined",
								"target": {
									"name": "uint16_t"
								}
							}],
							"return_type":  {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							}
						}
					}
				}, {
					"_fullName": "::stappler::font::EmplaceCharInterface::setTex",
					"_kind": "member variable",
					"_name": "setTex",
					"default_value": {
						"expression": [{
							"kind": "keyword",
							"spelling": "nullptr"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "void(*)(void*,uint16_t)",
							"kind": "pointer",
							"pointee": {
								"_typeName": "void(void*,uint16_t)",
								"is_variadic": false,
								"kind": "function",
								"parameter_types": [{
									"_typeName": "void*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									}
								}, {
									"_typeName": "uint16_t",
									"kind": "user_defined",
									"target": {
										"name": "uint16_t"
									}
								}],
								"return_type":  {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}
						}
					},
					"id": 3915375026,
					"is_mutable": false,
					"kind": "member variable",
					"name": "setTex",
					"type": {
						"_typeName": "void(*)(void*,uint16_t)",
						"kind": "pointer",
						"pointee": {
							"_typeName": "void(void*,uint16_t)",
							"is_variadic": false,
							"kind": "function",
							"parameter_types": [{
								"_typeName": "void*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}, {
								"_typeName": "uint16_t",
								"kind": "user_defined",
								"target": {
									"name": "uint16_t"
								}
							}],
							"return_type":  {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							}
						}
					}
				}],
				"class_kind": "struct",
				"id": 3878979071,
				"is_declaration": false,
				"is_definition": true,
				"is_final": false,
				"kind": "class",
				"name": "EmplaceCharInterface",
				"scope": {
					"name": "EmplaceCharInterface"
				},
				"semantic_scope": ""
			}, {
				"_fullName": "::stappler::font::emplaceChars(stappler::font::EmplaceCharInterface const&,SpanView<void *> const&,float)",
				"_kind": "function",
				"_name": "emplaceChars",
				"body_kind": "declaration",
				"id": 4119511281,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": true,
				"is_definition": false,
				"is_variadic": false,
				"kind": "function",
				"name": "emplaceChars",
				"parameters": [{
					"_fullName": "",
					"_kind": "function parameter",
					"_name": "",
					"id": 46947589,
					"kind": "function parameter",
					"name": "",
					"type": {
						"_typeName": "stappler::font::EmplaceCharInterface const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::font::EmplaceCharInterface const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::font::EmplaceCharInterface",
								"kind": "user_defined",
								"target": {
									"name": "stappler::font::EmplaceCharInterface",
									"objects": [{
										"_fullName": "::stappler::font::EmplaceCharInterface",
										"_kind": "class",
										"_name": "EmplaceCharInterface",
										"class_kind": "struct",
										"id": 3878979071,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "EmplaceCharInterface",
										"scope": {
											"name": "EmplaceCharInterface"
										},
										"semantic_scope": ""
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_fullName": "",
					"_kind": "function parameter",
					"_name": "",
					"id": 46947589,
					"kind": "function parameter",
					"name": "",
					"type": {
						"_typeName": "SpanView<void *> const&",
						"kind": "reference",
						"referee": {
							"_typeName": "SpanView<void *> const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "SpanView<void *>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "SpanView",
									"objects": [{
										"_fullName": "::stappler::SpanView<typename>",
										"_kind": "class template",
										"_name": "SpanView",
										"class": {
											"_fullName": "::stappler::SpanView<typename>",
											"_kind": "class",
											"_name": "SpanView",
											"class_kind": "class",
											"id": 2371948180,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SpanView",
											"scope": {
												"is_templated": true,
												"name": "SpanView",
												"template_parameters": [{
													"_fullName": "_Type",
													"_kind": "template type parameter",
													"_name": "_Type",
													"id": 1327381061,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_Type"
												}]
											},
											"semantic_scope": ""
										},
										"id": 2371948180,
										"kind": "class template",
										"name": "SpanView",
										"parameters": [{
											"_fullName": "_Type",
											"_kind": "template type parameter",
											"_name": "_Type",
											"id": 1327381061,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "_Type"
										}],
										"scope":  {
											"is_templated": true,
											"name": "SpanView",
											"template_parameters": [{
												"_fullName": "_Type",
												"_kind": "template type parameter",
												"_name": "_Type",
												"id": 1327381061,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "_Type"
											}]
										}
									}]
								},
								"unexposed_arguments": "void *"
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_fullName": "totalSquare",
					"_kind": "function parameter",
					"_name": "totalSquare",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "std"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "numeric_limits"
						}, {
							"kind": "punctuation",
							"spelling": "<"
						}, {
							"kind": "keyword",
							"spelling": "float"
						}, {
							"kind": "punctuation",
							"spelling": ">"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "quiet_NaN"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "float",
							"builtin_type_kind": "float",
							"kind": "builtin"
						}
					},
					"id": 3576495378,
					"kind": "function parameter",
					"name": "totalSquare",
					"type": {
						"_typeName": "float",
						"builtin_type_kind": "float",
						"kind": "builtin"
					}
				}],
				"return_type":  {
					"_typeName": "geom::Extent2",
					"kind": "user_defined",
					"target": {
						"name": "geom::Extent2",
						"objects": [{
							"_fullName": "::stappler::geom::Extent2",
							"_kind": "class",
							"_name": "Extent2",
							"class_kind": "struct",
							"id": 3230388080,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Extent2",
							"scope": {
								"name": "Extent2"
							},
							"semantic_scope": ""
						}]
					}
				},
				"semantic_scope": "",
				"signature": "(stappler::font::EmplaceCharInterface const&,SpanView<void *> const&,float)"
			}],
			"id": 2611688916,
			"is_anonymous": false,
			"is_inline": false,
			"is_nested": true,
			"kind": "namespace",
			"name": "font",
			"scope": {
				"name": "font"
			}
		}],
		"id": 96045446,
		"is_anonymous": false,
		"is_inline": false,
		"is_nested": false,
		"kind": "namespace",
		"name": "stappler",
		"scope": {
			"name": "stappler"
		}
	}],
	"id": 3331199647,
	"kind": "file",
	"name": "core/font/SPFontEmplace.h",
	"unmatched_comments": [{
		"line": 21,
		"text": "\nCopyright (c) 2024 Stappler LLC <admin@stappler.dev>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
	}]
}