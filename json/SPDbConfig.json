{
	"_fullName": "core/db/SPDbConfig.h",
	"_kind": "file",
	"_name": "core/db/SPDbConfig.h",
	"childs": [{
		"_fullName": "SPTime.h",
		"_kind": "include directive",
		"_name": "SPTime.h",
		"id": 1748455668,
		"include": "core/core/utils/SPTime.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPTime.h"
	}, {
		"_fullName": "SPFilesystem.h",
		"_kind": "include directive",
		"_name": "SPFilesystem.h",
		"id": 2443679527,
		"include": "core/filesystem/SPFilesystem.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPFilesystem.h"
	}, {
		"_fullName": "STAPPLER_DB_SPDBCONFIG_H_",
		"_kind": "macro definition",
		"_name": "STAPPLER_DB_SPDBCONFIG_H_",
		"id": 2665756145,
		"is_function_like": false,
		"is_object_like": true,
		"is_variadic": false,
		"kind": "macro definition",
		"name": "STAPPLER_DB_SPDBCONFIG_H_",
		"replacement": ""
	}, {
		"_fullName": "::stappler",
		"_kind": "namespace",
		"_name": "stappler",
		"childs": [{
			"_fullName": "::stappler::db",
			"_kind": "namespace",
			"_name": "db",
			"childs": [{
				"_fullName": "::stappler::db::config",
				"_kind": "namespace",
				"_name": "config",
				"childs": [{
					"_fullName": "::stappler::db::config::AUTH_MAX_TIME",
					"_kind": "variable",
					"_name": "AUTH_MAX_TIME",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "720_sec"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 1086080506,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "AUTH_MAX_TIME",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::AUTH_MAX_LOGIN_ATTEMPT",
					"_kind": "variable",
					"_name": "AUTH_MAX_LOGIN_ATTEMPT",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "4"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "size_t",
								"kind": "user_defined",
								"target": {
									"name": "size_t"
								}
							}
						}
					},
					"id": 1561016630,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "AUTH_MAX_LOGIN_ATTEMPT",
					"semantic_scope": "",
					"type": {
						"_typeName": "size_t const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					}
				}, {
					"_fullName": "::stappler::db::config::INPUT_MAX_VAR_SIZE",
					"_kind": "variable",
					"_name": "INPUT_MAX_VAR_SIZE",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "255"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "size_t",
								"kind": "user_defined",
								"target": {
									"name": "size_t"
								}
							}
						}
					},
					"id": 3064757166,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "INPUT_MAX_VAR_SIZE",
					"semantic_scope": "",
					"type": {
						"_typeName": "size_t const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					}
				}, {
					"_fullName": "::stappler::db::config::INPUT_MAX_REQUEST_SIZE",
					"_kind": "variable",
					"_name": "INPUT_MAX_REQUEST_SIZE",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "0"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "size_t",
								"kind": "user_defined",
								"target": {
									"name": "size_t"
								}
							}
						}
					},
					"id": 4155088165,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "INPUT_MAX_REQUEST_SIZE",
					"semantic_scope": "",
					"type": {
						"_typeName": "size_t const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					}
				}, {
					"_fullName": "::stappler::db::config::INPUT_MAX_FILE_SIZE",
					"_kind": "variable",
					"_name": "INPUT_MAX_FILE_SIZE",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "0"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "size_t",
								"kind": "user_defined",
								"target": {
									"name": "size_t"
								}
							}
						}
					},
					"id": 2389328235,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "INPUT_MAX_FILE_SIZE",
					"semantic_scope": "",
					"type": {
						"_typeName": "size_t const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					}
				}, {
					"_fullName": "::stappler::db::config::INPUT_UPDATE_TIME",
					"_kind": "variable",
					"_name": "INPUT_UPDATE_TIME",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "1_sec"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 1760734817,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "INPUT_UPDATE_TIME",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::INPUT_UPDATE_FREQUENCY",
					"_kind": "variable",
					"_name": "INPUT_UPDATE_FREQUENCY",
					"default_value": {
						"expression": [{
							"kind": "float_literal",
							"spelling": "0.1f"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 823346533,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "INPUT_UPDATE_FREQUENCY",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::FIELD_FILE_DEFAULT_MAX_SIZE",
					"_kind": "variable",
					"_name": "FIELD_FILE_DEFAULT_MAX_SIZE",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "250_MiB"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "size_t",
								"kind": "user_defined",
								"target": {
									"name": "size_t"
								}
							}
						}
					},
					"id": 1892275829,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "FIELD_FILE_DEFAULT_MAX_SIZE",
					"semantic_scope": "",
					"type": {
						"_typeName": "size_t const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					}
				}, {
					"_fullName": "::stappler::db::config::FIELD_EXTRA_DEFAULT_HINT_SIZE",
					"_kind": "variable",
					"_name": "FIELD_EXTRA_DEFAULT_HINT_SIZE",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "8_KiB"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "size_t const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "size_t",
								"kind": "user_defined",
								"target": {
									"name": "size_t"
								}
							}
						}
					},
					"id": 3361407511,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "FIELD_EXTRA_DEFAULT_HINT_SIZE",
					"semantic_scope": "",
					"type": {
						"_typeName": "size_t const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "size_t",
							"kind": "user_defined",
							"target": {
								"name": "size_t"
							}
						}
					}
				}, {
					"_fullName": "::stappler::db::config::FIELD_TEXT_DEFAULT_MIN_SIZE",
					"_kind": "variable",
					"_name": "FIELD_TEXT_DEFAULT_MIN_SIZE",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "3"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 713290286,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "FIELD_TEXT_DEFAULT_MIN_SIZE",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::FIELD_TEXT_DEFAULT_MAX_SIZE",
					"_kind": "variable",
					"_name": "FIELD_TEXT_DEFAULT_MAX_SIZE",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "256"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 2460277908,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "FIELD_TEXT_DEFAULT_MAX_SIZE",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::FIELD_PASSWORD_DEFAULT_SALT",
					"_kind": "variable",
					"_name": "FIELD_PASSWORD_DEFAULT_SALT",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "StringView"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "string_literal",
							"spelling": "\"StapplerUserPasswordKey\""
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 2373101114,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_fullName": "BytesReader<_CharType>",
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 3892284670,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 1592092855,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_fullName": "_CharType",
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 1941148167,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 1592092855,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_fullName": "_CharType",
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 1941148167,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_fullName": "_CharType",
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 1941148167,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 3503725706,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_fullName": "_CharType",
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 1941148167,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 3503725706,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_fullName": "_CharType",
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 1941148167,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_fullName": "_CharType",
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 1941148167,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						}
					},
					"id": 980572888,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "FIELD_PASSWORD_DEFAULT_SALT",
					"semantic_scope": "",
					"type": {
						"_typeName": "stappler::StringView const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "stappler::StringView",
							"kind": "user_defined",
							"target": {
								"name": "stappler::StringView",
								"objects": [{
									"_fullName": "::stappler::StringView",
									"_kind": "type alias",
									"_name": "StringView",
									"id": 2373101114,
									"kind": "type alias",
									"name": "StringView",
									"underlying_type": {
										"_typeName": "StringViewBase<char>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "StringViewBase",
											"objects": [{
												"_fullName": "::stappler::StringViewBase<typename>",
												"_kind": "class template",
												"_name": "StringViewBase",
												"class": {
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class",
													"_name": "StringViewBase",
													"bases": [{
														"_fullName": "BytesReader<_CharType>",
														"_kind": "base class specifier",
														"_name": "BytesReader<_CharType>",
														"access_specifier": "public",
														"id": 3892284670,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "BytesReader<_CharType>",
														"type": {
															"_typeName": "BytesReader<_CharType>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "BytesReader",
																"objects": [{
																	"_fullName": "::stappler::BytesReader<typename>",
																	"_kind": "class template",
																	"_name": "BytesReader",
																	"class": {
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class",
																		"_name": "BytesReader",
																		"class_kind": "class",
																		"id": 1592092855,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "BytesReader",
																		"scope": {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_fullName": "_CharType",
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 1941148167,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 1592092855,
																	"kind": "class template",
																	"name": "BytesReader",
																	"parameters": [{
																		"_fullName": "_CharType",
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 1941148167,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "BytesReader",
																		"template_parameters": [{
																			"_fullName": "_CharType",
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 1941148167,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "_CharType"
														}
													}],
													"class_kind": "class",
													"id": 3503725706,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "StringViewBase",
													"scope": {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_fullName": "_CharType",
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 1941148167,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													},
													"semantic_scope": ""
												},
												"id": 3503725706,
												"kind": "class template",
												"name": "StringViewBase",
												"parameters": [{
													"_fullName": "_CharType",
													"_kind": "template type parameter",
													"_name": "_CharType",
													"id": 1941148167,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_CharType"
												}],
												"scope":  {
													"is_templated": true,
													"name": "StringViewBase",
													"template_parameters": [{
														"_fullName": "_CharType",
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 1941148167,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}]
												}
											}]
										},
										"unexposed_arguments": "char"
									}
								}]
							}
						}
					}
				}, {
					"_fullName": "::stappler::db::config::STORAGE_DEFAULT_KEY_VALUE_INTERVAL",
					"_kind": "variable",
					"_name": "STORAGE_DEFAULT_KEY_VALUE_INTERVAL",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "TimeInterval"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "seconds"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "int_literal",
							"spelling": "60"
						}, {
							"kind": "punctuation",
							"spelling": "*"
						}, {
							"kind": "int_literal",
							"spelling": "60"
						}, {
							"kind": "punctuation",
							"spelling": "*"
						}, {
							"kind": "int_literal",
							"spelling": "24"
						}, {
							"kind": "punctuation",
							"spelling": "*"
						}, {
							"kind": "int_literal",
							"spelling": "365"
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 2583223294,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "STORAGE_DEFAULT_KEY_VALUE_INTERVAL",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::STORAGE_DEFAULT_INTERNAL_INTERVAL",
					"_kind": "variable",
					"_name": "STORAGE_DEFAULT_INTERNAL_INTERVAL",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "TimeInterval"
						}, {
							"kind": "punctuation",
							"spelling": "::"
						}, {
							"kind": "identifier",
							"spelling": "seconds"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "int_literal",
							"spelling": "60"
						}, {
							"kind": "punctuation",
							"spelling": "*"
						}, {
							"kind": "int_literal",
							"spelling": "60"
						}, {
							"kind": "punctuation",
							"spelling": "*"
						}, {
							"kind": "int_literal",
							"spelling": "24"
						}, {
							"kind": "punctuation",
							"spelling": "*"
						}, {
							"kind": "int_literal",
							"spelling": "30"
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 2081425825,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "STORAGE_DEFAULT_INTERNAL_INTERVAL",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::STORAGE_INTERFACE_KEY",
					"_kind": "variable",
					"_name": "STORAGE_INTERFACE_KEY",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "StringView"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "string_literal",
							"spelling": "\"SP.StorageInterface\""
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 44516489,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "STORAGE_INTERFACE_KEY",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::STORAGE_TRANSACTION_PREFIX",
					"_kind": "variable",
					"_name": "STORAGE_TRANSACTION_PREFIX",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "StringView"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "string_literal",
							"spelling": "\"ST.Tr.\""
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 1025249907,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "STORAGE_TRANSACTION_PREFIX",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::STORAGE_TRANSACTION_STACK_KEY",
					"_kind": "variable",
					"_name": "STORAGE_TRANSACTION_STACK_KEY",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "StringView"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "string_literal",
							"spelling": "\"ST.Transaction.Stack\""
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 577223349,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "STORAGE_TRANSACTION_STACK_KEY",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::UPLOAD_TMP_FILE_PREFIX",
					"_kind": "variable",
					"_name": "UPLOAD_TMP_FILE_PREFIX",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "StringView"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "string_literal",
							"spelling": "\"sa.upload\""
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 2376502077,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "UPLOAD_TMP_FILE_PREFIX",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::UPLOAD_TMP_IMAGE_PREFIX",
					"_kind": "variable",
					"_name": "UPLOAD_TMP_IMAGE_PREFIX",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "StringView"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "string_literal",
							"spelling": "\"sa.image\""
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 2362677238,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "UPLOAD_TMP_IMAGE_PREFIX",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::BROADCAST_CHANNEL_NAME",
					"_kind": "variable",
					"_name": "BROADCAST_CHANNEL_NAME",
					"default_value": {
						"expression": [{
							"kind": "identifier",
							"spelling": "StringView"
						}, {
							"kind": "punctuation",
							"spelling": "("
						}, {
							"kind": "string_literal",
							"spelling": "\"serenity_broadcast\""
						}, {
							"kind": "punctuation",
							"spelling": ")"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "auto const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "auto",
								"kind": "auto"
							}
						}
					},
					"id": 440921184,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "BROADCAST_CHANNEL_NAME",
					"semantic_scope": "",
					"type": {
						"_typeName": "auto const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "auto",
							"kind": "auto"
						}
					}
				}, {
					"_fullName": "::stappler::db::config::RESOURCE_RESOLVE_MAX_DEPTH",
					"_kind": "variable",
					"_name": "RESOURCE_RESOLVE_MAX_DEPTH",
					"default_value": {
						"expression": [{
							"kind": "int_literal",
							"spelling": "4"
						}],
						"kind": "unexposed",
						"type": {
							"_typeName": "uint16_t const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "uint16_t",
								"kind": "user_defined",
								"target": {
									"name": "uint16_t"
								}
							}
						}
					},
					"id": 3894561075,
					"is_constexpr": true,
					"is_declaration": false,
					"is_definition": true,
					"kind": "variable",
					"name": "RESOURCE_RESOLVE_MAX_DEPTH",
					"semantic_scope": "",
					"type": {
						"_typeName": "uint16_t const",
						"cv_qualifier": "const",
						"kind": "cv_qualified",
						"type": {
							"_typeName": "uint16_t",
							"kind": "user_defined",
							"target": {
								"name": "uint16_t"
							}
						}
					}
				}],
				"id": 3185537527,
				"is_anonymous": false,
				"is_inline": false,
				"is_nested": true,
				"kind": "namespace",
				"name": "config",
				"scope": {
					"name": "config"
				}
			}],
			"id": 3996859821,
			"is_anonymous": false,
			"is_inline": false,
			"is_nested": true,
			"kind": "namespace",
			"name": "db",
			"scope": {
				"name": "db"
			}
		}],
		"id": 96045446,
		"is_anonymous": false,
		"is_inline": false,
		"is_nested": false,
		"kind": "namespace",
		"name": "stappler",
		"scope": {
			"name": "stappler"
		}
	}],
	"id": 2303185847,
	"kind": "file",
	"name": "core/db/SPDbConfig.h",
	"unmatched_comments": [{
		"line": 22,
		"text": "\nCopyright (c) 2019-2022 Roman Katuntsev <sbkarr@stappler.org>\nCopyright (c) 2023-2024 Stappler LLC <admin@stappler.dev>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
	}]
}