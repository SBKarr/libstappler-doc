{
	"_kind": "file",
	"_name": "/home/sbkarr/stappler/xenolith/libstappler/modules/sql/SPSql.h",
	"childs": [{
		"_kind": "include directive",
		"_name": "SPString.h",
		"id": 140737089194512,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/common/string/SPString.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPString.h"
	}, {
		"_kind": "include directive",
		"_name": "SPData.h",
		"id": 140737109139408,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/modules/data/SPData.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPData.h"
	}, {
		"_kind": "include directive",
		"_name": "SPMemory.h",
		"id": 140737086805200,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/common/core/SPMemory.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPMemory.h"
	}, {
		"_kind": "include directive",
		"_name": "SPSqlInsert.hpp",
		"id": 140737119750768,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/modules/sql/SPSqlInsert.hpp",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPSqlInsert.hpp"
	}, {
		"_kind": "include directive",
		"_name": "SPSqlUpdate.hpp",
		"id": 140737146328736,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/modules/sql/SPSqlUpdate.hpp",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPSqlUpdate.hpp"
	}, {
		"_kind": "include directive",
		"_name": "SPSqlSelect.hpp",
		"id": 93825005395424,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/modules/sql/SPSqlSelect.hpp",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPSqlSelect.hpp"
	}, {
		"_kind": "include directive",
		"_name": "SPSqlWhere.hpp",
		"id": 93824999140944,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/modules/sql/SPSqlWhere.hpp",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPSqlWhere.hpp"
	}, {
		"_fullName": "MODULES_SQL_SQLQUERY_H_",
		"_kind": "macro definition",
		"_name": "MODULES_SQL_SQLQUERY_H_",
		"id": 140737095498192,
		"is_function_like": false,
		"is_object_like": true,
		"is_variadic": false,
		"kind": "macro definition",
		"name": "MODULES_SQL_SQLQUERY_H_",
		"replacement": ""
	}, {
		"_fullName": "::stappler",
		"_kind": "namespace",
		"_name": "stappler",
		"childs": [{
			"_fullName": "::stappler::sql",
			"_kind": "namespace",
			"_name": "sql",
			"childs": [{
				"_fullName": "::stappler::sql::Profile",
				"_kind": "enum",
				"_name": "Profile",
				"childs": [{
					"_fullName": "::stappler::sql::Profile::Postgres",
					"_kind": "enum value",
					"_name": "Postgres",
					"id": 140737147981008,
					"kind": "enum value",
					"name": "Postgres"
				}, {
					"_fullName": "::stappler::sql::Profile::Sqlite",
					"_kind": "enum value",
					"_name": "Sqlite",
					"id": 140737091121792,
					"kind": "enum value",
					"name": "Sqlite"
				}],
				"has_explicit_type": false,
				"id": 140737128909888,
				"is_declaration": false,
				"is_definition": true,
				"is_scoped": true,
				"kind": "enum",
				"name": "Profile",
				"scope": {
					"name": "Profile"
				},
				"semantic_scope": "",
				"underlying_type": {
					"_typeName": "int",
					"builtin_type_kind": "int",
					"kind": "builtin"
				}
			}, {
				"_fullName": "::stappler::sql::Comparation",
				"_kind": "enum",
				"_name": "Comparation",
				"childs": [{
					"_fullName": "::stappler::sql::Comparation::Invalid",
					"_kind": "enum value",
					"_name": "Invalid",
					"id": 140737135454880,
					"kind": "enum value",
					"name": "Invalid"
				}, {
					"_fullName": "::stappler::sql::Comparation::LessThen",
					"_kind": "enum value",
					"_name": "LessThen",
					"id": 140737120268432,
					"kind": "enum value",
					"name": "LessThen"
				}, {
					"_fullName": "::stappler::sql::Comparation::LessOrEqual",
					"_kind": "enum value",
					"_name": "LessOrEqual",
					"id": 140737122756176,
					"kind": "enum value",
					"name": "LessOrEqual"
				}, {
					"_fullName": "::stappler::sql::Comparation::Equal",
					"_kind": "enum value",
					"_name": "Equal",
					"id": 140737147978576,
					"kind": "enum value",
					"name": "Equal"
				}, {
					"_fullName": "::stappler::sql::Comparation::NotEqual",
					"_kind": "enum value",
					"_name": "NotEqual",
					"id": 93825012425200,
					"kind": "enum value",
					"name": "NotEqual"
				}, {
					"_fullName": "::stappler::sql::Comparation::GreatherOrEqual",
					"_kind": "enum value",
					"_name": "GreatherOrEqual",
					"id": 93825004138368,
					"kind": "enum value",
					"name": "GreatherOrEqual"
				}, {
					"_fullName": "::stappler::sql::Comparation::GreatherThen",
					"_kind": "enum value",
					"_name": "GreatherThen",
					"id": 93825012280128,
					"kind": "enum value",
					"name": "GreatherThen"
				}, {
					"_fullName": "::stappler::sql::Comparation::BetweenValues",
					"_kind": "enum value",
					"_name": "BetweenValues",
					"id": 93825004001536,
					"kind": "enum value",
					"name": "BetweenValues"
				}, {
					"_fullName": "::stappler::sql::Comparation::BetweenEquals",
					"_kind": "enum value",
					"_name": "BetweenEquals",
					"id": 93825003282304,
					"kind": "enum value",
					"name": "BetweenEquals"
				}, {
					"_fullName": "::stappler::sql::Comparation::NotBetweenValues",
					"_kind": "enum value",
					"_name": "NotBetweenValues",
					"id": 93825003284464,
					"kind": "enum value",
					"name": "NotBetweenValues"
				}, {
					"_fullName": "::stappler::sql::Comparation::NotBetweenEquals",
					"_kind": "enum value",
					"_name": "NotBetweenEquals",
					"id": 93825003868864,
					"kind": "enum value",
					"name": "NotBetweenEquals"
				}, {
					"_fullName": "::stappler::sql::Comparation::Includes",
					"_kind": "enum value",
					"_name": "Includes",
					"id": 93824999140624,
					"kind": "enum value",
					"name": "Includes"
				}, {
					"_fullName": "::stappler::sql::Comparation::Between",
					"_kind": "enum value",
					"_name": "Between",
					"id": 93825003283344,
					"kind": "enum value",
					"name": "Between"
				}, {
					"_fullName": "::stappler::sql::Comparation::In",
					"_kind": "enum value",
					"_name": "In",
					"id": 93824999140224,
					"kind": "enum value",
					"name": "In"
				}, {
					"_fullName": "::stappler::sql::Comparation::NotIn",
					"_kind": "enum value",
					"_name": "NotIn",
					"id": 93824999140416,
					"kind": "enum value",
					"name": "NotIn"
				}, {
					"_fullName": "::stappler::sql::Comparation::IsNull",
					"_kind": "enum value",
					"_name": "IsNull",
					"id": 93825003101536,
					"kind": "enum value",
					"name": "IsNull"
				}, {
					"_fullName": "::stappler::sql::Comparation::IsNotNull",
					"_kind": "enum value",
					"_name": "IsNotNull",
					"id": 93825003101728,
					"kind": "enum value",
					"name": "IsNotNull"
				}, {
					"_fullName": "::stappler::sql::Comparation::Prefix",
					"_kind": "enum value",
					"_name": "Prefix",
					"id": 93825004001056,
					"kind": "enum value",
					"name": "Prefix"
				}, {
					"_fullName": "::stappler::sql::Comparation::Suffix",
					"_kind": "enum value",
					"_name": "Suffix",
					"id": 93825004001248,
					"kind": "enum value",
					"name": "Suffix"
				}, {
					"_fullName": "::stappler::sql::Comparation::WordPart",
					"_kind": "enum value",
					"_name": "WordPart",
					"id": 93825004251680,
					"kind": "enum value",
					"name": "WordPart"
				}],
				"has_explicit_type": false,
				"id": 140737146085392,
				"is_declaration": false,
				"is_definition": true,
				"is_scoped": true,
				"kind": "enum",
				"name": "Comparation",
				"scope": {
					"name": "Comparation"
				},
				"semantic_scope": "",
				"underlying_type": {
					"_typeName": "int",
					"builtin_type_kind": "int",
					"kind": "builtin"
				}
			}, {
				"_fullName": "::stappler::sql::Ordering",
				"_kind": "enum",
				"_name": "Ordering",
				"childs": [{
					"_fullName": "::stappler::sql::Ordering::Ascending",
					"_kind": "enum value",
					"_name": "Ascending",
					"id": 93825004251152,
					"kind": "enum value",
					"name": "Ascending"
				}, {
					"_fullName": "::stappler::sql::Ordering::Descending",
					"_kind": "enum value",
					"_name": "Descending",
					"id": 93825004251344,
					"kind": "enum value",
					"name": "Descending"
				}],
				"has_explicit_type": false,
				"id": 140736956220064,
				"is_declaration": false,
				"is_definition": true,
				"is_scoped": true,
				"kind": "enum",
				"name": "Ordering",
				"scope": {
					"name": "Ordering"
				},
				"semantic_scope": "",
				"underlying_type": {
					"_typeName": "int",
					"builtin_type_kind": "int",
					"kind": "builtin"
				}
			}, {
				"_fullName": "::stappler::sql::Nulls",
				"_kind": "enum",
				"_name": "Nulls",
				"childs": [{
					"_fullName": "::stappler::sql::Nulls::None",
					"_kind": "enum value",
					"_name": "None",
					"id": 93825003282688,
					"kind": "enum value",
					"name": "None"
				}, {
					"_fullName": "::stappler::sql::Nulls::First",
					"_kind": "enum value",
					"_name": "First",
					"id": 93825003282832,
					"kind": "enum value",
					"name": "First"
				}, {
					"_fullName": "::stappler::sql::Nulls::Last",
					"_kind": "enum value",
					"_name": "Last",
					"id": 93825007554000,
					"kind": "enum value",
					"name": "Last"
				}],
				"has_explicit_type": false,
				"id": 140737146328912,
				"is_declaration": false,
				"is_definition": true,
				"is_scoped": true,
				"kind": "enum",
				"name": "Nulls",
				"scope": {
					"name": "Nulls"
				},
				"semantic_scope": "",
				"underlying_type": {
					"_typeName": "int",
					"builtin_type_kind": "int",
					"kind": "builtin"
				}
			}, {
				"_fullName": "::stappler::sql::Operator",
				"_kind": "enum",
				"_name": "Operator",
				"childs": [{
					"_fullName": "::stappler::sql::Operator::And",
					"_kind": "enum value",
					"_name": "And",
					"id": 93825007554288,
					"kind": "enum value",
					"name": "And"
				}, {
					"_fullName": "::stappler::sql::Operator::Or",
					"_kind": "enum value",
					"_name": "Or",
					"id": 93825004256640,
					"kind": "enum value",
					"name": "Or"
				}],
				"has_explicit_type": false,
				"id": 93825005157104,
				"is_declaration": false,
				"is_definition": true,
				"is_scoped": true,
				"kind": "enum",
				"name": "Operator",
				"scope": {
					"name": "Operator"
				},
				"semantic_scope": "",
				"underlying_type": {
					"_typeName": "int",
					"builtin_type_kind": "int",
					"kind": "builtin"
				}
			}, {
				"_fullName": "::stappler::sql::encodeComparation(stappler::sql::Comparation)",
				"_kind": "function",
				"_name": "encodeComparation",
				"body_kind": "declaration",
				"id": 93825005206336,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": true,
				"is_definition": false,
				"is_variadic": false,
				"kind": "function",
				"name": "encodeComparation",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "",
					"id": 93825005008464,
					"kind": "function parameter",
					"name": "",
					"type": {
						"_typeName": "stappler::sql::Comparation",
						"kind": "user_defined",
						"target": {
							"name": "stappler::sql::Comparation",
							"objects": [{
								"_fullName": "::stappler::sql::Comparation",
								"_kind": "enum",
								"_name": "Comparation",
								"has_explicit_type": false,
								"id": 140737146085392,
								"is_declaration": false,
								"is_definition": true,
								"is_scoped": true,
								"kind": "enum",
								"name": "Comparation",
								"scope": {
									"name": "Comparation"
								},
								"semantic_scope": "",
								"underlying_type": {
									"_typeName": "int",
									"builtin_type_kind": "int",
									"kind": "builtin"
								}
							}]
						}
					}
				}],
				"return_type":  {
					"_typeName": "Pair<stappler::StringView, bool>",
					"arguments_exposed": false,
					"kind": "template_instantiation",
					"primary_template": {
						"name": "Pair"
					},
					"unexposed_arguments": "stappler::StringView, bool"
				},
				"semantic_scope": "",
				"signature": "(stappler::sql::Comparation)"
			}, {
				"_fullName": "::stappler::sql::decodeComparation(stappler::StringView)",
				"_kind": "function",
				"_name": "decodeComparation",
				"body_kind": "declaration",
				"id": 140737112677424,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": true,
				"is_definition": false,
				"is_variadic": false,
				"kind": "function",
				"name": "decodeComparation",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "",
					"id": 93824999138816,
					"kind": "function parameter",
					"name": "",
					"type": {
						"_typeName": "stappler::StringView",
						"kind": "user_defined",
						"target": {
							"name": "stappler::StringView",
							"objects": [{
								"_fullName": "::stappler::StringView",
								"_kind": "type alias",
								"_name": "StringView",
								"id": 93824997448656,
								"kind": "type alias",
								"name": "StringView",
								"underlying_type": {
									"_typeName": "StringViewBase<char>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "StringViewBase",
										"objects": [{
											"_fullName": "::stappler::StringViewBase<typename>",
											"_kind": "class template",
											"_name": "StringViewBase",
											"class": {
												"_fullName": "::stappler::StringViewBase<typename>",
												"_kind": "class",
												"_name": "StringViewBase",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "BytesReader<_CharType>",
													"access_specifier": "public",
													"id": 93824998090352,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "BytesReader<_CharType>",
													"type": {
														"_typeName": "BytesReader<_CharType>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "BytesReader",
															"objects": [{
																"_fullName": "::stappler::BytesReader<typename>",
																"_kind": "class template",
																"_name": "BytesReader",
																"class": {
																	"_fullName": "::stappler::BytesReader<typename>",
																	"_kind": "class",
																	"_name": "BytesReader",
																	"class_kind": "class",
																	"id": 140736954953792,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "BytesReader",
																	"scope": {
																		"is_templated": true,
																		"name": "BytesReader",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824998648144,
																"kind": "class template",
																"name": "BytesReader",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 140737098599232,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "BytesReader",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 140737098599232,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "_CharType"
													}
												}],
												"class_kind": "class",
												"id": 140737094580320,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "StringViewBase",
												"scope": {
													"is_templated": true,
													"name": "StringViewBase",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824999493216,
											"kind": "class template",
											"name": "StringViewBase",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "_CharType",
												"id": 93824999493712,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "_CharType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "StringViewBase",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "_CharType",
													"id": 93824999493712,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_CharType"
												}]
											}
										}]
									},
									"unexposed_arguments": "char"
								}
							}]
						}
					}
				}],
				"return_type":  {
					"_typeName": "Pair<stappler::sql::Comparation, bool>",
					"arguments_exposed": false,
					"kind": "template_instantiation",
					"primary_template": {
						"name": "Pair"
					},
					"unexposed_arguments": "stappler::sql::Comparation, bool"
				},
				"semantic_scope": "",
				"signature": "(stappler::StringView)"
			}, {
				"_fullName": "::stappler::sql::PatternComparator<typename>",
				"_kind": "class template",
				"_name": "PatternComparator",
				"childs": [{
					"_fullName": "::stappler::sql::PatternComparator<typename>",
					"_kind": "class",
					"_name": "PatternComparator",
					"childs": [{
						"_fullName": "::stappler::sql::PatternComparator<typename>::Type",
						"_kind": "type alias",
						"_name": "Type",
						"id": 93824999138960,
						"kind": "type alias",
						"name": "Type",
						"underlying_type": {
							"_typeName": "typename std::remove_reference<T>::type",
							"kind": "unexposed",
							"name": "typename std::remove_reference<T>::type"
						}
					}, {
						"_fullName": "::stappler::sql::PatternComparator<typename>::cmp",
						"_kind": "member variable",
						"_name": "cmp",
						"default_value": {
							"expression": [{
								"kind": "identifier",
								"spelling": "Comparation"
							}, {
								"kind": "punctuation",
								"spelling": "::"
							}, {
								"kind": "identifier",
								"spelling": "Prefix"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "stappler::sql::Comparation",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Comparation",
									"objects": [{
										"_fullName": "::stappler::sql::Comparation",
										"_kind": "enum",
										"_name": "Comparation",
										"has_explicit_type": false,
										"id": 140737146085392,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Comparation",
										"scope": {
											"name": "Comparation"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"id": 140737141954704,
						"is_mutable": false,
						"kind": "member variable",
						"name": "cmp",
						"type": {
							"_typeName": "stappler::sql::Comparation",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Comparation",
								"objects": [{
									"_fullName": "::stappler::sql::Comparation",
									"_kind": "enum",
									"_name": "Comparation",
									"has_explicit_type": false,
									"id": 140737146085392,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "Comparation",
									"scope": {
										"name": "Comparation"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						}
					}, {
						"_fullName": "::stappler::sql::PatternComparator<typename>::value",
						"_kind": "member variable",
						"_name": "value",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "Type*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "Type",
									"kind": "user_defined",
									"target": {
										"name": "Type",
										"objects": [{
											"_fullName": "::stappler::sql::PatternComparator<typename>::Type",
											"_kind": "type alias",
											"_name": "Type",
											"id": 93824999138960,
											"kind": "type alias",
											"name": "Type",
											"underlying_type": {
												"_typeName": "typename std::remove_reference<T>::type",
												"kind": "unexposed",
												"name": "typename std::remove_reference<T>::type"
											}
										}]
									}
								}
							}
						},
						"id": 140737091224864,
						"is_mutable": false,
						"kind": "member variable",
						"name": "value",
						"type": {
							"_typeName": "Type*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "Type",
								"kind": "user_defined",
								"target": {
									"name": "Type",
									"objects": [{
										"_fullName": "::stappler::sql::PatternComparator<typename>::Type",
										"_kind": "type alias",
										"_name": "Type",
										"id": 93824999138960,
										"kind": "type alias",
										"name": "Type",
										"underlying_type": {
											"_typeName": "typename std::remove_reference<T>::type",
											"kind": "unexposed",
											"name": "typename std::remove_reference<T>::type"
										}
									}]
								}
							}
						}
					}],
					"class_kind": "struct",
					"id": 93825005008112,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "PatternComparator",
					"scope": {
						"is_templated": true,
						"name": "PatternComparator",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "T",
							"id": 140737131519344,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "T"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::sql::PatternComparator<typename>",
					"_kind": "class",
					"_name": "PatternComparator",
					"class_kind": "struct",
					"id": 93825005008112,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "PatternComparator",
					"scope": {
						"is_templated": true,
						"name": "PatternComparator",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "T",
							"id": 140737131519344,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "T"
						}]
					},
					"semantic_scope": ""
				},
				"id": 140737095785152,
				"kind": "class template",
				"name": "PatternComparator",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "T",
					"id": 140737131519344,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "T"
				}],
				"scope":  {
					"is_templated": true,
					"name": "PatternComparator",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "T",
						"id": 140737131519344,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "T"
					}]
				}
			}, {
				"_fullName": "::stappler::sql::SimpleBinder<typename>",
				"_kind": "class template",
				"_name": "SimpleBinder",
				"childs": [{
					"_fullName": "::stappler::sql::SimpleBinder<typename>",
					"_kind": "class",
					"_name": "SimpleBinder",
					"bases": [{
						"_kind": "base class specifier",
						"_name": "Interface::AllocBaseType",
						"access_specifier": "public",
						"id": 93824999139248,
						"is_virtual": false,
						"kind": "base class specifier",
						"name": "Interface::AllocBaseType",
						"type": {
							"_typeName": "Interface::AllocBaseType",
							"kind": "unexposed",
							"name": "Interface::AllocBaseType"
						}
					}],
					"childs":  [{
						"_fullName": "::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,data::ValueTemplate<Interface> const&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "definition",
						"cv_qualifier": "none",
						"id": 140737150219520,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "stream",
							"id": 93824999139952,
							"kind": "function parameter",
							"name": "stream",
							"type": {
								"_typeName": "std::ostream&",
								"kind": "reference",
								"referee": {
									"_typeName": "std::ostream",
									"kind": "user_defined",
									"target": {
										"name": "std::ostream"
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "val",
							"id": 93825007554720,
							"kind": "function parameter",
							"name": "val",
							"type": {
								"_typeName": "data::ValueTemplate<Interface> const&",
								"kind": "reference",
								"referee": {
									"_typeName": "data::ValueTemplate<Interface> const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "data::ValueTemplate<Interface>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "data::ValueTemplate",
											"objects": [{
												"_fullName": "::stappler::data::ValueTemplate<typename>",
												"_kind": "class template",
												"_name": "ValueTemplate",
												"class": {
													"_fullName": "::stappler::data::ValueTemplate<typename>",
													"_kind": "class",
													"_name": "ValueTemplate",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "Interface::AllocBaseType",
														"access_specifier": "public",
														"id": 140737091294512,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "Interface::AllocBaseType",
														"type": {
															"_typeName": "Interface::AllocBaseType",
															"kind": "unexposed",
															"name": "Interface::AllocBaseType"
														}
													}],
													"class_kind": "class",
													"id": 93825001914496,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "ValueTemplate",
													"scope": {
														"is_templated": true,
														"name": "ValueTemplate",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003299248,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93825003299040,
												"kind": "class template",
												"name": "ValueTemplate",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825003299248,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}],
												"scope":  {
													"is_templated": true,
													"name": "ValueTemplate",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003299248,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												}
											}]
										},
										"unexposed_arguments": "Interface"
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(std::ostream&,data::ValueTemplate<Interface> const&)"
					}, {
						"_fullName": "::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,const typename Interface::StringType&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "definition",
						"cv_qualifier": "none",
						"id": 140737135503872,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "stream",
							"id": 93825007555152,
							"kind": "function parameter",
							"name": "stream",
							"type": {
								"_typeName": "std::ostream&",
								"kind": "reference",
								"referee": {
									"_typeName": "std::ostream",
									"kind": "user_defined",
									"target": {
										"name": "std::ostream"
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "val",
							"id": 93825012333248,
							"kind": "function parameter",
							"name": "val",
							"type": {
								"_typeName": "const typename Interface::StringType&",
								"kind": "reference",
								"referee": {
									"_typeName": "const typename Interface::StringType",
									"kind": "unexposed",
									"name": "const typename Interface::StringType"
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(std::ostream&,const typename Interface::StringType&)"
					}, {
						"_fullName": "::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,const typename Interface::BytesType&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "definition",
						"cv_qualifier": "none",
						"id": 140737119788688,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "stream",
							"id": 93825012333680,
							"kind": "function parameter",
							"name": "stream",
							"type": {
								"_typeName": "std::ostream&",
								"kind": "reference",
								"referee": {
									"_typeName": "std::ostream",
									"kind": "user_defined",
									"target": {
										"name": "std::ostream"
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "val",
							"id": 93825010973296,
							"kind": "function parameter",
							"name": "val",
							"type": {
								"_typeName": "const typename Interface::BytesType&",
								"kind": "reference",
								"referee": {
									"_typeName": "const typename Interface::BytesType",
									"kind": "unexposed",
									"name": "const typename Interface::BytesType"
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(std::ostream&,const typename Interface::BytesType&)"
					}, {
						"_fullName": "::stappler::sql::SimpleBinder<typename>::writeBind(std::ostream&,PatternComparator<data::ValueTemplate<Interface>> const&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "definition",
						"cv_qualifier": "none",
						"id": 93825005157360,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "stream",
							"id": 93825010973584,
							"kind": "function parameter",
							"name": "stream",
							"type": {
								"_typeName": "std::ostream&",
								"kind": "reference",
								"referee": {
									"_typeName": "std::ostream",
									"kind": "user_defined",
									"target": {
										"name": "std::ostream"
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "val",
							"id": 93825012332048,
							"kind": "function parameter",
							"name": "val",
							"type": {
								"_typeName": "PatternComparator<data::ValueTemplate<Interface>> const&",
								"kind": "reference",
								"referee": {
									"_typeName": "PatternComparator<data::ValueTemplate<Interface>> const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "PatternComparator<data::ValueTemplate<Interface>>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "PatternComparator",
											"objects": [{
												"_fullName": "::stappler::sql::PatternComparator<typename>",
												"_kind": "class template",
												"_name": "PatternComparator",
												"class": {
													"_fullName": "::stappler::sql::PatternComparator<typename>",
													"_kind": "class",
													"_name": "PatternComparator",
													"class_kind": "struct",
													"id": 93825005008112,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "PatternComparator",
													"scope": {
														"is_templated": true,
														"name": "PatternComparator",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "T",
															"id": 140737131519344,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "T"
														}]
													},
													"semantic_scope": ""
												},
												"id": 140737095785152,
												"kind": "class template",
												"name": "PatternComparator",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "T",
													"id": 140737131519344,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "T"
												}],
												"scope":  {
													"is_templated": true,
													"name": "PatternComparator",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "T",
														"id": 140737131519344,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "T"
													}]
												}
											}]
										},
										"unexposed_arguments": "data::ValueTemplate<Interface>"
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(std::ostream&,PatternComparator<data::ValueTemplate<Interface>> const&)"
					}],
					"class_kind": "struct",
					"id": 93824999139440,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "SimpleBinder",
					"scope": {
						"is_templated": true,
						"name": "SimpleBinder",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 140737116506224,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::sql::SimpleBinder<typename>",
					"_kind": "class",
					"_name": "SimpleBinder",
					"bases": [{
						"_kind": "base class specifier",
						"_name": "Interface::AllocBaseType",
						"access_specifier": "public",
						"id": 93824999139248,
						"is_virtual": false,
						"kind": "base class specifier",
						"name": "Interface::AllocBaseType",
						"type": {
							"_typeName": "Interface::AllocBaseType",
							"kind": "unexposed",
							"name": "Interface::AllocBaseType"
						}
					}],
					"class_kind": "struct",
					"id": 93824999139440,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "SimpleBinder",
					"scope": {
						"is_templated": true,
						"name": "SimpleBinder",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 140737116506224,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				},
				"id": 93825012424656,
				"kind": "class template",
				"name": "SimpleBinder",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 140737116506224,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}],
				"scope":  {
					"is_templated": true,
					"name": "SimpleBinder",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "Interface",
						"id": 140737116506224,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Interface"
					}]
				}
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>",
				"_kind": "class template",
				"_name": "Query",
				"childs": [{
					"_fullName": "::stappler::sql::Query<typename,typename>",
					"_kind": "class",
					"_name": "Query",
					"bases": [{
						"_kind": "base class specifier",
						"_name": "Interface::AllocBaseType",
						"access_specifier": "public",
						"id": 93825012332480,
						"is_virtual": false,
						"kind": "base class specifier",
						"name": "Interface::AllocBaseType",
						"type": {
							"_typeName": "Interface::AllocBaseType",
							"kind": "unexposed",
							"name": "Interface::AllocBaseType"
						}
					}],
					"childs":  [{
						"_kind": "access specifier",
						"_name": "public",
						"access_specifier": "public",
						"id": 93825012332624,
						"kind": "access specifier",
						"name": "public"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Stream",
						"_kind": "type alias",
						"_name": "Stream",
						"id": 93825012332768,
						"kind": "type alias",
						"name": "Stream",
						"underlying_type": {
							"_typeName": "typename Interface::StringStreamType",
							"kind": "unexposed",
							"name": "typename Interface::StringStreamType"
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::String",
						"_kind": "type alias",
						"_name": "String",
						"id": 93825007590704,
						"kind": "type alias",
						"name": "String",
						"underlying_type": {
							"_typeName": "typename Interface::StringType",
							"kind": "unexposed",
							"name": "typename Interface::StringType"
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Select",
						"_kind": "class",
						"_name": "Select",
						"childs": null,
						"class_kind": "struct",
						"id": 93825007590912,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "Select",
						"scope": {
							"name": "Select"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
						"_kind": "class",
						"_name": "SelectFrom",
						"childs": null,
						"class_kind": "struct",
						"id": 93825007591216,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "SelectFrom",
						"scope": {
							"name": "SelectFrom"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectWhere",
						"_kind": "class",
						"_name": "SelectWhere",
						"childs": null,
						"class_kind": "struct",
						"id": 93825010974112,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "SelectWhere",
						"scope": {
							"name": "SelectWhere"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup",
						"_kind": "class",
						"_name": "SelectGroup",
						"childs": null,
						"class_kind": "struct",
						"id": 93825010974416,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "SelectGroup",
						"scope": {
							"name": "SelectGroup"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder",
						"_kind": "class",
						"_name": "SelectOrder",
						"childs": null,
						"class_kind": "struct",
						"id": 93825010974720,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "SelectOrder",
						"scope": {
							"name": "SelectOrder"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectPost",
						"_kind": "class",
						"_name": "SelectPost",
						"childs": null,
						"class_kind": "struct",
						"id": 93825007589504,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "SelectPost",
						"scope": {
							"name": "SelectPost"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Insert",
						"_kind": "class",
						"_name": "Insert",
						"childs": null,
						"class_kind": "struct",
						"id": 93825007589808,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "Insert",
						"scope": {
							"name": "Insert"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
						"_kind": "class",
						"_name": "InsertValues",
						"childs": null,
						"class_kind": "struct",
						"id": 93825007590112,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "InsertValues",
						"scope": {
							"name": "InsertValues"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertConflict",
						"_kind": "class",
						"_name": "InsertConflict",
						"childs": null,
						"class_kind": "struct",
						"id": 93825004001840,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "InsertConflict",
						"scope": {
							"name": "InsertConflict"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues",
						"_kind": "class",
						"_name": "InsertUpdateValues",
						"childs": null,
						"class_kind": "struct",
						"id": 93825004002144,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "InsertUpdateValues",
						"scope": {
							"name": "InsertUpdateValues"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertWhereValues",
						"_kind": "class",
						"_name": "InsertWhereValues",
						"childs": null,
						"class_kind": "struct",
						"id": 93825004002448,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "InsertWhereValues",
						"scope": {
							"name": "InsertWhereValues"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertPostConflict",
						"_kind": "class",
						"_name": "InsertPostConflict",
						"childs": null,
						"class_kind": "struct",
						"id": 93825004002752,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "InsertPostConflict",
						"scope": {
							"name": "InsertPostConflict"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Update",
						"_kind": "class",
						"_name": "Update",
						"childs": null,
						"class_kind": "struct",
						"id": 93825011396624,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "Update",
						"scope": {
							"name": "Update"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::UpdateWhere",
						"_kind": "class",
						"_name": "UpdateWhere",
						"childs": null,
						"class_kind": "struct",
						"id": 93825011396928,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "UpdateWhere",
						"scope": {
							"name": "UpdateWhere"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Delete",
						"_kind": "class",
						"_name": "Delete",
						"childs": null,
						"class_kind": "struct",
						"id": 93825011397232,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "Delete",
						"scope": {
							"name": "Delete"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::DeleteWhere",
						"_kind": "class",
						"_name": "DeleteWhere",
						"childs": null,
						"class_kind": "struct",
						"id": 93825011397536,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "DeleteWhere",
						"scope": {
							"name": "DeleteWhere"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
						"_kind": "class",
						"_name": "Returning",
						"childs": null,
						"class_kind": "struct",
						"id": 93825011397840,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "Returning",
						"scope": {
							"name": "Returning"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin",
						"_kind": "class",
						"_name": "WhereBegin",
						"childs": null,
						"class_kind": "struct",
						"id": 93825005006272,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "WhereBegin",
						"scope": {
							"name": "WhereBegin"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::WhereContinue",
						"_kind": "class",
						"_name": "WhereContinue",
						"childs": null,
						"class_kind": "struct",
						"id": 93825005006576,
						"is_declaration": true,
						"is_definition": false,
						"is_final": false,
						"kind": "class",
						"name": "WhereContinue",
						"scope": {
							"name": "WhereContinue"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
						"_kind": "enum",
						"_name": "Distinct",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Distinct::Distinct",
							"_kind": "enum value",
							"_name": "Distinct",
							"id": 93825005007136,
							"kind": "enum value",
							"name": "Distinct"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Distinct::None",
							"_kind": "enum value",
							"_name": "None",
							"id": 93825005007328,
							"kind": "enum value",
							"name": "None"
						}],
						"has_explicit_type": false,
						"id": 93825005006880,
						"is_declaration": false,
						"is_definition": true,
						"is_scoped": true,
						"kind": "enum",
						"name": "Distinct",
						"scope": {
							"name": "Distinct"
						},
						"semantic_scope": "",
						"underlying_type": {
							"_typeName": "int",
							"builtin_type_kind": "int",
							"kind": "builtin"
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::State",
						"_kind": "enum",
						"_name": "State",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::State::None",
							"_kind": "enum value",
							"_name": "None",
							"id": 93825004003056,
							"kind": "enum value",
							"name": "None"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::State::Init",
							"_kind": "enum value",
							"_name": "Init",
							"id": 93825007590416,
							"kind": "enum value",
							"name": "Init"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::State::Some",
							"_kind": "enum value",
							"_name": "Some",
							"id": 93825004254784,
							"kind": "enum value",
							"name": "Some"
						}],
						"has_explicit_type": false,
						"id": 93825005007616,
						"is_declaration": false,
						"is_definition": true,
						"is_scoped": true,
						"kind": "enum",
						"name": "State",
						"scope": {
							"name": "State"
						},
						"semantic_scope": "",
						"underlying_type": {
							"_typeName": "int",
							"builtin_type_kind": "int",
							"kind": "builtin"
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::FinalizationState",
						"_kind": "enum",
						"_name": "FinalizationState",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::FinalizationState::None",
							"_kind": "enum value",
							"_name": "None",
							"id": 93825004255328,
							"kind": "enum value",
							"name": "None"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::FinalizationState::Parentesis",
							"_kind": "enum value",
							"_name": "Parentesis",
							"id": 93825004255520,
							"kind": "enum value",
							"name": "Parentesis"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::FinalizationState::Quote",
							"_kind": "enum value",
							"_name": "Quote",
							"id": 93825004255712,
							"kind": "enum value",
							"name": "Quote"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::FinalizationState::DoubleQuote",
							"_kind": "enum value",
							"_name": "DoubleQuote",
							"id": 93825004255904,
							"kind": "enum value",
							"name": "DoubleQuote"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::FinalizationState::Finalized",
							"_kind": "enum value",
							"_name": "Finalized",
							"id": 93825004256096,
							"kind": "enum value",
							"name": "Finalized"
						}],
						"has_explicit_type": false,
						"id": 93825004255072,
						"is_declaration": false,
						"is_definition": true,
						"is_scoped": true,
						"kind": "enum",
						"name": "FinalizationState",
						"scope": {
							"name": "FinalizationState"
						},
						"semantic_scope": "",
						"underlying_type": {
							"_typeName": "int",
							"builtin_type_kind": "int",
							"kind": "builtin"
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::RawString",
						"_kind": "class",
						"_name": "RawString",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::RawString::data",
							"_kind": "member variable",
							"_name": "data",
							"id": 93825004256384,
							"is_mutable": false,
							"kind": "member variable",
							"name": "data",
							"type": {
								"_typeName": "stappler::sql::Query::String",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::String",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::String",
										"_kind": "type alias",
										"_name": "String",
										"id": 93825007590704,
										"kind": "type alias",
										"name": "String",
										"underlying_type": {
											"_typeName": "typename Interface::StringType",
											"kind": "unexposed",
											"name": "typename Interface::StringType"
										}
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825003101952,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "RawString",
						"scope": {
							"name": "RawString"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::RawStringView",
						"_kind": "class",
						"_name": "RawStringView",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::RawStringView::data",
							"_kind": "member variable",
							"_name": "data",
							"id": 93825003102608,
							"is_mutable": false,
							"kind": "member variable",
							"name": "data",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825003102352,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "RawStringView",
						"scope": {
							"name": "RawStringView"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Field",
						"_kind": "class",
						"_name": "Field",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::all()",
							"_kind": "function",
							"_name": "all",
							"body_kind": "definition",
							"id": 93825012331776,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"kind": "function",
							"name": "all",
							"return_type": {
								"_typeName": "stappler::sql::Query::Field",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Field",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Field",
										"_kind": "class",
										"_name": "Field",
										"class_kind": "struct",
										"id": 93825003102816,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Field",
										"scope": {
											"name": "Field"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()",
							"storage_class": [
								"static"
							]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::all(stappler::StringView const&)",
							"_kind": "function",
							"_name": "all",
							"body_kind": "definition",
							"id": 93825003163904,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"kind": "function",
							"name": "all",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "t",
								"id": 93825003164368,
								"kind": "function parameter",
								"name": "t",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"return_type":  {
								"_typeName": "stappler::sql::Query::Field",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Field",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Field",
										"_kind": "class",
										"_name": "Field",
										"class_kind": "struct",
										"id": 93825003102816,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Field",
										"scope": {
											"name": "Field"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&)",
							"storage_class": [
								"static"
							]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::Field(stappler::StringView const&)",
							"_kind": "constructor",
							"_name": "Field",
							"body_kind": "definition",
							"id": 93825003103328,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_explicit": false,
							"is_variadic": false,
							"kind": "constructor",
							"name": "Field",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825003164848,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"semantic_scope": "",
							"signature": "(stappler::StringView const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::Field(char const*)",
							"_kind": "constructor",
							"_name": "Field",
							"body_kind": "definition",
							"id": 93825003165088,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_explicit": false,
							"is_variadic": false,
							"kind": "constructor",
							"name": "Field",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825003165488,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "char const*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "char const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "char",
											"builtin_type_kind": "char",
											"kind": "builtin"
										}
									}
								}
							}],
							"semantic_scope": "",
							"signature": "(char const*)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::Field(std::string const&)",
							"_kind": "constructor",
							"_name": "Field",
							"body_kind": "definition",
							"id": 93825003866832,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_explicit": false,
							"is_variadic": false,
							"kind": "constructor",
							"name": "Field",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825003867280,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "std::string const&",
									"kind": "reference",
									"referee": {
										"_typeName": "std::string const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "std::string",
											"kind": "user_defined",
											"target": {
												"name": "std::string"
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"semantic_scope": "",
							"signature": "(std::string const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::Field(memory::string const&)",
							"_kind": "constructor",
							"_name": "Field",
							"body_kind": "definition",
							"id": 93825003867520,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_explicit": false,
							"is_variadic": false,
							"kind": "constructor",
							"name": "Field",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825003867968,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "memory::string const&",
									"kind": "reference",
									"referee": {
										"_typeName": "memory::string const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "memory::string",
											"kind": "user_defined",
											"target": {
												"name": "memory::string",
												"objects": [{
													"_fullName": "::stappler::memory::string",
													"_kind": "type alias",
													"_name": "string",
													"id": 93824998026096,
													"kind": "type alias",
													"name": "string",
													"underlying_type": {
														"_typeName": "basic_string<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "basic_string",
															"objects": [{
																"_fullName": "::stappler::memory::basic_string<typename>",
																"_kind": "class template",
																"_name": "basic_string",
																"class": {
																	"_fullName": "::stappler::memory::basic_string<typename>",
																	"_kind": "class",
																	"_name": "basic_string",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "AllocPool",
																		"access_specifier": "public",
																		"id": 93824998081728,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "AllocPool",
																		"type": {
																			"_typeName": "stappler::memory::AllocPool",
																			"kind": "user_defined",
																			"target": {
																				"name": "stappler::memory::AllocPool",
																				"objects": [{
																					"_fullName": "::stappler::memory::AllocPool",
																					"_kind": "class",
																					"_name": "AllocPool",
																					"class_kind": "struct",
																					"id": 140737108514624,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "AllocPool",
																					"scope": {
																						"name": "AllocPool"
																					},
																					"semantic_scope": ""
																				}]
																			}
																		}
																	}],
																	"class_kind": "class",
																	"id": 93824998462880,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "basic_string",
																	"scope": {
																		"is_templated": true,
																		"name": "basic_string",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "CharType",
																			"id": 93824997240640,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824997240432,
																"kind": "class template",
																"name": "basic_string",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "CharType",
																	"id": 93824997240640,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "basic_string",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "CharType",
																		"id": 93824997240640,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"semantic_scope": "",
							"signature": "(memory::string const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::Field(stappler::StringView const&,bool)",
							"_kind": "constructor",
							"_name": "Field",
							"body_kind": "definition",
							"id": 93825003868208,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_explicit": false,
							"is_variadic": false,
							"kind": "constructor",
							"name": "Field",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825003096064,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "plain",
								"id": 93825003096256,
								"kind": "function parameter",
								"name": "plain",
								"type": {
									"_typeName": "bool",
									"builtin_type_kind": "bool",
									"kind": "builtin"
								}
							}],
							"semantic_scope": "",
							"signature": "(stappler::StringView const&,bool)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::Field<typename,typename>(SourceString&&,FieldString&&)",
							"_kind": "function template",
							"_name": "Field",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Field::Field<typename,typename>(SourceString&&,FieldString&&)",
								"_kind": "constructor",
								"_name": "Field",
								"body_kind": "definition",
								"id": 93825004199904,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": false,
								"is_definition": true,
								"is_explicit": false,
								"is_variadic": false,
								"kind": "constructor",
								"name": "Field",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "t",
									"id": 93825004200304,
									"kind": "function parameter",
									"name": "t",
									"type": {
										"_typeName": "SourceString&&",
										"kind": "reference",
										"referee": {
											"_typeName": "SourceString",
											"entity": {
												"name": "SourceString",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "SourceString",
													"id": 140737141989376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "SourceString"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "rvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825004200640,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "FieldString&&",
										"kind": "reference",
										"referee": {
											"_typeName": "FieldString",
											"entity": {
												"name": "FieldString",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "FieldString",
													"id": 140737103174368,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "FieldString"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "rvalue"
									}
								}],
								"semantic_scope": "",
								"signature": "(SourceString&&,FieldString&&)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::Field::Field<typename,typename>(SourceString&&,FieldString&&)",
								"_kind": "constructor",
								"_name": "Field",
								"body_kind": "definition",
								"id": 93825004199904,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": false,
								"is_definition": true,
								"is_explicit": false,
								"is_variadic": false,
								"kind": "constructor",
								"name": "Field",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "t",
									"id": 93825004200304,
									"kind": "function parameter",
									"name": "t",
									"type": {
										"_typeName": "SourceString&&",
										"kind": "reference",
										"referee": {
											"_typeName": "SourceString",
											"entity": {
												"name": "SourceString",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "SourceString",
													"id": 140737141989376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "SourceString"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "rvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825004200640,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "FieldString&&",
										"kind": "reference",
										"referee": {
											"_typeName": "FieldString",
											"entity": {
												"name": "FieldString",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "FieldString",
													"id": 140737103174368,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "FieldString"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "rvalue"
									}
								}],
								"semantic_scope": "",
								"signature": "(SourceString&&,FieldString&&)"
							},
							"id": 93825003103072,
							"kind": "function template",
							"name": "Field",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "SourceString",
								"id": 140737141989376,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "SourceString"
							}, {
								"_kind": "template type parameter",
								"_name": "FieldString",
								"id": 140737103174368,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "FieldString"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::as(char const*)",
							"_kind": "member function",
							"_name": "as",
							"body_kind": "definition",
							"cv_qualifier": "none",
							"id": 93825004201536,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "as",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825003096544,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "char const*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "char const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "char",
											"builtin_type_kind": "char",
											"kind": "builtin"
										}
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Field&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(char const*)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::as(std::string const&)",
							"_kind": "member function",
							"_name": "as",
							"body_kind": "definition",
							"cv_qualifier": "none",
							"id": 93825003096976,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "as",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825003097440,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "std::string const&",
									"kind": "reference",
									"referee": {
										"_typeName": "std::string const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "std::string",
											"kind": "user_defined",
											"target": {
												"name": "std::string"
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Field&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(std::string const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::as(memory::string const&)",
							"_kind": "member function",
							"_name": "as",
							"body_kind": "definition",
							"cv_qualifier": "none",
							"id": 93825001746480,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "as",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825001746944,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "memory::string const&",
									"kind": "reference",
									"referee": {
										"_typeName": "memory::string const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "memory::string",
											"kind": "user_defined",
											"target": {
												"name": "memory::string",
												"objects": [{
													"_fullName": "::stappler::memory::string",
													"_kind": "type alias",
													"_name": "string",
													"id": 93824998026096,
													"kind": "type alias",
													"name": "string",
													"underlying_type": {
														"_typeName": "basic_string<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "basic_string",
															"objects": [{
																"_fullName": "::stappler::memory::basic_string<typename>",
																"_kind": "class template",
																"_name": "basic_string",
																"class": {
																	"_fullName": "::stappler::memory::basic_string<typename>",
																	"_kind": "class",
																	"_name": "basic_string",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "AllocPool",
																		"access_specifier": "public",
																		"id": 93824998081728,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "AllocPool",
																		"type": {
																			"_typeName": "stappler::memory::AllocPool",
																			"kind": "user_defined",
																			"target": {
																				"name": "stappler::memory::AllocPool",
																				"objects": [{
																					"_fullName": "::stappler::memory::AllocPool",
																					"_kind": "class",
																					"_name": "AllocPool",
																					"class_kind": "struct",
																					"id": 140737108514624,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "AllocPool",
																					"scope": {
																						"name": "AllocPool"
																					},
																					"semantic_scope": ""
																				}]
																			}
																		}
																	}],
																	"class_kind": "class",
																	"id": 93824998462880,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "basic_string",
																	"scope": {
																		"is_templated": true,
																		"name": "basic_string",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "CharType",
																			"id": 93824997240640,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824997240432,
																"kind": "class template",
																"name": "basic_string",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "CharType",
																	"id": 93824997240640,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "basic_string",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "CharType",
																		"id": 93824997240640,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Field&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(memory::string const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::from(char const*)",
							"_kind": "member function",
							"_name": "from",
							"body_kind": "definition",
							"cv_qualifier": "none",
							"id": 93825001747376,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "from",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825001747792,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "char const*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "char const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "char",
											"builtin_type_kind": "char",
											"kind": "builtin"
										}
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Field&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(char const*)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::from(std::string const&)",
							"_kind": "member function",
							"_name": "from",
							"body_kind": "definition",
							"cv_qualifier": "none",
							"id": 93825001748224,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "from",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825012442592,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "std::string const&",
									"kind": "reference",
									"referee": {
										"_typeName": "std::string const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "std::string",
											"kind": "user_defined",
											"target": {
												"name": "std::string"
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Field&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(std::string const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::from(memory::string const&)",
							"_kind": "member function",
							"_name": "from",
							"body_kind": "definition",
							"cv_qualifier": "none",
							"id": 93825012443024,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "from",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "str",
								"id": 93825012443488,
								"kind": "function parameter",
								"name": "str",
								"type": {
									"_typeName": "memory::string const&",
									"kind": "reference",
									"referee": {
										"_typeName": "memory::string const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "memory::string",
											"kind": "user_defined",
											"target": {
												"name": "memory::string",
												"objects": [{
													"_fullName": "::stappler::memory::string",
													"_kind": "type alias",
													"_name": "string",
													"id": 93824998026096,
													"kind": "type alias",
													"name": "string",
													"underlying_type": {
														"_typeName": "basic_string<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "basic_string",
															"objects": [{
																"_fullName": "::stappler::memory::basic_string<typename>",
																"_kind": "class template",
																"_name": "basic_string",
																"class": {
																	"_fullName": "::stappler::memory::basic_string<typename>",
																	"_kind": "class",
																	"_name": "basic_string",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "AllocPool",
																		"access_specifier": "public",
																		"id": 93824998081728,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "AllocPool",
																		"type": {
																			"_typeName": "stappler::memory::AllocPool",
																			"kind": "user_defined",
																			"target": {
																				"name": "stappler::memory::AllocPool",
																				"objects": [{
																					"_fullName": "::stappler::memory::AllocPool",
																					"_kind": "class",
																					"_name": "AllocPool",
																					"class_kind": "struct",
																					"id": 140737108514624,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "AllocPool",
																					"scope": {
																						"name": "AllocPool"
																					},
																					"semantic_scope": ""
																				}]
																			}
																		}
																	}],
																	"class_kind": "class",
																	"id": 93824998462880,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "basic_string",
																	"scope": {
																		"is_templated": true,
																		"name": "basic_string",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "CharType",
																			"id": 93824997240640,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824997240432,
																"kind": "class template",
																"name": "basic_string",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "CharType",
																	"id": 93824997240640,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "basic_string",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "CharType",
																		"id": 93824997240640,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Field&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(memory::string const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::source",
							"_kind": "member variable",
							"_name": "source",
							"id": 93825004200976,
							"is_mutable": false,
							"kind": "member variable",
							"name": "source",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::name",
							"_kind": "member variable",
							"_name": "name",
							"id": 93825012443968,
							"is_mutable": false,
							"kind": "member variable",
							"name": "name",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::alias",
							"_kind": "member variable",
							"_name": "alias",
							"id": 93825012444272,
							"is_mutable": false,
							"kind": "member variable",
							"name": "alias",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Field::plain",
							"_kind": "member variable",
							"_name": "plain",
							"default_value": {
								"expression": [{
									"kind": "keyword",
									"spelling": "false"
								}],
								"kind": "unexposed",
								"type": {
									"_typeName": "bool",
									"builtin_type_kind": "bool",
									"kind": "builtin"
								}
							},
							"id": 93825012421952,
							"is_mutable": false,
							"kind": "member variable",
							"name": "plain",
							"type": {
								"_typeName": "bool",
								"builtin_type_kind": "bool",
								"kind": "builtin"
							}
						}],
						"class_kind": "struct",
						"id": 93825003102816,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "Field",
						"scope": {
							"name": "Field"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>",
						"_kind": "class template",
						"_name": "Expand",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>",
							"_kind": "class",
							"_name": "Expand",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::fields<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
								"_kind": "function template",
								"_name": "fields",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::fields<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
									"_kind": "function",
									"_name": "fields",
									"body_kind": "definition",
									"id": 93825010836112,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": false,
									"is_definition": true,
									"is_variadic": false,
									"kind": "function",
									"name": "fields",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "c",
										"id": 93825012423728,
										"kind": "function parameter",
										"name": "c",
										"type": {
											"_typeName": "Clause&",
											"kind": "reference",
											"referee": {
												"_typeName": "Clause",
												"entity": {
													"name": "Clause",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825007635600,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825000706096,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "args",
										"id": 93825000706352,
										"kind": "function parameter",
										"name": "args",
										"type": {
											"_typeName": "VArgs &&...",
											"kind": "unexposed",
											"name": "VArgs &&..."
										}
									}],
									"return_type":  {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									},
									"semantic_scope": "",
									"signature": "(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
									"storage_class": [
										"static"
									]
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::fields<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
									"_kind": "function",
									"_name": "fields",
									"body_kind": "definition",
									"id": 93825010836112,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": false,
									"is_definition": true,
									"is_variadic": false,
									"kind": "function",
									"name": "fields",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "c",
										"id": 93825012423728,
										"kind": "function parameter",
										"name": "c",
										"type": {
											"_typeName": "Clause&",
											"kind": "reference",
											"referee": {
												"_typeName": "Clause",
												"entity": {
													"name": "Clause",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825007635600,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825000706096,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "args",
										"id": 93825000706352,
										"kind": "function parameter",
										"name": "args",
										"type": {
											"_typeName": "VArgs &&...",
											"kind": "unexposed",
											"name": "VArgs &&..."
										}
									}],
									"return_type":  {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									},
									"semantic_scope": "",
									"signature": "(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
									"storage_class": [
										"static"
									]
								},
								"id": 93825012423568,
								"kind": "function template",
								"name": "fields",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "VArgs",
									"id": 140736987211552,
									"is_variadic": true,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "VArgs"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::fields(Clause&,stappler::sql::Query::Field const&)",
								"_kind": "function",
								"_name": "fields",
								"body_kind": "definition",
								"id": 93825000706688,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": false,
								"is_definition": true,
								"is_variadic": false,
								"kind": "function",
								"name": "fields",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "c",
									"id": 93825000706544,
									"kind": "function parameter",
									"name": "c",
									"type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007635600,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825000707696,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"return_type":  {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								},
								"semantic_scope": "",
								"signature": "(Clause&,stappler::sql::Query::Field const&)",
								"storage_class": [
									"static"
								]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::from<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
								"_kind": "function template",
								"_name": "from",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::from<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
									"_kind": "function",
									"_name": "from",
									"body_kind": "definition",
									"id": 93825007975472,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": false,
									"is_definition": true,
									"is_variadic": false,
									"kind": "function",
									"name": "from",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "c",
										"id": 93825007975840,
										"kind": "function parameter",
										"name": "c",
										"type": {
											"_typeName": "Clause&",
											"kind": "reference",
											"referee": {
												"_typeName": "Clause",
												"entity": {
													"name": "Clause",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825007635600,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825007976272,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "args",
										"id": 93825007976528,
										"kind": "function parameter",
										"name": "args",
										"type": {
											"_typeName": "VArgs &&...",
											"kind": "unexposed",
											"name": "VArgs &&..."
										}
									}],
									"return_type":  {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									},
									"semantic_scope": "",
									"signature": "(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
									"storage_class": [
										"static"
									]
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::from<typename>(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
									"_kind": "function",
									"_name": "from",
									"body_kind": "definition",
									"id": 93825007975472,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": false,
									"is_definition": true,
									"is_variadic": false,
									"kind": "function",
									"name": "from",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "c",
										"id": 93825007975840,
										"kind": "function parameter",
										"name": "c",
										"type": {
											"_typeName": "Clause&",
											"kind": "reference",
											"referee": {
												"_typeName": "Clause",
												"entity": {
													"name": "Clause",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825007635600,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825007976272,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "args",
										"id": 93825007976528,
										"kind": "function parameter",
										"name": "args",
										"type": {
											"_typeName": "VArgs &&...",
											"kind": "unexposed",
											"name": "VArgs &&..."
										}
									}],
									"return_type":  {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									},
									"semantic_scope": "",
									"signature": "(Clause&,stappler::sql::Query::Field const&,VArgs &&...)",
									"storage_class": [
										"static"
									]
								},
								"id": 93825000706960,
								"kind": "function template",
								"name": "from",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "VArgs",
									"id": 140736959876272,
									"is_variadic": true,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "VArgs"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::from(Clause&,stappler::sql::Query::Field const&)",
								"_kind": "function",
								"_name": "from",
								"body_kind": "definition",
								"id": 93825012422208,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": false,
								"is_definition": true,
								"is_variadic": false,
								"kind": "function",
								"name": "from",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "c",
									"id": 93825007976720,
									"kind": "function parameter",
									"name": "c",
									"type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007635600,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825007977424,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"return_type":  {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								},
								"semantic_scope": "",
								"signature": "(Clause&,stappler::sql::Query::Field const&)",
								"storage_class": [
									"static"
								]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename,typename>(Clause&,Value&&,VArgs &&...)",
								"_kind": "function template",
								"_name": "values",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename,typename>(Clause&,Value&&,VArgs &&...)",
									"_kind": "function",
									"_name": "values",
									"body_kind": "definition",
									"id": 93825012423056,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": false,
									"is_definition": true,
									"is_variadic": false,
									"kind": "function",
									"name": "values",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "c",
										"id": 93825004245968,
										"kind": "function parameter",
										"name": "c",
										"type": {
											"_typeName": "Clause&",
											"kind": "reference",
											"referee": {
												"_typeName": "Clause",
												"entity": {
													"name": "Clause",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825007635600,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "v",
										"id": 93825004246304,
										"kind": "function parameter",
										"name": "v",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825007634016,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "args",
										"id": 93825004246560,
										"kind": "function parameter",
										"name": "args",
										"type": {
											"_typeName": "VArgs &&...",
											"kind": "unexposed",
											"name": "VArgs &&..."
										}
									}],
									"return_type":  {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									},
									"semantic_scope": "",
									"signature": "(Clause&,Value&&,VArgs &&...)",
									"storage_class": [
										"static"
									]
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename,typename>(Clause&,Value&&,VArgs &&...)",
									"_kind": "function",
									"_name": "values",
									"body_kind": "definition",
									"id": 93825012423056,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": false,
									"is_definition": true,
									"is_variadic": false,
									"kind": "function",
									"name": "values",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "c",
										"id": 93825004245968,
										"kind": "function parameter",
										"name": "c",
										"type": {
											"_typeName": "Clause&",
											"kind": "reference",
											"referee": {
												"_typeName": "Clause",
												"entity": {
													"name": "Clause",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825007635600,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "v",
										"id": 93825004246304,
										"kind": "function parameter",
										"name": "v",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825007634016,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "args",
										"id": 93825004246560,
										"kind": "function parameter",
										"name": "args",
										"type": {
											"_typeName": "VArgs &&...",
											"kind": "unexposed",
											"name": "VArgs &&..."
										}
									}],
									"return_type":  {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									},
									"semantic_scope": "",
									"signature": "(Clause&,Value&&,VArgs &&...)",
									"storage_class": [
										"static"
									]
								},
								"id": 93825007977120,
								"kind": "function template",
								"name": "values",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825007634016,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}, {
									"_kind": "template type parameter",
									"_name": "VArgs",
									"id": 93825004244864,
									"is_variadic": true,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "VArgs"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename>(Clause&,Value&&)",
								"_kind": "function template",
								"_name": "values",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename>(Clause&,Value&&)",
									"_kind": "function",
									"_name": "values",
									"body_kind": "definition",
									"id": 93825004245344,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": false,
									"is_definition": true,
									"is_variadic": false,
									"kind": "function",
									"name": "values",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "c",
										"id": 93825004245760,
										"kind": "function parameter",
										"name": "c",
										"type": {
											"_typeName": "Clause&",
											"kind": "reference",
											"referee": {
												"_typeName": "Clause",
												"entity": {
													"name": "Clause",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825007635600,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "v",
										"id": 93825007634400,
										"kind": "function parameter",
										"name": "v",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825004245056,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"return_type":  {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									},
									"semantic_scope": "",
									"signature": "(Clause&,Value&&)",
									"storage_class": [
										"static"
									]
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::values<typename>(Clause&,Value&&)",
									"_kind": "function",
									"_name": "values",
									"body_kind": "definition",
									"id": 93825004245344,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": false,
									"is_definition": true,
									"is_variadic": false,
									"kind": "function",
									"name": "values",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "c",
										"id": 93825004245760,
										"kind": "function parameter",
										"name": "c",
										"type": {
											"_typeName": "Clause&",
											"kind": "reference",
											"referee": {
												"_typeName": "Clause",
												"entity": {
													"name": "Clause",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825007635600,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "v",
										"id": 93825007634400,
										"kind": "function parameter",
										"name": "v",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825004245056,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"return_type":  {
										"_typeName": "void",
										"builtin_type_kind": "void",
										"kind": "builtin"
									},
									"semantic_scope": "",
									"signature": "(Clause&,Value&&)",
									"storage_class": [
										"static"
									]
								},
								"id": 93825004244656,
								"kind": "function template",
								"name": "values",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825004245056,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>::values(Clause&)",
								"_kind": "function",
								"_name": "values",
								"body_kind": "definition",
								"id": 93825007634832,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": false,
								"is_definition": true,
								"is_variadic": false,
								"kind": "function",
								"name": "values",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "c",
									"id": 93825007635312,
									"kind": "function parameter",
									"name": "c",
									"type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007635600,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									}
								}],
								"return_type":  {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								},
								"semantic_scope": "",
								"signature": "(Clause&)",
								"storage_class": [
									"static"
								]
							}],
							"class_kind": "struct",
							"id": 93825004201184,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Expand",
							"scope": {
								"is_templated": true,
								"name": "Expand",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Clause",
									"id": 93825007635600,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Clause"
								}]
							},
							"semantic_scope": ""
						}],
						"class":  {
							"_fullName": "::stappler::sql::Query<typename,typename>::Expand<typename>",
							"_kind": "class",
							"_name": "Expand",
							"class_kind": "struct",
							"id": 93825004201184,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Expand",
							"scope": {
								"is_templated": true,
								"name": "Expand",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Clause",
									"id": 93825007635600,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Clause"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825007635152,
						"kind": "class template",
						"name": "Expand",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Clause",
							"id": 93825007635600,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Clause"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Expand",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Clause",
								"id": 93825007635600,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Clause"
							}]
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
						"_kind": "class",
						"_name": "QueryHandle",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle::query",
							"_kind": "member variable",
							"_name": "query",
							"default_value": {
								"expression": [{
									"kind": "keyword",
									"spelling": "nullptr"
								}],
								"kind": "unexposed",
								"type": {
									"_typeName": "Query<Binder, Interface>*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "Query<Binder, Interface>",
										"kind": "unexposed",
										"name": "Query<Binder, Interface>"
									}
								}
							},
							"id": 93825012189216,
							"is_mutable": false,
							"kind": "member variable",
							"name": "query",
							"type": {
								"_typeName": "Query<Binder, Interface>*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "Query<Binder, Interface>",
									"kind": "unexposed",
									"name": "Query<Binder, Interface>"
								}
							}
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle::state",
							"_kind": "member variable",
							"_name": "state",
							"default_value": {
								"expression": [{
									"kind": "identifier",
									"spelling": "State"
								}, {
									"kind": "punctuation",
									"spelling": "::"
								}, {
									"kind": "identifier",
									"spelling": "None"
								}],
								"kind": "unexposed",
								"type": {
									"_typeName": "stappler::sql::Query::State",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::State",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::State",
											"_kind": "enum",
											"_name": "State",
											"has_explicit_type": false,
											"id": 93825005007616,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "State",
											"scope": {
												"name": "State"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							},
							"id": 93825012189632,
							"is_mutable": false,
							"kind": "member variable",
							"name": "state",
							"type": {
								"_typeName": "stappler::sql::Query::State",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::State",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::State",
										"_kind": "enum",
										"_name": "State",
										"has_explicit_type": false,
										"id": 93825005007616,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "State",
										"scope": {
											"name": "State"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle::finalize()",
							"_kind": "member function",
							"_name": "finalize",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825012190144,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "finalize",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle::QueryHandle(Query<Binder, Interface>*,stappler::sql::Query::State)",
							"_kind": "constructor",
							"_name": "QueryHandle",
							"body_kind": "definition",
							"id": 93825012188864,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_explicit": false,
							"is_variadic": false,
							"kind": "constructor",
							"name": "QueryHandle",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "q",
								"id": 93825012190880,
								"kind": "function parameter",
								"name": "q",
								"type": {
									"_typeName": "Query<Binder, Interface>*",
									"kind": "pointer",
									"pointee": {
										"_typeName": "Query<Binder, Interface>",
										"kind": "unexposed",
										"name": "Query<Binder, Interface>"
									}
								}
							}, {
								"_kind": "function parameter",
								"_name": "s",
								"default_value": {
									"expression": [{
										"kind": "identifier",
										"spelling": "State"
									}, {
										"kind": "punctuation",
										"spelling": "::"
									}, {
										"kind": "identifier",
										"spelling": "None"
									}],
									"kind": "unexposed",
									"type": {
										"_typeName": "stappler::sql::Query::State",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::State",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::State",
												"_kind": "enum",
												"_name": "State",
												"has_explicit_type": false,
												"id": 93825005007616,
												"is_declaration": false,
												"is_definition": true,
												"is_scoped": true,
												"kind": "enum",
												"name": "State",
												"scope": {
													"name": "State"
												},
												"semantic_scope": "",
												"underlying_type": {
													"_typeName": "int",
													"builtin_type_kind": "int",
													"kind": "builtin"
												}
											}]
										}
									}
								},
								"id": 93825010884528,
								"kind": "function parameter",
								"name": "s",
								"type": {
									"_typeName": "stappler::sql::Query::State",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::State",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::State",
											"_kind": "enum",
											"_name": "State",
											"has_explicit_type": false,
											"id": 93825005007616,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "State",
											"scope": {
												"name": "State"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}],
							"semantic_scope": "",
							"signature": "(Query<Binder, Interface>*,stappler::sql::Query::State)"
						}],
						"class_kind": "struct",
						"id": 93825007976864,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "QueryHandle",
						"scope": {
							"name": "QueryHandle"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
						"_kind": "class template",
						"_name": "WhereClause",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
							"_kind": "class",
							"_name": "WhereClause",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825010882944,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"childs":  [{
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)",
								"_kind": "function template",
								"_name": "where",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)",
									"_kind": "member function",
									"_name": "where",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825010883184,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "where",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825010883552,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "field",
										"id": 93825012210976,
										"kind": "function parameter",
										"name": "field",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825012211360,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Comparation",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Comparation",
												"objects": [{
													"_fullName": "::stappler::sql::Comparation",
													"_kind": "enum",
													"_name": "Comparation",
													"has_explicit_type": false,
													"id": 140737146085392,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Comparation",
													"scope": {
														"name": "Comparation"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825012211600,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825012211744,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)"
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)",
									"_kind": "member function",
									"_name": "where",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825010883184,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "where",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825010883552,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "field",
										"id": 93825012210976,
										"kind": "function parameter",
										"name": "field",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825012211360,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Comparation",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Comparation",
												"objects": [{
													"_fullName": "::stappler::sql::Comparation",
													"_kind": "enum",
													"_name": "Comparation",
													"has_explicit_type": false,
													"id": 140737146085392,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Comparation",
													"scope": {
														"name": "Comparation"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825012211600,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825012211744,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&)"
								},
								"id": 93825012190720,
								"kind": "function template",
								"name": "where",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825012211744,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)",
								"_kind": "function template",
								"_name": "where",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)",
									"_kind": "member function",
									"_name": "where",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825005585568,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "where",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005585936,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "field",
										"id": 93825012209856,
										"kind": "function parameter",
										"name": "field",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825012210448,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825012210736,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825005584208,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)"
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)",
									"_kind": "member function",
									"_name": "where",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825005585568,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "where",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005585936,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "field",
										"id": 93825012209856,
										"kind": "function parameter",
										"name": "field",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825012210448,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825012210736,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825005584208,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&)"
								},
								"id": 93825012210288,
								"kind": "function template",
								"name": "where",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825005584208,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)",
								"_kind": "function template",
								"_name": "where",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)",
									"_kind": "member function",
									"_name": "where",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825005392976,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "where",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005393344,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "field",
										"id": 93825005584448,
										"kind": "function parameter",
										"name": "field",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005584832,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Comparation",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Comparation",
												"objects": [{
													"_fullName": "::stappler::sql::Comparation",
													"_kind": "enum",
													"_name": "Comparation",
													"has_explicit_type": false,
													"id": 140737146085392,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Comparation",
													"scope": {
														"name": "Comparation"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005585072,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825005391872,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825003409200,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825005391872,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)"
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)",
									"_kind": "member function",
									"_name": "where",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825005392976,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "where",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005393344,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "field",
										"id": 93825005584448,
										"kind": "function parameter",
										"name": "field",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005584832,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Comparation",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Comparation",
												"objects": [{
													"_fullName": "::stappler::sql::Comparation",
													"_kind": "enum",
													"_name": "Comparation",
													"has_explicit_type": false,
													"id": 140737146085392,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Comparation",
													"scope": {
														"name": "Comparation"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005585072,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825005391872,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825003409200,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825005391872,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::sql::Comparation,Value&&,Value&&)"
								},
								"id": 93825005391664,
								"kind": "function template",
								"name": "where",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825005391872,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)",
								"_kind": "function template",
								"_name": "where",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)",
									"_kind": "member function",
									"_name": "where",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825003410896,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "where",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005392112,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "field",
										"id": 93825005392496,
										"kind": "function parameter",
										"name": "field",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004095632,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004095920,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825004096736,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004096304,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004096592,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825004096736,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)"
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::where<typename>(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)",
									"_kind": "member function",
									"_name": "where",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825003410896,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "where",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825005392112,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "field",
										"id": 93825005392496,
										"kind": "function parameter",
										"name": "field",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004095632,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004095920,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825004096736,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004096304,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004096592,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825004096736,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,stappler::sql::Query::Field const&,stappler::StringView const&,Value&&,stappler::StringView const&,Value&&)"
								},
								"id": 93825004095472,
								"kind": "function template",
								"name": "where",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825004096736,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::parenthesis<typename>(stappler::sql::Operator,Callback const&)",
								"_kind": "function template",
								"_name": "parenthesis",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::parenthesis<typename>(stappler::sql::Operator,Callback const&)",
									"_kind": "member function",
									"_name": "parenthesis",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825004097120,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "parenthesis",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004097488,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825003409696,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Callback const&",
											"kind": "reference",
											"referee": {
												"_typeName": "Callback const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "Callback",
													"entity": {
														"name": "Callback",
														"objects": [{
															"_kind": "template type parameter",
															"_name": "Callback",
															"id": 93825003410144,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Callback"
														}]
													},
													"kind": "template_parameter"
												}
											},
											"reference_kind": "lvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,Callback const&)"
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>::parenthesis<typename>(stappler::sql::Operator,Callback const&)",
									"_kind": "member function",
									"_name": "parenthesis",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825004097120,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "parenthesis",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "",
										"id": 93825004097488,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "stappler::sql::Operator",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Operator",
												"objects": [{
													"_fullName": "::stappler::sql::Operator",
													"_kind": "enum",
													"_name": "Operator",
													"has_explicit_type": false,
													"id": 93825005157104,
													"is_declaration": false,
													"is_definition": true,
													"is_scoped": true,
													"kind": "enum",
													"name": "Operator",
													"scope": {
														"name": "Operator"
													},
													"semantic_scope": "",
													"underlying_type": {
														"_typeName": "int",
														"builtin_type_kind": "int",
														"kind": "builtin"
													}
												}]
											}
										}
									}, {
										"_kind": "function parameter",
										"_name": "",
										"id": 93825003409696,
										"kind": "function parameter",
										"name": "",
										"type": {
											"_typeName": "Callback const&",
											"kind": "reference",
											"referee": {
												"_typeName": "Callback const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "Callback",
													"entity": {
														"name": "Callback",
														"objects": [{
															"_kind": "template type parameter",
															"_name": "Callback",
															"id": 93825003410144,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Callback"
														}]
													},
													"kind": "template_parameter"
												}
											},
											"reference_kind": "lvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Operator,Callback const&)"
								},
								"id": 93825003409536,
								"kind": "function template",
								"name": "parenthesis",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Callback",
									"id": 93825003410144,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Callback"
								}]
							}, {
								"_kind": "using declaration",
								"_name": "",
								"id": 93825003410480,
								"kind": "using declaration",
								"name": "",
								"target": {
									"name": "QueryHandle::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}],
							"class_kind": "struct",
							"id": 93825010884768,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "WhereClause",
							"scope": {
								"is_templated": true,
								"name": "WhereClause",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Clause",
									"id": 93825007965376,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Clause"
								}]
							},
							"semantic_scope": ""
						}],
						"class":  {
							"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
							"_kind": "class",
							"_name": "WhereClause",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825010882944,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825010884768,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "WhereClause",
							"scope": {
								"is_templated": true,
								"name": "WhereClause",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Clause",
									"id": 93825007965376,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Clause"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003410672,
						"kind": "class template",
						"name": "WhereClause",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Clause",
							"id": 93825007965376,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Clause"
						}],
						"scope":  {
							"is_templated": true,
							"name": "WhereClause",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Clause",
								"id": 93825007965376,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Clause"
							}]
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin",
						"_kind": "class",
						"_name": "WhereBegin",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825007965760,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin::where<typename>(Args &&...)",
							"_kind": "function template",
							"_name": "where",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825007966048,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825007966320,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::WhereContinue",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::WhereContinue",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereContinue",
											"_kind": "class",
											"_name": "WhereContinue",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<WhereContinue>",
												"access_specifier": "public",
												"id": 93825001761792,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<WhereContinue>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::WhereContinue>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::WhereContinue"
												}
											}],
											"class_kind": "struct",
											"id": 93825007966656,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereContinue",
											"scope": {
												"name": "WhereContinue"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825007966048,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825007966320,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::WhereContinue",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::WhereContinue",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereContinue",
											"_kind": "class",
											"_name": "WhereContinue",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<WhereContinue>",
												"access_specifier": "public",
												"id": 93825001761792,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<WhereContinue>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::WhereContinue>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::WhereContinue"
												}
											}],
											"class_kind": "struct",
											"id": 93825007966656,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereContinue",
											"scope": {
												"name": "WhereContinue"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							},
							"id": 93825007966912,
							"kind": "function template",
							"name": "where",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825007967232,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin::where()",
							"_kind": "member function",
							"_name": "where",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825001223504,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "where",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::WhereContinue",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::WhereContinue",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereContinue",
										"_kind": "class",
										"_name": "WhereContinue",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "WhereClause<WhereContinue>",
											"access_specifier": "public",
											"id": 93825001761792,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "WhereClause<WhereContinue>",
											"type": {
												"_typeName": "WhereClause<stappler::sql::Query::WhereContinue>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "WhereClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
														"_kind": "class template",
														"_name": "WhereClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class",
															"_name": "WhereClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825010882944,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825010884768,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "WhereClause",
															"scope": {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003410672,
														"kind": "class template",
														"name": "WhereClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825007965376,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "WhereClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::WhereContinue"
											}
										}],
										"class_kind": "struct",
										"id": 93825007966656,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "WhereContinue",
										"scope": {
											"name": "WhereContinue"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin::whereParentesis<typename>(Callback const&)",
							"_kind": "function template",
							"_name": "whereParentesis",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin::whereParentesis<typename>(Callback const&)",
								"_kind": "member function",
								"_name": "whereParentesis",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825001223968,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "whereParentesis",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825007966512,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93825001224848,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::WhereContinue",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::WhereContinue",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereContinue",
											"_kind": "class",
											"_name": "WhereContinue",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<WhereContinue>",
												"access_specifier": "public",
												"id": 93825001761792,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<WhereContinue>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::WhereContinue>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::WhereContinue"
												}
											}],
											"class_kind": "struct",
											"id": 93825007966656,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereContinue",
											"scope": {
												"name": "WhereContinue"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Callback const&)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::WhereBegin::whereParentesis<typename>(Callback const&)",
								"_kind": "member function",
								"_name": "whereParentesis",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825001223968,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "whereParentesis",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825007966512,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93825001224848,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::WhereContinue",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::WhereContinue",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereContinue",
											"_kind": "class",
											"_name": "WhereContinue",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<WhereContinue>",
												"access_specifier": "public",
												"id": 93825001761792,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<WhereContinue>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::WhereContinue>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::WhereContinue"
												}
											}],
											"class_kind": "struct",
											"id": 93825007966656,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereContinue",
											"scope": {
												"name": "WhereContinue"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Callback const&)"
							},
							"id": 93825007967072,
							"kind": "function template",
							"name": "whereParentesis",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Callback",
								"id": 93825001224848,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Callback"
							}]
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825001225184,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825003409840,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "WhereBegin",
						"scope": {
							"name": "WhereBegin"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::WhereContinue",
						"_kind": "class",
						"_name": "WhereContinue",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "WhereClause<WhereContinue>",
							"access_specifier": "public",
							"id": 93825001761792,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "WhereClause<WhereContinue>",
							"type": {
								"_typeName": "WhereClause<stappler::sql::Query::WhereContinue>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "WhereClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class template",
										"_name": "WhereClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
											"_kind": "class",
											"_name": "WhereClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825010882944,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825010884768,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereClause",
											"scope": {
												"is_templated": true,
												"name": "WhereClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825003410672,
										"kind": "class template",
										"name": "WhereClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::WhereContinue"
							}
						}],
						"childs":  [{
							"_kind": "using declaration",
							"_name": "",
							"id": 93825001761984,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "WhereClause<WhereContinue>::WhereClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
									"_kind": "class template",
									"_name": "WhereClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class",
										"_name": "WhereClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825010882944,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825010884768,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "WhereClause",
										"scope": {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825003410672,
									"kind": "class template",
									"name": "WhereClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825007965376,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "WhereClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825007966656,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "WhereContinue",
						"scope": {
							"name": "WhereContinue"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
						"_kind": "class template",
						"_name": "SetClause",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
							"_kind": "class",
							"_name": "SetClause",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825001762528,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"childs":  [{
								"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,Value&&)",
								"_kind": "function template",
								"_name": "set",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,Value&&)",
									"_kind": "member function",
									"_name": "set",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825001224576,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "set",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825001763008,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "v",
										"id": 93825001763504,
										"kind": "function parameter",
										"name": "v",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825001763744,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012121696,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::StringView const&,Value&&)"
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,Value&&)",
									"_kind": "member function",
									"_name": "set",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825001224576,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "set",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825001763008,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "v",
										"id": 93825001763504,
										"kind": "function parameter",
										"name": "v",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825001763744,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012121696,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::StringView const&,Value&&)"
								},
								"id": 93825001763344,
								"kind": "function template",
								"name": "set",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825001763744,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,stappler::StringView const&,Value&&)",
								"_kind": "function template",
								"_name": "set",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,stappler::StringView const&,Value&&)",
									"_kind": "member function",
									"_name": "set",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825004523904,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "set",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "t",
										"id": 93825004524416,
										"kind": "function parameter",
										"name": "t",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825004524848,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "v",
										"id": 93825012121056,
										"kind": "function parameter",
										"name": "v",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825004522736,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012121696,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::StringView const&,stappler::StringView const&,Value&&)"
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>::set<typename>(stappler::StringView const&,stappler::StringView const&,Value&&)",
									"_kind": "member function",
									"_name": "set",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825004523904,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "set",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "t",
										"id": 93825004524416,
										"kind": "function parameter",
										"name": "t",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825004524848,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::StringView const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::StringView const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::StringView",
													"kind": "user_defined",
													"target": {
														"name": "stappler::StringView",
														"objects": [{
															"_fullName": "::stappler::StringView",
															"_kind": "type alias",
															"_name": "StringView",
															"id": 93824997448656,
															"kind": "type alias",
															"name": "StringView",
															"underlying_type": {
																"_typeName": "StringViewBase<char>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "StringViewBase",
																	"objects": [{
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class template",
																		"_name": "StringViewBase",
																		"class": {
																			"_fullName": "::stappler::StringViewBase<typename>",
																			"_kind": "class",
																			"_name": "StringViewBase",
																			"bases": [{
																				"_kind": "base class specifier",
																				"_name": "BytesReader<_CharType>",
																				"access_specifier": "public",
																				"id": 93824998090352,
																				"is_virtual": false,
																				"kind": "base class specifier",
																				"name": "BytesReader<_CharType>",
																				"type": {
																					"_typeName": "BytesReader<_CharType>",
																					"arguments_exposed": false,
																					"kind": "template_instantiation",
																					"primary_template": {
																						"name": "BytesReader",
																						"objects": [{
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class template",
																							"_name": "BytesReader",
																							"class": {
																								"_fullName": "::stappler::BytesReader<typename>",
																								"_kind": "class",
																								"_name": "BytesReader",
																								"class_kind": "class",
																								"id": 140736954953792,
																								"is_declaration": false,
																								"is_definition": true,
																								"is_final": false,
																								"kind": "class",
																								"name": "BytesReader",
																								"scope": {
																									"is_templated": true,
																									"name": "BytesReader",
																									"template_parameters": [{
																										"_kind": "template type parameter",
																										"_name": "_CharType",
																										"id": 140737098599232,
																										"is_variadic": false,
																										"keyword": "typename",
																										"kind": "template type parameter",
																										"name": "_CharType"
																									}]
																								},
																								"semantic_scope": ""
																							},
																							"id": 93824998648144,
																							"kind": "class template",
																							"name": "BytesReader",
																							"parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}],
																							"scope":  {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							}
																						}]
																					},
																					"unexposed_arguments": "_CharType"
																				}
																			}],
																			"class_kind": "class",
																			"id": 140737094580320,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "StringViewBase",
																			"scope": {
																				"is_templated": true,
																				"name": "StringViewBase",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 93824999493712,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824999493216,
																		"kind": "class template",
																		"name": "StringViewBase",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "char"
															}
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "v",
										"id": 93825012121056,
										"kind": "function parameter",
										"name": "v",
										"type": {
											"_typeName": "Value&&",
											"kind": "reference",
											"referee": {
												"_typeName": "Value",
												"entity": {
													"name": "Value",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Value",
														"id": 93825004522736,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Value"
													}]
												},
												"kind": "template_parameter"
											},
											"reference_kind": "rvalue"
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012121696,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::StringView const&,stappler::StringView const&,Value&&)"
								},
								"id": 93825012120896,
								"kind": "function template",
								"name": "set",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825004522736,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>::def(stappler::StringView const&)",
								"_kind": "member function",
								"_name": "def",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825004522976,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "def",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825004523632,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "Clause&",
									"kind": "reference",
									"referee": {
										"_typeName": "Clause",
										"entity": {
											"name": "Clause",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012121696,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&)"
							}, {
								"_kind": "using declaration",
								"_name": "",
								"id": 93825012121344,
								"kind": "using declaration",
								"name": "",
								"target": {
									"name": "QueryHandle::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}],
							"class_kind": "struct",
							"id": 93825001762224,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "SetClause",
							"scope": {
								"is_templated": true,
								"name": "SetClause",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Clause",
									"id": 93825012121696,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Clause"
								}]
							},
							"semantic_scope": ""
						}],
						"class":  {
							"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
							"_kind": "class",
							"_name": "SetClause",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825001762528,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825001762224,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "SetClause",
							"scope": {
								"is_templated": true,
								"name": "SetClause",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Clause",
									"id": 93825012121696,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Clause"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825012121536,
						"kind": "class template",
						"name": "SetClause",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Clause",
							"id": 93825012121696,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Clause"
						}],
						"scope":  {
							"is_templated": true,
							"name": "SetClause",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Clause",
								"id": 93825012121696,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Clause"
							}]
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
						"_kind": "class template",
						"_name": "FieldsClause",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
							"_kind": "class",
							"_name": "FieldsClause",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825012122384,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"childs":  [{
								"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>::fields<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "function template",
								"_name": "fields",
								"childs": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>::fields<typename>(stappler::sql::Query::Field const&,Args &&...)",
									"_kind": "member function",
									"_name": "fields",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825012122624,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "fields",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825012135920,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "args",
										"id": 93825012136112,
										"kind": "function parameter",
										"name": "args",
										"type": {
											"_typeName": "Args &&...",
											"kind": "unexposed",
											"name": "Args &&..."
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Query::Field const&,Args &&...)"
								}],
								"function":  {
									"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>::fields<typename>(stappler::sql::Query::Field const&,Args &&...)",
									"_kind": "member function",
									"_name": "fields",
									"body_kind": "declaration",
									"cv_qualifier": "none",
									"id": 93825012122624,
									"is_consteval": false,
									"is_constexpr": false,
									"is_declaration": true,
									"is_definition": false,
									"is_variadic": false,
									"is_virtual": false,
									"kind": "member function",
									"name": "fields",
									"parameters": [{
										"_kind": "function parameter",
										"_name": "f",
										"id": 93825012135920,
										"kind": "function parameter",
										"name": "f",
										"type": {
											"_typeName": "stappler::sql::Query::Field const&",
											"kind": "reference",
											"referee": {
												"_typeName": "stappler::sql::Query::Field const",
												"cv_qualifier": "const",
												"kind": "cv_qualified",
												"type": {
													"_typeName": "stappler::sql::Query::Field",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::Field",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::Field",
															"_kind": "class",
															"_name": "Field",
															"class_kind": "struct",
															"id": 93825003102816,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "Field",
															"scope": {
																"name": "Field"
															},
															"semantic_scope": ""
														}]
													}
												}
											},
											"reference_kind": "lvalue"
										}
									}, {
										"_kind": "function parameter",
										"_name": "args",
										"id": 93825012136112,
										"kind": "function parameter",
										"name": "args",
										"type": {
											"_typeName": "Args &&...",
											"kind": "unexposed",
											"name": "Args &&..."
										}
									}],
									"ref_qualifier": "none",
									"return_type": {
										"_typeName": "Clause&",
										"kind": "reference",
										"referee": {
											"_typeName": "Clause",
											"entity": {
												"name": "Clause",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "lvalue"
									},
									"semantic_scope": "",
									"signature": "(stappler::sql::Query::Field const&,Args &&...)"
								},
								"id": 93825012136720,
								"kind": "function template",
								"name": "fields",
								"parameters": [{
									"_kind": "template type parameter",
									"_name": "Args",
									"id": 93825012134752,
									"is_variadic": true,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Args"
								}]
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>::field(stappler::sql::Query::Field const&)",
								"_kind": "member function",
								"_name": "field",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825012136448,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "field",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825012136304,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "Clause&",
									"kind": "reference",
									"referee": {
										"_typeName": "Clause",
										"entity": {
											"name": "Clause",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&)"
							}, {
								"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>::aggregate(stappler::StringView const&,stappler::sql::Query::Field const&)",
								"_kind": "member function",
								"_name": "aggregate",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825012280848,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "aggregate",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825012281360,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825012281744,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "Clause&",
									"kind": "reference",
									"referee": {
										"_typeName": "Clause",
										"entity": {
											"name": "Clause",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,stappler::sql::Query::Field const&)"
							}, {
								"_kind": "using declaration",
								"_name": "",
								"id": 93825012282080,
								"kind": "using declaration",
								"name": "",
								"target": {
									"name": "QueryHandle::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}],
							"class_kind": "struct",
							"id": 93825012121984,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "FieldsClause",
							"scope": {
								"is_templated": true,
								"name": "FieldsClause",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Clause",
									"id": 93825012282272,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Clause"
								}]
							},
							"semantic_scope": ""
						}],
						"class":  {
							"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
							"_kind": "class",
							"_name": "FieldsClause",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825012122384,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825012121984,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "FieldsClause",
							"scope": {
								"is_templated": true,
								"name": "FieldsClause",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Clause",
									"id": 93825012282272,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Clause"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825012136880,
						"kind": "class template",
						"name": "FieldsClause",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Clause",
							"id": 93825012282272,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Clause"
						}],
						"scope":  {
							"is_templated": true,
							"name": "FieldsClause",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Clause",
								"id": 93825012282272,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Clause"
							}]
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
						"_kind": "class",
						"_name": "GenericQuery",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825012282768,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::with<typename>(stappler::StringView const&,Callback const&)",
							"_kind": "function template",
							"_name": "with",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::with<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "with",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825000738240,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "with",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "alias",
									"id": 93825000738752,
									"kind": "function parameter",
									"name": "alias",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "",
									"id": 93825000739296,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93825000739488,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::GenericQuery&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::GenericQuery",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::GenericQuery",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
												"_kind": "class",
												"_name": "GenericQuery",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825012282768,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825012282512,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "GenericQuery",
												"scope": {
													"name": "GenericQuery"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::with<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "with",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825000738240,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "with",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "alias",
									"id": 93825000738752,
									"kind": "function parameter",
									"name": "alias",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "",
									"id": 93825000739296,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93825000739488,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::GenericQuery&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::GenericQuery",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::GenericQuery",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
												"_kind": "class",
												"_name": "GenericQuery",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825012282768,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825012282512,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "GenericQuery",
												"scope": {
													"name": "GenericQuery"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							},
							"id": 93825000739136,
							"kind": "function template",
							"name": "with",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Callback",
								"id": 93825000739488,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Callback"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::select(stappler::sql::Query::Distinct)",
							"_kind": "member function",
							"_name": "select",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000739920,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "select",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"default_value": {
									"expression": [{
										"kind": "identifier",
										"spelling": "Distinct"
									}, {
										"kind": "punctuation",
										"spelling": "::"
									}, {
										"kind": "identifier",
										"spelling": "None"
									}],
									"kind": "unexposed",
									"type": {
										"_typeName": "stappler::sql::Query::Distinct",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::Distinct",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
												"_kind": "enum",
												"_name": "Distinct",
												"has_explicit_type": false,
												"id": 93825005006880,
												"is_declaration": false,
												"is_definition": true,
												"is_scoped": true,
												"kind": "enum",
												"name": "Distinct",
												"scope": {
													"name": "Distinct"
												},
												"semantic_scope": "",
												"underlying_type": {
													"_typeName": "int",
													"builtin_type_kind": "int",
													"kind": "builtin"
												}
											}]
										}
									}
								},
								"id": 93825005056144,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Distinct",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Distinct",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
											"_kind": "enum",
											"_name": "Distinct",
											"has_explicit_type": false,
											"id": 93825005006880,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Distinct",
											"scope": {
												"name": "Distinct"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Select",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Select",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Select",
										"_kind": "class",
										"_name": "Select",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Select>",
											"access_specifier": "public",
											"id": 93825003304304,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Select>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Select>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Select"
											}
										}],
										"class_kind": "struct",
										"id": 93825000740336,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Select",
										"scope": {
											"name": "Select"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Distinct)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "function template",
							"_name": "select",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "select",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825005056448,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "select",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825005057072,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825005057280,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::Select",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Select",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Select",
											"_kind": "class",
											"_name": "Select",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Select>",
												"access_specifier": "public",
												"id": 93825003304304,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Select>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Select>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Select"
												}
											}],
											"class_kind": "struct",
											"id": 93825000740336,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Select",
											"scope": {
												"name": "Select"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&,Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "select",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825005056448,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "select",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825005057072,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825005057280,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::Select",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Select",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Select",
											"_kind": "class",
											"_name": "Select",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Select>",
												"access_specifier": "public",
												"id": 93825003304304,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Select>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Select>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Select"
												}
											}],
											"class_kind": "struct",
											"id": 93825000740336,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Select",
											"scope": {
												"name": "Select"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&,Args &&...)"
							},
							"id": 93825005056912,
							"kind": "function template",
							"name": "select",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825005057856,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "function template",
							"_name": "select",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "select",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825010873984,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "select",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825010874400,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "stappler::sql::Query::Distinct",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::Distinct",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
												"_kind": "enum",
												"_name": "Distinct",
												"has_explicit_type": false,
												"id": 93825005006880,
												"is_declaration": false,
												"is_definition": true,
												"is_scoped": true,
												"kind": "enum",
												"name": "Distinct",
												"scope": {
													"name": "Distinct"
												},
												"semantic_scope": "",
												"underlying_type": {
													"_typeName": "int",
													"builtin_type_kind": "int",
													"kind": "builtin"
												}
											}]
										}
									}
								}, {
									"_kind": "function parameter",
									"_name": "",
									"id": 93825010874736,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825010874944,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::Select",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Select",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Select",
											"_kind": "class",
											"_name": "Select",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Select>",
												"access_specifier": "public",
												"id": 93825003304304,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Select>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Select>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Select"
												}
											}],
											"class_kind": "struct",
											"id": 93825000740336,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Select",
											"scope": {
												"name": "Select"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "select",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825010873984,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "select",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825010874400,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "stappler::sql::Query::Distinct",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::Distinct",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
												"_kind": "enum",
												"_name": "Distinct",
												"has_explicit_type": false,
												"id": 93825005006880,
												"is_declaration": false,
												"is_definition": true,
												"is_scoped": true,
												"kind": "enum",
												"name": "Distinct",
												"scope": {
													"name": "Distinct"
												},
												"semantic_scope": "",
												"underlying_type": {
													"_typeName": "int",
													"builtin_type_kind": "int",
													"kind": "builtin"
												}
											}]
										}
									}
								}, {
									"_kind": "function parameter",
									"_name": "",
									"id": 93825010874736,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825010874944,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::Select",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Select",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Select",
											"_kind": "class",
											"_name": "Select",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Select>",
												"access_specifier": "public",
												"id": 93825003304304,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Select>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Select>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Select"
												}
											}],
											"class_kind": "struct",
											"id": 93825000740336,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Select",
											"scope": {
												"name": "Select"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)"
							},
							"id": 93825005057696,
							"kind": "function template",
							"name": "select",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825010875344,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::insert(stappler::StringView const&)",
							"_kind": "member function",
							"_name": "insert",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825010875776,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "insert",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825010876240,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Insert",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Insert",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Insert",
										"_kind": "class",
										"_name": "Insert",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Insert>",
											"access_specifier": "public",
											"id": 93825006190528,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Insert>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Insert>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Insert"
											}
										}],
										"class_kind": "struct",
										"id": 93825006189920,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Insert",
										"scope": {
											"name": "Insert"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::insert(stappler::StringView const&,stappler::StringView const&)",
							"_kind": "member function",
							"_name": "insert",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825007579888,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "insert",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825007580352,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "alias",
								"id": 93825007580736,
								"kind": "function parameter",
								"name": "alias",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Insert",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Insert",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Insert",
										"_kind": "class",
										"_name": "Insert",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Insert>",
											"access_specifier": "public",
											"id": 93825006190528,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Insert>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Insert>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Insert"
											}
										}],
										"class_kind": "struct",
										"id": 93825006189920,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Insert",
										"scope": {
											"name": "Insert"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&,stappler::StringView const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::update(stappler::StringView const&)",
							"_kind": "member function",
							"_name": "update",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825007581168,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "update",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825007581632,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Update",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Update",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Update",
										"_kind": "class",
										"_name": "Update",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "SetClause<Update>",
											"access_specifier": "public",
											"id": 93825004550080,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "SetClause<Update>",
											"type": {
												"_typeName": "SetClause<stappler::sql::Query::Update>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "SetClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
														"_kind": "class template",
														"_name": "SetClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
															"_kind": "class",
															"_name": "SetClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825001762528,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825001762224,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "SetClause",
															"scope": {
																"is_templated": true,
																"name": "SetClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012121696,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012121536,
														"kind": "class template",
														"name": "SetClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012121696,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "SetClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012121696,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Update"
											}
										}],
										"class_kind": "struct",
										"id": 93825004552064,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Update",
										"scope": {
											"name": "Update"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::update(stappler::StringView const&,stappler::StringView const&)",
							"_kind": "member function",
							"_name": "update",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825007582016,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "update",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825000613856,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "alias",
								"id": 93825000614240,
								"kind": "function parameter",
								"name": "alias",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Update",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Update",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Update",
										"_kind": "class",
										"_name": "Update",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "SetClause<Update>",
											"access_specifier": "public",
											"id": 93825004550080,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "SetClause<Update>",
											"type": {
												"_typeName": "SetClause<stappler::sql::Query::Update>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "SetClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
														"_kind": "class template",
														"_name": "SetClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
															"_kind": "class",
															"_name": "SetClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825001762528,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825001762224,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "SetClause",
															"scope": {
																"is_templated": true,
																"name": "SetClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012121696,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012121536,
														"kind": "class template",
														"name": "SetClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012121696,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "SetClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012121696,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Update"
											}
										}],
										"class_kind": "struct",
										"id": 93825004552064,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Update",
										"scope": {
											"name": "Update"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&,stappler::StringView const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::remove(stappler::StringView const&)",
							"_kind": "member function",
							"_name": "remove",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000614672,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "remove",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825000615136,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Delete",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Delete",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Delete",
										"_kind": "class",
										"_name": "Delete",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825011409568,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825011409168,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Delete",
										"scope": {
											"name": "Delete"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery::remove(stappler::StringView const&,stappler::StringView const&)",
							"_kind": "member function",
							"_name": "remove",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000615520,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "remove",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825000615984,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "alias",
								"id": 93825003303376,
								"kind": "function parameter",
								"name": "alias",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Delete",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Delete",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Delete",
										"_kind": "class",
										"_name": "Delete",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825011409568,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825011409168,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Delete",
										"scope": {
											"name": "Delete"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&,stappler::StringView const&)"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825003303712,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825012282512,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "GenericQuery",
						"scope": {
							"name": "GenericQuery"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Select",
						"_kind": "class",
						"_name": "Select",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "FieldsClause<Select>",
							"access_specifier": "public",
							"id": 93825003304304,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "FieldsClause<Select>",
							"type": {
								"_typeName": "FieldsClause<stappler::sql::Query::Select>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "FieldsClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
										"_kind": "class template",
										"_name": "FieldsClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
											"_kind": "class",
											"_name": "FieldsClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825012122384,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825012121984,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "FieldsClause",
											"scope": {
												"is_templated": true,
												"name": "FieldsClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825012136880,
										"kind": "class template",
										"name": "FieldsClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012282272,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "FieldsClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::Select"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Select::all()",
							"_kind": "member function",
							"_name": "all",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825003304544,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "all",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Select&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Select",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Select",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Select",
											"_kind": "class",
											"_name": "Select",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Select>",
												"access_specifier": "public",
												"id": 93825003304304,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Select>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Select>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Select"
												}
											}],
											"class_kind": "struct",
											"id": 93825000740336,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Select",
											"scope": {
												"name": "Select"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Select::count()",
							"_kind": "member function",
							"_name": "count",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825003305056,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "count",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Select&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Select",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Select",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Select",
											"_kind": "class",
											"_name": "Select",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Select>",
												"access_specifier": "public",
												"id": 93825003304304,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Select>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Select>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Select"
												}
											}],
											"class_kind": "struct",
											"id": 93825000740336,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Select",
											"scope": {
												"name": "Select"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Select::count(stappler::sql::Query::String const&)",
							"_kind": "member function",
							"_name": "count",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825003305376,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "count",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "alias",
								"id": 93825006170496,
								"kind": "function parameter",
								"name": "alias",
								"type": {
									"_typeName": "stappler::sql::Query::String const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::String const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::String",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::String",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::String",
													"_kind": "type alias",
													"_name": "String",
													"id": 93825007590704,
													"kind": "type alias",
													"name": "String",
													"underlying_type": {
														"_typeName": "typename Interface::StringType",
														"kind": "unexposed",
														"name": "typename Interface::StringType"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Select&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Select",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Select",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Select",
											"_kind": "class",
											"_name": "Select",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Select>",
												"access_specifier": "public",
												"id": 93825003304304,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Select>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Select>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Select"
												}
											}],
											"class_kind": "struct",
											"id": 93825000740336,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Select",
											"scope": {
												"name": "Select"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::String const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Select::from()",
							"_kind": "member function",
							"_name": "from",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825006170928,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "from",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectFrom",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectFrom",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
										"_kind": "class",
										"_name": "SelectFrom",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825000677312,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825006171200,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectFrom",
										"scope": {
											"name": "SelectFrom"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Select::from(stappler::sql::Query::Field const&)",
							"_kind": "member function",
							"_name": "from",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825006171648,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "from",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "field",
								"id": 93825006172112,
								"kind": "function parameter",
								"name": "field",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectFrom",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectFrom",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
										"_kind": "class",
										"_name": "SelectFrom",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825000677312,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825006171200,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectFrom",
										"scope": {
											"name": "SelectFrom"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Field const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Select::from<typename>(stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "function template",
							"_name": "from",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Select::from<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "from",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825000675584,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "from",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "field",
									"id": 93825000676048,
									"kind": "function parameter",
									"name": "field",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825000676240,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::SelectFrom",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
											"_kind": "class",
											"_name": "SelectFrom",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825000677312,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825006171200,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SelectFrom",
											"scope": {
												"name": "SelectFrom"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&,Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::Select::from<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "from",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825000675584,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "from",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "field",
									"id": 93825000676048,
									"kind": "function parameter",
									"name": "field",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825000676240,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::SelectFrom",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
											"_kind": "class",
											"_name": "SelectFrom",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825000677312,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825006171200,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SelectFrom",
											"scope": {
												"name": "SelectFrom"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&,Args &&...)"
							},
							"id": 93825010875184,
							"kind": "function template",
							"name": "from",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825000676640,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825000676928,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "FieldsClause<Select>::FieldsClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
									"_kind": "class template",
									"_name": "FieldsClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
										"_kind": "class",
										"_name": "FieldsClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825012122384,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825012121984,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "FieldsClause",
										"scope": {
											"is_templated": true,
											"name": "FieldsClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825012136880,
									"kind": "class template",
									"name": "FieldsClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825012282272,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "FieldsClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012282272,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825000740336,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "Select",
						"scope": {
							"name": "Select"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
						"_kind": "class",
						"_name": "SelectFrom",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825000677312,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::from(stappler::sql::Query::Field const&)",
							"_kind": "member function",
							"_name": "from",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000677456,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "from",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "field",
								"id": 93825001574672,
								"kind": "function parameter",
								"name": "field",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectFrom&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::SelectFrom",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::SelectFrom",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
											"_kind": "class",
											"_name": "SelectFrom",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825000677312,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825006171200,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SelectFrom",
											"scope": {
												"name": "SelectFrom"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Field const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::from<typename>(stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "function template",
							"_name": "from",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::from<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "from",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825001576176,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "from",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "field",
									"id": 93825001576688,
									"kind": "function parameter",
									"name": "field",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825001576944,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&,Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::from<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "from",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825001576176,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "from",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "field",
									"id": 93825001576688,
									"kind": "function parameter",
									"name": "field",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825001576944,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&,Args &&...)"
							},
							"id": 93825000676480,
							"kind": "function template",
							"name": "from",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825001575072,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::innerJoinOn<typename>(stappler::StringView const&,Callback const&)",
							"_kind": "function template",
							"_name": "innerJoinOn",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::innerJoinOn<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "innerJoinOn",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825001575504,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "innerJoinOn",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "s",
									"id": 93825005656832,
									"kind": "function parameter",
									"name": "s",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "cb",
									"id": 93825005657216,
									"kind": "function parameter",
									"name": "cb",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93825005657456,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::innerJoinOn<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "innerJoinOn",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825001575504,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "innerJoinOn",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "s",
									"id": 93825005656832,
									"kind": "function parameter",
									"name": "s",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "cb",
									"id": 93825005657216,
									"kind": "function parameter",
									"name": "cb",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93825005657456,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							},
							"id": 93825001574912,
							"kind": "function template",
							"name": "innerJoinOn",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Callback",
								"id": 93825005657456,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Callback"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::leftJoinOn<typename>(stappler::StringView const&,Callback const&)",
							"_kind": "function template",
							"_name": "leftJoinOn",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::leftJoinOn<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "leftJoinOn",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825005657888,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "leftJoinOn",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "s",
									"id": 93825005658400,
									"kind": "function parameter",
									"name": "s",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "cb",
									"id": 93825005658784,
									"kind": "function parameter",
									"name": "cb",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93824999134768,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::leftJoinOn<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "leftJoinOn",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825005657888,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "leftJoinOn",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "s",
									"id": 93825005658400,
									"kind": "function parameter",
									"name": "s",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "cb",
									"id": 93825005658784,
									"kind": "function parameter",
									"name": "cb",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93824999134768,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							},
							"id": 93825005659024,
							"kind": "function template",
							"name": "leftJoinOn",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Callback",
								"id": 93824999134768,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Callback"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::rightJoinOn<typename>(stappler::StringView const&,Callback const&)",
							"_kind": "function template",
							"_name": "rightJoinOn",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::rightJoinOn<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "rightJoinOn",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93824999135200,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "rightJoinOn",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "s",
									"id": 93824999135712,
									"kind": "function parameter",
									"name": "s",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "cb",
									"id": 93824999136096,
									"kind": "function parameter",
									"name": "cb",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93824999136496,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::rightJoinOn<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "rightJoinOn",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93824999135200,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "rightJoinOn",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "s",
									"id": 93824999135712,
									"kind": "function parameter",
									"name": "s",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "cb",
									"id": 93824999136096,
									"kind": "function parameter",
									"name": "cb",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93824999136496,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							},
							"id": 93824999136336,
							"kind": "function template",
							"name": "rightJoinOn",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Callback",
								"id": 93824999136496,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Callback"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::fullJoinOn<typename>(stappler::StringView const&,Callback const&)",
							"_kind": "function template",
							"_name": "fullJoinOn",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::fullJoinOn<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "fullJoinOn",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93824999136928,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "fullJoinOn",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "s",
									"id": 93825008119552,
									"kind": "function parameter",
									"name": "s",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "cb",
									"id": 93825008119936,
									"kind": "function parameter",
									"name": "cb",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93825008120336,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::fullJoinOn<typename>(stappler::StringView const&,Callback const&)",
								"_kind": "member function",
								"_name": "fullJoinOn",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93824999136928,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "fullJoinOn",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "s",
									"id": 93825008119552,
									"kind": "function parameter",
									"name": "s",
									"type": {
										"_typeName": "stappler::StringView const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::StringView const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::StringView",
												"kind": "user_defined",
												"target": {
													"name": "stappler::StringView",
													"objects": [{
														"_fullName": "::stappler::StringView",
														"_kind": "type alias",
														"_name": "StringView",
														"id": 93824997448656,
														"kind": "type alias",
														"name": "StringView",
														"underlying_type": {
															"_typeName": "StringViewBase<char>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "StringViewBase",
																"objects": [{
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class template",
																	"_name": "StringViewBase",
																	"class": {
																		"_fullName": "::stappler::StringViewBase<typename>",
																		"_kind": "class",
																		"_name": "StringViewBase",
																		"bases": [{
																			"_kind": "base class specifier",
																			"_name": "BytesReader<_CharType>",
																			"access_specifier": "public",
																			"id": 93824998090352,
																			"is_virtual": false,
																			"kind": "base class specifier",
																			"name": "BytesReader<_CharType>",
																			"type": {
																				"_typeName": "BytesReader<_CharType>",
																				"arguments_exposed": false,
																				"kind": "template_instantiation",
																				"primary_template": {
																					"name": "BytesReader",
																					"objects": [{
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class template",
																						"_name": "BytesReader",
																						"class": {
																							"_fullName": "::stappler::BytesReader<typename>",
																							"_kind": "class",
																							"_name": "BytesReader",
																							"class_kind": "class",
																							"id": 140736954953792,
																							"is_declaration": false,
																							"is_definition": true,
																							"is_final": false,
																							"kind": "class",
																							"name": "BytesReader",
																							"scope": {
																								"is_templated": true,
																								"name": "BytesReader",
																								"template_parameters": [{
																									"_kind": "template type parameter",
																									"_name": "_CharType",
																									"id": 140737098599232,
																									"is_variadic": false,
																									"keyword": "typename",
																									"kind": "template type parameter",
																									"name": "_CharType"
																								}]
																							},
																							"semantic_scope": ""
																						},
																						"id": 93824998648144,
																						"kind": "class template",
																						"name": "BytesReader",
																						"parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}],
																						"scope":  {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						}
																					}]
																				},
																				"unexposed_arguments": "_CharType"
																			}
																		}],
																		"class_kind": "class",
																		"id": 140737094580320,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "StringViewBase",
																		"scope": {
																			"is_templated": true,
																			"name": "StringViewBase",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 93824999493712,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824999493216,
																	"kind": "class template",
																	"name": "StringViewBase",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "char"
														}
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "cb",
									"id": 93825008119936,
									"kind": "function parameter",
									"name": "cb",
									"type": {
										"_typeName": "Callback const&",
										"kind": "reference",
										"referee": {
											"_typeName": "Callback const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "Callback",
												"entity": {
													"name": "Callback",
													"objects": [{
														"_kind": "template type parameter",
														"_name": "Callback",
														"id": 93825008120336,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Callback"
													}]
												},
												"kind": "template_parameter"
											}
										},
										"reference_kind": "lvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectFrom&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectFrom",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectFrom",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom",
												"_kind": "class",
												"_name": "SelectFrom",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825000677312,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825006171200,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectFrom",
												"scope": {
													"name": "SelectFrom"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::StringView const&,Callback const&)"
							},
							"id": 93825008120176,
							"kind": "function template",
							"name": "fullJoinOn",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Callback",
								"id": 93825008120336,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Callback"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::where<typename>(Args &&...)",
							"_kind": "function template",
							"_name": "where",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825008120768,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825008121040,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectWhere",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::SelectWhere",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::SelectWhere",
											"_kind": "class",
											"_name": "SelectWhere",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<SelectWhere>",
												"access_specifier": "public",
												"id": 93825004579392,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<SelectWhere>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::SelectWhere>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::SelectWhere"
												}
											}],
											"class_kind": "struct",
											"id": 93825003319248,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SelectWhere",
											"scope": {
												"name": "SelectWhere"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825008120768,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825008121040,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectWhere",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::SelectWhere",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::SelectWhere",
											"_kind": "class",
											"_name": "SelectWhere",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<SelectWhere>",
												"access_specifier": "public",
												"id": 93825004579392,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<SelectWhere>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::SelectWhere>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::SelectWhere"
												}
											}],
											"class_kind": "struct",
											"id": 93825003319248,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SelectWhere",
											"scope": {
												"name": "SelectWhere"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							},
							"id": 93825008121488,
							"kind": "function template",
							"name": "where",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825005577088,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::where()",
							"_kind": "member function",
							"_name": "where",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825005577520,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "where",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectWhere",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectWhere",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectWhere",
										"_kind": "class",
										"_name": "SelectWhere",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "WhereClause<SelectWhere>",
											"access_specifier": "public",
											"id": 93825004579392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "WhereClause<SelectWhere>",
											"type": {
												"_typeName": "WhereClause<stappler::sql::Query::SelectWhere>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "WhereClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
														"_kind": "class template",
														"_name": "WhereClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class",
															"_name": "WhereClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825010882944,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825010884768,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "WhereClause",
															"scope": {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003410672,
														"kind": "class template",
														"name": "WhereClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825007965376,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "WhereClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::SelectWhere"
											}
										}],
										"class_kind": "struct",
										"id": 93825003319248,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectWhere",
										"scope": {
											"name": "SelectWhere"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::group(stappler::sql::Query::Field const&)",
							"_kind": "member function",
							"_name": "group",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825005577984,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "group",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825005578448,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectGroup",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectGroup",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup",
										"_kind": "class",
										"_name": "SelectGroup",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825005151248,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825008121232,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectGroup",
										"scope": {
											"name": "SelectGroup"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Field const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
							"_kind": "member function",
							"_name": "order",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825005578832,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "order",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825005579200,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Ordering",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Ordering",
										"objects": [{
											"_fullName": "::stappler::sql::Ordering",
											"_kind": "enum",
											"_name": "Ordering",
											"has_explicit_type": false,
											"id": 140736956220064,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Ordering",
											"scope": {
												"name": "Ordering"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"id": 93825005149904,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"default_value": {
									"expression": [{
										"kind": "identifier",
										"spelling": "Nulls"
									}, {
										"kind": "punctuation",
										"spelling": "::"
									}, {
										"kind": "identifier",
										"spelling": "None"
									}],
									"kind": "unexposed",
									"type": {
										"_typeName": "stappler::sql::Nulls",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Nulls",
											"objects": [{
												"_fullName": "::stappler::sql::Nulls",
												"_kind": "enum",
												"_name": "Nulls",
												"has_explicit_type": false,
												"id": 140737146328912,
												"is_declaration": false,
												"is_definition": true,
												"is_scoped": true,
												"kind": "enum",
												"name": "Nulls",
												"scope": {
													"name": "Nulls"
												},
												"semantic_scope": "",
												"underlying_type": {
													"_typeName": "int",
													"builtin_type_kind": "int",
													"kind": "builtin"
												}
											}]
										}
									}
								},
								"id": 93825005150384,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Nulls",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Nulls",
										"objects": [{
											"_fullName": "::stappler::sql::Nulls",
											"_kind": "enum",
											"_name": "Nulls",
											"has_explicit_type": false,
											"id": 140737146328912,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Nulls",
											"scope": {
												"name": "Nulls"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectOrder",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectOrder",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder",
										"_kind": "class",
										"_name": "SelectOrder",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825004138672,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825001002128,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectOrder",
										"scope": {
											"name": "SelectOrder"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectFrom::forUpdate()",
							"_kind": "member function",
							"_name": "forUpdate",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825005150640,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "forUpdate",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825005151056,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825006171200,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "SelectFrom",
						"scope": {
							"name": "SelectFrom"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup",
						"_kind": "class",
						"_name": "SelectGroup",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825005151248,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup::fields<typename>(stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "function template",
							"_name": "fields",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup::fields<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "fields",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825005151536,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "fields",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825005152048,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825005152304,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectGroup&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectGroup",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectGroup",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup",
												"_kind": "class",
												"_name": "SelectGroup",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825005151248,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825008121232,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectGroup",
												"scope": {
													"name": "SelectGroup"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&,Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup::fields<typename>(stappler::sql::Query::Field const&,Args &&...)",
								"_kind": "member function",
								"_name": "fields",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825005151536,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "fields",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "f",
									"id": 93825005152048,
									"kind": "function parameter",
									"name": "f",
									"type": {
										"_typeName": "stappler::sql::Query::Field const&",
										"kind": "reference",
										"referee": {
											"_typeName": "stappler::sql::Query::Field const",
											"cv_qualifier": "const",
											"kind": "cv_qualified",
											"type": {
												"_typeName": "stappler::sql::Query::Field",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::Field",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::Field",
														"_kind": "class",
														"_name": "Field",
														"class_kind": "struct",
														"id": 93825003102816,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "Field",
														"scope": {
															"name": "Field"
														},
														"semantic_scope": ""
													}]
												}
											}
										},
										"reference_kind": "lvalue"
									}
								}, {
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825005152304,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::SelectGroup&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::SelectGroup",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::SelectGroup",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup",
												"_kind": "class",
												"_name": "SelectGroup",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825005151248,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825008121232,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SelectGroup",
												"scope": {
													"name": "SelectGroup"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(stappler::sql::Query::Field const&,Args &&...)"
							},
							"id": 93825008121648,
							"kind": "function template",
							"name": "fields",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825003319008,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup::field(stappler::sql::Query::Field const&)",
							"_kind": "member function",
							"_name": "field",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825003320192,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "field",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825003320704,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectGroup&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::SelectGroup",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::SelectGroup",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup",
											"_kind": "class",
											"_name": "SelectGroup",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825005151248,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825008121232,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SelectGroup",
											"scope": {
												"name": "SelectGroup"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Field const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
							"_kind": "member function",
							"_name": "order",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825003321088,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "order",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825004577696,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Ordering",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Ordering",
										"objects": [{
											"_fullName": "::stappler::sql::Ordering",
											"_kind": "enum",
											"_name": "Ordering",
											"has_explicit_type": false,
											"id": 140736956220064,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Ordering",
											"scope": {
												"name": "Ordering"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"id": 93825004577984,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"default_value": {
									"expression": [{
										"kind": "identifier",
										"spelling": "Nulls"
									}, {
										"kind": "punctuation",
										"spelling": "::"
									}, {
										"kind": "identifier",
										"spelling": "None"
									}],
									"kind": "unexposed",
									"type": {
										"_typeName": "stappler::sql::Nulls",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Nulls",
											"objects": [{
												"_fullName": "::stappler::sql::Nulls",
												"_kind": "enum",
												"_name": "Nulls",
												"has_explicit_type": false,
												"id": 140737146328912,
												"is_declaration": false,
												"is_definition": true,
												"is_scoped": true,
												"kind": "enum",
												"name": "Nulls",
												"scope": {
													"name": "Nulls"
												},
												"semantic_scope": "",
												"underlying_type": {
													"_typeName": "int",
													"builtin_type_kind": "int",
													"kind": "builtin"
												}
											}]
										}
									}
								},
								"id": 93825004578464,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Nulls",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Nulls",
										"objects": [{
											"_fullName": "::stappler::sql::Nulls",
											"_kind": "enum",
											"_name": "Nulls",
											"has_explicit_type": false,
											"id": 140737146328912,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Nulls",
											"scope": {
												"name": "Nulls"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectOrder",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectOrder",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder",
										"_kind": "class",
										"_name": "SelectOrder",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825004138672,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825001002128,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectOrder",
										"scope": {
											"name": "SelectOrder"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825004578704,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825008121232,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "SelectGroup",
						"scope": {
							"name": "SelectGroup"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectWhere",
						"_kind": "class",
						"_name": "SelectWhere",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "WhereClause<SelectWhere>",
							"access_specifier": "public",
							"id": 93825004579392,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "WhereClause<SelectWhere>",
							"type": {
								"_typeName": "WhereClause<stappler::sql::Query::SelectWhere>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "WhereClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class template",
										"_name": "WhereClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
											"_kind": "class",
											"_name": "WhereClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825010882944,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825010884768,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereClause",
											"scope": {
												"is_templated": true,
												"name": "WhereClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825003410672,
										"kind": "class template",
										"name": "WhereClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::SelectWhere"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectWhere::group(stappler::sql::Query::Field const&)",
							"_kind": "member function",
							"_name": "group",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004579632,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "group",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825004580096,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectGroup",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectGroup",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectGroup",
										"_kind": "class",
										"_name": "SelectGroup",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825005151248,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825008121232,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectGroup",
										"scope": {
											"name": "SelectGroup"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Field const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectWhere::order(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)",
							"_kind": "member function",
							"_name": "order",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825001001184,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "order",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825001001552,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Ordering",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Ordering",
										"objects": [{
											"_fullName": "::stappler::sql::Ordering",
											"_kind": "enum",
											"_name": "Ordering",
											"has_explicit_type": false,
											"id": 140736956220064,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Ordering",
											"scope": {
												"name": "Ordering"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"id": 93825001001888,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"default_value": {
									"expression": [{
										"kind": "identifier",
										"spelling": "Nulls"
									}, {
										"kind": "punctuation",
										"spelling": "::"
									}, {
										"kind": "identifier",
										"spelling": "None"
									}],
									"kind": "unexposed",
									"type": {
										"_typeName": "stappler::sql::Nulls",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Nulls",
											"objects": [{
												"_fullName": "::stappler::sql::Nulls",
												"_kind": "enum",
												"_name": "Nulls",
												"has_explicit_type": false,
												"id": 140737146328912,
												"is_declaration": false,
												"is_definition": true,
												"is_scoped": true,
												"kind": "enum",
												"name": "Nulls",
												"scope": {
													"name": "Nulls"
												},
												"semantic_scope": "",
												"underlying_type": {
													"_typeName": "int",
													"builtin_type_kind": "int",
													"kind": "builtin"
												}
											}]
										}
									}
								},
								"id": 93825001002624,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Nulls",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Nulls",
										"objects": [{
											"_fullName": "::stappler::sql::Nulls",
											"_kind": "enum",
											"_name": "Nulls",
											"has_explicit_type": false,
											"id": 140737146328912,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Nulls",
											"scope": {
												"name": "Nulls"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectOrder",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectOrder",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder",
										"_kind": "class",
										"_name": "SelectOrder",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825004138672,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825001002128,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectOrder",
										"scope": {
											"name": "SelectOrder"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Ordering,stappler::sql::Query::Field const&,stappler::sql::Nulls)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectWhere::forUpdate()",
							"_kind": "member function",
							"_name": "forUpdate",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825001002816,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "forUpdate",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825001003360,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "WhereClause<SelectWhere>::WhereClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
									"_kind": "class template",
									"_name": "WhereClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class",
										"_name": "WhereClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825010882944,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825010884768,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "WhereClause",
										"scope": {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825003410672,
									"kind": "class template",
									"name": "WhereClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825007965376,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "WhereClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825003319248,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "SelectWhere",
						"scope": {
							"name": "SelectWhere"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder",
						"_kind": "class",
						"_name": "SelectOrder",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825004138672,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder::limit(size_t,size_t)",
							"_kind": "member function",
							"_name": "limit",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004138816,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "limit",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "limit",
								"id": 93825004139328,
								"kind": "function parameter",
								"name": "limit",
								"type": {
									"_typeName": "size_t",
									"kind": "user_defined",
									"target": {
										"name": "size_t"
									}
								}
							}, {
								"_kind": "function parameter",
								"_name": "offset",
								"id": 93825004139568,
								"kind": "function parameter",
								"name": "offset",
								"type": {
									"_typeName": "size_t",
									"kind": "user_defined",
									"target": {
										"name": "size_t"
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectPost",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectPost",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectPost",
										"_kind": "class",
										"_name": "SelectPost",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825006189168,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825006188768,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectPost",
										"scope": {
											"name": "SelectPost"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(size_t,size_t)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder::limit(size_t)",
							"_kind": "member function",
							"_name": "limit",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004140000,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "limit",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "limit",
								"id": 93825004140368,
								"kind": "function parameter",
								"name": "limit",
								"type": {
									"_typeName": "size_t",
									"kind": "user_defined",
									"target": {
										"name": "size_t"
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectPost",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectPost",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectPost",
										"_kind": "class",
										"_name": "SelectPost",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825006189168,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825006188768,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectPost",
										"scope": {
											"name": "SelectPost"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(size_t)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder::offset(size_t)",
							"_kind": "member function",
							"_name": "offset",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004140752,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "offset",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "offset",
								"id": 93825004141120,
								"kind": "function parameter",
								"name": "offset",
								"type": {
									"_typeName": "size_t",
									"kind": "user_defined",
									"target": {
										"name": "size_t"
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::SelectPost",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::SelectPost",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SelectPost",
										"_kind": "class",
										"_name": "SelectPost",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825006189168,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825006188768,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SelectPost",
										"scope": {
											"name": "SelectPost"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(size_t)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectOrder::forUpdate()",
							"_kind": "member function",
							"_name": "forUpdate",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825006188160,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "forUpdate",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825006188576,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825001002128,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "SelectOrder",
						"scope": {
							"name": "SelectOrder"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::SelectPost",
						"_kind": "class",
						"_name": "SelectPost",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825006189168,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::SelectPost::forUpdate()",
							"_kind": "member function",
							"_name": "forUpdate",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825006189312,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "forUpdate",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825006189728,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825006188768,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "SelectPost",
						"scope": {
							"name": "SelectPost"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Insert",
						"_kind": "class",
						"_name": "Insert",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "FieldsClause<Insert>",
							"access_specifier": "public",
							"id": 93825006190528,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "FieldsClause<Insert>",
							"type": {
								"_typeName": "FieldsClause<stappler::sql::Query::Insert>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "FieldsClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
										"_kind": "class template",
										"_name": "FieldsClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
											"_kind": "class",
											"_name": "FieldsClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825012122384,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825012121984,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "FieldsClause",
											"scope": {
												"is_templated": true,
												"name": "FieldsClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825012136880,
										"kind": "class template",
										"name": "FieldsClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012282272,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "FieldsClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::Insert"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Insert::values<typename>(Args &&...)",
							"_kind": "function template",
							"_name": "values",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Insert::values<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "values",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825003769792,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "values",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825003770064,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::InsertValues",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::InsertValues",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
											"_kind": "class",
											"_name": "InsertValues",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825003771296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825003770256,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InsertValues",
											"scope": {
												"name": "InsertValues"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::Insert::values<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "values",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825003769792,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "values",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825003770064,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::InsertValues",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::InsertValues",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
											"_kind": "class",
											"_name": "InsertValues",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825003771296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825003770256,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InsertValues",
											"scope": {
												"name": "InsertValues"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							},
							"id": 93825003318848,
							"kind": "function template",
							"name": "values",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825003770672,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825003770960,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "FieldsClause<Insert>::FieldsClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
									"_kind": "class template",
									"_name": "FieldsClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
										"_kind": "class",
										"_name": "FieldsClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825012122384,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825012121984,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "FieldsClause",
										"scope": {
											"is_templated": true,
											"name": "FieldsClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825012136880,
									"kind": "class template",
									"name": "FieldsClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825012282272,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "FieldsClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012282272,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825006189920,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "Insert",
						"scope": {
							"name": "Insert"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
						"_kind": "class",
						"_name": "InsertValues",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825003771296,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::value<typename>(Value&&)",
							"_kind": "function template",
							"_name": "value",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::value<typename>(Value&&)",
								"_kind": "member function",
								"_name": "value",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825003771584,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "value",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825003772000,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "Value&&",
										"kind": "reference",
										"referee": {
											"_typeName": "Value",
											"entity": {
												"name": "Value",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Value",
													"id": 93825004291216,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Value"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "rvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::InsertValues&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::InsertValues",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::InsertValues",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
												"_kind": "class",
												"_name": "InsertValues",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825003771296,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825003770256,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "InsertValues",
												"scope": {
													"name": "InsertValues"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(Value&&)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::value<typename>(Value&&)",
								"_kind": "member function",
								"_name": "value",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825003771584,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "value",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "",
									"id": 93825003772000,
									"kind": "function parameter",
									"name": "",
									"type": {
										"_typeName": "Value&&",
										"kind": "reference",
										"referee": {
											"_typeName": "Value",
											"entity": {
												"name": "Value",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Value",
													"id": 93825004291216,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Value"
												}]
											},
											"kind": "template_parameter"
										},
										"reference_kind": "rvalue"
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::InsertValues&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::InsertValues",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::InsertValues",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
												"_kind": "class",
												"_name": "InsertValues",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825003771296,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825003770256,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "InsertValues",
												"scope": {
													"name": "InsertValues"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(Value&&)"
							},
							"id": 93825003770512,
							"kind": "function template",
							"name": "value",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Value",
								"id": 93825004291216,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Value"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::def()",
							"_kind": "member function",
							"_name": "def",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004291648,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "def",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertValues&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::InsertValues",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::InsertValues",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
											"_kind": "class",
											"_name": "InsertValues",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825003771296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825003770256,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InsertValues",
											"scope": {
												"name": "InsertValues"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::values<typename>(Args &&...)",
							"_kind": "function template",
							"_name": "values",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::values<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "values",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825004292160,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "values",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825003772192,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::InsertValues&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::InsertValues",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::InsertValues",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
												"_kind": "class",
												"_name": "InsertValues",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825003771296,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825003770256,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "InsertValues",
												"scope": {
													"name": "InsertValues"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::values<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "values",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825004292160,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "values",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825003772192,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::InsertValues&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::InsertValues",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::InsertValues",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
												"_kind": "class",
												"_name": "InsertValues",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825003771296,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825003770256,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "InsertValues",
												"scope": {
													"name": "InsertValues"
												},
												"semantic_scope": ""
											}]
										}
									},
									"reference_kind": "lvalue"
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							},
							"id": 93825004292592,
							"kind": "function template",
							"name": "values",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825004292912,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::onConflict(stappler::StringView const&)",
							"_kind": "member function",
							"_name": "onConflict",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004293344,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "onConflict",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825003772336,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertConflict",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::InsertConflict",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::InsertConflict",
										"_kind": "class",
										"_name": "InsertConflict",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825010820512,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825004290960,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "InsertConflict",
										"scope": {
											"name": "InsertConflict"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::onConflictDoNothing()",
							"_kind": "member function",
							"_name": "onConflictDoNothing",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825010818832,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "onConflictDoNothing",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertPostConflict",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::InsertPostConflict",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::InsertPostConflict",
										"_kind": "class",
										"_name": "InsertPostConflict",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825006331888,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825006331488,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "InsertPostConflict",
										"scope": {
											"name": "InsertPostConflict"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::returning()",
							"_kind": "member function",
							"_name": "returning",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825010819344,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "returning",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Returning",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
										"_kind": "class",
										"_name": "Returning",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Returning>",
											"access_specifier": "public",
											"id": 93825000695392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Returning>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Returning"
											}
										}],
										"class_kind": "struct",
										"id": 93825012497648,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Returning",
										"scope": {
											"name": "Returning"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues::next()",
							"_kind": "member function",
							"_name": "next",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825010819808,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "next",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertValues",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::InsertValues",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::InsertValues",
										"_kind": "class",
										"_name": "InsertValues",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825003771296,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825003770256,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "InsertValues",
										"scope": {
											"name": "InsertValues"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825010820176,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825003770256,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "InsertValues",
						"scope": {
							"name": "InsertValues"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertConflict",
						"_kind": "class",
						"_name": "InsertConflict",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825010820512,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertConflict::doNothing()",
							"_kind": "member function",
							"_name": "doNothing",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825010820816,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "doNothing",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertPostConflict",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::InsertPostConflict",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::InsertPostConflict",
										"_kind": "class",
										"_name": "InsertPostConflict",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825006331888,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825006331488,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "InsertPostConflict",
										"scope": {
											"name": "InsertPostConflict"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertConflict::doUpdate()",
							"_kind": "member function",
							"_name": "doUpdate",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000672880,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "doUpdate",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertUpdateValues",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::InsertUpdateValues",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues",
										"_kind": "class",
										"_name": "InsertUpdateValues",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "SetClause<InsertUpdateValues>",
											"access_specifier": "public",
											"id": 93825000674048,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "SetClause<InsertUpdateValues>",
											"type": {
												"_typeName": "SetClause<stappler::sql::Query::InsertUpdateValues>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "SetClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
														"_kind": "class template",
														"_name": "SetClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
															"_kind": "class",
															"_name": "SetClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825001762528,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825001762224,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "SetClause",
															"scope": {
																"is_templated": true,
																"name": "SetClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012121696,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012121536,
														"kind": "class template",
														"name": "SetClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012121696,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "SetClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012121696,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::InsertUpdateValues"
											}
										}],
										"class_kind": "struct",
										"id": 93825000673488,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "InsertUpdateValues",
										"scope": {
											"name": "InsertUpdateValues"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825000673296,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825004290960,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "InsertConflict",
						"scope": {
							"name": "InsertConflict"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues",
						"_kind": "class",
						"_name": "InsertUpdateValues",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "SetClause<InsertUpdateValues>",
							"access_specifier": "public",
							"id": 93825000674048,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "SetClause<InsertUpdateValues>",
							"type": {
								"_typeName": "SetClause<stappler::sql::Query::InsertUpdateValues>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "SetClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
										"_kind": "class template",
										"_name": "SetClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
											"_kind": "class",
											"_name": "SetClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825001762528,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825001762224,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SetClause",
											"scope": {
												"is_templated": true,
												"name": "SetClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012121696,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825012121536,
										"kind": "class template",
										"name": "SetClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012121696,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "SetClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012121696,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::InsertUpdateValues"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues::excluded(stappler::StringView)",
							"_kind": "member function",
							"_name": "excluded",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000674304,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "excluded",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "f",
								"id": 93825000674672,
								"kind": "function parameter",
								"name": "f",
								"type": {
									"_typeName": "stappler::StringView",
									"kind": "user_defined",
									"target": {
										"name": "stappler::StringView",
										"objects": [{
											"_fullName": "::stappler::StringView",
											"_kind": "type alias",
											"_name": "StringView",
											"id": 93824997448656,
											"kind": "type alias",
											"name": "StringView",
											"underlying_type": {
												"_typeName": "StringViewBase<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "StringViewBase",
													"objects": [{
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class template",
														"_name": "StringViewBase",
														"class": {
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class",
															"_name": "StringViewBase",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "BytesReader<_CharType>",
																"access_specifier": "public",
																"id": 93824998090352,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "BytesReader<_CharType>",
																"type": {
																	"_typeName": "BytesReader<_CharType>",
																	"arguments_exposed": false,
																	"kind": "template_instantiation",
																	"primary_template": {
																		"name": "BytesReader",
																		"objects": [{
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class template",
																			"_name": "BytesReader",
																			"class": {
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class",
																				"_name": "BytesReader",
																				"class_kind": "class",
																				"id": 140736954953792,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "BytesReader",
																				"scope": {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				},
																				"semantic_scope": ""
																			},
																			"id": 93824998648144,
																			"kind": "class template",
																			"name": "BytesReader",
																			"parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}],
																			"scope":  {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			}
																		}]
																	},
																	"unexposed_arguments": "_CharType"
																}
															}],
															"class_kind": "class",
															"id": 140737094580320,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "StringViewBase",
															"scope": {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824999493216,
														"kind": "class template",
														"name": "StringViewBase",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertUpdateValues&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::InsertUpdateValues",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::InsertUpdateValues",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues",
											"_kind": "class",
											"_name": "InsertUpdateValues",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "SetClause<InsertUpdateValues>",
												"access_specifier": "public",
												"id": 93825000674048,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "SetClause<InsertUpdateValues>",
												"type": {
													"_typeName": "SetClause<stappler::sql::Query::InsertUpdateValues>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "SetClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
															"_kind": "class template",
															"_name": "SetClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
																"_kind": "class",
																"_name": "SetClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825001762528,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825001762224,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "SetClause",
																"scope": {
																	"is_templated": true,
																	"name": "SetClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012121696,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012121536,
															"kind": "class template",
															"name": "SetClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012121696,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "SetClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012121696,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::InsertUpdateValues"
												}
											}],
											"class_kind": "struct",
											"id": 93825000673488,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InsertUpdateValues",
											"scope": {
												"name": "InsertUpdateValues"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues::excluded(stappler::StringView,stappler::StringView)",
							"_kind": "member function",
							"_name": "excluded",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000675120,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "excluded",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "f",
								"id": 93825002271456,
								"kind": "function parameter",
								"name": "f",
								"type": {
									"_typeName": "stappler::StringView",
									"kind": "user_defined",
									"target": {
										"name": "stappler::StringView",
										"objects": [{
											"_fullName": "::stappler::StringView",
											"_kind": "type alias",
											"_name": "StringView",
											"id": 93824997448656,
											"kind": "type alias",
											"name": "StringView",
											"underlying_type": {
												"_typeName": "StringViewBase<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "StringViewBase",
													"objects": [{
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class template",
														"_name": "StringViewBase",
														"class": {
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class",
															"_name": "StringViewBase",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "BytesReader<_CharType>",
																"access_specifier": "public",
																"id": 93824998090352,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "BytesReader<_CharType>",
																"type": {
																	"_typeName": "BytesReader<_CharType>",
																	"arguments_exposed": false,
																	"kind": "template_instantiation",
																	"primary_template": {
																		"name": "BytesReader",
																		"objects": [{
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class template",
																			"_name": "BytesReader",
																			"class": {
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class",
																				"_name": "BytesReader",
																				"class_kind": "class",
																				"id": 140736954953792,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "BytesReader",
																				"scope": {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				},
																				"semantic_scope": ""
																			},
																			"id": 93824998648144,
																			"kind": "class template",
																			"name": "BytesReader",
																			"parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}],
																			"scope":  {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			}
																		}]
																	},
																	"unexposed_arguments": "_CharType"
																}
															}],
															"class_kind": "class",
															"id": 140737094580320,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "StringViewBase",
															"scope": {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824999493216,
														"kind": "class template",
														"name": "StringViewBase",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							}, {
								"_kind": "function parameter",
								"_name": "v",
								"id": 93825002271744,
								"kind": "function parameter",
								"name": "v",
								"type": {
									"_typeName": "stappler::StringView",
									"kind": "user_defined",
									"target": {
										"name": "stappler::StringView",
										"objects": [{
											"_fullName": "::stappler::StringView",
											"_kind": "type alias",
											"_name": "StringView",
											"id": 93824997448656,
											"kind": "type alias",
											"name": "StringView",
											"underlying_type": {
												"_typeName": "StringViewBase<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "StringViewBase",
													"objects": [{
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class template",
														"_name": "StringViewBase",
														"class": {
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class",
															"_name": "StringViewBase",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "BytesReader<_CharType>",
																"access_specifier": "public",
																"id": 93824998090352,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "BytesReader<_CharType>",
																"type": {
																	"_typeName": "BytesReader<_CharType>",
																	"arguments_exposed": false,
																	"kind": "template_instantiation",
																	"primary_template": {
																		"name": "BytesReader",
																		"objects": [{
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class template",
																			"_name": "BytesReader",
																			"class": {
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class",
																				"_name": "BytesReader",
																				"class_kind": "class",
																				"id": 140736954953792,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "BytesReader",
																				"scope": {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				},
																				"semantic_scope": ""
																			},
																			"id": 93824998648144,
																			"kind": "class template",
																			"name": "BytesReader",
																			"parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}],
																			"scope":  {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			}
																		}]
																	},
																	"unexposed_arguments": "_CharType"
																}
															}],
															"class_kind": "class",
															"id": 140737094580320,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "StringViewBase",
															"scope": {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824999493216,
														"kind": "class template",
														"name": "StringViewBase",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertUpdateValues&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::InsertUpdateValues",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::InsertUpdateValues",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues",
											"_kind": "class",
											"_name": "InsertUpdateValues",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "SetClause<InsertUpdateValues>",
												"access_specifier": "public",
												"id": 93825000674048,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "SetClause<InsertUpdateValues>",
												"type": {
													"_typeName": "SetClause<stappler::sql::Query::InsertUpdateValues>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "SetClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
															"_kind": "class template",
															"_name": "SetClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
																"_kind": "class",
																"_name": "SetClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825001762528,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825001762224,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "SetClause",
																"scope": {
																	"is_templated": true,
																	"name": "SetClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012121696,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012121536,
															"kind": "class template",
															"name": "SetClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012121696,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "SetClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012121696,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::InsertUpdateValues"
												}
											}],
											"class_kind": "struct",
											"id": 93825000673488,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InsertUpdateValues",
											"scope": {
												"name": "InsertUpdateValues"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView,stappler::StringView)"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues::where<typename>(Args &&...)",
							"_kind": "function template",
							"_name": "where",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825002272176,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825002272448,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::InsertWhereValues",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::InsertWhereValues",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::InsertWhereValues",
											"_kind": "class",
											"_name": "InsertWhereValues",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<InsertWhereValues>",
												"access_specifier": "public",
												"id": 93825006330736,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<InsertWhereValues>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::InsertWhereValues>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::InsertWhereValues"
												}
											}],
											"class_kind": "struct",
											"id": 93825002273840,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InsertWhereValues",
											"scope": {
												"name": "InsertWhereValues"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825002272176,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825002272448,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::InsertWhereValues",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::InsertWhereValues",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::InsertWhereValues",
											"_kind": "class",
											"_name": "InsertWhereValues",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<InsertWhereValues>",
												"access_specifier": "public",
												"id": 93825006330736,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<InsertWhereValues>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::InsertWhereValues>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::InsertWhereValues"
												}
											}],
											"class_kind": "struct",
											"id": 93825002273840,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "InsertWhereValues",
											"scope": {
												"name": "InsertWhereValues"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							},
							"id": 93825004292752,
							"kind": "function template",
							"name": "where",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825002272944,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues::where()",
							"_kind": "member function",
							"_name": "where",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825002273376,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "where",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::InsertWhereValues",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::InsertWhereValues",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::InsertWhereValues",
										"_kind": "class",
										"_name": "InsertWhereValues",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "WhereClause<InsertWhereValues>",
											"access_specifier": "public",
											"id": 93825006330736,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "WhereClause<InsertWhereValues>",
											"type": {
												"_typeName": "WhereClause<stappler::sql::Query::InsertWhereValues>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "WhereClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
														"_kind": "class template",
														"_name": "WhereClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class",
															"_name": "WhereClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825010882944,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825010884768,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "WhereClause",
															"scope": {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003410672,
														"kind": "class template",
														"name": "WhereClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825007965376,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "WhereClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::InsertWhereValues"
											}
										}],
										"class_kind": "struct",
										"id": 93825002273840,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "InsertWhereValues",
										"scope": {
											"name": "InsertWhereValues"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertUpdateValues::returning()",
							"_kind": "member function",
							"_name": "returning",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825006329952,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "returning",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Returning",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
										"_kind": "class",
										"_name": "Returning",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Returning>",
											"access_specifier": "public",
											"id": 93825000695392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Returning>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Returning"
											}
										}],
										"class_kind": "struct",
										"id": 93825012497648,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Returning",
										"scope": {
											"name": "Returning"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825006330272,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "SetClause<InsertUpdateValues>::SetClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
									"_kind": "class template",
									"_name": "SetClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
										"_kind": "class",
										"_name": "SetClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825001762528,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825001762224,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SetClause",
										"scope": {
											"is_templated": true,
											"name": "SetClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012121696,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825012121536,
									"kind": "class template",
									"name": "SetClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825012121696,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "SetClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012121696,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825000673488,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "InsertUpdateValues",
						"scope": {
							"name": "InsertUpdateValues"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertWhereValues",
						"_kind": "class",
						"_name": "InsertWhereValues",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "WhereClause<InsertWhereValues>",
							"access_specifier": "public",
							"id": 93825006330736,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "WhereClause<InsertWhereValues>",
							"type": {
								"_typeName": "WhereClause<stappler::sql::Query::InsertWhereValues>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "WhereClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class template",
										"_name": "WhereClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
											"_kind": "class",
											"_name": "WhereClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825010882944,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825010884768,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereClause",
											"scope": {
												"is_templated": true,
												"name": "WhereClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825003410672,
										"kind": "class template",
										"name": "WhereClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::InsertWhereValues"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertWhereValues::returning()",
							"_kind": "member function",
							"_name": "returning",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825006330976,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "returning",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Returning",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
										"_kind": "class",
										"_name": "Returning",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Returning>",
											"access_specifier": "public",
											"id": 93825000695392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Returning>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Returning"
											}
										}],
										"class_kind": "struct",
										"id": 93825012497648,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Returning",
										"scope": {
											"name": "Returning"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825006331296,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "WhereClause<InsertWhereValues>::WhereClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
									"_kind": "class template",
									"_name": "WhereClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class",
										"_name": "WhereClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825010882944,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825010884768,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "WhereClause",
										"scope": {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825003410672,
									"kind": "class template",
									"name": "WhereClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825007965376,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "WhereClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825002273840,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "InsertWhereValues",
						"scope": {
							"name": "InsertWhereValues"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::InsertPostConflict",
						"_kind": "class",
						"_name": "InsertPostConflict",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825006331888,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::InsertPostConflict::returning()",
							"_kind": "member function",
							"_name": "returning",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825006332176,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "returning",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Returning",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
										"_kind": "class",
										"_name": "Returning",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Returning>",
											"access_specifier": "public",
											"id": 93825000695392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Returning>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Returning"
											}
										}],
										"class_kind": "struct",
										"id": 93825012497648,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Returning",
										"scope": {
											"name": "Returning"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825004549552,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825006331488,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "InsertPostConflict",
						"scope": {
							"name": "InsertPostConflict"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Update",
						"_kind": "class",
						"_name": "Update",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "SetClause<Update>",
							"access_specifier": "public",
							"id": 93825004550080,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "SetClause<Update>",
							"type": {
								"_typeName": "SetClause<stappler::sql::Query::Update>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "SetClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
										"_kind": "class template",
										"_name": "SetClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
											"_kind": "class",
											"_name": "SetClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825001762528,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825001762224,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "SetClause",
											"scope": {
												"is_templated": true,
												"name": "SetClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012121696,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825012121536,
										"kind": "class template",
										"name": "SetClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012121696,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "SetClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012121696,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::Update"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Update::where<typename>(Args &&...)",
							"_kind": "function template",
							"_name": "where",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Update::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825004550272,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825004550608,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::UpdateWhere",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::UpdateWhere",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::UpdateWhere",
											"_kind": "class",
											"_name": "UpdateWhere",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<UpdateWhere>",
												"access_specifier": "public",
												"id": 93825004247440,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<UpdateWhere>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::UpdateWhere>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::UpdateWhere"
												}
											}],
											"class_kind": "struct",
											"id": 93825004248256,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "UpdateWhere",
											"scope": {
												"name": "UpdateWhere"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::Update::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825004550272,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825004550608,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::UpdateWhere",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::UpdateWhere",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::UpdateWhere",
											"_kind": "class",
											"_name": "UpdateWhere",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<UpdateWhere>",
												"access_specifier": "public",
												"id": 93825004247440,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<UpdateWhere>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::UpdateWhere>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::UpdateWhere"
												}
											}],
											"class_kind": "struct",
											"id": 93825004248256,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "UpdateWhere",
											"scope": {
												"name": "UpdateWhere"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							},
							"id": 93825002272784,
							"kind": "function template",
							"name": "where",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825004550800,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Update::where()",
							"_kind": "member function",
							"_name": "where",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004551232,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "where",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::UpdateWhere",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::UpdateWhere",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::UpdateWhere",
										"_kind": "class",
										"_name": "UpdateWhere",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "WhereClause<UpdateWhere>",
											"access_specifier": "public",
											"id": 93825004247440,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "WhereClause<UpdateWhere>",
											"type": {
												"_typeName": "WhereClause<stappler::sql::Query::UpdateWhere>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "WhereClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
														"_kind": "class template",
														"_name": "WhereClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class",
															"_name": "WhereClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825010882944,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825010884768,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "WhereClause",
															"scope": {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003410672,
														"kind": "class template",
														"name": "WhereClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825007965376,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "WhereClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::UpdateWhere"
											}
										}],
										"class_kind": "struct",
										"id": 93825004248256,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "UpdateWhere",
										"scope": {
											"name": "UpdateWhere"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Update::returning()",
							"_kind": "member function",
							"_name": "returning",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004551696,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "returning",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Returning",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
										"_kind": "class",
										"_name": "Returning",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Returning>",
											"access_specifier": "public",
											"id": 93825000695392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Returning>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Returning"
											}
										}],
										"class_kind": "struct",
										"id": 93825012497648,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Returning",
										"scope": {
											"name": "Returning"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825004246896,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "SetClause<Update>::SetClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
									"_kind": "class template",
									"_name": "SetClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
										"_kind": "class",
										"_name": "SetClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825001762528,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825001762224,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "SetClause",
										"scope": {
											"is_templated": true,
											"name": "SetClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012121696,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825012121536,
									"kind": "class template",
									"name": "SetClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825012121696,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "SetClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012121696,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825004552064,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "Update",
						"scope": {
							"name": "Update"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::UpdateWhere",
						"_kind": "class",
						"_name": "UpdateWhere",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "WhereClause<UpdateWhere>",
							"access_specifier": "public",
							"id": 93825004247440,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "WhereClause<UpdateWhere>",
							"type": {
								"_typeName": "WhereClause<stappler::sql::Query::UpdateWhere>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "WhereClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class template",
										"_name": "WhereClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
											"_kind": "class",
											"_name": "WhereClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825010882944,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825010884768,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereClause",
											"scope": {
												"is_templated": true,
												"name": "WhereClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825003410672,
										"kind": "class template",
										"name": "WhereClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::UpdateWhere"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::UpdateWhere::returning()",
							"_kind": "member function",
							"_name": "returning",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825004247680,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "returning",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Returning",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
										"_kind": "class",
										"_name": "Returning",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Returning>",
											"access_specifier": "public",
											"id": 93825000695392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Returning>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Returning"
											}
										}],
										"class_kind": "struct",
										"id": 93825012497648,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Returning",
										"scope": {
											"name": "Returning"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825004248000,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "WhereClause<UpdateWhere>::WhereClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
									"_kind": "class template",
									"_name": "WhereClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class",
										"_name": "WhereClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825010882944,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825010884768,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "WhereClause",
										"scope": {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825003410672,
									"kind": "class template",
									"name": "WhereClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825007965376,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "WhereClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825004248256,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "UpdateWhere",
						"scope": {
							"name": "UpdateWhere"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Delete",
						"_kind": "class",
						"_name": "Delete",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825011409568,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Delete::where<typename>(Args &&...)",
							"_kind": "function template",
							"_name": "where",
							"childs": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Delete::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825004248512,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825004248784,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::DeleteWhere",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::DeleteWhere",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::DeleteWhere",
											"_kind": "class",
											"_name": "DeleteWhere",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<DeleteWhere>",
												"access_specifier": "public",
												"id": 93825011408560,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<DeleteWhere>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::DeleteWhere>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::DeleteWhere"
												}
											}],
											"class_kind": "struct",
											"id": 93825011408112,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "DeleteWhere",
											"scope": {
												"name": "DeleteWhere"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							}],
							"function":  {
								"_fullName": "::stappler::sql::Query<typename,typename>::Delete::where<typename>(Args &&...)",
								"_kind": "member function",
								"_name": "where",
								"body_kind": "declaration",
								"cv_qualifier": "none",
								"id": 93825004248512,
								"is_consteval": false,
								"is_constexpr": false,
								"is_declaration": true,
								"is_definition": false,
								"is_variadic": false,
								"is_virtual": false,
								"kind": "member function",
								"name": "where",
								"parameters": [{
									"_kind": "function parameter",
									"_name": "args",
									"id": 93825004248784,
									"kind": "function parameter",
									"name": "args",
									"type": {
										"_typeName": "Args &&...",
										"kind": "unexposed",
										"name": "Args &&..."
									}
								}],
								"ref_qualifier": "none",
								"return_type": {
									"_typeName": "stappler::sql::Query::DeleteWhere",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::DeleteWhere",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::DeleteWhere",
											"_kind": "class",
											"_name": "DeleteWhere",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "WhereClause<DeleteWhere>",
												"access_specifier": "public",
												"id": 93825011408560,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "WhereClause<DeleteWhere>",
												"type": {
													"_typeName": "WhereClause<stappler::sql::Query::DeleteWhere>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "WhereClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class template",
															"_name": "WhereClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
																"_kind": "class",
																"_name": "WhereClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825010882944,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825010884768,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "WhereClause",
																"scope": {
																	"is_templated": true,
																	"name": "WhereClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825007965376,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825003410672,
															"kind": "class template",
															"name": "WhereClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::DeleteWhere"
												}
											}],
											"class_kind": "struct",
											"id": 93825011408112,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "DeleteWhere",
											"scope": {
												"name": "DeleteWhere"
											},
											"semantic_scope": ""
										}]
									}
								},
								"semantic_scope": "",
								"signature": "(Args &&...)"
							},
							"id": 93825006332544,
							"kind": "function template",
							"name": "where",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Args",
								"id": 93825004249136,
								"is_variadic": true,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Args"
							}]
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Delete::where()",
							"_kind": "member function",
							"_name": "where",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825011407088,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "where",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::DeleteWhere",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::DeleteWhere",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::DeleteWhere",
										"_kind": "class",
										"_name": "DeleteWhere",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "WhereClause<DeleteWhere>",
											"access_specifier": "public",
											"id": 93825011408560,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "WhereClause<DeleteWhere>",
											"type": {
												"_typeName": "WhereClause<stappler::sql::Query::DeleteWhere>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "WhereClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
														"_kind": "class template",
														"_name": "WhereClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
															"_kind": "class",
															"_name": "WhereClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825010882944,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825010884768,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "WhereClause",
															"scope": {
																"is_templated": true,
																"name": "WhereClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825007965376,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825003410672,
														"kind": "class template",
														"name": "WhereClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825007965376,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "WhereClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825007965376,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::DeleteWhere"
											}
										}],
										"class_kind": "struct",
										"id": 93825011408112,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "DeleteWhere",
										"scope": {
											"name": "DeleteWhere"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Delete::returning()",
							"_kind": "member function",
							"_name": "returning",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825011407552,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "returning",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Returning",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
										"_kind": "class",
										"_name": "Returning",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Returning>",
											"access_specifier": "public",
											"id": 93825000695392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Returning>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Returning"
											}
										}],
										"class_kind": "struct",
										"id": 93825012497648,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Returning",
										"scope": {
											"name": "Returning"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825011407920,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "QueryHandle::QueryHandle",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
									"_kind": "class",
									"_name": "QueryHandle",
									"class_kind": "struct",
									"id": 93825007976864,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "QueryHandle",
									"scope": {
										"name": "QueryHandle"
									},
									"semantic_scope": ""
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825011409168,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "Delete",
						"scope": {
							"name": "Delete"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::DeleteWhere",
						"_kind": "class",
						"_name": "DeleteWhere",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "WhereClause<DeleteWhere>",
							"access_specifier": "public",
							"id": 93825011408560,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "WhereClause<DeleteWhere>",
							"type": {
								"_typeName": "WhereClause<stappler::sql::Query::DeleteWhere>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "WhereClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class template",
										"_name": "WhereClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
											"_kind": "class",
											"_name": "WhereClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825010882944,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825010884768,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "WhereClause",
											"scope": {
												"is_templated": true,
												"name": "WhereClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825007965376,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825003410672,
										"kind": "class template",
										"name": "WhereClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::DeleteWhere"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::DeleteWhere::returning()",
							"_kind": "member function",
							"_name": "returning",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000694832,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "returning",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Returning",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
										"_kind": "class",
										"_name": "Returning",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Returning>",
											"access_specifier": "public",
											"id": 93825000695392,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Returning>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Returning"
											}
										}],
										"class_kind": "struct",
										"id": 93825012497648,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Returning",
										"scope": {
											"name": "Returning"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825000695152,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "WhereClause<DeleteWhere>::WhereClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
									"_kind": "class template",
									"_name": "WhereClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::WhereClause<typename>",
										"_kind": "class",
										"_name": "WhereClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825010882944,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825010884768,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "WhereClause",
										"scope": {
											"is_templated": true,
											"name": "WhereClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825007965376,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825003410672,
									"kind": "class template",
									"name": "WhereClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825007965376,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "WhereClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825007965376,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825011408112,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "DeleteWhere",
						"scope": {
							"name": "DeleteWhere"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
						"_kind": "class",
						"_name": "Returning",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "FieldsClause<Returning>",
							"access_specifier": "public",
							"id": 93825000695392,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "FieldsClause<Returning>",
							"type": {
								"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "FieldsClause",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
										"_kind": "class template",
										"_name": "FieldsClause",
										"class": {
											"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
											"_kind": "class",
											"_name": "FieldsClause",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "QueryHandle",
												"access_specifier": "public",
												"id": 93825012122384,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "QueryHandle",
												"type": {
													"_typeName": "stappler::sql::Query::QueryHandle",
													"kind": "user_defined",
													"target": {
														"name": "stappler::sql::Query::QueryHandle",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
															"_kind": "class",
															"_name": "QueryHandle",
															"class_kind": "struct",
															"id": 93825007976864,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "QueryHandle",
															"scope": {
																"name": "QueryHandle"
															},
															"semantic_scope": ""
														}]
													}
												}
											}],
											"class_kind": "struct",
											"id": 93825012121984,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "FieldsClause",
											"scope": {
												"is_templated": true,
												"name": "FieldsClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825012136880,
										"kind": "class template",
										"name": "FieldsClause",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012282272,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}],
										"scope":  {
											"is_templated": true,
											"name": "FieldsClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										}
									}]
								},
								"unexposed_arguments": "stappler::sql::Query::Returning"
							}
						}],
						"childs":  [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Returning::all()",
							"_kind": "member function",
							"_name": "all",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000695728,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "all",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Returning",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Returning",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
											"_kind": "class",
											"_name": "Returning",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Returning>",
												"access_specifier": "public",
												"id": 93825000695392,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Returning>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Returning"
												}
											}],
											"class_kind": "struct",
											"id": 93825012497648,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Returning",
											"scope": {
												"name": "Returning"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Returning::count()",
							"_kind": "member function",
							"_name": "count",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000696240,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "count",
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Returning",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Returning",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
											"_kind": "class",
											"_name": "Returning",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Returning>",
												"access_specifier": "public",
												"id": 93825000695392,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Returning>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Returning"
												}
											}],
											"class_kind": "struct",
											"id": 93825012497648,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Returning",
											"scope": {
												"name": "Returning"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "()"
						}, {
							"_fullName": "::stappler::sql::Query<typename,typename>::Returning::count(stappler::StringView const&)",
							"_kind": "member function",
							"_name": "count",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825000696560,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "count",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "alias",
								"id": 93825000697264,
								"kind": "function parameter",
								"name": "alias",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Returning&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Returning",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Returning",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Returning",
											"_kind": "class",
											"_name": "Returning",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "FieldsClause<Returning>",
												"access_specifier": "public",
												"id": 93825000695392,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "FieldsClause<Returning>",
												"type": {
													"_typeName": "FieldsClause<stappler::sql::Query::Returning>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "FieldsClause",
														"objects": [{
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class template",
															"_name": "FieldsClause",
															"class": {
																"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
																"_kind": "class",
																"_name": "FieldsClause",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "QueryHandle",
																	"access_specifier": "public",
																	"id": 93825012122384,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "QueryHandle",
																	"type": {
																		"_typeName": "stappler::sql::Query::QueryHandle",
																		"kind": "user_defined",
																		"target": {
																			"name": "stappler::sql::Query::QueryHandle",
																			"objects": [{
																				"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																				"_kind": "class",
																				"_name": "QueryHandle",
																				"class_kind": "struct",
																				"id": 93825007976864,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "QueryHandle",
																				"scope": {
																					"name": "QueryHandle"
																				},
																				"semantic_scope": ""
																			}]
																		}
																	}
																}],
																"class_kind": "struct",
																"id": 93825012121984,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "FieldsClause",
																"scope": {
																	"is_templated": true,
																	"name": "FieldsClause",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Clause",
																		"id": 93825012282272,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Clause"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825012136880,
															"kind": "class template",
															"name": "FieldsClause",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}],
															"scope":  {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															}
														}]
													},
													"unexposed_arguments": "stappler::sql::Query::Returning"
												}
											}],
											"class_kind": "struct",
											"id": 93825012497648,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Returning",
											"scope": {
												"name": "Returning"
											},
											"semantic_scope": ""
										}]
									}
								},
								"reference_kind": "lvalue"
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&)"
						}, {
							"_kind": "using declaration",
							"_name": "",
							"id": 93825012497904,
							"kind": "using declaration",
							"name": "",
							"target": {
								"name": "FieldsClause<Returning>::FieldsClause",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
									"_kind": "class template",
									"_name": "FieldsClause",
									"class": {
										"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
										"_kind": "class",
										"_name": "FieldsClause",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825012122384,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825012121984,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "FieldsClause",
										"scope": {
											"is_templated": true,
											"name": "FieldsClause",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}]
										},
										"semantic_scope": ""
									},
									"id": 93825012136880,
									"kind": "class template",
									"name": "FieldsClause",
									"parameters": [{
										"_kind": "template type parameter",
										"_name": "Clause",
										"id": 93825012282272,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Clause"
									}],
									"scope":  {
										"is_templated": true,
										"name": "FieldsClause",
										"template_parameters": [{
											"_kind": "template type parameter",
											"_name": "Clause",
											"id": 93825012282272,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Clause"
										}]
									}
								}]
							}
						}],
						"class_kind": "struct",
						"id": 93825012497648,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "Returning",
						"scope": {
							"name": "Returning"
						},
						"semantic_scope": ""
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::Query()",
						"_kind": "constructor",
						"_name": "Query",
						"body_kind": "defaulted",
						"id": 93825012498448,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_explicit": false,
						"is_variadic": false,
						"kind": "constructor",
						"name": "Query",
						"semantic_scope": "",
						"signature": "()"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::setProfile(stappler::sql::Profile)",
						"_kind": "member function",
						"_name": "setProfile",
						"body_kind": "definition",
						"cv_qualifier": "none",
						"id": 93825012498704,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "setProfile",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "p",
							"id": 93825012498976,
							"kind": "function parameter",
							"name": "p",
							"type": {
								"_typeName": "stappler::sql::Profile",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Profile",
									"objects": [{
										"_fullName": "::stappler::sql::Profile",
										"_kind": "enum",
										"_name": "Profile",
										"has_explicit_type": false,
										"id": 140737128909888,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Profile",
										"scope": {
											"name": "Profile"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(stappler::sql::Profile)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::with<typename>(stappler::StringView const&,Callback const&)",
						"_kind": "function template",
						"_name": "with",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::with<typename>(stappler::StringView const&,Callback const&)",
							"_kind": "member function",
							"_name": "with",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825012499408,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "with",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "alias",
								"id": 93825012499872,
								"kind": "function parameter",
								"name": "alias",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"id": 93825012500256,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "Callback const&",
									"kind": "reference",
									"referee": {
										"_typeName": "Callback const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "Callback",
											"entity": {
												"name": "Callback",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Callback",
													"id": 93825003175760,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Callback"
												}]
											},
											"kind": "template_parameter"
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::GenericQuery",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::GenericQuery",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
										"_kind": "class",
										"_name": "GenericQuery",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825012282768,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825012282512,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "GenericQuery",
										"scope": {
											"name": "GenericQuery"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&,Callback const&)"
						}],
						"function":  {
							"_fullName": "::stappler::sql::Query<typename,typename>::with<typename>(stappler::StringView const&,Callback const&)",
							"_kind": "member function",
							"_name": "with",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825012499408,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "with",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "alias",
								"id": 93825012499872,
								"kind": "function parameter",
								"name": "alias",
								"type": {
									"_typeName": "stappler::StringView const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::StringView const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::StringView",
											"kind": "user_defined",
											"target": {
												"name": "stappler::StringView",
												"objects": [{
													"_fullName": "::stappler::StringView",
													"_kind": "type alias",
													"_name": "StringView",
													"id": 93824997448656,
													"kind": "type alias",
													"name": "StringView",
													"underlying_type": {
														"_typeName": "StringViewBase<char>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "StringViewBase",
															"objects": [{
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class template",
																"_name": "StringViewBase",
																"class": {
																	"_fullName": "::stappler::StringViewBase<typename>",
																	"_kind": "class",
																	"_name": "StringViewBase",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "BytesReader<_CharType>",
																		"access_specifier": "public",
																		"id": 93824998090352,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "BytesReader<_CharType>",
																		"type": {
																			"_typeName": "BytesReader<_CharType>",
																			"arguments_exposed": false,
																			"kind": "template_instantiation",
																			"primary_template": {
																				"name": "BytesReader",
																				"objects": [{
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class template",
																					"_name": "BytesReader",
																					"class": {
																						"_fullName": "::stappler::BytesReader<typename>",
																						"_kind": "class",
																						"_name": "BytesReader",
																						"class_kind": "class",
																						"id": 140736954953792,
																						"is_declaration": false,
																						"is_definition": true,
																						"is_final": false,
																						"kind": "class",
																						"name": "BytesReader",
																						"scope": {
																							"is_templated": true,
																							"name": "BytesReader",
																							"template_parameters": [{
																								"_kind": "template type parameter",
																								"_name": "_CharType",
																								"id": 140737098599232,
																								"is_variadic": false,
																								"keyword": "typename",
																								"kind": "template type parameter",
																								"name": "_CharType"
																							}]
																						},
																						"semantic_scope": ""
																					},
																					"id": 93824998648144,
																					"kind": "class template",
																					"name": "BytesReader",
																					"parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}],
																					"scope":  {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					}
																				}]
																			},
																			"unexposed_arguments": "_CharType"
																		}
																	}],
																	"class_kind": "class",
																	"id": 140737094580320,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "StringViewBase",
																	"scope": {
																		"is_templated": true,
																		"name": "StringViewBase",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 93824999493712,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824999493216,
																"kind": "class template",
																"name": "StringViewBase",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "char"
													}
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"id": 93825012500256,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "Callback const&",
									"kind": "reference",
									"referee": {
										"_typeName": "Callback const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "Callback",
											"entity": {
												"name": "Callback",
												"objects": [{
													"_kind": "template type parameter",
													"_name": "Callback",
													"id": 93825003175760,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Callback"
												}]
											},
											"kind": "template_parameter"
										}
									},
									"reference_kind": "lvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::GenericQuery",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::GenericQuery",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
										"_kind": "class",
										"_name": "GenericQuery",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "QueryHandle",
											"access_specifier": "public",
											"id": 93825012282768,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "QueryHandle",
											"type": {
												"_typeName": "stappler::sql::Query::QueryHandle",
												"kind": "user_defined",
												"target": {
													"name": "stappler::sql::Query::QueryHandle",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
														"_kind": "class",
														"_name": "QueryHandle",
														"class_kind": "struct",
														"id": 93825007976864,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "QueryHandle",
														"scope": {
															"name": "QueryHandle"
														},
														"semantic_scope": ""
													}]
												}
											}
										}],
										"class_kind": "struct",
										"id": 93825012282512,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "GenericQuery",
										"scope": {
											"name": "GenericQuery"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::StringView const&,Callback const&)"
						},
						"id": 93825004248976,
						"kind": "function template",
						"name": "with",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Callback",
							"id": 93825003175760,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Callback"
						}]
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::select(stappler::sql::Query::Distinct)",
						"_kind": "member function",
						"_name": "select",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825003176352,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "select",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"default_value": {
								"expression": [{
									"kind": "identifier",
									"spelling": "Distinct"
								}, {
									"kind": "punctuation",
									"spelling": "::"
								}, {
									"kind": "identifier",
									"spelling": "None"
								}],
								"kind": "unexposed",
								"type": {
									"_typeName": "stappler::sql::Query::Distinct",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Distinct",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
											"_kind": "enum",
											"_name": "Distinct",
											"has_explicit_type": false,
											"id": 93825005006880,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Distinct",
											"scope": {
												"name": "Distinct"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							},
							"id": 93825003177008,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::sql::Query::Distinct",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Distinct",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
										"_kind": "enum",
										"_name": "Distinct",
										"has_explicit_type": false,
										"id": 93825005006880,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Distinct",
										"scope": {
											"name": "Distinct"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "stappler::sql::Query::Select",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Select",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Select",
									"_kind": "class",
									"_name": "Select",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "FieldsClause<Select>",
										"access_specifier": "public",
										"id": 93825003304304,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "FieldsClause<Select>",
										"type": {
											"_typeName": "FieldsClause<stappler::sql::Query::Select>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "FieldsClause",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
													"_kind": "class template",
													"_name": "FieldsClause",
													"class": {
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class",
														"_name": "FieldsClause",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "QueryHandle",
															"access_specifier": "public",
															"id": 93825012122384,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "QueryHandle",
															"type": {
																"_typeName": "stappler::sql::Query::QueryHandle",
																"kind": "user_defined",
																"target": {
																	"name": "stappler::sql::Query::QueryHandle",
																	"objects": [{
																		"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																		"_kind": "class",
																		"_name": "QueryHandle",
																		"class_kind": "struct",
																		"id": 93825007976864,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "QueryHandle",
																		"scope": {
																			"name": "QueryHandle"
																		},
																		"semantic_scope": ""
																	}]
																}
															}
														}],
														"class_kind": "struct",
														"id": 93825012121984,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "FieldsClause",
														"scope": {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825012136880,
													"kind": "class template",
													"name": "FieldsClause",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}],
													"scope":  {
														"is_templated": true,
														"name": "FieldsClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::sql::Query::Select"
										}
									}],
									"class_kind": "struct",
									"id": 93825000740336,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "Select",
									"scope": {
										"name": "Select"
									},
									"semantic_scope": ""
								}]
							}
						},
						"semantic_scope": "",
						"signature": "(stappler::sql::Query::Distinct)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
						"_kind": "function template",
						"_name": "select",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "member function",
							"_name": "select",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825003177248,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "select",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825003177712,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "args",
								"id": 93825003177920,
								"kind": "function parameter",
								"name": "args",
								"type": {
									"_typeName": "Args &&...",
									"kind": "unexposed",
									"name": "Args &&..."
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Select",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Select",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Select",
										"_kind": "class",
										"_name": "Select",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Select>",
											"access_specifier": "public",
											"id": 93825003304304,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Select>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Select>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Select"
											}
										}],
										"class_kind": "struct",
										"id": 93825000740336,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Select",
										"scope": {
											"name": "Select"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Field const&,Args &&...)"
						}],
						"function":  {
							"_fullName": "::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "member function",
							"_name": "select",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825003177248,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "select",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825003177712,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "args",
								"id": 93825003177920,
								"kind": "function parameter",
								"name": "args",
								"type": {
									"_typeName": "Args &&...",
									"kind": "unexposed",
									"name": "Args &&..."
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Select",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Select",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Select",
										"_kind": "class",
										"_name": "Select",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Select>",
											"access_specifier": "public",
											"id": 93825003304304,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Select>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Select>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Select"
											}
										}],
										"class_kind": "struct",
										"id": 93825000740336,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Select",
										"scope": {
											"name": "Select"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Field const&,Args &&...)"
						},
						"id": 93825003176000,
						"kind": "function template",
						"name": "select",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Args",
							"id": 93825003178320,
							"is_variadic": true,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Args"
						}]
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
						"_kind": "function template",
						"_name": "select",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "member function",
							"_name": "select",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825005932720,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "select",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825005933136,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Distinct",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Distinct",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
											"_kind": "enum",
											"_name": "Distinct",
											"has_explicit_type": false,
											"id": 93825005006880,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Distinct",
											"scope": {
												"name": "Distinct"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"id": 93825005933472,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "args",
								"id": 93825005933680,
								"kind": "function parameter",
								"name": "args",
								"type": {
									"_typeName": "Args &&...",
									"kind": "unexposed",
									"name": "Args &&..."
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Select",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Select",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Select",
										"_kind": "class",
										"_name": "Select",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Select>",
											"access_specifier": "public",
											"id": 93825003304304,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Select>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Select>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Select"
											}
										}],
										"class_kind": "struct",
										"id": 93825000740336,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Select",
										"scope": {
											"name": "Select"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)"
						}],
						"function":  {
							"_fullName": "::stappler::sql::Query<typename,typename>::select<typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
							"_kind": "member function",
							"_name": "select",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825005932720,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "select",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825005933136,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Distinct",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Distinct",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
											"_kind": "enum",
											"_name": "Distinct",
											"has_explicit_type": false,
											"id": 93825005006880,
											"is_declaration": false,
											"is_definition": true,
											"is_scoped": true,
											"kind": "enum",
											"name": "Distinct",
											"scope": {
												"name": "Distinct"
											},
											"semantic_scope": "",
											"underlying_type": {
												"_typeName": "int",
												"builtin_type_kind": "int",
												"kind": "builtin"
											}
										}]
									}
								}
							}, {
								"_kind": "function parameter",
								"_name": "",
								"id": 93825005933472,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "stappler::sql::Query::Field const&",
									"kind": "reference",
									"referee": {
										"_typeName": "stappler::sql::Query::Field const",
										"cv_qualifier": "const",
										"kind": "cv_qualified",
										"type": {
											"_typeName": "stappler::sql::Query::Field",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::Field",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::Field",
													"_kind": "class",
													"_name": "Field",
													"class_kind": "struct",
													"id": 93825003102816,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Field",
													"scope": {
														"name": "Field"
													},
													"semantic_scope": ""
												}]
											}
										}
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "args",
								"id": 93825005933680,
								"kind": "function parameter",
								"name": "args",
								"type": {
									"_typeName": "Args &&...",
									"kind": "unexposed",
									"name": "Args &&..."
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "stappler::sql::Query::Select",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Select",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Select",
										"_kind": "class",
										"_name": "Select",
										"bases": [{
											"_kind": "base class specifier",
											"_name": "FieldsClause<Select>",
											"access_specifier": "public",
											"id": 93825003304304,
											"is_virtual": false,
											"kind": "base class specifier",
											"name": "FieldsClause<Select>",
											"type": {
												"_typeName": "FieldsClause<stappler::sql::Query::Select>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "FieldsClause",
													"objects": [{
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class template",
														"_name": "FieldsClause",
														"class": {
															"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
															"_kind": "class",
															"_name": "FieldsClause",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "QueryHandle",
																"access_specifier": "public",
																"id": 93825012122384,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "QueryHandle",
																"type": {
																	"_typeName": "stappler::sql::Query::QueryHandle",
																	"kind": "user_defined",
																	"target": {
																		"name": "stappler::sql::Query::QueryHandle",
																		"objects": [{
																			"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																			"_kind": "class",
																			"_name": "QueryHandle",
																			"class_kind": "struct",
																			"id": 93825007976864,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "QueryHandle",
																			"scope": {
																				"name": "QueryHandle"
																			},
																			"semantic_scope": ""
																		}]
																	}
																}
															}],
															"class_kind": "struct",
															"id": 93825012121984,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "FieldsClause",
															"scope": {
																"is_templated": true,
																"name": "FieldsClause",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Clause",
																	"id": 93825012282272,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Clause"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93825012136880,
														"kind": "class template",
														"name": "FieldsClause",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}],
														"scope":  {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														}
													}]
												},
												"unexposed_arguments": "stappler::sql::Query::Select"
											}
										}],
										"class_kind": "struct",
										"id": 93825000740336,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Select",
										"scope": {
											"name": "Select"
										},
										"semantic_scope": ""
									}]
								}
							},
							"semantic_scope": "",
							"signature": "(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)"
						},
						"id": 93825003178160,
						"kind": "function template",
						"name": "select",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Args",
							"id": 93825005934080,
							"is_variadic": true,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Args"
						}]
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::insert(stappler::StringView const&)",
						"_kind": "member function",
						"_name": "insert",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825005934688,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "insert",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825005935152,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "stappler::sql::Query::Insert",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Insert",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Insert",
									"_kind": "class",
									"_name": "Insert",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "FieldsClause<Insert>",
										"access_specifier": "public",
										"id": 93825006190528,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "FieldsClause<Insert>",
										"type": {
											"_typeName": "FieldsClause<stappler::sql::Query::Insert>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "FieldsClause",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
													"_kind": "class template",
													"_name": "FieldsClause",
													"class": {
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class",
														"_name": "FieldsClause",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "QueryHandle",
															"access_specifier": "public",
															"id": 93825012122384,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "QueryHandle",
															"type": {
																"_typeName": "stappler::sql::Query::QueryHandle",
																"kind": "user_defined",
																"target": {
																	"name": "stappler::sql::Query::QueryHandle",
																	"objects": [{
																		"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																		"_kind": "class",
																		"_name": "QueryHandle",
																		"class_kind": "struct",
																		"id": 93825007976864,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "QueryHandle",
																		"scope": {
																			"name": "QueryHandle"
																		},
																		"semantic_scope": ""
																	}]
																}
															}
														}],
														"class_kind": "struct",
														"id": 93825012121984,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "FieldsClause",
														"scope": {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825012136880,
													"kind": "class template",
													"name": "FieldsClause",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}],
													"scope":  {
														"is_templated": true,
														"name": "FieldsClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::sql::Query::Insert"
										}
									}],
									"class_kind": "struct",
									"id": 93825006189920,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "Insert",
									"scope": {
										"name": "Insert"
									},
									"semantic_scope": ""
								}]
							}
						},
						"semantic_scope": "",
						"signature": "(stappler::StringView const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::insert(stappler::StringView const&,stappler::StringView const&)",
						"_kind": "member function",
						"_name": "insert",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825011499792,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "insert",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825011500256,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "alias",
							"id": 93825011500640,
							"kind": "function parameter",
							"name": "alias",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "stappler::sql::Query::Insert",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Insert",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Insert",
									"_kind": "class",
									"_name": "Insert",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "FieldsClause<Insert>",
										"access_specifier": "public",
										"id": 93825006190528,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "FieldsClause<Insert>",
										"type": {
											"_typeName": "FieldsClause<stappler::sql::Query::Insert>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "FieldsClause",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
													"_kind": "class template",
													"_name": "FieldsClause",
													"class": {
														"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
														"_kind": "class",
														"_name": "FieldsClause",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "QueryHandle",
															"access_specifier": "public",
															"id": 93825012122384,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "QueryHandle",
															"type": {
																"_typeName": "stappler::sql::Query::QueryHandle",
																"kind": "user_defined",
																"target": {
																	"name": "stappler::sql::Query::QueryHandle",
																	"objects": [{
																		"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																		"_kind": "class",
																		"_name": "QueryHandle",
																		"class_kind": "struct",
																		"id": 93825007976864,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "QueryHandle",
																		"scope": {
																			"name": "QueryHandle"
																		},
																		"semantic_scope": ""
																	}]
																}
															}
														}],
														"class_kind": "struct",
														"id": 93825012121984,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "FieldsClause",
														"scope": {
															"is_templated": true,
															"name": "FieldsClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012282272,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825012136880,
													"kind": "class template",
													"name": "FieldsClause",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}],
													"scope":  {
														"is_templated": true,
														"name": "FieldsClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::sql::Query::Insert"
										}
									}],
									"class_kind": "struct",
									"id": 93825006189920,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "Insert",
									"scope": {
										"name": "Insert"
									},
									"semantic_scope": ""
								}]
							}
						},
						"semantic_scope": "",
						"signature": "(stappler::StringView const&,stappler::StringView const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::update(stappler::StringView const&)",
						"_kind": "member function",
						"_name": "update",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825011501072,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "update",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825011501536,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "stappler::sql::Query::Update",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Update",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Update",
									"_kind": "class",
									"_name": "Update",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "SetClause<Update>",
										"access_specifier": "public",
										"id": 93825004550080,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "SetClause<Update>",
										"type": {
											"_typeName": "SetClause<stappler::sql::Query::Update>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "SetClause",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
													"_kind": "class template",
													"_name": "SetClause",
													"class": {
														"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
														"_kind": "class",
														"_name": "SetClause",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "QueryHandle",
															"access_specifier": "public",
															"id": 93825001762528,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "QueryHandle",
															"type": {
																"_typeName": "stappler::sql::Query::QueryHandle",
																"kind": "user_defined",
																"target": {
																	"name": "stappler::sql::Query::QueryHandle",
																	"objects": [{
																		"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																		"_kind": "class",
																		"_name": "QueryHandle",
																		"class_kind": "struct",
																		"id": 93825007976864,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "QueryHandle",
																		"scope": {
																			"name": "QueryHandle"
																		},
																		"semantic_scope": ""
																	}]
																}
															}
														}],
														"class_kind": "struct",
														"id": 93825001762224,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "SetClause",
														"scope": {
															"is_templated": true,
															"name": "SetClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012121696,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825012121536,
													"kind": "class template",
													"name": "SetClause",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012121696,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}],
													"scope":  {
														"is_templated": true,
														"name": "SetClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012121696,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::sql::Query::Update"
										}
									}],
									"class_kind": "struct",
									"id": 93825004552064,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "Update",
									"scope": {
										"name": "Update"
									},
									"semantic_scope": ""
								}]
							}
						},
						"semantic_scope": "",
						"signature": "(stappler::StringView const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::update(stappler::StringView const&,stappler::StringView const&)",
						"_kind": "member function",
						"_name": "update",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825011501920,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "update",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825000162848,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "alias",
							"id": 93825000163232,
							"kind": "function parameter",
							"name": "alias",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "stappler::sql::Query::Update",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Update",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Update",
									"_kind": "class",
									"_name": "Update",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "SetClause<Update>",
										"access_specifier": "public",
										"id": 93825004550080,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "SetClause<Update>",
										"type": {
											"_typeName": "SetClause<stappler::sql::Query::Update>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "SetClause",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
													"_kind": "class template",
													"_name": "SetClause",
													"class": {
														"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
														"_kind": "class",
														"_name": "SetClause",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "QueryHandle",
															"access_specifier": "public",
															"id": 93825001762528,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "QueryHandle",
															"type": {
																"_typeName": "stappler::sql::Query::QueryHandle",
																"kind": "user_defined",
																"target": {
																	"name": "stappler::sql::Query::QueryHandle",
																	"objects": [{
																		"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																		"_kind": "class",
																		"_name": "QueryHandle",
																		"class_kind": "struct",
																		"id": 93825007976864,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "QueryHandle",
																		"scope": {
																			"name": "QueryHandle"
																		},
																		"semantic_scope": ""
																	}]
																}
															}
														}],
														"class_kind": "struct",
														"id": 93825001762224,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "SetClause",
														"scope": {
															"is_templated": true,
															"name": "SetClause",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "Clause",
																"id": 93825012121696,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Clause"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93825012121536,
													"kind": "class template",
													"name": "SetClause",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012121696,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}],
													"scope":  {
														"is_templated": true,
														"name": "SetClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012121696,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													}
												}]
											},
											"unexposed_arguments": "stappler::sql::Query::Update"
										}
									}],
									"class_kind": "struct",
									"id": 93825004552064,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "Update",
									"scope": {
										"name": "Update"
									},
									"semantic_scope": ""
								}]
							}
						},
						"semantic_scope": "",
						"signature": "(stappler::StringView const&,stappler::StringView const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::remove(stappler::StringView const&)",
						"_kind": "member function",
						"_name": "remove",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825000163664,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "remove",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825000164128,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "stappler::sql::Query::Delete",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Delete",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Delete",
									"_kind": "class",
									"_name": "Delete",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "QueryHandle",
										"access_specifier": "public",
										"id": 93825011409568,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "QueryHandle",
										"type": {
											"_typeName": "stappler::sql::Query::QueryHandle",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::QueryHandle",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
													"_kind": "class",
													"_name": "QueryHandle",
													"class_kind": "struct",
													"id": 93825007976864,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "QueryHandle",
													"scope": {
														"name": "QueryHandle"
													},
													"semantic_scope": ""
												}]
											}
										}
									}],
									"class_kind": "struct",
									"id": 93825011409168,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "Delete",
									"scope": {
										"name": "Delete"
									},
									"semantic_scope": ""
								}]
							}
						},
						"semantic_scope": "",
						"signature": "(stappler::StringView const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::remove(stappler::StringView const&,stappler::StringView const&)",
						"_kind": "member function",
						"_name": "remove",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825000164512,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "remove",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825000164976,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "alias",
							"id": 93825000165360,
							"kind": "function parameter",
							"name": "alias",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "stappler::sql::Query::Delete",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Delete",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Delete",
									"_kind": "class",
									"_name": "Delete",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "QueryHandle",
										"access_specifier": "public",
										"id": 93825011409568,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "QueryHandle",
										"type": {
											"_typeName": "stappler::sql::Query::QueryHandle",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::QueryHandle",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
													"_kind": "class",
													"_name": "QueryHandle",
													"class_kind": "struct",
													"id": 93825007976864,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "QueryHandle",
													"scope": {
														"name": "QueryHandle"
													},
													"semantic_scope": ""
												}]
											}
										}
									}],
									"class_kind": "struct",
									"id": 93825011409168,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "Delete",
									"scope": {
										"name": "Delete"
									},
									"semantic_scope": ""
								}]
							}
						},
						"semantic_scope": "",
						"signature": "(stappler::StringView const&,stappler::StringView const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::finalize()",
						"_kind": "member function",
						"_name": "finalize",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825011470896,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "finalize",
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "()"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::writeBind<typename>(Value&&)",
						"_kind": "function template",
						"_name": "writeBind",
						"childs": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::writeBind<typename>(Value&&)",
							"_kind": "member function",
							"_name": "writeBind",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825011471216,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "writeBind",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825011471680,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "Value&&",
									"kind": "reference",
									"referee": {
										"_typeName": "Value",
										"entity": {
											"name": "Value",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "Value",
												"id": 93825011472016,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Value"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "rvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "(Value&&)"
						}],
						"function":  {
							"_fullName": "::stappler::sql::Query<typename,typename>::writeBind<typename>(Value&&)",
							"_kind": "member function",
							"_name": "writeBind",
							"body_kind": "declaration",
							"cv_qualifier": "none",
							"id": 93825011471216,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": true,
							"is_definition": false,
							"is_variadic": false,
							"is_virtual": false,
							"kind": "member function",
							"name": "writeBind",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "",
								"id": 93825011471680,
								"kind": "function parameter",
								"name": "",
								"type": {
									"_typeName": "Value&&",
									"kind": "reference",
									"referee": {
										"_typeName": "Value",
										"entity": {
											"name": "Value",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "Value",
												"id": 93825011472016,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Value"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "rvalue"
								}
							}],
							"ref_qualifier": "none",
							"return_type": {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "(Value&&)"
						},
						"id": 93825005933920,
						"kind": "function template",
						"name": "writeBind",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Value",
							"id": 93825011472016,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Value"
						}]
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawString const&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825011472304,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825011471824,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::sql::Query::RawString const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::RawString const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::sql::Query::RawString",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::RawString",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::RawString",
												"_kind": "class",
												"_name": "RawString",
												"class_kind": "struct",
												"id": 93825003101952,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "RawString",
												"scope": {
													"name": "RawString"
												},
												"semantic_scope": ""
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(stappler::sql::Query::RawString const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawStringView const&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825011473072,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825011473536,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::sql::Query::RawStringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::RawStringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::sql::Query::RawStringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::RawStringView",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::RawStringView",
												"_kind": "class",
												"_name": "RawStringView",
												"class_kind": "struct",
												"id": 93825003102352,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "RawStringView",
												"scope": {
													"name": "RawStringView"
												},
												"semantic_scope": ""
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(stappler::sql::Query::RawStringView const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(Callback<void (stappler::sql::Query::Select &)> const&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825004969168,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825004969728,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "Callback<void (stappler::sql::Query::Select &)> const&",
								"kind": "reference",
								"referee": {
									"_typeName": "Callback<void (stappler::sql::Query::Select &)> const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "Callback<void (stappler::sql::Query::Select &)>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "Callback",
											"objects": [{
												"_fullName": "::stappler::Callback<typename>",
												"_kind": "alias template",
												"_name": "Callback",
												"id": 93824997072128,
												"kind": "alias template",
												"name": "Callback",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "T",
													"id": 93824997072288,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "T"
												}],
												"type_alias":  {
													"_fullName": "::stappler::Callback<typename>",
													"_kind": "type alias",
													"_name": "Callback",
													"id": 93824997071984,
													"kind": "type alias",
													"name": "Callback",
													"underlying_type": {
														"_typeName": "memory::callback<T>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "memory::callback",
															"objects": [{
																"_fullName": "::stappler::memory::callback<typename>",
																"_kind": "class template",
																"_name": "callback",
																"class": {
																	"_fullName": "::stappler::memory::callback<typename>",
																	"_kind": "class",
																	"_name": "callback",
																	"class_kind": "class",
																	"id": 93824997040048,
																	"is_declaration": true,
																	"is_definition": false,
																	"is_final": false,
																	"kind": "class",
																	"name": "callback",
																	"scope": {
																		"is_templated": true,
																		"name": "callback",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "UnusedType",
																			"id": 93824997058880,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "UnusedType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824997058480,
																"kind": "class template",
																"name": "callback",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "UnusedType",
																	"id": 93824997058880,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "UnusedType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "callback",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "UnusedType",
																		"id": 93824997058880,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "UnusedType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "T"
													}
												}
											}]
										},
										"unexposed_arguments": "void (stappler::sql::Query::Select &)"
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Callback<void (stappler::sql::Query::Select &)> const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825004969968,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825004970480,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::sql::Query::Field const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::sql::Query::Field",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::Field",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::Field",
												"_kind": "class",
												"_name": "Field",
												"class_kind": "struct",
												"id": 93825003102816,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "Field",
												"scope": {
													"name": "Field"
												},
												"semantic_scope": ""
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(stappler::sql::Query::Field const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&,bool)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825004970720,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "",
							"id": 93825004971232,
							"kind": "function parameter",
							"name": "",
							"type": {
								"_typeName": "stappler::sql::Query::Field const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::sql::Query::Field",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::Field",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::Field",
												"_kind": "class",
												"_name": "Field",
												"class_kind": "struct",
												"id": 93825003102816,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "Field",
												"scope": {
													"name": "Field"
												},
												"semantic_scope": ""
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "withAlias",
							"id": 93825004971424,
							"kind": "function parameter",
							"name": "withAlias",
							"type": {
								"_typeName": "bool",
								"builtin_type_kind": "bool",
								"kind": "builtin"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(stappler::sql::Query::Field const&,bool)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::StringView const&,stappler::sql::Query::Field const&)",
						"_kind": "member function",
						"_name": "writeBind",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825004971712,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "func",
							"id": 93825002089568,
							"kind": "function parameter",
							"name": "func",
							"type": {
								"_typeName": "stappler::StringView const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::StringView const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::StringView",
										"kind": "user_defined",
										"target": {
											"name": "stappler::StringView",
											"objects": [{
												"_fullName": "::stappler::StringView",
												"_kind": "type alias",
												"_name": "StringView",
												"id": 93824997448656,
												"kind": "type alias",
												"name": "StringView",
												"underlying_type": {
													"_typeName": "StringViewBase<char>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "StringViewBase",
														"objects": [{
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class template",
															"_name": "StringViewBase",
															"class": {
																"_fullName": "::stappler::StringViewBase<typename>",
																"_kind": "class",
																"_name": "StringViewBase",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "BytesReader<_CharType>",
																	"access_specifier": "public",
																	"id": 93824998090352,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "BytesReader<_CharType>",
																	"type": {
																		"_typeName": "BytesReader<_CharType>",
																		"arguments_exposed": false,
																		"kind": "template_instantiation",
																		"primary_template": {
																			"name": "BytesReader",
																			"objects": [{
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class template",
																				"_name": "BytesReader",
																				"class": {
																					"_fullName": "::stappler::BytesReader<typename>",
																					"_kind": "class",
																					"_name": "BytesReader",
																					"class_kind": "class",
																					"id": 140736954953792,
																					"is_declaration": false,
																					"is_definition": true,
																					"is_final": false,
																					"kind": "class",
																					"name": "BytesReader",
																					"scope": {
																						"is_templated": true,
																						"name": "BytesReader",
																						"template_parameters": [{
																							"_kind": "template type parameter",
																							"_name": "_CharType",
																							"id": 140737098599232,
																							"is_variadic": false,
																							"keyword": "typename",
																							"kind": "template type parameter",
																							"name": "_CharType"
																						}]
																					},
																					"semantic_scope": ""
																				},
																				"id": 93824998648144,
																				"kind": "class template",
																				"name": "BytesReader",
																				"parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}],
																				"scope":  {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				}
																			}]
																		},
																		"unexposed_arguments": "_CharType"
																	}
																}],
																"class_kind": "class",
																"id": 140737094580320,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "StringViewBase",
																"scope": {
																	"is_templated": true,
																	"name": "StringViewBase",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 93824999493712,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824999493216,
															"kind": "class template",
															"name": "StringViewBase",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "char"
												}
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "f",
							"id": 93825002090000,
							"kind": "function parameter",
							"name": "f",
							"type": {
								"_typeName": "stappler::sql::Query::Field const&",
								"kind": "reference",
								"referee": {
									"_typeName": "stappler::sql::Query::Field const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "stappler::sql::Query::Field",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::Field",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::Field",
												"_kind": "class",
												"_name": "Field",
												"class_kind": "struct",
												"id": 93825003102816,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "Field",
												"scope": {
													"name": "Field"
												},
												"semantic_scope": ""
											}]
										}
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(stappler::StringView const&,stappler::sql::Query::Field const&)"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::getStream()",
						"_kind": "member function",
						"_name": "getStream",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825002090432,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "getStream",
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "Stream&",
							"kind": "reference",
							"referee": {
								"_typeName": "Stream",
								"kind": "user_defined",
								"target": {
									"name": "Stream",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Stream",
										"_kind": "type alias",
										"_name": "Stream",
										"id": 93825012332768,
										"kind": "type alias",
										"name": "Stream",
										"underlying_type": {
											"_typeName": "typename Interface::StringStreamType",
											"kind": "unexposed",
											"name": "typename Interface::StringStreamType"
										}
									}]
								}
							},
							"reference_kind": "lvalue"
						},
						"semantic_scope": "",
						"signature": "()"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::getBinder()",
						"_kind": "member function",
						"_name": "getBinder",
						"body_kind": "declaration",
						"cv_qualifier": "none",
						"id": 93825002090896,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "getBinder",
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "Binder&",
							"kind": "reference",
							"referee": {
								"_typeName": "Binder",
								"entity": {
									"name": "Binder",
									"objects": [{
										"_kind": "template type parameter",
										"_name": "Binder",
										"id": 93825003092240,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Binder"
									}]
								},
								"kind": "template_parameter"
							},
							"reference_kind": "lvalue"
						},
						"semantic_scope": "",
						"signature": "()"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::getTarget() const",
						"_kind": "member function",
						"_name": "getTarget",
						"body_kind": "declaration",
						"cv_qualifier": "const",
						"id": 93825002091312,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": true,
						"is_definition": false,
						"is_variadic": false,
						"is_virtual": false,
						"kind": "member function",
						"name": "getTarget",
						"ref_qualifier": "none",
						"return_type": {
							"_typeName": "stappler::StringView",
							"kind": "user_defined",
							"target": {
								"name": "stappler::StringView",
								"objects": [{
									"_fullName": "::stappler::StringView",
									"_kind": "type alias",
									"_name": "StringView",
									"id": 93824997448656,
									"kind": "type alias",
									"name": "StringView",
									"underlying_type": {
										"_typeName": "StringViewBase<char>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "StringViewBase",
											"objects": [{
												"_fullName": "::stappler::StringViewBase<typename>",
												"_kind": "class template",
												"_name": "StringViewBase",
												"class": {
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class",
													"_name": "StringViewBase",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "BytesReader<_CharType>",
														"access_specifier": "public",
														"id": 93824998090352,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "BytesReader<_CharType>",
														"type": {
															"_typeName": "BytesReader<_CharType>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "BytesReader",
																"objects": [{
																	"_fullName": "::stappler::BytesReader<typename>",
																	"_kind": "class template",
																	"_name": "BytesReader",
																	"class": {
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class",
																		"_name": "BytesReader",
																		"class_kind": "class",
																		"id": 140736954953792,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "BytesReader",
																		"scope": {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824998648144,
																	"kind": "class template",
																	"name": "BytesReader",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 140737098599232,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "BytesReader",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "_CharType"
														}
													}],
													"class_kind": "class",
													"id": 140737094580320,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "StringViewBase",
													"scope": {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93824999493216,
												"kind": "class template",
												"name": "StringViewBase",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "_CharType",
													"id": 93824999493712,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_CharType"
												}],
												"scope":  {
													"is_templated": true,
													"name": "StringViewBase",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}]
												}
											}]
										},
										"unexposed_arguments": "char"
									}
								}]
							}
						},
						"semantic_scope": "",
						"signature": "() const"
					}, {
						"_kind": "access specifier",
						"_name": "protected",
						"access_specifier": "protected",
						"id": 93825002091632,
						"kind": "access specifier",
						"name": "protected"
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::finalization",
						"_kind": "member variable",
						"_name": "finalization",
						"default_value": {
							"expression": [{
								"kind": "identifier",
								"spelling": "FinalizationState"
							}, {
								"kind": "punctuation",
								"spelling": "::"
							}, {
								"kind": "identifier",
								"spelling": "None"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "stappler::sql::Query::FinalizationState",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::FinalizationState",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::FinalizationState",
										"_kind": "enum",
										"_name": "FinalizationState",
										"has_explicit_type": false,
										"id": 93825004255072,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "FinalizationState",
										"scope": {
											"name": "FinalizationState"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"id": 93825011472816,
						"is_mutable": false,
						"kind": "member variable",
						"name": "finalization",
						"type": {
							"_typeName": "stappler::sql::Query::FinalizationState",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::FinalizationState",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::FinalizationState",
									"_kind": "enum",
									"_name": "FinalizationState",
									"has_explicit_type": false,
									"id": 93825004255072,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "FinalizationState",
									"scope": {
										"name": "FinalizationState"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::binder",
						"_kind": "member variable",
						"_name": "binder",
						"id": 93825003090016,
						"is_mutable": false,
						"kind": "member variable",
						"name": "binder",
						"type": {
							"_typeName": "Binder",
							"entity": {
								"name": "Binder",
								"objects": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}]
							},
							"kind": "template_parameter"
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::stream",
						"_kind": "member variable",
						"_name": "stream",
						"id": 93825003090416,
						"is_mutable": false,
						"kind": "member variable",
						"name": "stream",
						"type": {
							"_typeName": "Stream",
							"kind": "user_defined",
							"target": {
								"name": "Stream",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Stream",
									"_kind": "type alias",
									"_name": "Stream",
									"id": 93825012332768,
									"kind": "type alias",
									"name": "Stream",
									"underlying_type": {
										"_typeName": "typename Interface::StringStreamType",
										"kind": "unexposed",
										"name": "typename Interface::StringStreamType"
									}
								}]
							}
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::target",
						"_kind": "member variable",
						"_name": "target",
						"id": 93825003090672,
						"is_mutable": false,
						"kind": "member variable",
						"name": "target",
						"type": {
							"_typeName": "stappler::StringView",
							"kind": "user_defined",
							"target": {
								"name": "stappler::StringView",
								"objects": [{
									"_fullName": "::stappler::StringView",
									"_kind": "type alias",
									"_name": "StringView",
									"id": 93824997448656,
									"kind": "type alias",
									"name": "StringView",
									"underlying_type": {
										"_typeName": "StringViewBase<char>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "StringViewBase",
											"objects": [{
												"_fullName": "::stappler::StringViewBase<typename>",
												"_kind": "class template",
												"_name": "StringViewBase",
												"class": {
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class",
													"_name": "StringViewBase",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "BytesReader<_CharType>",
														"access_specifier": "public",
														"id": 93824998090352,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "BytesReader<_CharType>",
														"type": {
															"_typeName": "BytesReader<_CharType>",
															"arguments_exposed": false,
															"kind": "template_instantiation",
															"primary_template": {
																"name": "BytesReader",
																"objects": [{
																	"_fullName": "::stappler::BytesReader<typename>",
																	"_kind": "class template",
																	"_name": "BytesReader",
																	"class": {
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class",
																		"_name": "BytesReader",
																		"class_kind": "class",
																		"id": 140736954953792,
																		"is_declaration": false,
																		"is_definition": true,
																		"is_final": false,
																		"kind": "class",
																		"name": "BytesReader",
																		"scope": {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		},
																		"semantic_scope": ""
																	},
																	"id": 93824998648144,
																	"kind": "class template",
																	"name": "BytesReader",
																	"parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 140737098599232,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}],
																	"scope":  {
																		"is_templated": true,
																		"name": "BytesReader",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}]
																	}
																}]
															},
															"unexposed_arguments": "_CharType"
														}
													}],
													"class_kind": "class",
													"id": 140737094580320,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "StringViewBase",
													"scope": {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93824999493216,
												"kind": "class template",
												"name": "StringViewBase",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "_CharType",
													"id": 93824999493712,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_CharType"
												}],
												"scope":  {
													"is_templated": true,
													"name": "StringViewBase",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}]
												}
											}]
										},
										"unexposed_arguments": "char"
									}
								}]
							}
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::subquery",
						"_kind": "member variable",
						"_name": "subquery",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "false"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "bool",
								"builtin_type_kind": "bool",
								"kind": "builtin"
							}
						},
						"id": 93825003091024,
						"is_mutable": false,
						"kind": "member variable",
						"name": "subquery",
						"type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						}
					}, {
						"_fullName": "::stappler::sql::Query<typename,typename>::profile",
						"_kind": "member variable",
						"_name": "profile",
						"default_value": {
							"expression": [{
								"kind": "identifier",
								"spelling": "Profile"
							}, {
								"kind": "punctuation",
								"spelling": "::"
							}, {
								"kind": "identifier",
								"spelling": "Postgres"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "stappler::sql::Profile",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Profile",
									"objects": [{
										"_fullName": "::stappler::sql::Profile",
										"_kind": "enum",
										"_name": "Profile",
										"has_explicit_type": false,
										"id": 140737128909888,
										"is_declaration": false,
										"is_definition": true,
										"is_scoped": true,
										"kind": "enum",
										"name": "Profile",
										"scope": {
											"name": "Profile"
										},
										"semantic_scope": "",
										"underlying_type": {
											"_typeName": "int",
											"builtin_type_kind": "int",
											"kind": "builtin"
										}
									}]
								}
							}
						},
						"id": 93825003091392,
						"is_mutable": false,
						"kind": "member variable",
						"name": "profile",
						"type": {
							"_typeName": "stappler::sql::Profile",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Profile",
								"objects": [{
									"_fullName": "::stappler::sql::Profile",
									"_kind": "enum",
									"_name": "Profile",
									"has_explicit_type": false,
									"id": 140737128909888,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "Profile",
									"scope": {
										"name": "Profile"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						}
					}],
					"class_kind": "class",
					"id": 93824999139696,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "Query",
					"scope": {
						"is_templated": true,
						"name": "Query",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::sql::Query<typename,typename>",
					"_kind": "class",
					"_name": "Query",
					"bases": [{
						"_kind": "base class specifier",
						"_name": "Interface::AllocBaseType",
						"access_specifier": "public",
						"id": 93825012332480,
						"is_virtual": false,
						"kind": "base class specifier",
						"name": "Interface::AllocBaseType",
						"type": {
							"_typeName": "Interface::AllocBaseType",
							"kind": "unexposed",
							"name": "Interface::AllocBaseType"
						}
					}],
					"class_kind": "class",
					"id": 93824999139696,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "Query",
					"scope": {
						"is_templated": true,
						"name": "Query",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				},
				"id": 93825003091968,
				"kind": "class template",
				"name": "Query",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825003092240,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825003092480,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}],
				"scope":  {
					"is_templated": true,
					"name": "Query",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "Binder",
						"id": 93825003092240,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Binder"
					}, {
						"_kind": "template type parameter",
						"_name": "Interface",
						"id": 93825003092480,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Interface"
					}]
				}
			}, {
				"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
				"_kind": "class template",
				"_name": "BinderTraits",
				"childs": [{
					"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
					"_kind": "class",
					"_name": "BinderTraits",
					"childs": [{
						"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>::writeBind<typename>(Query<Binder, Interface>&,Binder&,V&&)",
						"_kind": "function template",
						"_name": "writeBind",
						"childs": [{
							"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>::writeBind<typename>(Query<Binder, Interface>&,Binder&,V&&)",
							"_kind": "function",
							"_name": "writeBind",
							"body_kind": "definition",
							"id": 93825003968144,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"kind": "function",
							"name": "writeBind",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "q",
								"id": 93825003968656,
								"kind": "function parameter",
								"name": "q",
								"type": {
									"_typeName": "Query<Binder, Interface>&",
									"kind": "reference",
									"referee": {
										"_typeName": "Query<Binder, Interface>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "Query",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>",
												"_kind": "class template",
												"_name": "Query",
												"class": {
													"_fullName": "::stappler::sql::Query<typename,typename>",
													"_kind": "class",
													"_name": "Query",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "Interface::AllocBaseType",
														"access_specifier": "public",
														"id": 93825012332480,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "Interface::AllocBaseType",
														"type": {
															"_typeName": "Interface::AllocBaseType",
															"kind": "unexposed",
															"name": "Interface::AllocBaseType"
														}
													}],
													"class_kind": "class",
													"id": 93824999139696,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Query",
													"scope": {
														"is_templated": true,
														"name": "Query",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Binder",
															"id": 93825003092240,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Binder"
														}, {
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003092480,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93825003091968,
												"kind": "class template",
												"name": "Query",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "Binder",
													"id": 93825003092240,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Binder"
												}, {
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825003092480,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}],
												"scope":  {
													"is_templated": true,
													"name": "Query",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Binder",
														"id": 93825003092240,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Binder"
													}, {
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003092480,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												}
											}]
										},
										"unexposed_arguments": "Binder, Interface"
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "b",
								"id": 93825003969008,
								"kind": "function parameter",
								"name": "b",
								"type": {
									"_typeName": "Binder&",
									"kind": "reference",
									"referee": {
										"_typeName": "Binder",
										"entity": {
											"name": "Binder",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "Binder",
												"id": 93825003967040,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Binder"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "val",
								"id": 93825003969344,
								"kind": "function parameter",
								"name": "val",
								"type": {
									"_typeName": "V&&",
									"kind": "reference",
									"referee": {
										"_typeName": "V",
										"entity": {
											"name": "V",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "V",
												"id": 93825003092720,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "V"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "rvalue"
								}
							}],
							"return_type":  {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "(Query<Binder, Interface>&,Binder&,V&&)",
							"storage_class": [
								"static"
							]
						}],
						"function":  {
							"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>::writeBind<typename>(Query<Binder, Interface>&,Binder&,V&&)",
							"_kind": "function",
							"_name": "writeBind",
							"body_kind": "definition",
							"id": 93825003968144,
							"is_consteval": false,
							"is_constexpr": false,
							"is_declaration": false,
							"is_definition": true,
							"is_variadic": false,
							"kind": "function",
							"name": "writeBind",
							"parameters": [{
								"_kind": "function parameter",
								"_name": "q",
								"id": 93825003968656,
								"kind": "function parameter",
								"name": "q",
								"type": {
									"_typeName": "Query<Binder, Interface>&",
									"kind": "reference",
									"referee": {
										"_typeName": "Query<Binder, Interface>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "Query",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>",
												"_kind": "class template",
												"_name": "Query",
												"class": {
													"_fullName": "::stappler::sql::Query<typename,typename>",
													"_kind": "class",
													"_name": "Query",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "Interface::AllocBaseType",
														"access_specifier": "public",
														"id": 93825012332480,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "Interface::AllocBaseType",
														"type": {
															"_typeName": "Interface::AllocBaseType",
															"kind": "unexposed",
															"name": "Interface::AllocBaseType"
														}
													}],
													"class_kind": "class",
													"id": 93824999139696,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "Query",
													"scope": {
														"is_templated": true,
														"name": "Query",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Binder",
															"id": 93825003092240,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Binder"
														}, {
															"_kind": "template type parameter",
															"_name": "Interface",
															"id": 93825003092480,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Interface"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93825003091968,
												"kind": "class template",
												"name": "Query",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "Binder",
													"id": 93825003092240,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Binder"
												}, {
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825003092480,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}],
												"scope":  {
													"is_templated": true,
													"name": "Query",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Binder",
														"id": 93825003092240,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Binder"
													}, {
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003092480,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												}
											}]
										},
										"unexposed_arguments": "Binder, Interface"
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "b",
								"id": 93825003969008,
								"kind": "function parameter",
								"name": "b",
								"type": {
									"_typeName": "Binder&",
									"kind": "reference",
									"referee": {
										"_typeName": "Binder",
										"entity": {
											"name": "Binder",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "Binder",
												"id": 93825003967040,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Binder"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "lvalue"
								}
							}, {
								"_kind": "function parameter",
								"_name": "val",
								"id": 93825003969344,
								"kind": "function parameter",
								"name": "val",
								"type": {
									"_typeName": "V&&",
									"kind": "reference",
									"referee": {
										"_typeName": "V",
										"entity": {
											"name": "V",
											"objects": [{
												"_kind": "template type parameter",
												"_name": "V",
												"id": 93825003092720,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "V"
											}]
										},
										"kind": "template_parameter"
									},
									"reference_kind": "rvalue"
								}
							}],
							"return_type":  {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							},
							"semantic_scope": "",
							"signature": "(Query<Binder, Interface>&,Binder&,V&&)",
							"storage_class": [
								"static"
							]
						},
						"id": 93825003968848,
						"kind": "function template",
						"name": "writeBind",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "V",
							"id": 93825003092720,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "V"
						}]
					}],
					"class_kind": "struct",
					"id": 93825012498192,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003967040,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003967280,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}, {
							"_kind": "template type parameter",
							"_name": "Value",
							"id": 93825003967520,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Value"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
					"_kind": "class",
					"_name": "BinderTraits",
					"class_kind": "struct",
					"id": 93825012498192,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003967040,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003967280,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}, {
							"_kind": "template type parameter",
							"_name": "Value",
							"id": 93825003967520,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Value"
						}]
					},
					"semantic_scope": ""
				},
				"id": 93825003966832,
				"kind": "class template",
				"name": "BinderTraits",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825003967040,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825003967280,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}, {
					"_kind": "template type parameter",
					"_name": "Value",
					"id": 93825003967520,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Value"
				}],
				"scope":  {
					"is_templated": true,
					"name": "BinderTraits",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "Binder",
						"id": 93825003967040,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Binder"
					}, {
						"_kind": "template type parameter",
						"_name": "Interface",
						"id": 93825003967280,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Interface"
					}, {
						"_kind": "template type parameter",
						"_name": "Value",
						"id": 93825003967520,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Value"
					}]
				}
			}, {
				"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>",
				"_kind": "class template specialization",
				"_name": "BinderTraits",
				"arguments_exposed": false,
				"childs": [{
					"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>",
					"_kind": "class",
					"_name": "BinderTraits",
					"childs": [{
						"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::Field&)",
						"_kind": "function",
						"_name": "writeBind",
						"body_kind": "definition",
						"id": 93825003967808,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "q",
							"id": 93825005949584,
							"kind": "function parameter",
							"name": "q",
							"type": {
								"_typeName": "Query<Binder, Interface>&",
								"kind": "reference",
								"referee": {
									"_typeName": "Query<Binder, Interface>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Query",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>",
											"_kind": "class template",
											"_name": "Query",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>",
												"_kind": "class",
												"_name": "Query",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "Interface::AllocBaseType",
													"access_specifier": "public",
													"id": 93825012332480,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "Interface::AllocBaseType",
													"type": {
														"_typeName": "Interface::AllocBaseType",
														"kind": "unexposed",
														"name": "Interface::AllocBaseType"
													}
												}],
												"class_kind": "class",
												"id": 93824999139696,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "Query",
												"scope": {
													"is_templated": true,
													"name": "Query",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Binder",
														"id": 93825003092240,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Binder"
													}, {
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003092480,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825003091968,
											"kind": "class template",
											"name": "Query",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Binder",
												"id": 93825003092240,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Binder"
											}, {
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825003092480,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}],
											"scope":  {
												"is_templated": true,
												"name": "Query",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Binder",
													"id": 93825003092240,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Binder"
												}, {
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825003092480,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											}
										}]
									},
									"unexposed_arguments": "Binder, Interface"
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "b",
							"id": 93825005950032,
							"kind": "function parameter",
							"name": "b",
							"type": {
								"_typeName": "Binder&",
								"kind": "reference",
								"referee": {
									"_typeName": "Binder",
									"entity": {
										"name": "Binder",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Binder",
											"id": 93825005947984,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Binder"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "val",
							"id": 93825005950272,
							"kind": "function parameter",
							"name": "val",
							"type": {
								"_typeName": "const typename Query<Binder, Interface>::Field&",
								"kind": "reference",
								"referee": {
									"_typeName": "const typename Query<Binder, Interface>::Field",
									"kind": "unexposed",
									"name": "const typename Query<Binder, Interface>::Field"
								},
								"reference_kind": "lvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::Field&)",
						"storage_class": [
							"static"
						]
					}],
					"class_kind": "struct",
					"id": 93825005947728,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825005947984,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825005948224,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::Field>",
					"_kind": "class",
					"_name": "BinderTraits",
					"class_kind": "struct",
					"id": 93825005947728,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825005947984,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825005948224,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				},
				"id": 140736986599648,
				"is_full_specialization": false,
				"kind": "class template specialization",
				"name": "BinderTraits",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825005947984,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825005948224,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}],
				"primary_template":  {
					"name": "BinderTraits",
					"objects": [{
						"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
						"_kind": "class template",
						"_name": "BinderTraits",
						"class": {
							"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
							"_kind": "class",
							"_name": "BinderTraits",
							"class_kind": "struct",
							"id": 93825012498192,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "BinderTraits",
							"scope": {
								"is_templated": true,
								"name": "BinderTraits",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003967040,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003967280,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}, {
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825003967520,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003966832,
						"kind": "class template",
						"name": "BinderTraits",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003967040,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003967280,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}, {
							"_kind": "template type parameter",
							"_name": "Value",
							"id": 93825003967520,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Value"
						}],
						"scope":  {
							"is_templated": true,
							"name": "BinderTraits",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003967040,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003967280,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}, {
								"_kind": "template type parameter",
								"_name": "Value",
								"id": 93825003967520,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Value"
							}]
						}
					}]
				},
				"scope":  {
					"is_templated": true,
					"name": "BinderTraits",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "Binder",
						"id": 93825005947984,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Binder"
					}, {
						"_kind": "template type parameter",
						"_name": "Interface",
						"id": 93825005948224,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Interface"
					}]
				},
				"unexposed_arguments":  [{
					"kind": "identifier",
					"spelling": "Binder"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Interface"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "keyword",
					"spelling": "typename"
				}, {
					"kind": "identifier",
					"spelling": "Query"
				}, {
					"kind": "punctuation",
					"spelling": "<"
				}, {
					"kind": "identifier",
					"spelling": "Binder"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Interface"
				}, {
					"kind": "punctuation",
					"spelling": ">"
				}, {
					"kind": "punctuation",
					"spelling": "::"
				}, {
					"kind": "identifier",
					"spelling": "Field"
				}]
			}, {
				"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>",
				"_kind": "class template specialization",
				"_name": "BinderTraits",
				"arguments_exposed": false,
				"childs": [{
					"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>",
					"_kind": "class",
					"_name": "BinderTraits",
					"childs": [{
						"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::RawString&)",
						"_kind": "function",
						"_name": "writeBind",
						"body_kind": "definition",
						"id": 93825005949088,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "q",
							"id": 93825004800352,
							"kind": "function parameter",
							"name": "q",
							"type": {
								"_typeName": "Query<Binder, Interface>&",
								"kind": "reference",
								"referee": {
									"_typeName": "Query<Binder, Interface>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Query",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>",
											"_kind": "class template",
											"_name": "Query",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>",
												"_kind": "class",
												"_name": "Query",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "Interface::AllocBaseType",
													"access_specifier": "public",
													"id": 93825012332480,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "Interface::AllocBaseType",
													"type": {
														"_typeName": "Interface::AllocBaseType",
														"kind": "unexposed",
														"name": "Interface::AllocBaseType"
													}
												}],
												"class_kind": "class",
												"id": 93824999139696,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "Query",
												"scope": {
													"is_templated": true,
													"name": "Query",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Binder",
														"id": 93825003092240,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Binder"
													}, {
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003092480,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825003091968,
											"kind": "class template",
											"name": "Query",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Binder",
												"id": 93825003092240,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Binder"
											}, {
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825003092480,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}],
											"scope":  {
												"is_templated": true,
												"name": "Query",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Binder",
													"id": 93825003092240,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Binder"
												}, {
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825003092480,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											}
										}]
									},
									"unexposed_arguments": "Binder, Interface"
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "b",
							"id": 93825004800544,
							"kind": "function parameter",
							"name": "b",
							"type": {
								"_typeName": "Binder&",
								"kind": "reference",
								"referee": {
									"_typeName": "Binder",
									"entity": {
										"name": "Binder",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Binder",
											"id": 93825004801200,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Binder"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "val",
							"id": 93825004800912,
							"kind": "function parameter",
							"name": "val",
							"type": {
								"_typeName": "const typename Query<Binder, Interface>::RawString&",
								"kind": "reference",
								"referee": {
									"_typeName": "const typename Query<Binder, Interface>::RawString",
									"kind": "unexposed",
									"name": "const typename Query<Binder, Interface>::RawString"
								},
								"reference_kind": "lvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::RawString&)",
						"storage_class": [
							"static"
						]
					}],
					"class_kind": "struct",
					"id": 93825005948832,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825004801200,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825004801440,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawString>",
					"_kind": "class",
					"_name": "BinderTraits",
					"class_kind": "struct",
					"id": 93825005948832,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825004801200,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825004801440,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				},
				"id": 140737136596592,
				"is_full_specialization": false,
				"kind": "class template specialization",
				"name": "BinderTraits",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825004801200,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825004801440,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}],
				"primary_template":  {
					"name": "BinderTraits",
					"objects": [{
						"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
						"_kind": "class template",
						"_name": "BinderTraits",
						"class": {
							"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
							"_kind": "class",
							"_name": "BinderTraits",
							"class_kind": "struct",
							"id": 93825012498192,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "BinderTraits",
							"scope": {
								"is_templated": true,
								"name": "BinderTraits",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003967040,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003967280,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}, {
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825003967520,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003966832,
						"kind": "class template",
						"name": "BinderTraits",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003967040,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003967280,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}, {
							"_kind": "template type parameter",
							"_name": "Value",
							"id": 93825003967520,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Value"
						}],
						"scope":  {
							"is_templated": true,
							"name": "BinderTraits",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003967040,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003967280,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}, {
								"_kind": "template type parameter",
								"_name": "Value",
								"id": 93825003967520,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Value"
							}]
						}
					}]
				},
				"scope":  {
					"is_templated": true,
					"name": "BinderTraits",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "Binder",
						"id": 93825004801200,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Binder"
					}, {
						"_kind": "template type parameter",
						"_name": "Interface",
						"id": 93825004801440,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Interface"
					}]
				},
				"unexposed_arguments":  [{
					"kind": "identifier",
					"spelling": "Binder"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Interface"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "keyword",
					"spelling": "typename"
				}, {
					"kind": "identifier",
					"spelling": "Query"
				}, {
					"kind": "punctuation",
					"spelling": "<"
				}, {
					"kind": "identifier",
					"spelling": "Binder"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Interface"
				}, {
					"kind": "punctuation",
					"spelling": ">"
				}, {
					"kind": "punctuation",
					"spelling": "::"
				}, {
					"kind": "identifier",
					"spelling": "RawString"
				}]
			}, {
				"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>",
				"_kind": "class template specialization",
				"_name": "BinderTraits",
				"arguments_exposed": false,
				"childs": [{
					"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>",
					"_kind": "class",
					"_name": "BinderTraits",
					"childs": [{
						"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>::writeBind(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::RawStringView&)",
						"_kind": "function",
						"_name": "writeBind",
						"body_kind": "definition",
						"id": 93825004799152,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "q",
							"id": 93825004799664,
							"kind": "function parameter",
							"name": "q",
							"type": {
								"_typeName": "Query<Binder, Interface>&",
								"kind": "reference",
								"referee": {
									"_typeName": "Query<Binder, Interface>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Query",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>",
											"_kind": "class template",
											"_name": "Query",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>",
												"_kind": "class",
												"_name": "Query",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "Interface::AllocBaseType",
													"access_specifier": "public",
													"id": 93825012332480,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "Interface::AllocBaseType",
													"type": {
														"_typeName": "Interface::AllocBaseType",
														"kind": "unexposed",
														"name": "Interface::AllocBaseType"
													}
												}],
												"class_kind": "class",
												"id": 93824999139696,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "Query",
												"scope": {
													"is_templated": true,
													"name": "Query",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Binder",
														"id": 93825003092240,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Binder"
													}, {
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003092480,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825003091968,
											"kind": "class template",
											"name": "Query",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Binder",
												"id": 93825003092240,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Binder"
											}, {
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825003092480,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}],
											"scope":  {
												"is_templated": true,
												"name": "Query",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Binder",
													"id": 93825003092240,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Binder"
												}, {
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825003092480,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											}
										}]
									},
									"unexposed_arguments": "Binder, Interface"
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "b",
							"id": 93825004799856,
							"kind": "function parameter",
							"name": "b",
							"type": {
								"_typeName": "Binder&",
								"kind": "reference",
								"referee": {
									"_typeName": "Binder",
									"entity": {
										"name": "Binder",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Binder",
											"id": 93825002276048,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Binder"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "val",
							"id": 93825002275808,
							"kind": "function parameter",
							"name": "val",
							"type": {
								"_typeName": "const typename Query<Binder, Interface>::RawStringView&",
								"kind": "reference",
								"referee": {
									"_typeName": "const typename Query<Binder, Interface>::RawStringView",
									"kind": "unexposed",
									"name": "const typename Query<Binder, Interface>::RawStringView"
								},
								"reference_kind": "lvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Query<Binder, Interface>&,Binder&,const typename Query<Binder, Interface>::RawStringView&)",
						"storage_class": [
							"static"
						]
					}],
					"class_kind": "struct",
					"id": 93825004798896,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825002276048,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825002276288,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>::BinderTraits<Binder,Interface,typenameQuery<Binder,Interface>::RawStringView>",
					"_kind": "class",
					"_name": "BinderTraits",
					"class_kind": "struct",
					"id": 93825004798896,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825002276048,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825002276288,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				},
				"id": 140737136175168,
				"is_full_specialization": false,
				"kind": "class template specialization",
				"name": "BinderTraits",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825002276048,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825002276288,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}],
				"primary_template":  {
					"name": "BinderTraits",
					"objects": [{
						"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
						"_kind": "class template",
						"_name": "BinderTraits",
						"class": {
							"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
							"_kind": "class",
							"_name": "BinderTraits",
							"class_kind": "struct",
							"id": 93825012498192,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "BinderTraits",
							"scope": {
								"is_templated": true,
								"name": "BinderTraits",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003967040,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003967280,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}, {
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825003967520,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003966832,
						"kind": "class template",
						"name": "BinderTraits",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003967040,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003967280,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}, {
							"_kind": "template type parameter",
							"_name": "Value",
							"id": 93825003967520,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Value"
						}],
						"scope":  {
							"is_templated": true,
							"name": "BinderTraits",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003967040,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003967280,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}, {
								"_kind": "template type parameter",
								"_name": "Value",
								"id": 93825003967520,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Value"
							}]
						}
					}]
				},
				"scope":  {
					"is_templated": true,
					"name": "BinderTraits",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "Binder",
						"id": 93825002276048,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Binder"
					}, {
						"_kind": "template type parameter",
						"_name": "Interface",
						"id": 93825002276288,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Interface"
					}]
				},
				"unexposed_arguments":  [{
					"kind": "identifier",
					"spelling": "Binder"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Interface"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "keyword",
					"spelling": "typename"
				}, {
					"kind": "identifier",
					"spelling": "Query"
				}, {
					"kind": "punctuation",
					"spelling": "<"
				}, {
					"kind": "identifier",
					"spelling": "Binder"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Interface"
				}, {
					"kind": "punctuation",
					"spelling": ">"
				}, {
					"kind": "punctuation",
					"spelling": "::"
				}, {
					"kind": "identifier",
					"spelling": "RawStringView"
				}]
			}, {
				"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>",
				"_kind": "class template specialization",
				"_name": "BinderTraits",
				"arguments_exposed": false,
				"childs": [{
					"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>",
					"_kind": "class",
					"_name": "BinderTraits",
					"childs": [{
						"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>::writeBind(Query<Binder, Interface>&,Binder&,Callback<void (typename Query<Binder, Interface>::Select &)> const&)",
						"_kind": "function",
						"_name": "writeBind",
						"body_kind": "definition",
						"id": 93825000440608,
						"is_consteval": false,
						"is_constexpr": false,
						"is_declaration": false,
						"is_definition": true,
						"is_variadic": false,
						"kind": "function",
						"name": "writeBind",
						"parameters": [{
							"_kind": "function parameter",
							"_name": "q",
							"id": 93825000441120,
							"kind": "function parameter",
							"name": "q",
							"type": {
								"_typeName": "Query<Binder, Interface>&",
								"kind": "reference",
								"referee": {
									"_typeName": "Query<Binder, Interface>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Query",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>",
											"_kind": "class template",
											"_name": "Query",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>",
												"_kind": "class",
												"_name": "Query",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "Interface::AllocBaseType",
													"access_specifier": "public",
													"id": 93825012332480,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "Interface::AllocBaseType",
													"type": {
														"_typeName": "Interface::AllocBaseType",
														"kind": "unexposed",
														"name": "Interface::AllocBaseType"
													}
												}],
												"class_kind": "class",
												"id": 93824999139696,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "Query",
												"scope": {
													"is_templated": true,
													"name": "Query",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Binder",
														"id": 93825003092240,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Binder"
													}, {
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825003092480,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825003091968,
											"kind": "class template",
											"name": "Query",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Binder",
												"id": 93825003092240,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Binder"
											}, {
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825003092480,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}],
											"scope":  {
												"is_templated": true,
												"name": "Query",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Binder",
													"id": 93825003092240,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Binder"
												}, {
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825003092480,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											}
										}]
									},
									"unexposed_arguments": "Binder, Interface"
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "b",
							"id": 93825000441312,
							"kind": "function parameter",
							"name": "b",
							"type": {
								"_typeName": "Binder&",
								"kind": "reference",
								"referee": {
									"_typeName": "Binder",
									"entity": {
										"name": "Binder",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Binder",
											"id": 93825002274480,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Binder"
										}]
									},
									"kind": "template_parameter"
								},
								"reference_kind": "lvalue"
							}
						}, {
							"_kind": "function parameter",
							"_name": "val",
							"id": 93825002274240,
							"kind": "function parameter",
							"name": "val",
							"type": {
								"_typeName": "Callback<void (typename Query<Binder, Interface>::Select &)> const&",
								"kind": "reference",
								"referee": {
									"_typeName": "Callback<void (typename Query<Binder, Interface>::Select &)> const",
									"cv_qualifier": "const",
									"kind": "cv_qualified",
									"type": {
										"_typeName": "Callback<void (typename Query<Binder, Interface>::Select &)>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "Callback",
											"objects": [{
												"_fullName": "::stappler::Callback<typename>",
												"_kind": "alias template",
												"_name": "Callback",
												"id": 93824997072128,
												"kind": "alias template",
												"name": "Callback",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "T",
													"id": 93824997072288,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "T"
												}],
												"type_alias":  {
													"_fullName": "::stappler::Callback<typename>",
													"_kind": "type alias",
													"_name": "Callback",
													"id": 93824997071984,
													"kind": "type alias",
													"name": "Callback",
													"underlying_type": {
														"_typeName": "memory::callback<T>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "memory::callback",
															"objects": [{
																"_fullName": "::stappler::memory::callback<typename>",
																"_kind": "class template",
																"_name": "callback",
																"class": {
																	"_fullName": "::stappler::memory::callback<typename>",
																	"_kind": "class",
																	"_name": "callback",
																	"class_kind": "class",
																	"id": 93824997040048,
																	"is_declaration": true,
																	"is_definition": false,
																	"is_final": false,
																	"kind": "class",
																	"name": "callback",
																	"scope": {
																		"is_templated": true,
																		"name": "callback",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "UnusedType",
																			"id": 93824997058880,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "UnusedType"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93824997058480,
																"kind": "class template",
																"name": "callback",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "UnusedType",
																	"id": 93824997058880,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "UnusedType"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "callback",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "UnusedType",
																		"id": 93824997058880,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "UnusedType"
																	}]
																}
															}]
														},
														"unexposed_arguments": "T"
													}
												}
											}]
										},
										"unexposed_arguments": "void (typename Query<Binder, Interface>::Select &)"
									}
								},
								"reference_kind": "lvalue"
							}
						}],
						"return_type":  {
							"_typeName": "void",
							"builtin_type_kind": "void",
							"kind": "builtin"
						},
						"semantic_scope": "",
						"signature": "(Query<Binder, Interface>&,Binder&,Callback<void (typename Query<Binder, Interface>::Select &)> const&)",
						"storage_class": [
							"static"
						]
					}],
					"class_kind": "struct",
					"id": 93825002276672,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825002274480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825002274672,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::sql::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>::BinderTraits<Binder,Interface,Callback<void(typenameQuery<Binder,Interface>::Select&)>>",
					"_kind": "class",
					"_name": "BinderTraits",
					"class_kind": "struct",
					"id": 93825002276672,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "BinderTraits",
					"scope": {
						"is_templated": true,
						"name": "BinderTraits",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825002274480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825002274672,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				},
				"id": 140737115308480,
				"is_full_specialization": false,
				"kind": "class template specialization",
				"name": "BinderTraits",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825002274480,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825002274672,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}],
				"primary_template":  {
					"name": "BinderTraits",
					"objects": [{
						"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
						"_kind": "class template",
						"_name": "BinderTraits",
						"class": {
							"_fullName": "::stappler::sql::BinderTraits<typename,typename,typename>",
							"_kind": "class",
							"_name": "BinderTraits",
							"class_kind": "struct",
							"id": 93825012498192,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "BinderTraits",
							"scope": {
								"is_templated": true,
								"name": "BinderTraits",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003967040,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003967280,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}, {
									"_kind": "template type parameter",
									"_name": "Value",
									"id": 93825003967520,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Value"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003966832,
						"kind": "class template",
						"name": "BinderTraits",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003967040,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003967280,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}, {
							"_kind": "template type parameter",
							"_name": "Value",
							"id": 93825003967520,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Value"
						}],
						"scope":  {
							"is_templated": true,
							"name": "BinderTraits",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003967040,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003967280,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}, {
								"_kind": "template type parameter",
								"_name": "Value",
								"id": 93825003967520,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Value"
							}]
						}
					}]
				},
				"scope":  {
					"is_templated": true,
					"name": "BinderTraits",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "Binder",
						"id": 93825002274480,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Binder"
					}, {
						"_kind": "template type parameter",
						"_name": "Interface",
						"id": 93825002274672,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Interface"
					}]
				},
				"unexposed_arguments":  [{
					"kind": "identifier",
					"spelling": "Binder"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Interface"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Callback"
				}, {
					"kind": "punctuation",
					"spelling": "<"
				}, {
					"kind": "keyword",
					"spelling": "void"
				}, {
					"kind": "punctuation",
					"spelling": "("
				}, {
					"kind": "keyword",
					"spelling": "typename"
				}, {
					"kind": "identifier",
					"spelling": "Query"
				}, {
					"kind": "punctuation",
					"spelling": "<"
				}, {
					"kind": "identifier",
					"spelling": "Binder"
				}, {
					"kind": "punctuation",
					"spelling": ","
				}, {
					"kind": "identifier",
					"spelling": "Interface"
				}, {
					"kind": "punctuation",
					"spelling": ">"
				}, {
					"kind": "punctuation",
					"spelling": "::"
				}, {
					"kind": "identifier",
					"spelling": "Select"
				}, {
					"kind": "punctuation",
					"spelling": "&"
				}, {
					"kind": "punctuation",
					"spelling": ")"
				}, {
					"kind": "punctuation",
					"spelling": ">"
				}]
			}, {
				"_fullName": "::stappler::sql::QueryHandle::finalize()",
				"_kind": "member function",
				"_name": "finalize",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825000440112,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "finalize",
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "void",
					"builtin_type_kind": "void",
					"kind": "builtin"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::QueryHandle::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
						"_kind": "class",
						"_name": "QueryHandle",
						"class_kind": "struct",
						"id": 93825007976864,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "QueryHandle",
						"scope": {
							"name": "QueryHandle"
						},
						"semantic_scope": ""
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::QueryHandle::",
				"signature": "()"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::writeBind<typename,typename,typename>(Value&&)",
				"_kind": "function template",
				"_name": "writeBind",
				"childs": [{
					"_fullName": "::stappler::sql::Query<typename,typename>::writeBind<typename,typename,typename>(Value&&)",
					"_kind": "member function",
					"_name": "writeBind",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825002274912,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "writeBind",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "val",
						"id": 93825002275184,
						"kind": "function parameter",
						"name": "val",
						"type": {
							"_typeName": "Value&&",
							"kind": "reference",
							"referee": {
								"_typeName": "Value",
								"entity": {
									"name": "Value",
									"objects": [{
										"_kind": "template type parameter",
										"_name": "Value",
										"id": 93825001577152,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Value"
									}]
								},
								"kind": "template_parameter"
							},
							"reference_kind": "rvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class template",
							"_name": "Query",
							"class": {
								"_fullName": "::stappler::sql::Query<typename,typename>",
								"_kind": "class",
								"_name": "Query",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "Interface::AllocBaseType",
									"access_specifier": "public",
									"id": 93825012332480,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "Interface::AllocBaseType",
									"type": {
										"_typeName": "Interface::AllocBaseType",
										"kind": "unexposed",
										"name": "Interface::AllocBaseType"
									}
								}],
								"class_kind": "class",
								"id": 93824999139696,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Query",
								"scope": {
									"is_templated": true,
									"name": "Query",
									"template_parameters": [{
										"_kind": "template type parameter",
										"_name": "Binder",
										"id": 93825003092240,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Binder"
									}, {
										"_kind": "template type parameter",
										"_name": "Interface",
										"id": 93825003092480,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Interface"
									}]
								},
								"semantic_scope": ""
							},
							"id": 93825003091968,
							"kind": "class template",
							"name": "Query",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}],
							"scope":  {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							}
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::",
					"signature": "(Value&&)"
				}],
				"function":  {
					"_fullName": "::stappler::sql::Query<typename,typename>::writeBind<typename,typename,typename>(Value&&)",
					"_kind": "member function",
					"_name": "writeBind",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825002274912,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "writeBind",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "val",
						"id": 93825002275184,
						"kind": "function parameter",
						"name": "val",
						"type": {
							"_typeName": "Value&&",
							"kind": "reference",
							"referee": {
								"_typeName": "Value",
								"entity": {
									"name": "Value",
									"objects": [{
										"_kind": "template type parameter",
										"_name": "Value",
										"id": 93825001577152,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Value"
									}]
								},
								"kind": "template_parameter"
							},
							"reference_kind": "rvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "void",
						"builtin_type_kind": "void",
						"kind": "builtin"
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class template",
							"_name": "Query",
							"class": {
								"_fullName": "::stappler::sql::Query<typename,typename>",
								"_kind": "class",
								"_name": "Query",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "Interface::AllocBaseType",
									"access_specifier": "public",
									"id": 93825012332480,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "Interface::AllocBaseType",
									"type": {
										"_typeName": "Interface::AllocBaseType",
										"kind": "unexposed",
										"name": "Interface::AllocBaseType"
									}
								}],
								"class_kind": "class",
								"id": 93824999139696,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Query",
								"scope": {
									"is_templated": true,
									"name": "Query",
									"template_parameters": [{
										"_kind": "template type parameter",
										"_name": "Binder",
										"id": 93825003092240,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Binder"
									}, {
										"_kind": "template type parameter",
										"_name": "Interface",
										"id": 93825003092480,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Interface"
									}]
								},
								"semantic_scope": ""
							},
							"id": 93825003091968,
							"kind": "class template",
							"name": "Query",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}],
							"scope":  {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							}
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::",
					"signature": "(Value&&)"
				},
				"id": 93825005949872,
				"kind": "function template",
				"name": "writeBind",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Value",
					"id": 93825001577152,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Value"
				}, {
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825001577344,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825001577584,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}]
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawString const&)",
				"_kind": "member function",
				"_name": "writeBind",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825001578992,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "writeBind",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "data",
					"id": 93825002275472,
					"kind": "function parameter",
					"name": "data",
					"type": {
						"_typeName": "stappler::sql::Query::RawString const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::sql::Query::RawString const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::sql::Query::RawString",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::RawString",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::RawString",
										"_kind": "class",
										"_name": "RawString",
										"class_kind": "struct",
										"id": 93825003101952,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "RawString",
										"scope": {
											"name": "RawString"
										},
										"semantic_scope": ""
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "void",
					"builtin_type_kind": "void",
					"kind": "builtin"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "(stappler::sql::Query::RawString const&)"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::RawStringView const&)",
				"_kind": "member function",
				"_name": "writeBind",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825001579648,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "writeBind",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "data",
					"id": 93825003092976,
					"kind": "function parameter",
					"name": "data",
					"type": {
						"_typeName": "stappler::sql::Query::RawStringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::sql::Query::RawStringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::sql::Query::RawStringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::RawStringView",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::RawStringView",
										"_kind": "class",
										"_name": "RawStringView",
										"class_kind": "struct",
										"id": 93825003102352,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "RawStringView",
										"scope": {
											"name": "RawStringView"
										},
										"semantic_scope": ""
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "void",
					"builtin_type_kind": "void",
					"kind": "builtin"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "(stappler::sql::Query::RawStringView const&)"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(Callback<void (stappler::sql::Query::Select &)> const&)",
				"_kind": "member function",
				"_name": "writeBind",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825001577888,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "writeBind",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "cb",
					"id": 93825001578736,
					"kind": "function parameter",
					"name": "cb",
					"type": {
						"_typeName": "Callback<void (stappler::sql::Query::Select &)> const&",
						"kind": "reference",
						"referee": {
							"_typeName": "Callback<void (stappler::sql::Query::Select &)> const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "Callback<void (stappler::sql::Query::Select &)>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "Callback",
									"objects": [{
										"_fullName": "::stappler::Callback<typename>",
										"_kind": "alias template",
										"_name": "Callback",
										"id": 93824997072128,
										"kind": "alias template",
										"name": "Callback",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "T",
											"id": 93824997072288,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "T"
										}],
										"type_alias":  {
											"_fullName": "::stappler::Callback<typename>",
											"_kind": "type alias",
											"_name": "Callback",
											"id": 93824997071984,
											"kind": "type alias",
											"name": "Callback",
											"underlying_type": {
												"_typeName": "memory::callback<T>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "memory::callback",
													"objects": [{
														"_fullName": "::stappler::memory::callback<typename>",
														"_kind": "class template",
														"_name": "callback",
														"class": {
															"_fullName": "::stappler::memory::callback<typename>",
															"_kind": "class",
															"_name": "callback",
															"class_kind": "class",
															"id": 93824997040048,
															"is_declaration": true,
															"is_definition": false,
															"is_final": false,
															"kind": "class",
															"name": "callback",
															"scope": {
																"is_templated": true,
																"name": "callback",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "UnusedType",
																	"id": 93824997058880,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "UnusedType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824997058480,
														"kind": "class template",
														"name": "callback",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "UnusedType",
															"id": 93824997058880,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "UnusedType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "callback",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "UnusedType",
																"id": 93824997058880,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "UnusedType"
															}]
														}
													}]
												},
												"unexposed_arguments": "T"
											}
										}
									}]
								},
								"unexposed_arguments": "void (stappler::sql::Query::Select &)"
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "void",
					"builtin_type_kind": "void",
					"kind": "builtin"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "(Callback<void (stappler::sql::Query::Select &)> const&)"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&)",
				"_kind": "member function",
				"_name": "writeBind",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825001578464,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "writeBind",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "f",
					"id": 93825003093456,
					"kind": "function parameter",
					"name": "f",
					"type": {
						"_typeName": "stappler::sql::Query::Field const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::sql::Query::Field const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::sql::Query::Field",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Field",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Field",
										"_kind": "class",
										"_name": "Field",
										"class_kind": "struct",
										"id": 93825003102816,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Field",
										"scope": {
											"name": "Field"
										},
										"semantic_scope": ""
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "void",
					"builtin_type_kind": "void",
					"kind": "builtin"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "(stappler::sql::Query::Field const&)"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::sql::Query::Field const&,bool)",
				"_kind": "member function",
				"_name": "writeBind",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825003093744,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "writeBind",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "f",
					"id": 93825003094208,
					"kind": "function parameter",
					"name": "f",
					"type": {
						"_typeName": "stappler::sql::Query::Field const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::sql::Query::Field const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::sql::Query::Field",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Field",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Field",
										"_kind": "class",
										"_name": "Field",
										"class_kind": "struct",
										"id": 93825003102816,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Field",
										"scope": {
											"name": "Field"
										},
										"semantic_scope": ""
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "withAlias",
					"id": 93825003094448,
					"kind": "function parameter",
					"name": "withAlias",
					"type": {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "void",
					"builtin_type_kind": "void",
					"kind": "builtin"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "(stappler::sql::Query::Field const&,bool)"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::writeBind(stappler::StringView const&,stappler::sql::Query::Field const&)",
				"_kind": "member function",
				"_name": "writeBind",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825003094880,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "writeBind",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "func",
					"id": 93825003095344,
					"kind": "function parameter",
					"name": "func",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "f",
					"id": 93825003095776,
					"kind": "function parameter",
					"name": "f",
					"type": {
						"_typeName": "stappler::sql::Query::Field const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::sql::Query::Field const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::sql::Query::Field",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::Field",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::Field",
										"_kind": "class",
										"_name": "Field",
										"class_kind": "struct",
										"id": 93825003102816,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "Field",
										"scope": {
											"name": "Field"
										},
										"semantic_scope": ""
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "void",
					"builtin_type_kind": "void",
					"kind": "builtin"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "(stappler::StringView const&,stappler::sql::Query::Field const&)"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::getStream()",
				"_kind": "member function",
				"_name": "getStream",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825003963920,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "getStream",
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "typename Query<Binder, Interface>::Stream&",
					"kind": "reference",
					"referee": {
						"_typeName": "typename Query<Binder, Interface>::Stream",
						"kind": "user_defined",
						"target": {
							"name": "typename Query<Binder, Interface>::Stream",
							"objects": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Stream",
								"_kind": "type alias",
								"_name": "Stream",
								"id": 93825012332768,
								"kind": "type alias",
								"name": "Stream",
								"underlying_type": {
									"_typeName": "typename Interface::StringStreamType",
									"kind": "unexposed",
									"name": "typename Interface::StringStreamType"
								}
							}]
						}
					},
					"reference_kind": "lvalue"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "()"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::getBinder()",
				"_kind": "member function",
				"_name": "getBinder",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825003964304,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "getBinder",
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "Binder&",
					"kind": "reference",
					"referee": {
						"_typeName": "Binder",
						"entity": {
							"name": "Binder",
							"objects": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}]
						},
						"kind": "template_parameter"
					},
					"reference_kind": "lvalue"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "()"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::getTarget() const",
				"_kind": "member function",
				"_name": "getTarget",
				"body_kind": "definition",
				"cv_qualifier": "const",
				"id": 93825003964624,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "getTarget",
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "stappler::StringView",
					"kind": "user_defined",
					"target": {
						"name": "stappler::StringView",
						"objects": [{
							"_fullName": "::stappler::StringView",
							"_kind": "type alias",
							"_name": "StringView",
							"id": 93824997448656,
							"kind": "type alias",
							"name": "StringView",
							"underlying_type": {
								"_typeName": "StringViewBase<char>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "StringViewBase",
									"objects": [{
										"_fullName": "::stappler::StringViewBase<typename>",
										"_kind": "class template",
										"_name": "StringViewBase",
										"class": {
											"_fullName": "::stappler::StringViewBase<typename>",
											"_kind": "class",
											"_name": "StringViewBase",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "BytesReader<_CharType>",
												"access_specifier": "public",
												"id": 93824998090352,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "BytesReader<_CharType>",
												"type": {
													"_typeName": "BytesReader<_CharType>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "BytesReader",
														"objects": [{
															"_fullName": "::stappler::BytesReader<typename>",
															"_kind": "class template",
															"_name": "BytesReader",
															"class": {
																"_fullName": "::stappler::BytesReader<typename>",
																"_kind": "class",
																"_name": "BytesReader",
																"class_kind": "class",
																"id": 140736954953792,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "BytesReader",
																"scope": {
																	"is_templated": true,
																	"name": "BytesReader",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "_CharType",
																		"id": 140737098599232,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "_CharType"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93824998648144,
															"kind": "class template",
															"name": "BytesReader",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 140737098599232,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}],
															"scope":  {
																"is_templated": true,
																"name": "BytesReader",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 140737098599232,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															}
														}]
													},
													"unexposed_arguments": "_CharType"
												}
											}],
											"class_kind": "class",
											"id": 140737094580320,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "StringViewBase",
											"scope": {
												"is_templated": true,
												"name": "StringViewBase",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "_CharType",
													"id": 93824999493712,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "_CharType"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93824999493216,
										"kind": "class template",
										"name": "StringViewBase",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "_CharType",
											"id": 93824999493712,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "_CharType"
										}],
										"scope":  {
											"is_templated": true,
											"name": "StringViewBase",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "_CharType",
												"id": 93824999493712,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "_CharType"
											}]
										}
									}]
								},
								"unexposed_arguments": "char"
							}
						}]
					}
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "() const"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::finalize()",
				"_kind": "member function",
				"_name": "finalize",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825003965248,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "finalize",
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "void",
					"builtin_type_kind": "void",
					"kind": "builtin"
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>",
						"_kind": "class template",
						"_name": "Query",
						"class": {
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class",
							"_name": "Query",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "Interface::AllocBaseType",
								"access_specifier": "public",
								"id": 93825012332480,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "Interface::AllocBaseType",
								"type": {
									"_typeName": "Interface::AllocBaseType",
									"kind": "unexposed",
									"name": "Interface::AllocBaseType"
								}
							}],
							"class_kind": "class",
							"id": 93824999139696,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Query",
							"scope": {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							},
							"semantic_scope": ""
						},
						"id": 93825003091968,
						"kind": "class template",
						"name": "Query",
						"parameters": [{
							"_kind": "template type parameter",
							"_name": "Binder",
							"id": 93825003092240,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Binder"
						}, {
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 93825003092480,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}],
						"scope":  {
							"is_templated": true,
							"name": "Query",
							"template_parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}]
						}
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::",
				"signature": "()"
			}, {
				"_fullName": "::stappler::sql::Query<typename,typename>::with<typename,typename,typename>(stappler::StringView const&,Callback const&)",
				"_kind": "function template",
				"_name": "with",
				"childs": [{
					"_fullName": "::stappler::sql::Query<typename,typename>::with<typename,typename,typename>(stappler::StringView const&,Callback const&)",
					"_kind": "member function",
					"_name": "with",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825003965632,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "with",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "alias",
						"id": 93825003966096,
						"kind": "function parameter",
						"name": "alias",
						"type": {
							"_typeName": "stappler::StringView const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::StringView const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::StringView",
									"kind": "user_defined",
									"target": {
										"name": "stappler::StringView",
										"objects": [{
											"_fullName": "::stappler::StringView",
											"_kind": "type alias",
											"_name": "StringView",
											"id": 93824997448656,
											"kind": "type alias",
											"name": "StringView",
											"underlying_type": {
												"_typeName": "StringViewBase<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "StringViewBase",
													"objects": [{
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class template",
														"_name": "StringViewBase",
														"class": {
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class",
															"_name": "StringViewBase",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "BytesReader<_CharType>",
																"access_specifier": "public",
																"id": 93824998090352,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "BytesReader<_CharType>",
																"type": {
																	"_typeName": "BytesReader<_CharType>",
																	"arguments_exposed": false,
																	"kind": "template_instantiation",
																	"primary_template": {
																		"name": "BytesReader",
																		"objects": [{
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class template",
																			"_name": "BytesReader",
																			"class": {
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class",
																				"_name": "BytesReader",
																				"class_kind": "class",
																				"id": 140736954953792,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "BytesReader",
																				"scope": {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				},
																				"semantic_scope": ""
																			},
																			"id": 93824998648144,
																			"kind": "class template",
																			"name": "BytesReader",
																			"parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}],
																			"scope":  {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			}
																		}]
																	},
																	"unexposed_arguments": "_CharType"
																}
															}],
															"class_kind": "class",
															"id": 140737094580320,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "StringViewBase",
															"scope": {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824999493216,
														"kind": "class template",
														"name": "StringViewBase",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "cb",
						"id": 93825012152944,
						"kind": "function parameter",
						"name": "cb",
						"type": {
							"_typeName": "Callback const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback",
									"entity": {
										"name": "Callback",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Callback",
											"id": 93825012153456,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Callback"
										}]
									},
									"kind": "template_parameter"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::sql::Query::GenericQuery",
						"kind": "user_defined",
						"target": {
							"name": "stappler::sql::Query::GenericQuery",
							"objects": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
								"_kind": "class",
								"_name": "GenericQuery",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "QueryHandle",
									"access_specifier": "public",
									"id": 93825012282768,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "QueryHandle",
									"type": {
										"_typeName": "stappler::sql::Query::QueryHandle",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::QueryHandle",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
												"_kind": "class",
												"_name": "QueryHandle",
												"class_kind": "struct",
												"id": 93825007976864,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "QueryHandle",
												"scope": {
													"name": "QueryHandle"
												},
												"semantic_scope": ""
											}]
										}
									}
								}],
								"class_kind": "struct",
								"id": 93825012282512,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "GenericQuery",
								"scope": {
									"name": "GenericQuery"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class template",
							"_name": "Query",
							"class": {
								"_fullName": "::stappler::sql::Query<typename,typename>",
								"_kind": "class",
								"_name": "Query",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "Interface::AllocBaseType",
									"access_specifier": "public",
									"id": 93825012332480,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "Interface::AllocBaseType",
									"type": {
										"_typeName": "Interface::AllocBaseType",
										"kind": "unexposed",
										"name": "Interface::AllocBaseType"
									}
								}],
								"class_kind": "class",
								"id": 93824999139696,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Query",
								"scope": {
									"is_templated": true,
									"name": "Query",
									"template_parameters": [{
										"_kind": "template type parameter",
										"_name": "Binder",
										"id": 93825003092240,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Binder"
									}, {
										"_kind": "template type parameter",
										"_name": "Interface",
										"id": 93825003092480,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Interface"
									}]
								},
								"semantic_scope": ""
							},
							"id": 93825003091968,
							"kind": "class template",
							"name": "Query",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}],
							"scope":  {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							}
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::",
					"signature": "(stappler::StringView const&,Callback const&)"
				}],
				"function":  {
					"_fullName": "::stappler::sql::Query<typename,typename>::with<typename,typename,typename>(stappler::StringView const&,Callback const&)",
					"_kind": "member function",
					"_name": "with",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825003965632,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "with",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "alias",
						"id": 93825003966096,
						"kind": "function parameter",
						"name": "alias",
						"type": {
							"_typeName": "stappler::StringView const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::StringView const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::StringView",
									"kind": "user_defined",
									"target": {
										"name": "stappler::StringView",
										"objects": [{
											"_fullName": "::stappler::StringView",
											"_kind": "type alias",
											"_name": "StringView",
											"id": 93824997448656,
											"kind": "type alias",
											"name": "StringView",
											"underlying_type": {
												"_typeName": "StringViewBase<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "StringViewBase",
													"objects": [{
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class template",
														"_name": "StringViewBase",
														"class": {
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class",
															"_name": "StringViewBase",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "BytesReader<_CharType>",
																"access_specifier": "public",
																"id": 93824998090352,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "BytesReader<_CharType>",
																"type": {
																	"_typeName": "BytesReader<_CharType>",
																	"arguments_exposed": false,
																	"kind": "template_instantiation",
																	"primary_template": {
																		"name": "BytesReader",
																		"objects": [{
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class template",
																			"_name": "BytesReader",
																			"class": {
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class",
																				"_name": "BytesReader",
																				"class_kind": "class",
																				"id": 140736954953792,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "BytesReader",
																				"scope": {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				},
																				"semantic_scope": ""
																			},
																			"id": 93824998648144,
																			"kind": "class template",
																			"name": "BytesReader",
																			"parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}],
																			"scope":  {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			}
																		}]
																	},
																	"unexposed_arguments": "_CharType"
																}
															}],
															"class_kind": "class",
															"id": 140737094580320,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "StringViewBase",
															"scope": {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824999493216,
														"kind": "class template",
														"name": "StringViewBase",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "cb",
						"id": 93825012152944,
						"kind": "function parameter",
						"name": "cb",
						"type": {
							"_typeName": "Callback const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback",
									"entity": {
										"name": "Callback",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Callback",
											"id": 93825012153456,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Callback"
										}]
									},
									"kind": "template_parameter"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::sql::Query::GenericQuery",
						"kind": "user_defined",
						"target": {
							"name": "stappler::sql::Query::GenericQuery",
							"objects": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
								"_kind": "class",
								"_name": "GenericQuery",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "QueryHandle",
									"access_specifier": "public",
									"id": 93825012282768,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "QueryHandle",
									"type": {
										"_typeName": "stappler::sql::Query::QueryHandle",
										"kind": "user_defined",
										"target": {
											"name": "stappler::sql::Query::QueryHandle",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
												"_kind": "class",
												"_name": "QueryHandle",
												"class_kind": "struct",
												"id": 93825007976864,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "QueryHandle",
												"scope": {
													"name": "QueryHandle"
												},
												"semantic_scope": ""
											}]
										}
									}
								}],
								"class_kind": "struct",
								"id": 93825012282512,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "GenericQuery",
								"scope": {
									"name": "GenericQuery"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>",
							"_kind": "class template",
							"_name": "Query",
							"class": {
								"_fullName": "::stappler::sql::Query<typename,typename>",
								"_kind": "class",
								"_name": "Query",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "Interface::AllocBaseType",
									"access_specifier": "public",
									"id": 93825012332480,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "Interface::AllocBaseType",
									"type": {
										"_typeName": "Interface::AllocBaseType",
										"kind": "unexposed",
										"name": "Interface::AllocBaseType"
									}
								}],
								"class_kind": "class",
								"id": 93824999139696,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Query",
								"scope": {
									"is_templated": true,
									"name": "Query",
									"template_parameters": [{
										"_kind": "template type parameter",
										"_name": "Binder",
										"id": 93825003092240,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Binder"
									}, {
										"_kind": "template type parameter",
										"_name": "Interface",
										"id": 93825003092480,
										"is_variadic": false,
										"keyword": "typename",
										"kind": "template type parameter",
										"name": "Interface"
									}]
								},
								"semantic_scope": ""
							},
							"id": 93825003091968,
							"kind": "class template",
							"name": "Query",
							"parameters": [{
								"_kind": "template type parameter",
								"_name": "Binder",
								"id": 93825003092240,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Binder"
							}, {
								"_kind": "template type parameter",
								"_name": "Interface",
								"id": 93825003092480,
								"is_variadic": false,
								"keyword": "typename",
								"kind": "template type parameter",
								"name": "Interface"
							}],
							"scope":  {
								"is_templated": true,
								"name": "Query",
								"template_parameters": [{
									"_kind": "template type parameter",
									"_name": "Binder",
									"id": 93825003092240,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Binder"
								}, {
									"_kind": "template type parameter",
									"_name": "Interface",
									"id": 93825003092480,
									"is_variadic": false,
									"keyword": "typename",
									"kind": "template type parameter",
									"name": "Interface"
								}]
							}
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::",
					"signature": "(stappler::StringView const&,Callback const&)"
				},
				"id": 93825012153232,
				"kind": "function template",
				"name": "with",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Callback",
					"id": 93825012153456,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Callback"
				}, {
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825012153648,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825012153888,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}]
			}, {
				"_fullName": "::stappler::sql::GenericQuery::with<typename,typename,typename>(stappler::StringView const&,Callback const&)",
				"_kind": "function template",
				"_name": "with",
				"childs": [{
					"_fullName": "::stappler::sql::GenericQuery::with<typename,typename,typename>(stappler::StringView const&,Callback const&)",
					"_kind": "member function",
					"_name": "with",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825012151536,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "with",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "alias",
						"id": 93825012151952,
						"kind": "function parameter",
						"name": "alias",
						"type": {
							"_typeName": "stappler::StringView const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::StringView const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::StringView",
									"kind": "user_defined",
									"target": {
										"name": "stappler::StringView",
										"objects": [{
											"_fullName": "::stappler::StringView",
											"_kind": "type alias",
											"_name": "StringView",
											"id": 93824997448656,
											"kind": "type alias",
											"name": "StringView",
											"underlying_type": {
												"_typeName": "StringViewBase<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "StringViewBase",
													"objects": [{
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class template",
														"_name": "StringViewBase",
														"class": {
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class",
															"_name": "StringViewBase",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "BytesReader<_CharType>",
																"access_specifier": "public",
																"id": 93824998090352,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "BytesReader<_CharType>",
																"type": {
																	"_typeName": "BytesReader<_CharType>",
																	"arguments_exposed": false,
																	"kind": "template_instantiation",
																	"primary_template": {
																		"name": "BytesReader",
																		"objects": [{
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class template",
																			"_name": "BytesReader",
																			"class": {
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class",
																				"_name": "BytesReader",
																				"class_kind": "class",
																				"id": 140736954953792,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "BytesReader",
																				"scope": {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				},
																				"semantic_scope": ""
																			},
																			"id": 93824998648144,
																			"kind": "class template",
																			"name": "BytesReader",
																			"parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}],
																			"scope":  {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			}
																		}]
																	},
																	"unexposed_arguments": "_CharType"
																}
															}],
															"class_kind": "class",
															"id": 140737094580320,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "StringViewBase",
															"scope": {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824999493216,
														"kind": "class template",
														"name": "StringViewBase",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "cb",
						"id": 93825012152336,
						"kind": "function parameter",
						"name": "cb",
						"type": {
							"_typeName": "Callback const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback",
									"entity": {
										"name": "Callback",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Callback",
											"id": 93825012152688,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Callback"
										}]
									},
									"kind": "template_parameter"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::sql::Query::GenericQuery&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::sql::Query::GenericQuery",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::GenericQuery",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
									"_kind": "class",
									"_name": "GenericQuery",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "QueryHandle",
										"access_specifier": "public",
										"id": 93825012282768,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "QueryHandle",
										"type": {
											"_typeName": "stappler::sql::Query::QueryHandle",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::QueryHandle",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
													"_kind": "class",
													"_name": "QueryHandle",
													"class_kind": "struct",
													"id": 93825007976864,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "QueryHandle",
													"scope": {
														"name": "QueryHandle"
													},
													"semantic_scope": ""
												}]
											}
										}
									}],
									"class_kind": "struct",
									"id": 93825012282512,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "GenericQuery",
									"scope": {
										"name": "GenericQuery"
									},
									"semantic_scope": ""
								}]
							}
						},
						"reference_kind": "lvalue"
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::GenericQuery::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
							"_kind": "class",
							"_name": "GenericQuery",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825012282768,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825012282512,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "GenericQuery",
							"scope": {
								"name": "GenericQuery"
							},
							"semantic_scope": ""
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
					"signature": "(stappler::StringView const&,Callback const&)"
				}],
				"function":  {
					"_fullName": "::stappler::sql::GenericQuery::with<typename,typename,typename>(stappler::StringView const&,Callback const&)",
					"_kind": "member function",
					"_name": "with",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825012151536,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "with",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "alias",
						"id": 93825012151952,
						"kind": "function parameter",
						"name": "alias",
						"type": {
							"_typeName": "stappler::StringView const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::StringView const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::StringView",
									"kind": "user_defined",
									"target": {
										"name": "stappler::StringView",
										"objects": [{
											"_fullName": "::stappler::StringView",
											"_kind": "type alias",
											"_name": "StringView",
											"id": 93824997448656,
											"kind": "type alias",
											"name": "StringView",
											"underlying_type": {
												"_typeName": "StringViewBase<char>",
												"arguments_exposed": false,
												"kind": "template_instantiation",
												"primary_template": {
													"name": "StringViewBase",
													"objects": [{
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class template",
														"_name": "StringViewBase",
														"class": {
															"_fullName": "::stappler::StringViewBase<typename>",
															"_kind": "class",
															"_name": "StringViewBase",
															"bases": [{
																"_kind": "base class specifier",
																"_name": "BytesReader<_CharType>",
																"access_specifier": "public",
																"id": 93824998090352,
																"is_virtual": false,
																"kind": "base class specifier",
																"name": "BytesReader<_CharType>",
																"type": {
																	"_typeName": "BytesReader<_CharType>",
																	"arguments_exposed": false,
																	"kind": "template_instantiation",
																	"primary_template": {
																		"name": "BytesReader",
																		"objects": [{
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class template",
																			"_name": "BytesReader",
																			"class": {
																				"_fullName": "::stappler::BytesReader<typename>",
																				"_kind": "class",
																				"_name": "BytesReader",
																				"class_kind": "class",
																				"id": 140736954953792,
																				"is_declaration": false,
																				"is_definition": true,
																				"is_final": false,
																				"kind": "class",
																				"name": "BytesReader",
																				"scope": {
																					"is_templated": true,
																					"name": "BytesReader",
																					"template_parameters": [{
																						"_kind": "template type parameter",
																						"_name": "_CharType",
																						"id": 140737098599232,
																						"is_variadic": false,
																						"keyword": "typename",
																						"kind": "template type parameter",
																						"name": "_CharType"
																					}]
																				},
																				"semantic_scope": ""
																			},
																			"id": 93824998648144,
																			"kind": "class template",
																			"name": "BytesReader",
																			"parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}],
																			"scope":  {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			}
																		}]
																	},
																	"unexposed_arguments": "_CharType"
																}
															}],
															"class_kind": "class",
															"id": 140737094580320,
															"is_declaration": false,
															"is_definition": true,
															"is_final": false,
															"kind": "class",
															"name": "StringViewBase",
															"scope": {
																"is_templated": true,
																"name": "StringViewBase",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "_CharType",
																	"id": 93824999493712,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "_CharType"
																}]
															},
															"semantic_scope": ""
														},
														"id": 93824999493216,
														"kind": "class template",
														"name": "StringViewBase",
														"parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}],
														"scope":  {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														}
													}]
												},
												"unexposed_arguments": "char"
											}
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "cb",
						"id": 93825012152336,
						"kind": "function parameter",
						"name": "cb",
						"type": {
							"_typeName": "Callback const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback",
									"entity": {
										"name": "Callback",
										"objects": [{
											"_kind": "template type parameter",
											"_name": "Callback",
											"id": 93825012152688,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Callback"
										}]
									},
									"kind": "template_parameter"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::sql::Query::GenericQuery&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::sql::Query::GenericQuery",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::GenericQuery",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
									"_kind": "class",
									"_name": "GenericQuery",
									"bases": [{
										"_kind": "base class specifier",
										"_name": "QueryHandle",
										"access_specifier": "public",
										"id": 93825012282768,
										"is_virtual": false,
										"kind": "base class specifier",
										"name": "QueryHandle",
										"type": {
											"_typeName": "stappler::sql::Query::QueryHandle",
											"kind": "user_defined",
											"target": {
												"name": "stappler::sql::Query::QueryHandle",
												"objects": [{
													"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
													"_kind": "class",
													"_name": "QueryHandle",
													"class_kind": "struct",
													"id": 93825007976864,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "QueryHandle",
													"scope": {
														"name": "QueryHandle"
													},
													"semantic_scope": ""
												}]
											}
										}
									}],
									"class_kind": "struct",
									"id": 93825012282512,
									"is_declaration": false,
									"is_definition": true,
									"is_final": false,
									"kind": "class",
									"name": "GenericQuery",
									"scope": {
										"name": "GenericQuery"
									},
									"semantic_scope": ""
								}]
							}
						},
						"reference_kind": "lvalue"
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::GenericQuery::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
							"_kind": "class",
							"_name": "GenericQuery",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825012282768,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825012282512,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "GenericQuery",
							"scope": {
								"name": "GenericQuery"
							},
							"semantic_scope": ""
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
					"signature": "(stappler::StringView const&,Callback const&)"
				},
				"id": 93825012154128,
				"kind": "function template",
				"name": "with",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Callback",
					"id": 93825012152688,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Callback"
				}, {
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825000165856,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825000166096,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}]
			}, {
				"_fullName": "::stappler::sql::GenericQuery::select(stappler::sql::Query::Distinct)",
				"_kind": "member function",
				"_name": "select",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825000167744,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "select",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "d",
					"id": 93825000168160,
					"kind": "function parameter",
					"name": "d",
					"type": {
						"_typeName": "stappler::sql::Query::Distinct",
						"kind": "user_defined",
						"target": {
							"name": "stappler::sql::Query::Distinct",
							"objects": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
								"_kind": "enum",
								"_name": "Distinct",
								"has_explicit_type": false,
								"id": 93825005006880,
								"is_declaration": false,
								"is_definition": true,
								"is_scoped": true,
								"kind": "enum",
								"name": "Distinct",
								"scope": {
									"name": "Distinct"
								},
								"semantic_scope": "",
								"underlying_type": {
									"_typeName": "int",
									"builtin_type_kind": "int",
									"kind": "builtin"
								}
							}]
						}
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "stappler::sql::Query::Select",
					"kind": "user_defined",
					"target": {
						"name": "stappler::sql::Query::Select",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Select",
							"_kind": "class",
							"_name": "Select",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "FieldsClause<Select>",
								"access_specifier": "public",
								"id": 93825003304304,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "FieldsClause<Select>",
								"type": {
									"_typeName": "FieldsClause<stappler::sql::Query::Select>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "FieldsClause",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
											"_kind": "class template",
											"_name": "FieldsClause",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
												"_kind": "class",
												"_name": "FieldsClause",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825012122384,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825012121984,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "FieldsClause",
												"scope": {
													"is_templated": true,
													"name": "FieldsClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825012136880,
											"kind": "class template",
											"name": "FieldsClause",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}],
											"scope":  {
												"is_templated": true,
												"name": "FieldsClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											}
										}]
									},
									"unexposed_arguments": "stappler::sql::Query::Select"
								}
							}],
							"class_kind": "struct",
							"id": 93825000740336,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Select",
							"scope": {
								"name": "Select"
							},
							"semantic_scope": ""
						}]
					}
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::GenericQuery::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
						"_kind": "class",
						"_name": "GenericQuery",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825012282768,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825012282512,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "GenericQuery",
						"scope": {
							"name": "GenericQuery"
						},
						"semantic_scope": ""
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
				"signature": "(stappler::sql::Query::Distinct)"
			}, {
				"_fullName": "::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)",
				"_kind": "function template",
				"_name": "select",
				"childs": [{
					"_fullName": "::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)",
					"_kind": "member function",
					"_name": "select",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825000168560,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "select",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "f",
						"id": 93825000166528,
						"kind": "function parameter",
						"name": "f",
						"type": {
							"_typeName": "stappler::sql::Query::Field const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::sql::Query::Field const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "args",
						"id": 93825000166784,
						"kind": "function parameter",
						"name": "args",
						"type": {
							"_typeName": "Args &&...",
							"kind": "unexposed",
							"name": "Args &&..."
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::sql::Query::Select",
						"kind": "user_defined",
						"target": {
							"name": "stappler::sql::Query::Select",
							"objects": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Select",
								"_kind": "class",
								"_name": "Select",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "FieldsClause<Select>",
									"access_specifier": "public",
									"id": 93825003304304,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "FieldsClause<Select>",
									"type": {
										"_typeName": "FieldsClause<stappler::sql::Query::Select>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "FieldsClause",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
												"_kind": "class template",
												"_name": "FieldsClause",
												"class": {
													"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
													"_kind": "class",
													"_name": "FieldsClause",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "QueryHandle",
														"access_specifier": "public",
														"id": 93825012122384,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "QueryHandle",
														"type": {
															"_typeName": "stappler::sql::Query::QueryHandle",
															"kind": "user_defined",
															"target": {
																"name": "stappler::sql::Query::QueryHandle",
																"objects": [{
																	"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																	"_kind": "class",
																	"_name": "QueryHandle",
																	"class_kind": "struct",
																	"id": 93825007976864,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "QueryHandle",
																	"scope": {
																		"name": "QueryHandle"
																	},
																	"semantic_scope": ""
																}]
															}
														}
													}],
													"class_kind": "struct",
													"id": 93825012121984,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "FieldsClause",
													"scope": {
														"is_templated": true,
														"name": "FieldsClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93825012136880,
												"kind": "class template",
												"name": "FieldsClause",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}],
												"scope":  {
													"is_templated": true,
													"name": "FieldsClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												}
											}]
										},
										"unexposed_arguments": "stappler::sql::Query::Select"
									}
								}],
								"class_kind": "struct",
								"id": 93825000740336,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Select",
								"scope": {
									"name": "Select"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::GenericQuery::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
							"_kind": "class",
							"_name": "GenericQuery",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825012282768,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825012282512,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "GenericQuery",
							"scope": {
								"name": "GenericQuery"
							},
							"semantic_scope": ""
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
					"signature": "(stappler::sql::Query::Field const&,Args &&...)"
				}],
				"function":  {
					"_fullName": "::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Field const&,Args &&...)",
					"_kind": "member function",
					"_name": "select",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825000168560,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "select",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "f",
						"id": 93825000166528,
						"kind": "function parameter",
						"name": "f",
						"type": {
							"_typeName": "stappler::sql::Query::Field const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::sql::Query::Field const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "args",
						"id": 93825000166784,
						"kind": "function parameter",
						"name": "args",
						"type": {
							"_typeName": "Args &&...",
							"kind": "unexposed",
							"name": "Args &&..."
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::sql::Query::Select",
						"kind": "user_defined",
						"target": {
							"name": "stappler::sql::Query::Select",
							"objects": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Select",
								"_kind": "class",
								"_name": "Select",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "FieldsClause<Select>",
									"access_specifier": "public",
									"id": 93825003304304,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "FieldsClause<Select>",
									"type": {
										"_typeName": "FieldsClause<stappler::sql::Query::Select>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "FieldsClause",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
												"_kind": "class template",
												"_name": "FieldsClause",
												"class": {
													"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
													"_kind": "class",
													"_name": "FieldsClause",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "QueryHandle",
														"access_specifier": "public",
														"id": 93825012122384,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "QueryHandle",
														"type": {
															"_typeName": "stappler::sql::Query::QueryHandle",
															"kind": "user_defined",
															"target": {
																"name": "stappler::sql::Query::QueryHandle",
																"objects": [{
																	"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																	"_kind": "class",
																	"_name": "QueryHandle",
																	"class_kind": "struct",
																	"id": 93825007976864,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "QueryHandle",
																	"scope": {
																		"name": "QueryHandle"
																	},
																	"semantic_scope": ""
																}]
															}
														}
													}],
													"class_kind": "struct",
													"id": 93825012121984,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "FieldsClause",
													"scope": {
														"is_templated": true,
														"name": "FieldsClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93825012136880,
												"kind": "class template",
												"name": "FieldsClause",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}],
												"scope":  {
													"is_templated": true,
													"name": "FieldsClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												}
											}]
										},
										"unexposed_arguments": "stappler::sql::Query::Select"
									}
								}],
								"class_kind": "struct",
								"id": 93825000740336,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Select",
								"scope": {
									"name": "Select"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::GenericQuery::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
							"_kind": "class",
							"_name": "GenericQuery",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825012282768,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825012282512,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "GenericQuery",
							"scope": {
								"name": "GenericQuery"
							},
							"semantic_scope": ""
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
					"signature": "(stappler::sql::Query::Field const&,Args &&...)"
				},
				"id": 93825000167072,
				"kind": "function template",
				"name": "select",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Args",
					"id": 93825004668512,
					"is_variadic": true,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Args"
				}, {
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825004668704,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825004668944,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}]
			}, {
				"_fullName": "::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
				"_kind": "function template",
				"_name": "select",
				"childs": [{
					"_fullName": "::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
					"_kind": "member function",
					"_name": "select",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825004670832,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "select",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "d",
						"id": 93825004671248,
						"kind": "function parameter",
						"name": "d",
						"type": {
							"_typeName": "stappler::sql::Query::Distinct",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Distinct",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
									"_kind": "enum",
									"_name": "Distinct",
									"has_explicit_type": false,
									"id": 93825005006880,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "Distinct",
									"scope": {
										"name": "Distinct"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						}
					}, {
						"_kind": "function parameter",
						"_name": "f",
						"id": 93825002086384,
						"kind": "function parameter",
						"name": "f",
						"type": {
							"_typeName": "stappler::sql::Query::Field const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::sql::Query::Field const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "args",
						"id": 93825002086640,
						"kind": "function parameter",
						"name": "args",
						"type": {
							"_typeName": "Args &&...",
							"kind": "unexposed",
							"name": "Args &&..."
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::sql::Query::Select",
						"kind": "user_defined",
						"target": {
							"name": "stappler::sql::Query::Select",
							"objects": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Select",
								"_kind": "class",
								"_name": "Select",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "FieldsClause<Select>",
									"access_specifier": "public",
									"id": 93825003304304,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "FieldsClause<Select>",
									"type": {
										"_typeName": "FieldsClause<stappler::sql::Query::Select>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "FieldsClause",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
												"_kind": "class template",
												"_name": "FieldsClause",
												"class": {
													"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
													"_kind": "class",
													"_name": "FieldsClause",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "QueryHandle",
														"access_specifier": "public",
														"id": 93825012122384,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "QueryHandle",
														"type": {
															"_typeName": "stappler::sql::Query::QueryHandle",
															"kind": "user_defined",
															"target": {
																"name": "stappler::sql::Query::QueryHandle",
																"objects": [{
																	"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																	"_kind": "class",
																	"_name": "QueryHandle",
																	"class_kind": "struct",
																	"id": 93825007976864,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "QueryHandle",
																	"scope": {
																		"name": "QueryHandle"
																	},
																	"semantic_scope": ""
																}]
															}
														}
													}],
													"class_kind": "struct",
													"id": 93825012121984,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "FieldsClause",
													"scope": {
														"is_templated": true,
														"name": "FieldsClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93825012136880,
												"kind": "class template",
												"name": "FieldsClause",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}],
												"scope":  {
													"is_templated": true,
													"name": "FieldsClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												}
											}]
										},
										"unexposed_arguments": "stappler::sql::Query::Select"
									}
								}],
								"class_kind": "struct",
								"id": 93825000740336,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Select",
								"scope": {
									"name": "Select"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::GenericQuery::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
							"_kind": "class",
							"_name": "GenericQuery",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825012282768,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825012282512,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "GenericQuery",
							"scope": {
								"name": "GenericQuery"
							},
							"semantic_scope": ""
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
					"signature": "(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)"
				}],
				"function":  {
					"_fullName": "::stappler::sql::GenericQuery::select<typename,typename,typename>(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)",
					"_kind": "member function",
					"_name": "select",
					"body_kind": "definition",
					"cv_qualifier": "none",
					"id": 93825004670832,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": false,
					"is_definition": true,
					"is_variadic": false,
					"is_virtual": false,
					"kind": "member function",
					"name": "select",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "d",
						"id": 93825004671248,
						"kind": "function parameter",
						"name": "d",
						"type": {
							"_typeName": "stappler::sql::Query::Distinct",
							"kind": "user_defined",
							"target": {
								"name": "stappler::sql::Query::Distinct",
								"objects": [{
									"_fullName": "::stappler::sql::Query<typename,typename>::Distinct",
									"_kind": "enum",
									"_name": "Distinct",
									"has_explicit_type": false,
									"id": 93825005006880,
									"is_declaration": false,
									"is_definition": true,
									"is_scoped": true,
									"kind": "enum",
									"name": "Distinct",
									"scope": {
										"name": "Distinct"
									},
									"semantic_scope": "",
									"underlying_type": {
										"_typeName": "int",
										"builtin_type_kind": "int",
										"kind": "builtin"
									}
								}]
							}
						}
					}, {
						"_kind": "function parameter",
						"_name": "f",
						"id": 93825002086384,
						"kind": "function parameter",
						"name": "f",
						"type": {
							"_typeName": "stappler::sql::Query::Field const&",
							"kind": "reference",
							"referee": {
								"_typeName": "stappler::sql::Query::Field const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "stappler::sql::Query::Field",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::Field",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::Field",
											"_kind": "class",
											"_name": "Field",
											"class_kind": "struct",
											"id": 93825003102816,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Field",
											"scope": {
												"name": "Field"
											},
											"semantic_scope": ""
										}]
									}
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "args",
						"id": 93825002086640,
						"kind": "function parameter",
						"name": "args",
						"type": {
							"_typeName": "Args &&...",
							"kind": "unexposed",
							"name": "Args &&..."
						}
					}],
					"ref_qualifier": "none",
					"return_type": {
						"_typeName": "stappler::sql::Query::Select",
						"kind": "user_defined",
						"target": {
							"name": "stappler::sql::Query::Select",
							"objects": [{
								"_fullName": "::stappler::sql::Query<typename,typename>::Select",
								"_kind": "class",
								"_name": "Select",
								"bases": [{
									"_kind": "base class specifier",
									"_name": "FieldsClause<Select>",
									"access_specifier": "public",
									"id": 93825003304304,
									"is_virtual": false,
									"kind": "base class specifier",
									"name": "FieldsClause<Select>",
									"type": {
										"_typeName": "FieldsClause<stappler::sql::Query::Select>",
										"arguments_exposed": false,
										"kind": "template_instantiation",
										"primary_template": {
											"name": "FieldsClause",
											"objects": [{
												"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
												"_kind": "class template",
												"_name": "FieldsClause",
												"class": {
													"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
													"_kind": "class",
													"_name": "FieldsClause",
													"bases": [{
														"_kind": "base class specifier",
														"_name": "QueryHandle",
														"access_specifier": "public",
														"id": 93825012122384,
														"is_virtual": false,
														"kind": "base class specifier",
														"name": "QueryHandle",
														"type": {
															"_typeName": "stappler::sql::Query::QueryHandle",
															"kind": "user_defined",
															"target": {
																"name": "stappler::sql::Query::QueryHandle",
																"objects": [{
																	"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																	"_kind": "class",
																	"_name": "QueryHandle",
																	"class_kind": "struct",
																	"id": 93825007976864,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "QueryHandle",
																	"scope": {
																		"name": "QueryHandle"
																	},
																	"semantic_scope": ""
																}]
															}
														}
													}],
													"class_kind": "struct",
													"id": 93825012121984,
													"is_declaration": false,
													"is_definition": true,
													"is_final": false,
													"kind": "class",
													"name": "FieldsClause",
													"scope": {
														"is_templated": true,
														"name": "FieldsClause",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "Clause",
															"id": 93825012282272,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "Clause"
														}]
													},
													"semantic_scope": ""
												},
												"id": 93825012136880,
												"kind": "class template",
												"name": "FieldsClause",
												"parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}],
												"scope":  {
													"is_templated": true,
													"name": "FieldsClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												}
											}]
										},
										"unexposed_arguments": "stappler::sql::Query::Select"
									}
								}],
								"class_kind": "struct",
								"id": 93825000740336,
								"is_declaration": false,
								"is_definition": true,
								"is_final": false,
								"kind": "class",
								"name": "Select",
								"scope": {
									"name": "Select"
								},
								"semantic_scope": ""
							}]
						}
					},
					"semantic_parent":  {
						"name": "Query<Binder, Interface>::GenericQuery::",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
							"_kind": "class",
							"_name": "GenericQuery",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825012282768,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825012282512,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "GenericQuery",
							"scope": {
								"name": "GenericQuery"
							},
							"semantic_scope": ""
						}]
					},
					"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
					"signature": "(stappler::sql::Query::Distinct,stappler::sql::Query::Field const&,Args &&...)"
				},
				"id": 93825000167296,
				"kind": "function template",
				"name": "select",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Args",
					"id": 93825004669408,
					"is_variadic": true,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Args"
				}, {
					"_kind": "template type parameter",
					"_name": "Binder",
					"id": 93825004669600,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Binder"
				}, {
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 93825004669840,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}]
			}, {
				"_fullName": "::stappler::sql::GenericQuery::insert(stappler::StringView const&)",
				"_kind": "member function",
				"_name": "insert",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825004670224,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "insert",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "field",
					"id": 93825004670688,
					"kind": "function parameter",
					"name": "field",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "stappler::sql::Query::Insert",
					"kind": "user_defined",
					"target": {
						"name": "stappler::sql::Query::Insert",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Insert",
							"_kind": "class",
							"_name": "Insert",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "FieldsClause<Insert>",
								"access_specifier": "public",
								"id": 93825006190528,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "FieldsClause<Insert>",
								"type": {
									"_typeName": "FieldsClause<stappler::sql::Query::Insert>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "FieldsClause",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
											"_kind": "class template",
											"_name": "FieldsClause",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
												"_kind": "class",
												"_name": "FieldsClause",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825012122384,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825012121984,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "FieldsClause",
												"scope": {
													"is_templated": true,
													"name": "FieldsClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825012136880,
											"kind": "class template",
											"name": "FieldsClause",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}],
											"scope":  {
												"is_templated": true,
												"name": "FieldsClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											}
										}]
									},
									"unexposed_arguments": "stappler::sql::Query::Insert"
								}
							}],
							"class_kind": "struct",
							"id": 93825006189920,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Insert",
							"scope": {
								"name": "Insert"
							},
							"semantic_scope": ""
						}]
					}
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::GenericQuery::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
						"_kind": "class",
						"_name": "GenericQuery",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825012282768,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825012282512,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "GenericQuery",
						"scope": {
							"name": "GenericQuery"
						},
						"semantic_scope": ""
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
				"signature": "(stappler::StringView const&)"
			}, {
				"_fullName": "::stappler::sql::GenericQuery::insert(stappler::StringView const&,stappler::StringView const&)",
				"_kind": "member function",
				"_name": "insert",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825002088592,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "insert",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "field",
					"id": 93825002089056,
					"kind": "function parameter",
					"name": "field",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "alias",
					"id": 93825002087216,
					"kind": "function parameter",
					"name": "alias",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "stappler::sql::Query::Insert",
					"kind": "user_defined",
					"target": {
						"name": "stappler::sql::Query::Insert",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Insert",
							"_kind": "class",
							"_name": "Insert",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "FieldsClause<Insert>",
								"access_specifier": "public",
								"id": 93825006190528,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "FieldsClause<Insert>",
								"type": {
									"_typeName": "FieldsClause<stappler::sql::Query::Insert>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "FieldsClause",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
											"_kind": "class template",
											"_name": "FieldsClause",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>::FieldsClause<typename>",
												"_kind": "class",
												"_name": "FieldsClause",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825012122384,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825012121984,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "FieldsClause",
												"scope": {
													"is_templated": true,
													"name": "FieldsClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012282272,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825012136880,
											"kind": "class template",
											"name": "FieldsClause",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012282272,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}],
											"scope":  {
												"is_templated": true,
												"name": "FieldsClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012282272,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											}
										}]
									},
									"unexposed_arguments": "stappler::sql::Query::Insert"
								}
							}],
							"class_kind": "struct",
							"id": 93825006189920,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Insert",
							"scope": {
								"name": "Insert"
							},
							"semantic_scope": ""
						}]
					}
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::GenericQuery::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
						"_kind": "class",
						"_name": "GenericQuery",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825012282768,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825012282512,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "GenericQuery",
						"scope": {
							"name": "GenericQuery"
						},
						"semantic_scope": ""
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
				"signature": "(stappler::StringView const&,stappler::StringView const&)"
			}, {
				"_fullName": "::stappler::sql::GenericQuery::update(stappler::StringView const&)",
				"_kind": "member function",
				"_name": "update",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825002087664,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "update",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "field",
					"id": 93825002088128,
					"kind": "function parameter",
					"name": "field",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "stappler::sql::Query::Update",
					"kind": "user_defined",
					"target": {
						"name": "stappler::sql::Query::Update",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Update",
							"_kind": "class",
							"_name": "Update",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "SetClause<Update>",
								"access_specifier": "public",
								"id": 93825004550080,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "SetClause<Update>",
								"type": {
									"_typeName": "SetClause<stappler::sql::Query::Update>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "SetClause",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
											"_kind": "class template",
											"_name": "SetClause",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
												"_kind": "class",
												"_name": "SetClause",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825001762528,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825001762224,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SetClause",
												"scope": {
													"is_templated": true,
													"name": "SetClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012121696,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825012121536,
											"kind": "class template",
											"name": "SetClause",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012121696,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}],
											"scope":  {
												"is_templated": true,
												"name": "SetClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012121696,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											}
										}]
									},
									"unexposed_arguments": "stappler::sql::Query::Update"
								}
							}],
							"class_kind": "struct",
							"id": 93825004552064,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Update",
							"scope": {
								"name": "Update"
							},
							"semantic_scope": ""
						}]
					}
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::GenericQuery::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
						"_kind": "class",
						"_name": "GenericQuery",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825012282768,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825012282512,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "GenericQuery",
						"scope": {
							"name": "GenericQuery"
						},
						"semantic_scope": ""
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
				"signature": "(stappler::StringView const&)"
			}, {
				"_fullName": "::stappler::sql::GenericQuery::update(stappler::StringView const&,stappler::StringView const&)",
				"_kind": "member function",
				"_name": "update",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93825005191152,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "update",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "field",
					"id": 93825005191616,
					"kind": "function parameter",
					"name": "field",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "alias",
					"id": 93825005192048,
					"kind": "function parameter",
					"name": "alias",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "stappler::sql::Query::Update",
					"kind": "user_defined",
					"target": {
						"name": "stappler::sql::Query::Update",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Update",
							"_kind": "class",
							"_name": "Update",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "SetClause<Update>",
								"access_specifier": "public",
								"id": 93825004550080,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "SetClause<Update>",
								"type": {
									"_typeName": "SetClause<stappler::sql::Query::Update>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "SetClause",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
											"_kind": "class template",
											"_name": "SetClause",
											"class": {
												"_fullName": "::stappler::sql::Query<typename,typename>::SetClause<typename>",
												"_kind": "class",
												"_name": "SetClause",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "QueryHandle",
													"access_specifier": "public",
													"id": 93825001762528,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "QueryHandle",
													"type": {
														"_typeName": "stappler::sql::Query::QueryHandle",
														"kind": "user_defined",
														"target": {
															"name": "stappler::sql::Query::QueryHandle",
															"objects": [{
																"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
																"_kind": "class",
																"_name": "QueryHandle",
																"class_kind": "struct",
																"id": 93825007976864,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "QueryHandle",
																"scope": {
																	"name": "QueryHandle"
																},
																"semantic_scope": ""
															}]
														}
													}
												}],
												"class_kind": "struct",
												"id": 93825001762224,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "SetClause",
												"scope": {
													"is_templated": true,
													"name": "SetClause",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Clause",
														"id": 93825012121696,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Clause"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825012121536,
											"kind": "class template",
											"name": "SetClause",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Clause",
												"id": 93825012121696,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Clause"
											}],
											"scope":  {
												"is_templated": true,
												"name": "SetClause",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Clause",
													"id": 93825012121696,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Clause"
												}]
											}
										}]
									},
									"unexposed_arguments": "stappler::sql::Query::Update"
								}
							}],
							"class_kind": "struct",
							"id": 93825004552064,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Update",
							"scope": {
								"name": "Update"
							},
							"semantic_scope": ""
						}]
					}
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::GenericQuery::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
						"_kind": "class",
						"_name": "GenericQuery",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825012282768,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825012282512,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "GenericQuery",
						"scope": {
							"name": "GenericQuery"
						},
						"semantic_scope": ""
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
				"signature": "(stappler::StringView const&,stappler::StringView const&)"
			}, {
				"_fullName": "::stappler::sql::GenericQuery::remove(stappler::StringView const&)",
				"_kind": "member function",
				"_name": "remove",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93824999782448,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "remove",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "field",
					"id": 93824999782912,
					"kind": "function parameter",
					"name": "field",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "stappler::sql::Query::Delete",
					"kind": "user_defined",
					"target": {
						"name": "stappler::sql::Query::Delete",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Delete",
							"_kind": "class",
							"_name": "Delete",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825011409568,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825011409168,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Delete",
							"scope": {
								"name": "Delete"
							},
							"semantic_scope": ""
						}]
					}
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::GenericQuery::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
						"_kind": "class",
						"_name": "GenericQuery",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825012282768,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825012282512,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "GenericQuery",
						"scope": {
							"name": "GenericQuery"
						},
						"semantic_scope": ""
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
				"signature": "(stappler::StringView const&)"
			}, {
				"_fullName": "::stappler::sql::GenericQuery::remove(stappler::StringView const&,stappler::StringView const&)",
				"_kind": "member function",
				"_name": "remove",
				"body_kind": "definition",
				"cv_qualifier": "none",
				"id": 93824999784896,
				"is_consteval": false,
				"is_constexpr": false,
				"is_declaration": false,
				"is_definition": true,
				"is_variadic": false,
				"is_virtual": false,
				"kind": "member function",
				"name": "remove",
				"parameters": [{
					"_kind": "function parameter",
					"_name": "field",
					"id": 93825005192560,
					"kind": "function parameter",
					"name": "field",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}, {
					"_kind": "function parameter",
					"_name": "alias",
					"id": 93825005192992,
					"kind": "function parameter",
					"name": "alias",
					"type": {
						"_typeName": "stappler::StringView const&",
						"kind": "reference",
						"referee": {
							"_typeName": "stappler::StringView const",
							"cv_qualifier": "const",
							"kind": "cv_qualified",
							"type": {
								"_typeName": "stappler::StringView",
								"kind": "user_defined",
								"target": {
									"name": "stappler::StringView",
									"objects": [{
										"_fullName": "::stappler::StringView",
										"_kind": "type alias",
										"_name": "StringView",
										"id": 93824997448656,
										"kind": "type alias",
										"name": "StringView",
										"underlying_type": {
											"_typeName": "StringViewBase<char>",
											"arguments_exposed": false,
											"kind": "template_instantiation",
											"primary_template": {
												"name": "StringViewBase",
												"objects": [{
													"_fullName": "::stappler::StringViewBase<typename>",
													"_kind": "class template",
													"_name": "StringViewBase",
													"class": {
														"_fullName": "::stappler::StringViewBase<typename>",
														"_kind": "class",
														"_name": "StringViewBase",
														"bases": [{
															"_kind": "base class specifier",
															"_name": "BytesReader<_CharType>",
															"access_specifier": "public",
															"id": 93824998090352,
															"is_virtual": false,
															"kind": "base class specifier",
															"name": "BytesReader<_CharType>",
															"type": {
																"_typeName": "BytesReader<_CharType>",
																"arguments_exposed": false,
																"kind": "template_instantiation",
																"primary_template": {
																	"name": "BytesReader",
																	"objects": [{
																		"_fullName": "::stappler::BytesReader<typename>",
																		"_kind": "class template",
																		"_name": "BytesReader",
																		"class": {
																			"_fullName": "::stappler::BytesReader<typename>",
																			"_kind": "class",
																			"_name": "BytesReader",
																			"class_kind": "class",
																			"id": 140736954953792,
																			"is_declaration": false,
																			"is_definition": true,
																			"is_final": false,
																			"kind": "class",
																			"name": "BytesReader",
																			"scope": {
																				"is_templated": true,
																				"name": "BytesReader",
																				"template_parameters": [{
																					"_kind": "template type parameter",
																					"_name": "_CharType",
																					"id": 140737098599232,
																					"is_variadic": false,
																					"keyword": "typename",
																					"kind": "template type parameter",
																					"name": "_CharType"
																				}]
																			},
																			"semantic_scope": ""
																		},
																		"id": 93824998648144,
																		"kind": "class template",
																		"name": "BytesReader",
																		"parameters": [{
																			"_kind": "template type parameter",
																			"_name": "_CharType",
																			"id": 140737098599232,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "_CharType"
																		}],
																		"scope":  {
																			"is_templated": true,
																			"name": "BytesReader",
																			"template_parameters": [{
																				"_kind": "template type parameter",
																				"_name": "_CharType",
																				"id": 140737098599232,
																				"is_variadic": false,
																				"keyword": "typename",
																				"kind": "template type parameter",
																				"name": "_CharType"
																			}]
																		}
																	}]
																},
																"unexposed_arguments": "_CharType"
															}
														}],
														"class_kind": "class",
														"id": 140737094580320,
														"is_declaration": false,
														"is_definition": true,
														"is_final": false,
														"kind": "class",
														"name": "StringViewBase",
														"scope": {
															"is_templated": true,
															"name": "StringViewBase",
															"template_parameters": [{
																"_kind": "template type parameter",
																"_name": "_CharType",
																"id": 93824999493712,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "_CharType"
															}]
														},
														"semantic_scope": ""
													},
													"id": 93824999493216,
													"kind": "class template",
													"name": "StringViewBase",
													"parameters": [{
														"_kind": "template type parameter",
														"_name": "_CharType",
														"id": 93824999493712,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "_CharType"
													}],
													"scope":  {
														"is_templated": true,
														"name": "StringViewBase",
														"template_parameters": [{
															"_kind": "template type parameter",
															"_name": "_CharType",
															"id": 93824999493712,
															"is_variadic": false,
															"keyword": "typename",
															"kind": "template type parameter",
															"name": "_CharType"
														}]
													}
												}]
											},
											"unexposed_arguments": "char"
										}
									}]
								}
							}
						},
						"reference_kind": "lvalue"
					}
				}],
				"ref_qualifier": "none",
				"return_type": {
					"_typeName": "stappler::sql::Query::Delete",
					"kind": "user_defined",
					"target": {
						"name": "stappler::sql::Query::Delete",
						"objects": [{
							"_fullName": "::stappler::sql::Query<typename,typename>::Delete",
							"_kind": "class",
							"_name": "Delete",
							"bases": [{
								"_kind": "base class specifier",
								"_name": "QueryHandle",
								"access_specifier": "public",
								"id": 93825011409568,
								"is_virtual": false,
								"kind": "base class specifier",
								"name": "QueryHandle",
								"type": {
									"_typeName": "stappler::sql::Query::QueryHandle",
									"kind": "user_defined",
									"target": {
										"name": "stappler::sql::Query::QueryHandle",
										"objects": [{
											"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
											"_kind": "class",
											"_name": "QueryHandle",
											"class_kind": "struct",
											"id": 93825007976864,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "QueryHandle",
											"scope": {
												"name": "QueryHandle"
											},
											"semantic_scope": ""
										}]
									}
								}
							}],
							"class_kind": "struct",
							"id": 93825011409168,
							"is_declaration": false,
							"is_definition": true,
							"is_final": false,
							"kind": "class",
							"name": "Delete",
							"scope": {
								"name": "Delete"
							},
							"semantic_scope": ""
						}]
					}
				},
				"semantic_parent":  {
					"name": "Query<Binder, Interface>::GenericQuery::",
					"objects": [{
						"_fullName": "::stappler::sql::Query<typename,typename>::GenericQuery",
						"_kind": "class",
						"_name": "GenericQuery",
						"bases": [{
							"_kind": "base class specifier",
							"_name": "QueryHandle",
							"access_specifier": "public",
							"id": 93825012282768,
							"is_virtual": false,
							"kind": "base class specifier",
							"name": "QueryHandle",
							"type": {
								"_typeName": "stappler::sql::Query::QueryHandle",
								"kind": "user_defined",
								"target": {
									"name": "stappler::sql::Query::QueryHandle",
									"objects": [{
										"_fullName": "::stappler::sql::Query<typename,typename>::QueryHandle",
										"_kind": "class",
										"_name": "QueryHandle",
										"class_kind": "struct",
										"id": 93825007976864,
										"is_declaration": false,
										"is_definition": true,
										"is_final": false,
										"kind": "class",
										"name": "QueryHandle",
										"scope": {
											"name": "QueryHandle"
										},
										"semantic_scope": ""
									}]
								}
							}
						}],
						"class_kind": "struct",
						"id": 93825012282512,
						"is_declaration": false,
						"is_definition": true,
						"is_final": false,
						"kind": "class",
						"name": "GenericQuery",
						"scope": {
							"name": "GenericQuery"
						},
						"semantic_scope": ""
					}]
				},
				"semantic_scope": "Query<Binder, Interface>::GenericQuery::",
				"signature": "(stappler::StringView const&,stappler::StringView const&)"
			}],
			"id": 140737136264992,
			"is_anonymous": false,
			"is_inline": false,
			"is_nested": true,
			"kind": "namespace",
			"name": "sql",
			"scope": {
				"name": "sql"
			}
		}],
		"id": 140737150975024,
		"is_anonymous": false,
		"is_inline": false,
		"is_nested": false,
		"kind": "namespace",
		"name": "stappler",
		"scope": {
			"name": "stappler"
		}
	}],
	"id": 140737090680544,
	"kind": "file",
	"name": "/home/sbkarr/stappler/xenolith/libstappler/modules/sql/SPSql.h",
	"unmatched_comments": [{
		"line": 21,
		"text": "\nCopyright (c) 2017-2022 Roman Katuntsev <sbkarr@stappler.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
	}]
}