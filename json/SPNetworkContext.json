{
	"_kind": "file",
	"_name": "/home/sbkarr/stappler/xenolith/libstappler/modules/network/SPNetworkContext.h",
	"childs": [{
		"_kind": "include directive",
		"_name": "SPNetworkHandle.h",
		"id": 140737118265904,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/modules/network/SPNetworkHandle.h",
		"include_kind": "local",
		"kind": "include directive",
		"name": "SPNetworkHandle.h"
	}, {
		"_kind": "include directive",
		"_name": "curl/curl.h",
		"id": 140737108135120,
		"include": "/home/sbkarr/stappler/xenolith/libstappler/libs/linux/x86_64/include/curl/curl.h",
		"include_kind": "system",
		"kind": "include directive",
		"name": "curl/curl.h"
	}, {
		"_fullName": "MODULES_NETWORK_SPNETWORKCONTEXT_H_",
		"_kind": "macro definition",
		"_name": "MODULES_NETWORK_SPNETWORKCONTEXT_H_",
		"id": 140737102728400,
		"is_function_like": false,
		"is_object_like": true,
		"is_variadic": false,
		"kind": "macro definition",
		"name": "MODULES_NETWORK_SPNETWORKCONTEXT_H_",
		"replacement": ""
	}, {
		"_fullName": "::stappler",
		"_kind": "namespace",
		"_name": "stappler",
		"childs": [{
			"_fullName": "::stappler::network",
			"_kind": "namespace",
			"_name": "network",
			"childs": [{
				"_fullName": "::stappler::network::Context<typename>",
				"_kind": "class template",
				"_name": "Context",
				"childs": [{
					"_fullName": "::stappler::network::Context<typename>",
					"_kind": "class",
					"_name": "Context",
					"childs": [{
						"_fullName": "::stappler::network::Context<typename>::userdata",
						"_kind": "member variable",
						"_name": "userdata",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "void*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "void",
									"builtin_type_kind": "void",
									"kind": "builtin"
								}
							}
						},
						"id": 140737129645328,
						"is_mutable": false,
						"kind": "member variable",
						"name": "userdata",
						"type": {
							"_typeName": "void*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "void",
								"builtin_type_kind": "void",
								"kind": "builtin"
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::curl",
						"_kind": "member variable",
						"_name": "curl",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "CURL*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "CURL",
									"kind": "user_defined",
									"target": {
										"name": "CURL"
									}
								}
							}
						},
						"id": 140737136374976,
						"is_mutable": false,
						"kind": "member variable",
						"name": "curl",
						"type": {
							"_typeName": "CURL*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "CURL",
								"kind": "user_defined",
								"target": {
									"name": "CURL"
								}
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::share",
						"_kind": "member variable",
						"_name": "share",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "CURLSH*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "CURLSH",
									"kind": "user_defined",
									"target": {
										"name": "CURLSH"
									}
								}
							}
						},
						"id": 140737129367072,
						"is_mutable": false,
						"kind": "member variable",
						"name": "share",
						"type": {
							"_typeName": "CURLSH*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "CURLSH",
								"kind": "user_defined",
								"target": {
									"name": "CURLSH"
								}
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::origHandle",
						"_kind": "member variable",
						"_name": "origHandle",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "Handle<Interface>*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "Handle<Interface>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Handle",
										"objects": [{
											"_fullName": "::stappler::network::Handle<typename>",
											"_kind": "class template",
											"_name": "Handle",
											"class": {
												"_fullName": "::stappler::network::Handle<typename>",
												"_kind": "class",
												"_name": "Handle",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "HandleData<Interface>",
													"access_specifier": "private",
													"id": 140737095877328,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "HandleData<Interface>",
													"type": {
														"_typeName": "HandleData<Interface>",
														"arguments_exposed": false,
														"kind": "template_instantiation",
														"primary_template": {
															"name": "HandleData",
															"objects": [{
																"_fullName": "::stappler::network::HandleData<typename>",
																"_kind": "class template",
																"_name": "HandleData",
																"class": {
																	"_fullName": "::stappler::network::HandleData<typename>",
																	"_kind": "class",
																	"_name": "HandleData",
																	"bases": [{
																		"_kind": "base class specifier",
																		"_name": "Interface::AllocBaseType",
																		"access_specifier": "public",
																		"id": 93825003127296,
																		"is_virtual": false,
																		"kind": "base class specifier",
																		"name": "Interface::AllocBaseType",
																		"type": {
																			"_typeName": "Interface::AllocBaseType",
																			"kind": "unexposed",
																			"name": "Interface::AllocBaseType"
																		}
																	}],
																	"class_kind": "struct",
																	"id": 93825005806464,
																	"is_declaration": false,
																	"is_definition": true,
																	"is_final": false,
																	"kind": "class",
																	"name": "HandleData",
																	"scope": {
																		"is_templated": true,
																		"name": "HandleData",
																		"template_parameters": [{
																			"_kind": "template type parameter",
																			"_name": "Interface",
																			"id": 93825015720064,
																			"is_variadic": false,
																			"keyword": "typename",
																			"kind": "template type parameter",
																			"name": "Interface"
																		}]
																	},
																	"semantic_scope": ""
																},
																"id": 93825015391984,
																"kind": "class template",
																"name": "HandleData",
																"parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825015720064,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}],
																"scope":  {
																	"is_templated": true,
																	"name": "HandleData",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Interface",
																		"id": 93825015720064,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Interface"
																	}]
																}
															}]
														},
														"unexposed_arguments": "Interface"
													}
												}],
												"class_kind": "class",
												"id": 140737115496512,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "Handle",
												"scope": {
													"is_templated": true,
													"name": "Handle",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825006877568,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												},
												"semantic_scope": ""
											},
											"id": 140737141332832,
											"kind": "class template",
											"name": "Handle",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825006877568,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}],
											"scope":  {
												"is_templated": true,
												"name": "Handle",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825006877568,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											}
										}]
									},
									"unexposed_arguments": "Interface"
								}
							}
						},
						"id": 93825010945216,
						"is_mutable": false,
						"kind": "member variable",
						"name": "origHandle",
						"type": {
							"_typeName": "Handle<Interface>*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "Handle<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "Handle",
									"objects": [{
										"_fullName": "::stappler::network::Handle<typename>",
										"_kind": "class template",
										"_name": "Handle",
										"class": {
											"_fullName": "::stappler::network::Handle<typename>",
											"_kind": "class",
											"_name": "Handle",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "HandleData<Interface>",
												"access_specifier": "private",
												"id": 140737095877328,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "HandleData<Interface>",
												"type": {
													"_typeName": "HandleData<Interface>",
													"arguments_exposed": false,
													"kind": "template_instantiation",
													"primary_template": {
														"name": "HandleData",
														"objects": [{
															"_fullName": "::stappler::network::HandleData<typename>",
															"_kind": "class template",
															"_name": "HandleData",
															"class": {
																"_fullName": "::stappler::network::HandleData<typename>",
																"_kind": "class",
																"_name": "HandleData",
																"bases": [{
																	"_kind": "base class specifier",
																	"_name": "Interface::AllocBaseType",
																	"access_specifier": "public",
																	"id": 93825003127296,
																	"is_virtual": false,
																	"kind": "base class specifier",
																	"name": "Interface::AllocBaseType",
																	"type": {
																		"_typeName": "Interface::AllocBaseType",
																		"kind": "unexposed",
																		"name": "Interface::AllocBaseType"
																	}
																}],
																"class_kind": "struct",
																"id": 93825005806464,
																"is_declaration": false,
																"is_definition": true,
																"is_final": false,
																"kind": "class",
																"name": "HandleData",
																"scope": {
																	"is_templated": true,
																	"name": "HandleData",
																	"template_parameters": [{
																		"_kind": "template type parameter",
																		"_name": "Interface",
																		"id": 93825015720064,
																		"is_variadic": false,
																		"keyword": "typename",
																		"kind": "template type parameter",
																		"name": "Interface"
																	}]
																},
																"semantic_scope": ""
															},
															"id": 93825015391984,
															"kind": "class template",
															"name": "HandleData",
															"parameters": [{
																"_kind": "template type parameter",
																"_name": "Interface",
																"id": 93825015720064,
																"is_variadic": false,
																"keyword": "typename",
																"kind": "template type parameter",
																"name": "Interface"
															}],
															"scope":  {
																"is_templated": true,
																"name": "HandleData",
																"template_parameters": [{
																	"_kind": "template type parameter",
																	"_name": "Interface",
																	"id": 93825015720064,
																	"is_variadic": false,
																	"keyword": "typename",
																	"kind": "template type parameter",
																	"name": "Interface"
																}]
															}
														}]
													},
													"unexposed_arguments": "Interface"
												}
											}],
											"class_kind": "class",
											"id": 140737115496512,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Handle",
											"scope": {
												"is_templated": true,
												"name": "Handle",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825006877568,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 140737141332832,
										"kind": "class template",
										"name": "Handle",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 93825006877568,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "Handle",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825006877568,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::handle",
						"_kind": "member variable",
						"_name": "handle",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "HandleData<Interface>*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "HandleData<Interface>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "HandleData",
										"objects": [{
											"_fullName": "::stappler::network::HandleData<typename>",
											"_kind": "class template",
											"_name": "HandleData",
											"class": {
												"_fullName": "::stappler::network::HandleData<typename>",
												"_kind": "class",
												"_name": "HandleData",
												"bases": [{
													"_kind": "base class specifier",
													"_name": "Interface::AllocBaseType",
													"access_specifier": "public",
													"id": 93825003127296,
													"is_virtual": false,
													"kind": "base class specifier",
													"name": "Interface::AllocBaseType",
													"type": {
														"_typeName": "Interface::AllocBaseType",
														"kind": "unexposed",
														"name": "Interface::AllocBaseType"
													}
												}],
												"class_kind": "struct",
												"id": 93825005806464,
												"is_declaration": false,
												"is_definition": true,
												"is_final": false,
												"kind": "class",
												"name": "HandleData",
												"scope": {
													"is_templated": true,
													"name": "HandleData",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "Interface",
														"id": 93825015720064,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "Interface"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93825015391984,
											"kind": "class template",
											"name": "HandleData",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825015720064,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}],
											"scope":  {
												"is_templated": true,
												"name": "HandleData",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825015720064,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											}
										}]
									},
									"unexposed_arguments": "Interface"
								}
							}
						},
						"id": 93825008500784,
						"is_mutable": false,
						"kind": "member variable",
						"name": "handle",
						"type": {
							"_typeName": "HandleData<Interface>*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "HandleData<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "HandleData",
									"objects": [{
										"_fullName": "::stappler::network::HandleData<typename>",
										"_kind": "class template",
										"_name": "HandleData",
										"class": {
											"_fullName": "::stappler::network::HandleData<typename>",
											"_kind": "class",
											"_name": "HandleData",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "Interface::AllocBaseType",
												"access_specifier": "public",
												"id": 93825003127296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "Interface::AllocBaseType",
												"type": {
													"_typeName": "Interface::AllocBaseType",
													"kind": "unexposed",
													"name": "Interface::AllocBaseType"
												}
											}],
											"class_kind": "struct",
											"id": 93825005806464,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "HandleData",
											"scope": {
												"is_templated": true,
												"name": "HandleData",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825015720064,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825015391984,
										"kind": "class template",
										"name": "HandleData",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 93825015720064,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "HandleData",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825015720064,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::headersData",
						"_kind": "member variable",
						"_name": "headersData",
						"id": 93825014536288,
						"is_mutable": false,
						"kind": "member variable",
						"name": "headersData",
						"type": {
							"_typeName": "typename HandleData<Interface>::template Vector<typename HandleData<Interface>::String>",
							"kind": "unexposed",
							"name": "typename HandleData<Interface>::template Vector<typename HandleData<Interface>::String>"
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::headers",
						"_kind": "member variable",
						"_name": "headers",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "curl_slist*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "curl_slist",
									"kind": "user_defined",
									"target": {
										"name": "curl_slist"
									}
								}
							}
						},
						"id": 93825009077952,
						"is_mutable": false,
						"kind": "member variable",
						"name": "headers",
						"type": {
							"_typeName": "curl_slist*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "curl_slist",
								"kind": "user_defined",
								"target": {
									"name": "curl_slist"
								}
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::mailTo",
						"_kind": "member variable",
						"_name": "mailTo",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "curl_slist*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "curl_slist",
									"kind": "user_defined",
									"target": {
										"name": "curl_slist"
									}
								}
							}
						},
						"id": 93825005992512,
						"is_mutable": false,
						"kind": "member variable",
						"name": "mailTo",
						"type": {
							"_typeName": "curl_slist*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "curl_slist",
								"kind": "user_defined",
								"target": {
									"name": "curl_slist"
								}
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::inputFile",
						"_kind": "member variable",
						"_name": "inputFile",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "FILE*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "FILE",
									"kind": "user_defined",
									"target": {
										"name": "FILE"
									}
								}
							}
						},
						"id": 93825011903536,
						"is_mutable": false,
						"kind": "member variable",
						"name": "inputFile",
						"type": {
							"_typeName": "FILE*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "FILE",
								"kind": "user_defined",
								"target": {
									"name": "FILE"
								}
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::outputFile",
						"_kind": "member variable",
						"_name": "outputFile",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "nullptr"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "FILE*",
								"kind": "pointer",
								"pointee": {
									"_typeName": "FILE",
									"kind": "user_defined",
									"target": {
										"name": "FILE"
									}
								}
							}
						},
						"id": 93825009191696,
						"is_mutable": false,
						"kind": "member variable",
						"name": "outputFile",
						"type": {
							"_typeName": "FILE*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "FILE",
								"kind": "user_defined",
								"target": {
									"name": "FILE"
								}
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::inputPos",
						"_kind": "member variable",
						"_name": "inputPos",
						"default_value": {
							"expression": [{
								"kind": "int_literal",
								"spelling": "0"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "uint64_t",
								"kind": "user_defined",
								"target": {
									"name": "uint64_t"
								}
							}
						},
						"id": 93825012265376,
						"is_mutable": false,
						"kind": "member variable",
						"name": "inputPos",
						"type": {
							"_typeName": "uint64_t",
							"kind": "user_defined",
							"target": {
								"name": "uint64_t"
							}
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::code",
						"_kind": "member variable",
						"_name": "code",
						"default_value": {
							"expression": [{
								"kind": "int_literal",
								"spelling": "0"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "int",
								"builtin_type_kind": "int",
								"kind": "builtin"
							}
						},
						"id": 93825009077376,
						"is_mutable": false,
						"kind": "member variable",
						"name": "code",
						"type": {
							"_typeName": "int",
							"builtin_type_kind": "int",
							"kind": "builtin"
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::success",
						"_kind": "member variable",
						"_name": "success",
						"default_value": {
							"expression": [{
								"kind": "keyword",
								"spelling": "false"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "bool",
								"builtin_type_kind": "bool",
								"kind": "builtin"
							}
						},
						"id": 93825010179200,
						"is_mutable": false,
						"kind": "member variable",
						"name": "success",
						"type": {
							"_typeName": "bool",
							"builtin_type_kind": "bool",
							"kind": "builtin"
						}
					}, {
						"_fullName": "::stappler::network::Context<typename>::error",
						"_kind": "member variable",
						"_name": "error",
						"default_value": {
							"expression": [{
								"kind": "punctuation",
								"spelling": "{"
							}, {
								"kind": "int_literal",
								"spelling": "0"
							}, {
								"kind": "punctuation",
								"spelling": "}"
							}],
							"kind": "unexposed",
							"type": {
								"_typeName": "std::array<char, 256>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "std::array"
								},
								"unexposed_arguments": "char, 256"
							}
						},
						"id": 93825015248336,
						"is_mutable": false,
						"kind": "member variable",
						"name": "error",
						"type": {
							"_typeName": "std::array<char, 256>",
							"arguments_exposed": false,
							"kind": "template_instantiation",
							"primary_template": {
								"name": "std::array"
							},
							"unexposed_arguments": "char, 256"
						}
					}],
					"class_kind": "struct",
					"id": 140736980094608,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "Context",
					"scope": {
						"is_templated": true,
						"name": "Context",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 140737113648800,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				}],
				"class":  {
					"_fullName": "::stappler::network::Context<typename>",
					"_kind": "class",
					"_name": "Context",
					"class_kind": "struct",
					"id": 140736980094608,
					"is_declaration": false,
					"is_definition": true,
					"is_final": false,
					"kind": "class",
					"name": "Context",
					"scope": {
						"is_templated": true,
						"name": "Context",
						"template_parameters": [{
							"_kind": "template type parameter",
							"_name": "Interface",
							"id": 140737113648800,
							"is_variadic": false,
							"keyword": "typename",
							"kind": "template type parameter",
							"name": "Interface"
						}]
					},
					"semantic_scope": ""
				},
				"id": 93825005980416,
				"kind": "class template",
				"name": "Context",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 140737113648800,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}],
				"scope":  {
					"is_templated": true,
					"name": "Context",
					"template_parameters": [{
						"_kind": "template type parameter",
						"_name": "Interface",
						"id": 140737113648800,
						"is_variadic": false,
						"keyword": "typename",
						"kind": "template type parameter",
						"name": "Interface"
					}]
				}
			}, {
				"_fullName": "::stappler::network::prepare<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)",
				"_kind": "function template",
				"_name": "prepare",
				"childs": [{
					"_fullName": "::stappler::network::prepare<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)",
					"_kind": "function",
					"_name": "prepare",
					"body_kind": "declaration",
					"id": 140737095043520,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "prepare",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "iface",
						"id": 93825008477648,
						"kind": "function parameter",
						"name": "iface",
						"type": {
							"_typeName": "HandleData<Interface>&",
							"kind": "reference",
							"referee": {
								"_typeName": "HandleData<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "HandleData",
									"objects": [{
										"_fullName": "::stappler::network::HandleData<typename>",
										"_kind": "class template",
										"_name": "HandleData",
										"class": {
											"_fullName": "::stappler::network::HandleData<typename>",
											"_kind": "class",
											"_name": "HandleData",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "Interface::AllocBaseType",
												"access_specifier": "public",
												"id": 93825003127296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "Interface::AllocBaseType",
												"type": {
													"_typeName": "Interface::AllocBaseType",
													"kind": "unexposed",
													"name": "Interface::AllocBaseType"
												}
											}],
											"class_kind": "struct",
											"id": 93825005806464,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "HandleData",
											"scope": {
												"is_templated": true,
												"name": "HandleData",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825015720064,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825015391984,
										"kind": "class template",
										"name": "HandleData",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 93825015720064,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "HandleData",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825015720064,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "ctx",
						"id": 93825009522560,
						"kind": "function parameter",
						"name": "ctx",
						"type": {
							"_typeName": "Context<Interface>*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "Context<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "Context",
									"objects": [{
										"_fullName": "::stappler::network::Context<typename>",
										"_kind": "class template",
										"_name": "Context",
										"class": {
											"_fullName": "::stappler::network::Context<typename>",
											"_kind": "class",
											"_name": "Context",
											"class_kind": "struct",
											"id": 140736980094608,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Context",
											"scope": {
												"is_templated": true,
												"name": "Context",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 140737113648800,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825005980416,
										"kind": "class template",
										"name": "Context",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 140737113648800,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "Context",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 140737113648800,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							}
						}
					}, {
						"_kind": "function parameter",
						"_name": "onBeforePerform",
						"id": 93825006968976,
						"kind": "function parameter",
						"name": "onBeforePerform",
						"type": {
							"_typeName": "Callback<bool (CURL *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<bool (CURL *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<bool (CURL *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "bool (CURL *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)"
				}],
				"function":  {
					"_fullName": "::stappler::network::prepare<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)",
					"_kind": "function",
					"_name": "prepare",
					"body_kind": "declaration",
					"id": 140737095043520,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "prepare",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "iface",
						"id": 93825008477648,
						"kind": "function parameter",
						"name": "iface",
						"type": {
							"_typeName": "HandleData<Interface>&",
							"kind": "reference",
							"referee": {
								"_typeName": "HandleData<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "HandleData",
									"objects": [{
										"_fullName": "::stappler::network::HandleData<typename>",
										"_kind": "class template",
										"_name": "HandleData",
										"class": {
											"_fullName": "::stappler::network::HandleData<typename>",
											"_kind": "class",
											"_name": "HandleData",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "Interface::AllocBaseType",
												"access_specifier": "public",
												"id": 93825003127296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "Interface::AllocBaseType",
												"type": {
													"_typeName": "Interface::AllocBaseType",
													"kind": "unexposed",
													"name": "Interface::AllocBaseType"
												}
											}],
											"class_kind": "struct",
											"id": 93825005806464,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "HandleData",
											"scope": {
												"is_templated": true,
												"name": "HandleData",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825015720064,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825015391984,
										"kind": "class template",
										"name": "HandleData",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 93825015720064,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "HandleData",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825015720064,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "ctx",
						"id": 93825009522560,
						"kind": "function parameter",
						"name": "ctx",
						"type": {
							"_typeName": "Context<Interface>*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "Context<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "Context",
									"objects": [{
										"_fullName": "::stappler::network::Context<typename>",
										"_kind": "class template",
										"_name": "Context",
										"class": {
											"_fullName": "::stappler::network::Context<typename>",
											"_kind": "class",
											"_name": "Context",
											"class_kind": "struct",
											"id": 140736980094608,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Context",
											"scope": {
												"is_templated": true,
												"name": "Context",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 140737113648800,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825005980416,
										"kind": "class template",
										"name": "Context",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 140737113648800,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "Context",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 140737113648800,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							}
						}
					}, {
						"_kind": "function parameter",
						"_name": "onBeforePerform",
						"id": 93825006968976,
						"kind": "function parameter",
						"name": "onBeforePerform",
						"type": {
							"_typeName": "Callback<bool (CURL *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<bool (CURL *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<bool (CURL *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "bool (CURL *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)"
				},
				"id": 93825012811104,
				"kind": "function template",
				"name": "prepare",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 140737136549200,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}]
			}, {
				"_fullName": "::stappler::network::finalize<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)",
				"_kind": "function template",
				"_name": "finalize",
				"childs": [{
					"_fullName": "::stappler::network::finalize<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)",
					"_kind": "function",
					"_name": "finalize",
					"body_kind": "declaration",
					"id": 140737113791584,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "finalize",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "iface",
						"id": 93825006666144,
						"kind": "function parameter",
						"name": "iface",
						"type": {
							"_typeName": "HandleData<Interface>&",
							"kind": "reference",
							"referee": {
								"_typeName": "HandleData<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "HandleData",
									"objects": [{
										"_fullName": "::stappler::network::HandleData<typename>",
										"_kind": "class template",
										"_name": "HandleData",
										"class": {
											"_fullName": "::stappler::network::HandleData<typename>",
											"_kind": "class",
											"_name": "HandleData",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "Interface::AllocBaseType",
												"access_specifier": "public",
												"id": 93825003127296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "Interface::AllocBaseType",
												"type": {
													"_typeName": "Interface::AllocBaseType",
													"kind": "unexposed",
													"name": "Interface::AllocBaseType"
												}
											}],
											"class_kind": "struct",
											"id": 93825005806464,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "HandleData",
											"scope": {
												"is_templated": true,
												"name": "HandleData",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825015720064,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825015391984,
										"kind": "class template",
										"name": "HandleData",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 93825015720064,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "HandleData",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825015720064,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "ctx",
						"id": 93825008944464,
						"kind": "function parameter",
						"name": "ctx",
						"type": {
							"_typeName": "Context<Interface>*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "Context<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "Context",
									"objects": [{
										"_fullName": "::stappler::network::Context<typename>",
										"_kind": "class template",
										"_name": "Context",
										"class": {
											"_fullName": "::stappler::network::Context<typename>",
											"_kind": "class",
											"_name": "Context",
											"class_kind": "struct",
											"id": 140736980094608,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Context",
											"scope": {
												"is_templated": true,
												"name": "Context",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 140737113648800,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825005980416,
										"kind": "class template",
										"name": "Context",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 140737113648800,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "Context",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 140737113648800,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							}
						}
					}, {
						"_kind": "function parameter",
						"_name": "onAfterPerform",
						"id": 93825006857952,
						"kind": "function parameter",
						"name": "onAfterPerform",
						"type": {
							"_typeName": "Callback<bool (CURL *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<bool (CURL *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<bool (CURL *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "bool (CURL *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)"
				}],
				"function":  {
					"_fullName": "::stappler::network::finalize<typename>(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)",
					"_kind": "function",
					"_name": "finalize",
					"body_kind": "declaration",
					"id": 140737113791584,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "finalize",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "iface",
						"id": 93825006666144,
						"kind": "function parameter",
						"name": "iface",
						"type": {
							"_typeName": "HandleData<Interface>&",
							"kind": "reference",
							"referee": {
								"_typeName": "HandleData<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "HandleData",
									"objects": [{
										"_fullName": "::stappler::network::HandleData<typename>",
										"_kind": "class template",
										"_name": "HandleData",
										"class": {
											"_fullName": "::stappler::network::HandleData<typename>",
											"_kind": "class",
											"_name": "HandleData",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "Interface::AllocBaseType",
												"access_specifier": "public",
												"id": 93825003127296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "Interface::AllocBaseType",
												"type": {
													"_typeName": "Interface::AllocBaseType",
													"kind": "unexposed",
													"name": "Interface::AllocBaseType"
												}
											}],
											"class_kind": "struct",
											"id": 93825005806464,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "HandleData",
											"scope": {
												"is_templated": true,
												"name": "HandleData",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825015720064,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825015391984,
										"kind": "class template",
										"name": "HandleData",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 93825015720064,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "HandleData",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825015720064,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "ctx",
						"id": 93825008944464,
						"kind": "function parameter",
						"name": "ctx",
						"type": {
							"_typeName": "Context<Interface>*",
							"kind": "pointer",
							"pointee": {
								"_typeName": "Context<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "Context",
									"objects": [{
										"_fullName": "::stappler::network::Context<typename>",
										"_kind": "class template",
										"_name": "Context",
										"class": {
											"_fullName": "::stappler::network::Context<typename>",
											"_kind": "class",
											"_name": "Context",
											"class_kind": "struct",
											"id": 140736980094608,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "Context",
											"scope": {
												"is_templated": true,
												"name": "Context",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 140737113648800,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825005980416,
										"kind": "class template",
										"name": "Context",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 140737113648800,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "Context",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 140737113648800,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							}
						}
					}, {
						"_kind": "function parameter",
						"_name": "onAfterPerform",
						"id": 93825006857952,
						"kind": "function parameter",
						"name": "onAfterPerform",
						"type": {
							"_typeName": "Callback<bool (CURL *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<bool (CURL *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<bool (CURL *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "bool (CURL *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(HandleData<Interface>&,Context<Interface>*,Callback<bool (CURL *)> const&)"
				},
				"id": 93825006665984,
				"kind": "function template",
				"name": "finalize",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 140737148002768,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}]
			}, {
				"_fullName": "::stappler::network::perform<typename>(HandleData<Interface>&,Callback<bool (CURL *)> const&,Callback<bool (CURL *)> const&)",
				"_kind": "function template",
				"_name": "perform",
				"childs": [{
					"_fullName": "::stappler::network::perform<typename>(HandleData<Interface>&,Callback<bool (CURL *)> const&,Callback<bool (CURL *)> const&)",
					"_kind": "function",
					"_name": "perform",
					"body_kind": "declaration",
					"id": 140737086436544,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "perform",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "iface",
						"id": 93825014941088,
						"kind": "function parameter",
						"name": "iface",
						"type": {
							"_typeName": "HandleData<Interface>&",
							"kind": "reference",
							"referee": {
								"_typeName": "HandleData<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "HandleData",
									"objects": [{
										"_fullName": "::stappler::network::HandleData<typename>",
										"_kind": "class template",
										"_name": "HandleData",
										"class": {
											"_fullName": "::stappler::network::HandleData<typename>",
											"_kind": "class",
											"_name": "HandleData",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "Interface::AllocBaseType",
												"access_specifier": "public",
												"id": 93825003127296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "Interface::AllocBaseType",
												"type": {
													"_typeName": "Interface::AllocBaseType",
													"kind": "unexposed",
													"name": "Interface::AllocBaseType"
												}
											}],
											"class_kind": "struct",
											"id": 93825005806464,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "HandleData",
											"scope": {
												"is_templated": true,
												"name": "HandleData",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825015720064,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825015391984,
										"kind": "class template",
										"name": "HandleData",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 93825015720064,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "HandleData",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825015720064,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "onBeforePerform",
						"id": 93825009089808,
						"kind": "function parameter",
						"name": "onBeforePerform",
						"type": {
							"_typeName": "Callback<bool (CURL *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<bool (CURL *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<bool (CURL *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "bool (CURL *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "onAfterPerform",
						"id": 93825009322640,
						"kind": "function parameter",
						"name": "onAfterPerform",
						"type": {
							"_typeName": "Callback<bool (CURL *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<bool (CURL *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<bool (CURL *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "bool (CURL *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(HandleData<Interface>&,Callback<bool (CURL *)> const&,Callback<bool (CURL *)> const&)"
				}],
				"function":  {
					"_fullName": "::stappler::network::perform<typename>(HandleData<Interface>&,Callback<bool (CURL *)> const&,Callback<bool (CURL *)> const&)",
					"_kind": "function",
					"_name": "perform",
					"body_kind": "declaration",
					"id": 140737086436544,
					"is_consteval": false,
					"is_constexpr": false,
					"is_declaration": true,
					"is_definition": false,
					"is_variadic": false,
					"kind": "function",
					"name": "perform",
					"parameters": [{
						"_kind": "function parameter",
						"_name": "iface",
						"id": 93825014941088,
						"kind": "function parameter",
						"name": "iface",
						"type": {
							"_typeName": "HandleData<Interface>&",
							"kind": "reference",
							"referee": {
								"_typeName": "HandleData<Interface>",
								"arguments_exposed": false,
								"kind": "template_instantiation",
								"primary_template": {
									"name": "HandleData",
									"objects": [{
										"_fullName": "::stappler::network::HandleData<typename>",
										"_kind": "class template",
										"_name": "HandleData",
										"class": {
											"_fullName": "::stappler::network::HandleData<typename>",
											"_kind": "class",
											"_name": "HandleData",
											"bases": [{
												"_kind": "base class specifier",
												"_name": "Interface::AllocBaseType",
												"access_specifier": "public",
												"id": 93825003127296,
												"is_virtual": false,
												"kind": "base class specifier",
												"name": "Interface::AllocBaseType",
												"type": {
													"_typeName": "Interface::AllocBaseType",
													"kind": "unexposed",
													"name": "Interface::AllocBaseType"
												}
											}],
											"class_kind": "struct",
											"id": 93825005806464,
											"is_declaration": false,
											"is_definition": true,
											"is_final": false,
											"kind": "class",
											"name": "HandleData",
											"scope": {
												"is_templated": true,
												"name": "HandleData",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "Interface",
													"id": 93825015720064,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "Interface"
												}]
											},
											"semantic_scope": ""
										},
										"id": 93825015391984,
										"kind": "class template",
										"name": "HandleData",
										"parameters": [{
											"_kind": "template type parameter",
											"_name": "Interface",
											"id": 93825015720064,
											"is_variadic": false,
											"keyword": "typename",
											"kind": "template type parameter",
											"name": "Interface"
										}],
										"scope":  {
											"is_templated": true,
											"name": "HandleData",
											"template_parameters": [{
												"_kind": "template type parameter",
												"_name": "Interface",
												"id": 93825015720064,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "Interface"
											}]
										}
									}]
								},
								"unexposed_arguments": "Interface"
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "onBeforePerform",
						"id": 93825009089808,
						"kind": "function parameter",
						"name": "onBeforePerform",
						"type": {
							"_typeName": "Callback<bool (CURL *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<bool (CURL *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<bool (CURL *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "bool (CURL *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}, {
						"_kind": "function parameter",
						"_name": "onAfterPerform",
						"id": 93825009322640,
						"kind": "function parameter",
						"name": "onAfterPerform",
						"type": {
							"_typeName": "Callback<bool (CURL *)> const&",
							"kind": "reference",
							"referee": {
								"_typeName": "Callback<bool (CURL *)> const",
								"cv_qualifier": "const",
								"kind": "cv_qualified",
								"type": {
									"_typeName": "Callback<bool (CURL *)>",
									"arguments_exposed": false,
									"kind": "template_instantiation",
									"primary_template": {
										"name": "Callback",
										"objects": [{
											"_fullName": "::stappler::memory::callback<typename>",
											"_kind": "class template",
											"_name": "callback",
											"class": {
												"_fullName": "::stappler::memory::callback<typename>",
												"_kind": "class",
												"_name": "callback",
												"class_kind": "class",
												"id": 93824997040048,
												"is_declaration": true,
												"is_definition": false,
												"is_final": false,
												"kind": "class",
												"name": "callback",
												"scope": {
													"is_templated": true,
													"name": "callback",
													"template_parameters": [{
														"_kind": "template type parameter",
														"_name": "UnusedType",
														"id": 93824997058880,
														"is_variadic": false,
														"keyword": "typename",
														"kind": "template type parameter",
														"name": "UnusedType"
													}]
												},
												"semantic_scope": ""
											},
											"id": 93824997058480,
											"kind": "class template",
											"name": "callback",
											"parameters": [{
												"_kind": "template type parameter",
												"_name": "UnusedType",
												"id": 93824997058880,
												"is_variadic": false,
												"keyword": "typename",
												"kind": "template type parameter",
												"name": "UnusedType"
											}],
											"scope":  {
												"is_templated": true,
												"name": "callback",
												"template_parameters": [{
													"_kind": "template type parameter",
													"_name": "UnusedType",
													"id": 93824997058880,
													"is_variadic": false,
													"keyword": "typename",
													"kind": "template type parameter",
													"name": "UnusedType"
												}]
											}
										}]
									},
									"unexposed_arguments": "bool (CURL *)"
								}
							},
							"reference_kind": "lvalue"
						}
					}],
					"return_type":  {
						"_typeName": "bool",
						"builtin_type_kind": "bool",
						"kind": "builtin"
					},
					"semantic_scope": "",
					"signature": "(HandleData<Interface>&,Callback<bool (CURL *)> const&,Callback<bool (CURL *)> const&)"
				},
				"id": 93825014940928,
				"kind": "function template",
				"name": "perform",
				"parameters": [{
					"_kind": "template type parameter",
					"_name": "Interface",
					"id": 140737090469408,
					"is_variadic": false,
					"keyword": "typename",
					"kind": "template type parameter",
					"name": "Interface"
				}]
			}],
			"id": 140737129645168,
			"is_anonymous": false,
			"is_inline": false,
			"is_nested": true,
			"kind": "namespace",
			"name": "network",
			"scope": {
				"name": "network"
			}
		}],
		"id": 140737129644848,
		"is_anonymous": false,
		"is_inline": false,
		"is_nested": false,
		"kind": "namespace",
		"name": "stappler",
		"scope": {
			"name": "stappler"
		}
	}],
	"id": 140737121521504,
	"kind": "file",
	"name": "/home/sbkarr/stappler/xenolith/libstappler/modules/network/SPNetworkContext.h",
	"unmatched_comments": [{
		"line": 21,
		"text": "\nCopyright (c) 2023 Stappler LLC <admin@stappler.dev>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
	}]
}